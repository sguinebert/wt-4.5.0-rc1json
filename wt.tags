<?xml version='1.0' encoding='UTF-8' standalone='yes' ?>
<tagfile>
  <compound kind="class">
    <name>Wt::Auth::AbstractPasswordService</name>
    <filename>classWt_1_1Auth_1_1AbstractPasswordService.html</filename>
    <class kind="class">Wt::Auth::AbstractPasswordService::AbstractStrengthValidator</class>
    <class kind="class">Wt::Auth::AbstractPasswordService::StrengthValidatorResult</class>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~AbstractPasswordService</name>
      <anchorfile>classWt_1_1Auth_1_1AbstractPasswordService.html</anchorfile>
      <anchor>a6df30a56f41e4cb0464a83e10de6fb25</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const AuthService &amp;</type>
      <name>baseAuth</name>
      <anchorfile>classWt_1_1Auth_1_1AbstractPasswordService.html</anchorfile>
      <anchor>ac85f8697cb4d9e666f155a314290babd</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>attemptThrottlingEnabled</name>
      <anchorfile>classWt_1_1Auth_1_1AbstractPasswordService.html</anchorfile>
      <anchor>aad7d1fa56e35cfcca72b8028b6d4421e</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual AbstractStrengthValidator *</type>
      <name>strengthValidator</name>
      <anchorfile>classWt_1_1Auth_1_1AbstractPasswordService.html</anchorfile>
      <anchor>a8c6818142b299560af81bbae31555558</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>delayForNextAttempt</name>
      <anchorfile>classWt_1_1Auth_1_1AbstractPasswordService.html</anchorfile>
      <anchor>a48f8ad7a03a224e00ee7a8620b9dafa8</anchor>
      <arglist>(const User &amp;user) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual PasswordResult</type>
      <name>verifyPassword</name>
      <anchorfile>classWt_1_1Auth_1_1AbstractPasswordService.html</anchorfile>
      <anchor>a3baff128b654ac06f27b57c15c8923d8</anchor>
      <arglist>(const User &amp;user, const WString &amp;password) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>updatePassword</name>
      <anchorfile>classWt_1_1Auth_1_1AbstractPasswordService.html</anchorfile>
      <anchor>a4cb7e7f61e0896af9c1d13651219e693</anchor>
      <arglist>(const User &amp;user, const WString &amp;password) const =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Dbo::AbstractQuery</name>
    <filename>classWt_1_1Dbo_1_1AbstractQuery.html</filename>
    <member kind="function">
      <type>AbstractQuery &amp;</type>
      <name>bind</name>
      <anchorfile>classWt_1_1Dbo_1_1AbstractQuery.html</anchorfile>
      <anchor>aaaa2d59ac4afee71920e336e41440128</anchor>
      <arglist>(const T &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classWt_1_1Dbo_1_1AbstractQuery.html</anchorfile>
      <anchor>a94f6e798d318813f3ba22ffa7e3d41a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>AbstractQuery &amp;</type>
      <name>join</name>
      <anchorfile>classWt_1_1Dbo_1_1AbstractQuery.html</anchorfile>
      <anchor>a8633dd18b0172a9ee5b713b5ba7e3b4b</anchor>
      <arglist>(const std::string &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>AbstractQuery &amp;</type>
      <name>leftJoin</name>
      <anchorfile>classWt_1_1Dbo_1_1AbstractQuery.html</anchorfile>
      <anchor>aede216c827c0ac6310d56012a5eff4b6</anchor>
      <arglist>(const std::string &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>AbstractQuery &amp;</type>
      <name>rightJoin</name>
      <anchorfile>classWt_1_1Dbo_1_1AbstractQuery.html</anchorfile>
      <anchor>a9fbd38b914d2871d0470fabcda24967a</anchor>
      <arglist>(const std::string &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>AbstractQuery &amp;</type>
      <name>where</name>
      <anchorfile>classWt_1_1Dbo_1_1AbstractQuery.html</anchorfile>
      <anchor>a22dd393477da82deb17cc2103860c995</anchor>
      <arglist>(const std::string &amp;condition)</arglist>
    </member>
    <member kind="function">
      <type>AbstractQuery &amp;</type>
      <name>orWhere</name>
      <anchorfile>classWt_1_1Dbo_1_1AbstractQuery.html</anchorfile>
      <anchor>afa3594c4f23fa92ccc6b42ee6f45913d</anchor>
      <arglist>(const std::string &amp;condition)</arglist>
    </member>
    <member kind="function">
      <type>AbstractQuery &amp;</type>
      <name>orderBy</name>
      <anchorfile>classWt_1_1Dbo_1_1AbstractQuery.html</anchorfile>
      <anchor>aa47070bc8eceb468898c80ce15de70af</anchor>
      <arglist>(const std::string &amp;fieldName)</arglist>
    </member>
    <member kind="function">
      <type>AbstractQuery &amp;</type>
      <name>groupBy</name>
      <anchorfile>classWt_1_1Dbo_1_1AbstractQuery.html</anchorfile>
      <anchor>a5ea2fcaeda6d9251e67273e85fe829cd</anchor>
      <arglist>(const std::string &amp;fields)</arglist>
    </member>
    <member kind="function">
      <type>AbstractQuery &amp;</type>
      <name>having</name>
      <anchorfile>classWt_1_1Dbo_1_1AbstractQuery.html</anchorfile>
      <anchor>a5f80786393868961f4ec43d280710d34</anchor>
      <arglist>(const std::string &amp;fields)</arglist>
    </member>
    <member kind="function">
      <type>AbstractQuery &amp;</type>
      <name>offset</name>
      <anchorfile>classWt_1_1Dbo_1_1AbstractQuery.html</anchorfile>
      <anchor>ade9750aebdc441fd7ce2b0dd37490332</anchor>
      <arglist>(int count)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>offset</name>
      <anchorfile>classWt_1_1Dbo_1_1AbstractQuery.html</anchorfile>
      <anchor>afec1324d45b35ec906ec92c92d414b25</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>AbstractQuery &amp;</type>
      <name>limit</name>
      <anchorfile>classWt_1_1Dbo_1_1AbstractQuery.html</anchorfile>
      <anchor>ac275228e4343a6ee01ea81801984344a</anchor>
      <arglist>(int count)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>limit</name>
      <anchorfile>classWt_1_1Dbo_1_1AbstractQuery.html</anchorfile>
      <anchor>abf6dc6a6d2401a8ebb3faf73cddffd8a</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Auth::AbstractPasswordService::AbstractStrengthValidator</name>
    <filename>classWt_1_1Auth_1_1AbstractPasswordService_1_1AbstractStrengthValidator.html</filename>
    <base>Wt::WValidator</base>
    <member kind="function">
      <type></type>
      <name>AbstractStrengthValidator</name>
      <anchorfile>classWt_1_1Auth_1_1AbstractPasswordService_1_1AbstractStrengthValidator.html</anchorfile>
      <anchor>a444a7fc9c2f9642de424353822c954de</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual StrengthValidatorResult</type>
      <name>evaluateStrength</name>
      <anchorfile>classWt_1_1Auth_1_1AbstractPasswordService_1_1AbstractStrengthValidator.html</anchorfile>
      <anchor>a7c30409496218b621aa5c9a7893a4078</anchor>
      <arglist>(const WString &amp;password, const WString &amp;loginName, const std::string &amp;email) const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Result</type>
      <name>validate</name>
      <anchorfile>classWt_1_1Auth_1_1AbstractPasswordService_1_1AbstractStrengthValidator.html</anchorfile>
      <anchor>a04d064f0f9e8c9d256a07e88e6a3093d</anchor>
      <arglist>(const WString &amp;password, const WString &amp;loginName, const std::string &amp;email) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Result</type>
      <name>validate</name>
      <anchorfile>classWt_1_1Auth_1_1AbstractPasswordService_1_1AbstractStrengthValidator.html</anchorfile>
      <anchor>aadddf556104a2dfe23c705ffb4173b5d</anchor>
      <arglist>(const WString &amp;password) const override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Auth::AbstractUserDatabase</name>
    <filename>classWt_1_1Auth_1_1AbstractUserDatabase.html</filename>
    <class kind="class">Wt::Auth::AbstractUserDatabase::Transaction</class>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~AbstractUserDatabase</name>
      <anchorfile>classWt_1_1Auth_1_1AbstractUserDatabase.html</anchorfile>
      <anchor>aca60e45ff98e40dbbb457dfceaf1561b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Transaction *</type>
      <name>startTransaction</name>
      <anchorfile>classWt_1_1Auth_1_1AbstractUserDatabase.html</anchorfile>
      <anchor>afdc5c2f3dccb1a0208633949c067c3f2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual User</type>
      <name>findWithId</name>
      <anchorfile>classWt_1_1Auth_1_1AbstractUserDatabase.html</anchorfile>
      <anchor>afe820eed084f426a89cc7276d5db3e0f</anchor>
      <arglist>(const std::string &amp;id) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual User</type>
      <name>findWithIdentity</name>
      <anchorfile>classWt_1_1Auth_1_1AbstractUserDatabase.html</anchorfile>
      <anchor>ad86157a5d896af38825d9575fa8f8eae</anchor>
      <arglist>(const std::string &amp;provider, const WString &amp;identity) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>addIdentity</name>
      <anchorfile>classWt_1_1Auth_1_1AbstractUserDatabase.html</anchorfile>
      <anchor>ab97a74c1009a6c72e3f1b897246eb982</anchor>
      <arglist>(const User &amp;user, const std::string &amp;provider, const WString &amp;id)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setIdentity</name>
      <anchorfile>classWt_1_1Auth_1_1AbstractUserDatabase.html</anchorfile>
      <anchor>a585a2275da79dc483a97ea2299751d10</anchor>
      <arglist>(const User &amp;user, const std::string &amp;provider, const WString &amp;id)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual WString</type>
      <name>identity</name>
      <anchorfile>classWt_1_1Auth_1_1AbstractUserDatabase.html</anchorfile>
      <anchor>a299a308436b353c2f91162244333c173</anchor>
      <arglist>(const User &amp;user, const std::string &amp;provider) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>removeIdentity</name>
      <anchorfile>classWt_1_1Auth_1_1AbstractUserDatabase.html</anchorfile>
      <anchor>a09dbc8bf6ef4f8d367c4bc471c9d780d</anchor>
      <arglist>(const User &amp;user, const std::string &amp;provider)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual User</type>
      <name>registerNew</name>
      <anchorfile>classWt_1_1Auth_1_1AbstractUserDatabase.html</anchorfile>
      <anchor>a14e8b7552a2fe578665970860c48fa27</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>deleteUser</name>
      <anchorfile>classWt_1_1Auth_1_1AbstractUserDatabase.html</anchorfile>
      <anchor>a5067e569748cfad8c3356735a33aa10f</anchor>
      <arglist>(const User &amp;user)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual AccountStatus</type>
      <name>status</name>
      <anchorfile>classWt_1_1Auth_1_1AbstractUserDatabase.html</anchorfile>
      <anchor>a77817a5ac2c19de5ef762b0db8feba49</anchor>
      <arglist>(const User &amp;user) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setStatus</name>
      <anchorfile>classWt_1_1Auth_1_1AbstractUserDatabase.html</anchorfile>
      <anchor>a32ad8b14d02759c7d87c76ad553d0c92</anchor>
      <arglist>(const User &amp;user, AccountStatus status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setPassword</name>
      <anchorfile>classWt_1_1Auth_1_1AbstractUserDatabase.html</anchorfile>
      <anchor>a489310f977a7c22c7b29ec89fba297cc</anchor>
      <arglist>(const User &amp;user, const PasswordHash &amp;password)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual PasswordHash</type>
      <name>password</name>
      <anchorfile>classWt_1_1Auth_1_1AbstractUserDatabase.html</anchorfile>
      <anchor>ad4596f25db9b15361dd3c7fb34d1c24d</anchor>
      <arglist>(const User &amp;user) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>setEmail</name>
      <anchorfile>classWt_1_1Auth_1_1AbstractUserDatabase.html</anchorfile>
      <anchor>a9f24e4a83a20e24dd8ac64558db51559</anchor>
      <arglist>(const User &amp;user, const std::string &amp;address)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>email</name>
      <anchorfile>classWt_1_1Auth_1_1AbstractUserDatabase.html</anchorfile>
      <anchor>a2d9602284dc57177249bfc653ca574a9</anchor>
      <arglist>(const User &amp;user) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setUnverifiedEmail</name>
      <anchorfile>classWt_1_1Auth_1_1AbstractUserDatabase.html</anchorfile>
      <anchor>aa3709b846d8949b6a411c8494496aa55</anchor>
      <arglist>(const User &amp;user, const std::string &amp;address)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>unverifiedEmail</name>
      <anchorfile>classWt_1_1Auth_1_1AbstractUserDatabase.html</anchorfile>
      <anchor>a0fa372d8f4c8c440c1a97daff141cb70</anchor>
      <arglist>(const User &amp;user) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual User</type>
      <name>findWithEmail</name>
      <anchorfile>classWt_1_1Auth_1_1AbstractUserDatabase.html</anchorfile>
      <anchor>a4927857ddd9740474f16b70621a9a442</anchor>
      <arglist>(const std::string &amp;address) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setEmailToken</name>
      <anchorfile>classWt_1_1Auth_1_1AbstractUserDatabase.html</anchorfile>
      <anchor>a81e6fe9e0da3ef5edb2814276b3c70e3</anchor>
      <arglist>(const User &amp;user, const Token &amp;token, EmailTokenRole role)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Token</type>
      <name>emailToken</name>
      <anchorfile>classWt_1_1Auth_1_1AbstractUserDatabase.html</anchorfile>
      <anchor>a7883aad990bd14b4b14de9e1322e4c0b</anchor>
      <arglist>(const User &amp;user) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual EmailTokenRole</type>
      <name>emailTokenRole</name>
      <anchorfile>classWt_1_1Auth_1_1AbstractUserDatabase.html</anchorfile>
      <anchor>a5ee35ad896162ede39acc54cf258e930</anchor>
      <arglist>(const User &amp;user) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual User</type>
      <name>findWithEmailToken</name>
      <anchorfile>classWt_1_1Auth_1_1AbstractUserDatabase.html</anchorfile>
      <anchor>a0e174ee92ec663bba741426baa9eb334</anchor>
      <arglist>(const std::string &amp;hash) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>addAuthToken</name>
      <anchorfile>classWt_1_1Auth_1_1AbstractUserDatabase.html</anchorfile>
      <anchor>aa9e6675aad111e35b2725ced17208211</anchor>
      <arglist>(const User &amp;user, const Token &amp;token)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>removeAuthToken</name>
      <anchorfile>classWt_1_1Auth_1_1AbstractUserDatabase.html</anchorfile>
      <anchor>acfe2c37b3ecaf468cb9663a2cd83a980</anchor>
      <arglist>(const User &amp;user, const std::string &amp;hash)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual User</type>
      <name>findWithAuthToken</name>
      <anchorfile>classWt_1_1Auth_1_1AbstractUserDatabase.html</anchorfile>
      <anchor>adf9a43fa88ce8b44d090f8e90256781f</anchor>
      <arglist>(const std::string &amp;hash) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>updateAuthToken</name>
      <anchorfile>classWt_1_1Auth_1_1AbstractUserDatabase.html</anchorfile>
      <anchor>a547d1b07e2e6c803572754659ff6bbdf</anchor>
      <arglist>(const User &amp;user, const std::string &amp;oldhash, const std::string &amp;newhash)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setFailedLoginAttempts</name>
      <anchorfile>classWt_1_1Auth_1_1AbstractUserDatabase.html</anchorfile>
      <anchor>a4e146059644458af7fa650f17416471a</anchor>
      <arglist>(const User &amp;user, int count)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>failedLoginAttempts</name>
      <anchorfile>classWt_1_1Auth_1_1AbstractUserDatabase.html</anchorfile>
      <anchor>a8ff06a52ffe6a49d4a72f22e6d181a0c</anchor>
      <arglist>(const User &amp;user) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setLastLoginAttempt</name>
      <anchorfile>classWt_1_1Auth_1_1AbstractUserDatabase.html</anchorfile>
      <anchor>a4f8b8b76e3202b9b86e40649958617e2</anchor>
      <arglist>(const User &amp;user, const WDateTime &amp;t)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WDateTime</type>
      <name>lastLoginAttempt</name>
      <anchorfile>classWt_1_1Auth_1_1AbstractUserDatabase.html</anchorfile>
      <anchor>a610a66bfbcc9f900f7110598a2edd078</anchor>
      <arglist>(const User &amp;user) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Json::Value</type>
      <name>idpJsonClaim</name>
      <anchorfile>classWt_1_1Auth_1_1AbstractUserDatabase.html</anchorfile>
      <anchor>a7190411675ca8c72b9a551a17176ee30</anchor>
      <arglist>(const User &amp;user, const std::string &amp;claim) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Wt::Auth::IssuedToken</type>
      <name>idpTokenAdd</name>
      <anchorfile>classWt_1_1Auth_1_1AbstractUserDatabase.html</anchorfile>
      <anchor>a34ed5ea895195332eb14be8845d44214</anchor>
      <arglist>(const std::string &amp;value, const WDateTime &amp;expirationTime, const std::string &amp;purpose, const std::string &amp;scope, const std::string &amp;redirectUri, const User &amp;user, const OAuthClient &amp;authClient)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>idpTokenRemove</name>
      <anchorfile>classWt_1_1Auth_1_1AbstractUserDatabase.html</anchorfile>
      <anchor>a839ff69fd61061c877da07dd5d90f7a4</anchor>
      <arglist>(const IssuedToken &amp;token)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IssuedToken</type>
      <name>idpTokenFindWithValue</name>
      <anchorfile>classWt_1_1Auth_1_1AbstractUserDatabase.html</anchorfile>
      <anchor>af17fa5bbb99c4fb7706d9856130bb474</anchor>
      <arglist>(const std::string &amp;purpose, const std::string &amp;value) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WDateTime</type>
      <name>idpTokenExpirationTime</name>
      <anchorfile>classWt_1_1Auth_1_1AbstractUserDatabase.html</anchorfile>
      <anchor>acaf231619d26bc81983b7938f55c4313</anchor>
      <arglist>(const IssuedToken &amp;token) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>idpTokenValue</name>
      <anchorfile>classWt_1_1Auth_1_1AbstractUserDatabase.html</anchorfile>
      <anchor>a71ea81800257c900dbb23126b3f4188e</anchor>
      <arglist>(const IssuedToken &amp;token) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>idpTokenPurpose</name>
      <anchorfile>classWt_1_1Auth_1_1AbstractUserDatabase.html</anchorfile>
      <anchor>afc247ddcf9dc1343e180637c32b2d9b1</anchor>
      <arglist>(const IssuedToken &amp;token) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>idpTokenScope</name>
      <anchorfile>classWt_1_1Auth_1_1AbstractUserDatabase.html</anchorfile>
      <anchor>a7ef338a80e6cd162c375efa0f1826682</anchor>
      <arglist>(const IssuedToken &amp;token) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>idpTokenRedirectUri</name>
      <anchorfile>classWt_1_1Auth_1_1AbstractUserDatabase.html</anchorfile>
      <anchor>a9ff23e4a8f3a2903c23d7b7d82a3e2d0</anchor>
      <arglist>(const IssuedToken &amp;token) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual User</type>
      <name>idpTokenUser</name>
      <anchorfile>classWt_1_1Auth_1_1AbstractUserDatabase.html</anchorfile>
      <anchor>aa4ed03a193a4891aee84fff6d31c2465</anchor>
      <arglist>(const IssuedToken &amp;token) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual OAuthClient</type>
      <name>idpTokenOAuthClient</name>
      <anchorfile>classWt_1_1Auth_1_1AbstractUserDatabase.html</anchorfile>
      <anchor>a31bf8e3b3957251f099742fcbd04fa17</anchor>
      <arglist>(const IssuedToken &amp;token) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual OAuthClient</type>
      <name>idpClientFindWithId</name>
      <anchorfile>classWt_1_1Auth_1_1AbstractUserDatabase.html</anchorfile>
      <anchor>a3da8cbcd95e773fa030d04fdba96f750</anchor>
      <arglist>(const std::string &amp;clientId) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>idpClientSecret</name>
      <anchorfile>classWt_1_1Auth_1_1AbstractUserDatabase.html</anchorfile>
      <anchor>ab92e8d4f60358f417f83c866c53b6643</anchor>
      <arglist>(const OAuthClient &amp;client) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>idpVerifySecret</name>
      <anchorfile>classWt_1_1Auth_1_1AbstractUserDatabase.html</anchorfile>
      <anchor>aaf08fdc668635a367a8cdf72bb9b6423</anchor>
      <arglist>(const OAuthClient &amp;client, const std::string &amp;secret) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::set&lt; std::string &gt;</type>
      <name>idpClientRedirectUris</name>
      <anchorfile>classWt_1_1Auth_1_1AbstractUserDatabase.html</anchorfile>
      <anchor>ad88a078e73543e97bf661d038d63f629</anchor>
      <arglist>(const OAuthClient &amp;client) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>idpClientId</name>
      <anchorfile>classWt_1_1Auth_1_1AbstractUserDatabase.html</anchorfile>
      <anchor>a0f8b76cb9ac5bb077eda3c24244f149f</anchor>
      <arglist>(const OAuthClient &amp;client) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>idpClientConfidential</name>
      <anchorfile>classWt_1_1Auth_1_1AbstractUserDatabase.html</anchorfile>
      <anchor>a17119175fb9315d4215062649b31dbdc</anchor>
      <arglist>(const OAuthClient &amp;client) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ClientSecretMethod</type>
      <name>idpClientAuthMethod</name>
      <anchorfile>classWt_1_1Auth_1_1AbstractUserDatabase.html</anchorfile>
      <anchor>a66788f709b46c890defd10e5b11dff9e</anchor>
      <arglist>(const OAuthClient &amp;client) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Wt::Auth::OAuthClient</type>
      <name>idpClientAdd</name>
      <anchorfile>classWt_1_1Auth_1_1AbstractUserDatabase.html</anchorfile>
      <anchor>acdac711a9964e36c1b24714853d7601e</anchor>
      <arglist>(const std::string &amp;clientId, bool confidential, const std::set&lt; std::string &gt; &amp;redirectUris, ClientSecretMethod authMethod, const std::string &amp;secret)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setPassword</name>
      <anchorfile>classWt_1_1Auth_1_1AbstractUserDatabase.html</anchorfile>
      <anchor>a489310f977a7c22c7b29ec89fba297cc</anchor>
      <arglist>(const User &amp;user, const PasswordHash &amp;password)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual PasswordHash</type>
      <name>password</name>
      <anchorfile>classWt_1_1Auth_1_1AbstractUserDatabase.html</anchorfile>
      <anchor>ad4596f25db9b15361dd3c7fb34d1c24d</anchor>
      <arglist>(const User &amp;user) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>setEmail</name>
      <anchorfile>classWt_1_1Auth_1_1AbstractUserDatabase.html</anchorfile>
      <anchor>a9f24e4a83a20e24dd8ac64558db51559</anchor>
      <arglist>(const User &amp;user, const std::string &amp;address)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>email</name>
      <anchorfile>classWt_1_1Auth_1_1AbstractUserDatabase.html</anchorfile>
      <anchor>a2d9602284dc57177249bfc653ca574a9</anchor>
      <arglist>(const User &amp;user) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setUnverifiedEmail</name>
      <anchorfile>classWt_1_1Auth_1_1AbstractUserDatabase.html</anchorfile>
      <anchor>aa3709b846d8949b6a411c8494496aa55</anchor>
      <arglist>(const User &amp;user, const std::string &amp;address)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>unverifiedEmail</name>
      <anchorfile>classWt_1_1Auth_1_1AbstractUserDatabase.html</anchorfile>
      <anchor>a0fa372d8f4c8c440c1a97daff141cb70</anchor>
      <arglist>(const User &amp;user) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual User</type>
      <name>findWithEmail</name>
      <anchorfile>classWt_1_1Auth_1_1AbstractUserDatabase.html</anchorfile>
      <anchor>a4927857ddd9740474f16b70621a9a442</anchor>
      <arglist>(const std::string &amp;address) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setEmailToken</name>
      <anchorfile>classWt_1_1Auth_1_1AbstractUserDatabase.html</anchorfile>
      <anchor>a81e6fe9e0da3ef5edb2814276b3c70e3</anchor>
      <arglist>(const User &amp;user, const Token &amp;token, EmailTokenRole role)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Token</type>
      <name>emailToken</name>
      <anchorfile>classWt_1_1Auth_1_1AbstractUserDatabase.html</anchorfile>
      <anchor>a7883aad990bd14b4b14de9e1322e4c0b</anchor>
      <arglist>(const User &amp;user) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual EmailTokenRole</type>
      <name>emailTokenRole</name>
      <anchorfile>classWt_1_1Auth_1_1AbstractUserDatabase.html</anchorfile>
      <anchor>a5ee35ad896162ede39acc54cf258e930</anchor>
      <arglist>(const User &amp;user) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual User</type>
      <name>findWithEmailToken</name>
      <anchorfile>classWt_1_1Auth_1_1AbstractUserDatabase.html</anchorfile>
      <anchor>a0e174ee92ec663bba741426baa9eb334</anchor>
      <arglist>(const std::string &amp;hash) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>addAuthToken</name>
      <anchorfile>classWt_1_1Auth_1_1AbstractUserDatabase.html</anchorfile>
      <anchor>aa9e6675aad111e35b2725ced17208211</anchor>
      <arglist>(const User &amp;user, const Token &amp;token)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>removeAuthToken</name>
      <anchorfile>classWt_1_1Auth_1_1AbstractUserDatabase.html</anchorfile>
      <anchor>acfe2c37b3ecaf468cb9663a2cd83a980</anchor>
      <arglist>(const User &amp;user, const std::string &amp;hash)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual User</type>
      <name>findWithAuthToken</name>
      <anchorfile>classWt_1_1Auth_1_1AbstractUserDatabase.html</anchorfile>
      <anchor>adf9a43fa88ce8b44d090f8e90256781f</anchor>
      <arglist>(const std::string &amp;hash) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>updateAuthToken</name>
      <anchorfile>classWt_1_1Auth_1_1AbstractUserDatabase.html</anchorfile>
      <anchor>a547d1b07e2e6c803572754659ff6bbdf</anchor>
      <arglist>(const User &amp;user, const std::string &amp;oldhash, const std::string &amp;newhash)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setFailedLoginAttempts</name>
      <anchorfile>classWt_1_1Auth_1_1AbstractUserDatabase.html</anchorfile>
      <anchor>a4e146059644458af7fa650f17416471a</anchor>
      <arglist>(const User &amp;user, int count)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>failedLoginAttempts</name>
      <anchorfile>classWt_1_1Auth_1_1AbstractUserDatabase.html</anchorfile>
      <anchor>a8ff06a52ffe6a49d4a72f22e6d181a0c</anchor>
      <arglist>(const User &amp;user) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setLastLoginAttempt</name>
      <anchorfile>classWt_1_1Auth_1_1AbstractUserDatabase.html</anchorfile>
      <anchor>a4f8b8b76e3202b9b86e40649958617e2</anchor>
      <arglist>(const User &amp;user, const WDateTime &amp;t)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WDateTime</type>
      <name>lastLoginAttempt</name>
      <anchorfile>classWt_1_1Auth_1_1AbstractUserDatabase.html</anchorfile>
      <anchor>a610a66bfbcc9f900f7110598a2edd078</anchor>
      <arglist>(const User &amp;user) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Json::Value</type>
      <name>idpJsonClaim</name>
      <anchorfile>classWt_1_1Auth_1_1AbstractUserDatabase.html</anchorfile>
      <anchor>a7190411675ca8c72b9a551a17176ee30</anchor>
      <arglist>(const User &amp;user, const std::string &amp;claim) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Wt::Auth::IssuedToken</type>
      <name>idpTokenAdd</name>
      <anchorfile>classWt_1_1Auth_1_1AbstractUserDatabase.html</anchorfile>
      <anchor>a34ed5ea895195332eb14be8845d44214</anchor>
      <arglist>(const std::string &amp;value, const WDateTime &amp;expirationTime, const std::string &amp;purpose, const std::string &amp;scope, const std::string &amp;redirectUri, const User &amp;user, const OAuthClient &amp;authClient)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>idpTokenRemove</name>
      <anchorfile>classWt_1_1Auth_1_1AbstractUserDatabase.html</anchorfile>
      <anchor>a839ff69fd61061c877da07dd5d90f7a4</anchor>
      <arglist>(const IssuedToken &amp;token)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IssuedToken</type>
      <name>idpTokenFindWithValue</name>
      <anchorfile>classWt_1_1Auth_1_1AbstractUserDatabase.html</anchorfile>
      <anchor>af17fa5bbb99c4fb7706d9856130bb474</anchor>
      <arglist>(const std::string &amp;purpose, const std::string &amp;value) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WDateTime</type>
      <name>idpTokenExpirationTime</name>
      <anchorfile>classWt_1_1Auth_1_1AbstractUserDatabase.html</anchorfile>
      <anchor>acaf231619d26bc81983b7938f55c4313</anchor>
      <arglist>(const IssuedToken &amp;token) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>idpTokenValue</name>
      <anchorfile>classWt_1_1Auth_1_1AbstractUserDatabase.html</anchorfile>
      <anchor>a71ea81800257c900dbb23126b3f4188e</anchor>
      <arglist>(const IssuedToken &amp;token) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>idpTokenPurpose</name>
      <anchorfile>classWt_1_1Auth_1_1AbstractUserDatabase.html</anchorfile>
      <anchor>afc247ddcf9dc1343e180637c32b2d9b1</anchor>
      <arglist>(const IssuedToken &amp;token) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>idpTokenScope</name>
      <anchorfile>classWt_1_1Auth_1_1AbstractUserDatabase.html</anchorfile>
      <anchor>a7ef338a80e6cd162c375efa0f1826682</anchor>
      <arglist>(const IssuedToken &amp;token) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>idpTokenRedirectUri</name>
      <anchorfile>classWt_1_1Auth_1_1AbstractUserDatabase.html</anchorfile>
      <anchor>a9ff23e4a8f3a2903c23d7b7d82a3e2d0</anchor>
      <arglist>(const IssuedToken &amp;token) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual User</type>
      <name>idpTokenUser</name>
      <anchorfile>classWt_1_1Auth_1_1AbstractUserDatabase.html</anchorfile>
      <anchor>aa4ed03a193a4891aee84fff6d31c2465</anchor>
      <arglist>(const IssuedToken &amp;token) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual OAuthClient</type>
      <name>idpTokenOAuthClient</name>
      <anchorfile>classWt_1_1Auth_1_1AbstractUserDatabase.html</anchorfile>
      <anchor>a31bf8e3b3957251f099742fcbd04fa17</anchor>
      <arglist>(const IssuedToken &amp;token) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual OAuthClient</type>
      <name>idpClientFindWithId</name>
      <anchorfile>classWt_1_1Auth_1_1AbstractUserDatabase.html</anchorfile>
      <anchor>a3da8cbcd95e773fa030d04fdba96f750</anchor>
      <arglist>(const std::string &amp;clientId) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>idpClientSecret</name>
      <anchorfile>classWt_1_1Auth_1_1AbstractUserDatabase.html</anchorfile>
      <anchor>ab92e8d4f60358f417f83c866c53b6643</anchor>
      <arglist>(const OAuthClient &amp;client) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>idpVerifySecret</name>
      <anchorfile>classWt_1_1Auth_1_1AbstractUserDatabase.html</anchorfile>
      <anchor>aaf08fdc668635a367a8cdf72bb9b6423</anchor>
      <arglist>(const OAuthClient &amp;client, const std::string &amp;secret) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::set&lt; std::string &gt;</type>
      <name>idpClientRedirectUris</name>
      <anchorfile>classWt_1_1Auth_1_1AbstractUserDatabase.html</anchorfile>
      <anchor>ad88a078e73543e97bf661d038d63f629</anchor>
      <arglist>(const OAuthClient &amp;client) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>idpClientId</name>
      <anchorfile>classWt_1_1Auth_1_1AbstractUserDatabase.html</anchorfile>
      <anchor>a0f8b76cb9ac5bb077eda3c24244f149f</anchor>
      <arglist>(const OAuthClient &amp;client) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>idpClientConfidential</name>
      <anchorfile>classWt_1_1Auth_1_1AbstractUserDatabase.html</anchorfile>
      <anchor>a17119175fb9315d4215062649b31dbdc</anchor>
      <arglist>(const OAuthClient &amp;client) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ClientSecretMethod</type>
      <name>idpClientAuthMethod</name>
      <anchorfile>classWt_1_1Auth_1_1AbstractUserDatabase.html</anchorfile>
      <anchor>a66788f709b46c890defd10e5b11dff9e</anchor>
      <arglist>(const OAuthClient &amp;client) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Wt::Auth::OAuthClient</type>
      <name>idpClientAdd</name>
      <anchorfile>classWt_1_1Auth_1_1AbstractUserDatabase.html</anchorfile>
      <anchor>acdac711a9964e36c1b24714853d7601e</anchor>
      <arglist>(const std::string &amp;clientId, bool confidential, const std::set&lt; std::string &gt; &amp;redirectUris, ClientSecretMethod authMethod, const std::string &amp;secret)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Auth::PasswordService::AbstractVerifier</name>
    <filename>classWt_1_1Auth_1_1PasswordService_1_1AbstractVerifier.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~AbstractVerifier</name>
      <anchorfile>classWt_1_1Auth_1_1PasswordService_1_1AbstractVerifier.html</anchorfile>
      <anchor>aa98c65ecdefc2448564d9e0c3d8bfdf5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>needsUpdate</name>
      <anchorfile>classWt_1_1Auth_1_1PasswordService_1_1AbstractVerifier.html</anchorfile>
      <anchor>a9991518e71092b356ae4e66fede088c3</anchor>
      <arglist>(const PasswordHash &amp;hash) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual PasswordHash</type>
      <name>hashPassword</name>
      <anchorfile>classWt_1_1Auth_1_1PasswordService_1_1AbstractVerifier.html</anchorfile>
      <anchor>a6c0edcfd38d6c4a656ffded44b007023</anchor>
      <arglist>(const WString &amp;password) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>verify</name>
      <anchorfile>classWt_1_1Auth_1_1PasswordService_1_1AbstractVerifier.html</anchorfile>
      <anchor>a90b8136ba2c6f77fe420445653f56a6a</anchor>
      <arglist>(const WString &amp;password, const PasswordHash &amp;hash) const =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Payment::Address</name>
    <filename>classWt_1_1Payment_1_1Address.html</filename>
    <member kind="function">
      <type>void</type>
      <name>setName</name>
      <anchorfile>classWt_1_1Payment_1_1Address.html</anchorfile>
      <anchor>a9cd2279bded0fd3454b106de387daee2</anchor>
      <arglist>(const WString &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>const WString &amp;</type>
      <name>name</name>
      <anchorfile>classWt_1_1Payment_1_1Address.html</anchorfile>
      <anchor>a8a337a4bfd1531ea5be2b791fba98c0d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setStreet1</name>
      <anchorfile>classWt_1_1Payment_1_1Address.html</anchorfile>
      <anchor>a0819cb594d861471678741c23fc63b0d</anchor>
      <arglist>(const WString &amp;street1)</arglist>
    </member>
    <member kind="function">
      <type>const WString &amp;</type>
      <name>street1</name>
      <anchorfile>classWt_1_1Payment_1_1Address.html</anchorfile>
      <anchor>a610074afe2f57a3333b2664cecb888d6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setStreet2</name>
      <anchorfile>classWt_1_1Payment_1_1Address.html</anchorfile>
      <anchor>a5f50090fe6ba23b0bacaf003e5416935</anchor>
      <arglist>(const WString &amp;street2)</arglist>
    </member>
    <member kind="function">
      <type>const WString &amp;</type>
      <name>street2</name>
      <anchorfile>classWt_1_1Payment_1_1Address.html</anchorfile>
      <anchor>ac2c9fc1601e045bf20efec63c23dea5d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCity</name>
      <anchorfile>classWt_1_1Payment_1_1Address.html</anchorfile>
      <anchor>a426b49b31c9a18a3ce593205e984534c</anchor>
      <arglist>(const WString &amp;city)</arglist>
    </member>
    <member kind="function">
      <type>const WString &amp;</type>
      <name>city</name>
      <anchorfile>classWt_1_1Payment_1_1Address.html</anchorfile>
      <anchor>a390389295b60d9c17c0b5ba942a3f48c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setState</name>
      <anchorfile>classWt_1_1Payment_1_1Address.html</anchorfile>
      <anchor>a5a61ce633af9ca5d4c40b6233d7881aa</anchor>
      <arglist>(const WString &amp;state)</arglist>
    </member>
    <member kind="function">
      <type>const WString &amp;</type>
      <name>state</name>
      <anchorfile>classWt_1_1Payment_1_1Address.html</anchorfile>
      <anchor>a733406978c8528d34b1319904855807c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCountryCode</name>
      <anchorfile>classWt_1_1Payment_1_1Address.html</anchorfile>
      <anchor>ae958dd95b11c720672de619ba7372438</anchor>
      <arglist>(const std::string &amp;country)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>countryCode</name>
      <anchorfile>classWt_1_1Payment_1_1Address.html</anchorfile>
      <anchor>abd278783e4cf4a7723bf90a15d041161</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setZip</name>
      <anchorfile>classWt_1_1Payment_1_1Address.html</anchorfile>
      <anchor>ae0c1dfe8a654ffc17348d1aa61e772c4</anchor>
      <arglist>(const WString &amp;zip)</arglist>
    </member>
    <member kind="function">
      <type>const WString &amp;</type>
      <name>zip</name>
      <anchorfile>classWt_1_1Payment_1_1Address.html</anchorfile>
      <anchor>ad333f148153989a10c2abdf6d9826896</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPhoneNumber</name>
      <anchorfile>classWt_1_1Payment_1_1Address.html</anchorfile>
      <anchor>a535e340f2db731ba8538e1c7516147f7</anchor>
      <arglist>(const std::string &amp;number)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>phoneNumber</name>
      <anchorfile>classWt_1_1Payment_1_1Address.html</anchorfile>
      <anchor>a301bd73cd958409fc43e4c11db2932b8</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Wt::any_traits</name>
    <filename>structWt_1_1any__traits.html</filename>
    <templarg></templarg>
    <member kind="function" static="yes">
      <type>static WString</type>
      <name>asString</name>
      <anchorfile>structWt_1_1any__traits.html</anchorfile>
      <anchor>a4308aa7ddee4785e2d4a22c84aee4b49</anchor>
      <arglist>(const Type &amp;value, const WString &amp;format)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>asNumber</name>
      <anchorfile>structWt_1_1any__traits.html</anchorfile>
      <anchor>ad294344c847931e451a60dc7e065a18a</anchor>
      <arglist>(const Type &amp;v)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>compare</name>
      <anchorfile>structWt_1_1any__traits.html</anchorfile>
      <anchor>a5a86f94d02d6933c906c65872b771c8b</anchor>
      <arglist>(const Type &amp;v1, const Type &amp;v2)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Payment::Approval</name>
    <filename>classWt_1_1Payment_1_1Approval.html</filename>
    <base>Wt::Payment::Result</base>
    <member kind="typedef">
      <type>ApprovalOutcome</type>
      <name>Outcome</name>
      <anchorfile>classWt_1_1Payment_1_1Approval.html</anchorfile>
      <anchor>a396e9a4f622d90cc26bcf2dafa87de0e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Approval</name>
      <anchorfile>classWt_1_1Payment_1_1Approval.html</anchorfile>
      <anchor>a6c0298af19e91230a811f5457d542ea6</anchor>
      <arglist>(ApprovalOutcome outcome)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Approval</name>
      <anchorfile>classWt_1_1Payment_1_1Approval.html</anchorfile>
      <anchor>af16adb29c144166536c118446dbfb613</anchor>
      <arglist>(const WString &amp;errorMessage)</arglist>
    </member>
    <member kind="function">
      <type>ApprovalOutcome</type>
      <name>outcome</name>
      <anchorfile>classWt_1_1Payment_1_1Approval.html</anchorfile>
      <anchor>afbd5525e705aa5a61192fb176fa8075f</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Json::Array</name>
    <filename>classWt_1_1Json_1_1Array.html</filename>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classWt_1_1Json_1_1Array.html</anchorfile>
      <anchor>a416d4cbc5bd31529515d4f32b2aa2996</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classWt_1_1Json_1_1Array.html</anchorfile>
      <anchor>abef068dd54ca79304e9f0ea6c0556fd1</anchor>
      <arglist>(const Array &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Array &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1Json_1_1Array.html</anchorfile>
      <anchor>ae307845c144c2532f3ccb1007607987e</anchor>
      <arglist>(const Array &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classWt_1_1Json_1_1Array.html</anchorfile>
      <anchor>acd48489022d598d0949cd2419779eed4</anchor>
      <arglist>(Array &amp;&amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classWt_1_1Json_1_1Array.html</anchorfile>
      <anchor>a4888ac5c17c6206f86ef326841546afb</anchor>
      <arglist>(std::initializer_list&lt; Value &gt; list)</arglist>
    </member>
    <member kind="function">
      <type>Array &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1Json_1_1Array.html</anchorfile>
      <anchor>a1022267f76aeb727e6f0fae28873709a</anchor>
      <arglist>(Array &amp;&amp;other)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static Array</type>
      <name>Empty</name>
      <anchorfile>classWt_1_1Json_1_1Array.html</anchorfile>
      <anchor>a006fef826c234f35405fc525d928e868</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WGLWidget::ArrayBuffer</name>
    <filename>classWt_1_1WGLWidget_1_1ArrayBuffer.html</filename>
    <base>Wt::WGLWidget::GlObject</base>
  </compound>
  <compound kind="class">
    <name>Wt::WGLWidget::AttribLocation</name>
    <filename>classWt_1_1WGLWidget_1_1AttribLocation.html</filename>
    <base>Wt::WGLWidget::GlObject</base>
  </compound>
  <compound kind="class">
    <name>Wt::Auth::Dbo::AuthIdentity</name>
    <filename>classWt_1_1Auth_1_1Dbo_1_1AuthIdentity.html</filename>
    <member kind="function">
      <type></type>
      <name>AuthIdentity</name>
      <anchorfile>classWt_1_1Auth_1_1Dbo_1_1AuthIdentity.html</anchorfile>
      <anchor>a27be5691631bbbb70d26571d571ae027</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AuthIdentity</name>
      <anchorfile>classWt_1_1Auth_1_1Dbo_1_1AuthIdentity.html</anchorfile>
      <anchor>ad52c8c4b5cab740b3dc90a08b8852e30</anchor>
      <arglist>(const std::string &amp;provider, const WString &amp;identity)</arglist>
    </member>
    <member kind="function">
      <type>Wt::Dbo::ptr&lt; AuthInfoType &gt;</type>
      <name>authInfo</name>
      <anchorfile>classWt_1_1Auth_1_1Dbo_1_1AuthIdentity.html</anchorfile>
      <anchor>a5e0949f594a472e0fccc76fb4b8a78f9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persist</name>
      <anchorfile>classWt_1_1Auth_1_1Dbo_1_1AuthIdentity.html</anchorfile>
      <anchor>a77a84e31cd0c99d12477712a8f918057</anchor>
      <arglist>(Action &amp;a)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Auth::Dbo::AuthInfo</name>
    <filename>classWt_1_1Auth_1_1Dbo_1_1AuthInfo.html</filename>
    <templarg></templarg>
    <base>Dbo&lt; AuthInfo&lt; UserType &gt; &gt;</base>
    <member kind="typedef">
      <type>AuthToken&lt; AuthInfo&lt; UserType &gt; &gt;</type>
      <name>AuthTokenType</name>
      <anchorfile>classWt_1_1Auth_1_1Dbo_1_1AuthInfo.html</anchorfile>
      <anchor>a58fefb577610dae54b4597ee014e92c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Wt::Dbo::collection&lt; Wt::Dbo::ptr&lt; AuthTokenType &gt; &gt;</type>
      <name>AuthTokens</name>
      <anchorfile>classWt_1_1Auth_1_1Dbo_1_1AuthInfo.html</anchorfile>
      <anchor>a02807c5c070546362d1fa7a53ab04dfe</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>AuthIdentity&lt; AuthInfo&lt; UserType &gt; &gt;</type>
      <name>AuthIdentityType</name>
      <anchorfile>classWt_1_1Auth_1_1Dbo_1_1AuthInfo.html</anchorfile>
      <anchor>a100cd93e291e2ff801070aebd9d2941d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Wt::Dbo::collection&lt; Wt::Dbo::ptr&lt; AuthIdentityType &gt; &gt;</type>
      <name>AuthIdentities</name>
      <anchorfile>classWt_1_1Auth_1_1Dbo_1_1AuthInfo.html</anchorfile>
      <anchor>a564653a9fce934f9e1f928a496a5097a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AuthInfo</name>
      <anchorfile>classWt_1_1Auth_1_1Dbo_1_1AuthInfo.html</anchorfile>
      <anchor>ab33a7895532323d3f28d207059b5097b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setUser</name>
      <anchorfile>classWt_1_1Auth_1_1Dbo_1_1AuthInfo.html</anchorfile>
      <anchor>a59f5bec40360c29e58cc9768a34c3b17</anchor>
      <arglist>(Wt::Dbo::ptr&lt; UserType &gt; user)</arglist>
    </member>
    <member kind="function">
      <type>Wt::Dbo::ptr&lt; UserType &gt;</type>
      <name>user</name>
      <anchorfile>classWt_1_1Auth_1_1Dbo_1_1AuthInfo.html</anchorfile>
      <anchor>ae40c7a97659aeb471728af8047a2486a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPassword</name>
      <anchorfile>classWt_1_1Auth_1_1Dbo_1_1AuthInfo.html</anchorfile>
      <anchor>a2191e53206f15013363feb05a3be73a6</anchor>
      <arglist>(const std::string &amp;hash, const std::string &amp;hashFunction, const std::string &amp;hashSalt)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>passwordHash</name>
      <anchorfile>classWt_1_1Auth_1_1Dbo_1_1AuthInfo.html</anchorfile>
      <anchor>a5cbcf5d4468621a912d117cd641d59ec</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>passwordMethod</name>
      <anchorfile>classWt_1_1Auth_1_1Dbo_1_1AuthInfo.html</anchorfile>
      <anchor>a8f37b46010c22a4e2c86dca5668db783</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>passwordSalt</name>
      <anchorfile>classWt_1_1Auth_1_1Dbo_1_1AuthInfo.html</anchorfile>
      <anchor>a7f8955790a847a49f7d21e3c200b594e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setEmail</name>
      <anchorfile>classWt_1_1Auth_1_1Dbo_1_1AuthInfo.html</anchorfile>
      <anchor>a440b112adee40904355ed86891ca1d54</anchor>
      <arglist>(const std::string &amp;email)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>email</name>
      <anchorfile>classWt_1_1Auth_1_1Dbo_1_1AuthInfo.html</anchorfile>
      <anchor>ae1fcb50b0ae69464f76991dc53c14484</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setUnverifiedEmail</name>
      <anchorfile>classWt_1_1Auth_1_1Dbo_1_1AuthInfo.html</anchorfile>
      <anchor>ac7d7ce46c45fcc62fb1a08dfe0b6b580</anchor>
      <arglist>(const std::string &amp;email)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>unverifiedEmail</name>
      <anchorfile>classWt_1_1Auth_1_1Dbo_1_1AuthInfo.html</anchorfile>
      <anchor>ae67a81092a79e26226248f6880ddc0d2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setEmailToken</name>
      <anchorfile>classWt_1_1Auth_1_1Dbo_1_1AuthInfo.html</anchorfile>
      <anchor>aed8b7af8d34c63ea0f4a3bddd41b12ca</anchor>
      <arglist>(const std::string &amp;hash, const WDateTime &amp;expires, EmailTokenRole role)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>emailToken</name>
      <anchorfile>classWt_1_1Auth_1_1Dbo_1_1AuthInfo.html</anchorfile>
      <anchor>afcd372879d082c7defdbce2bc6b55a33</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const Wt::WDateTime &amp;</type>
      <name>emailTokenExpires</name>
      <anchorfile>classWt_1_1Auth_1_1Dbo_1_1AuthInfo.html</anchorfile>
      <anchor>a751a98b855777d60e635b453a16f0ecf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>EmailTokenRole</type>
      <name>emailTokenRole</name>
      <anchorfile>classWt_1_1Auth_1_1Dbo_1_1AuthInfo.html</anchorfile>
      <anchor>ad31445a0884af0ca02e40b210463fdda</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setStatus</name>
      <anchorfile>classWt_1_1Auth_1_1Dbo_1_1AuthInfo.html</anchorfile>
      <anchor>ad60cfaad39fdb1115311d9571036ff16</anchor>
      <arglist>(AccountStatus status)</arglist>
    </member>
    <member kind="function">
      <type>AccountStatus</type>
      <name>status</name>
      <anchorfile>classWt_1_1Auth_1_1Dbo_1_1AuthInfo.html</anchorfile>
      <anchor>a778b63d26ea0e2534abfc5f13c34efbb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFailedLoginAttempts</name>
      <anchorfile>classWt_1_1Auth_1_1Dbo_1_1AuthInfo.html</anchorfile>
      <anchor>ab00f7e9259cf4e77e77a8e41bbf0384a</anchor>
      <arglist>(int count)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>failedLoginAttempts</name>
      <anchorfile>classWt_1_1Auth_1_1Dbo_1_1AuthInfo.html</anchorfile>
      <anchor>a1b0e4d3626a53fc30c502364999711ee</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLastLoginAttempt</name>
      <anchorfile>classWt_1_1Auth_1_1Dbo_1_1AuthInfo.html</anchorfile>
      <anchor>a89558444eebc260b392e25d892486335</anchor>
      <arglist>(const Wt::WDateTime &amp;dt)</arglist>
    </member>
    <member kind="function">
      <type>const Wt::WDateTime &amp;</type>
      <name>lastLoginAttempt</name>
      <anchorfile>classWt_1_1Auth_1_1Dbo_1_1AuthInfo.html</anchorfile>
      <anchor>aa1ef0e86a33c3f7745131b3301678940</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const AuthTokens &amp;</type>
      <name>authTokens</name>
      <anchorfile>classWt_1_1Auth_1_1Dbo_1_1AuthInfo.html</anchorfile>
      <anchor>ab9464116ee653c3eb899752f38c5ae38</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>AuthTokens &amp;</type>
      <name>authTokens</name>
      <anchorfile>classWt_1_1Auth_1_1Dbo_1_1AuthInfo.html</anchorfile>
      <anchor>a93677e9f19ec6c0924065502b1ba4ab3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const AuthIdentities &amp;</type>
      <name>authIdentities</name>
      <anchorfile>classWt_1_1Auth_1_1Dbo_1_1AuthInfo.html</anchorfile>
      <anchor>a6d5cce23916b0ca4f0572203f3b0a153</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>AuthIdentities &amp;</type>
      <name>authIdentities</name>
      <anchorfile>classWt_1_1Auth_1_1Dbo_1_1AuthInfo.html</anchorfile>
      <anchor>ab30ca7f71bd9b9f1fbe7e67f17364db8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>WString</type>
      <name>identity</name>
      <anchorfile>classWt_1_1Auth_1_1Dbo_1_1AuthInfo.html</anchorfile>
      <anchor>a6e24c5a66be2a0b0dac99e572cd9042c</anchor>
      <arglist>(const std::string &amp;provider) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persist</name>
      <anchorfile>classWt_1_1Auth_1_1Dbo_1_1AuthInfo.html</anchorfile>
      <anchor>aeb91756f1a86e0737920f8a226fad543</anchor>
      <arglist>(Action &amp;a)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Auth::AuthModel</name>
    <filename>classWt_1_1Auth_1_1AuthModel.html</filename>
    <base>Wt::Auth::FormBaseModel</base>
    <member kind="function">
      <type></type>
      <name>AuthModel</name>
      <anchorfile>classWt_1_1Auth_1_1AuthModel.html</anchorfile>
      <anchor>a368c75689b08ce66a536e3494ed8ddc8</anchor>
      <arglist>(const AuthService &amp;baseAuth, AbstractUserDatabase &amp;users)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>reset</name>
      <anchorfile>classWt_1_1Auth_1_1AuthModel.html</anchorfile>
      <anchor>a2b540a91e996b0ddcdc410cdf0dd7002</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isVisible</name>
      <anchorfile>classWt_1_1Auth_1_1AuthModel.html</anchorfile>
      <anchor>ac4765ef92279c30e7b616512a6a9f80a</anchor>
      <arglist>(Field field) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>validateField</name>
      <anchorfile>classWt_1_1Auth_1_1AuthModel.html</anchorfile>
      <anchor>a81863038cf862f91c77c2b186152f1d0</anchor>
      <arglist>(Field field) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>validate</name>
      <anchorfile>classWt_1_1Auth_1_1AuthModel.html</anchorfile>
      <anchor>a66cdede15b02c914fa229911a205acfa</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>configureThrottling</name>
      <anchorfile>classWt_1_1Auth_1_1AuthModel.html</anchorfile>
      <anchor>a99272394a3fd54b6f4f3539b7ff1c34d</anchor>
      <arglist>(WInteractWidget *button)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>updateThrottling</name>
      <anchorfile>classWt_1_1Auth_1_1AuthModel.html</anchorfile>
      <anchor>a6a28d5513979c895d8c1b2dfa67414ab</anchor>
      <arglist>(WInteractWidget *button)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>login</name>
      <anchorfile>classWt_1_1Auth_1_1AuthModel.html</anchorfile>
      <anchor>ad07261bdd2e42da588a48a2305678450</anchor>
      <arglist>(Login &amp;login)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>logout</name>
      <anchorfile>classWt_1_1Auth_1_1AuthModel.html</anchorfile>
      <anchor>a4817022bc0bcc784d7938e0dfa82ed64</anchor>
      <arglist>(Login &amp;login)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual EmailTokenResult</type>
      <name>processEmailToken</name>
      <anchorfile>classWt_1_1Auth_1_1AuthModel.html</anchorfile>
      <anchor>a0a533321fd7ae52c6455a4dc52b93ce6</anchor>
      <arglist>(const std::string &amp;token)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setRememberMeCookie</name>
      <anchorfile>classWt_1_1Auth_1_1AuthModel.html</anchorfile>
      <anchor>a9186da13a4a2d9f2842db8e3d64bcce4</anchor>
      <arglist>(const User &amp;user)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual User</type>
      <name>processAuthToken</name>
      <anchorfile>classWt_1_1Auth_1_1AuthModel.html</anchorfile>
      <anchor>a9ebeea9a7ba1c7091fbd4910e1390fca</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const Field</type>
      <name>PasswordField</name>
      <anchorfile>classWt_1_1Auth_1_1AuthModel.html</anchorfile>
      <anchor>a621ff81f9187ed450625ca425e1a7a6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const Field</type>
      <name>RememberMeField</name>
      <anchorfile>classWt_1_1Auth_1_1AuthModel.html</anchorfile>
      <anchor>af425938e22ecb11ea2b7137ec76110ec</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Auth::AuthService</name>
    <filename>classWt_1_1Auth_1_1AuthService.html</filename>
    <member kind="function">
      <type></type>
      <name>AuthService</name>
      <anchorfile>classWt_1_1Auth_1_1AuthService.html</anchorfile>
      <anchor>a9e2bcf05b58e1b2b9282b04f731cc2a1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~AuthService</name>
      <anchorfile>classWt_1_1Auth_1_1AuthService.html</anchorfile>
      <anchor>a5e8d54401a87bb4220ebe76d606445c6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRandomTokenLength</name>
      <anchorfile>classWt_1_1Auth_1_1AuthService.html</anchorfile>
      <anchor>aa53b495589aeb0618125faccddbce891</anchor>
      <arglist>(int length)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>randomTokenLength</name>
      <anchorfile>classWt_1_1Auth_1_1AuthService.html</anchorfile>
      <anchor>a73bd9b3c7c057494be3a04f9bcbd72b6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setIdentityPolicy</name>
      <anchorfile>classWt_1_1Auth_1_1AuthService.html</anchorfile>
      <anchor>aefb84d11c1dbc0c335b406ca9d3e3572</anchor>
      <arglist>(IdentityPolicy policy)</arglist>
    </member>
    <member kind="function">
      <type>IdentityPolicy</type>
      <name>identityPolicy</name>
      <anchorfile>classWt_1_1Auth_1_1AuthService.html</anchorfile>
      <anchor>abd8b9eeb457aba6acb8e8fb5ce42bdf4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual User</type>
      <name>identifyUser</name>
      <anchorfile>classWt_1_1Auth_1_1AuthService.html</anchorfile>
      <anchor>afdd8db82d834f592138b8d5c8cafc340</anchor>
      <arglist>(const Identity &amp;identity, AbstractUserDatabase &amp;users) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAuthTokensEnabled</name>
      <anchorfile>classWt_1_1Auth_1_1AuthService.html</anchorfile>
      <anchor>adf5b811cbedec93de7d4b97950565af3</anchor>
      <arglist>(bool enabled, const std::string &amp;cookieName=&quot;wtauth&quot;, const std::string &amp;cookieDomain=std::string())</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>authTokensEnabled</name>
      <anchorfile>classWt_1_1Auth_1_1AuthService.html</anchorfile>
      <anchor>a4fcb5dbd78c66ca4e88ba34d8bc595af</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAuthTokenUpdateEnabled</name>
      <anchorfile>classWt_1_1Auth_1_1AuthService.html</anchorfile>
      <anchor>aee229af97b12975d00e7448e486f9cb2</anchor>
      <arglist>(bool enabled)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>authTokenUpdateEnabled</name>
      <anchorfile>classWt_1_1Auth_1_1AuthService.html</anchorfile>
      <anchor>a6b0904b340b82c111a78aadf43e4fa89</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>authTokenCookieName</name>
      <anchorfile>classWt_1_1Auth_1_1AuthService.html</anchorfile>
      <anchor>a14681ebd1a116357762b577f9b770149</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>authTokenCookieDomain</name>
      <anchorfile>classWt_1_1Auth_1_1AuthService.html</anchorfile>
      <anchor>a38c3fa6b8f0ebdd58263f1ca23ef722f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTokenHashFunction</name>
      <anchorfile>classWt_1_1Auth_1_1AuthService.html</anchorfile>
      <anchor>a87578d5b56f0ad4d3c768d4dbe43ef38</anchor>
      <arglist>(std::unique_ptr&lt; HashFunction &gt; function)</arglist>
    </member>
    <member kind="function">
      <type>HashFunction *</type>
      <name>tokenHashFunction</name>
      <anchorfile>classWt_1_1Auth_1_1AuthService.html</anchorfile>
      <anchor>af579a6ee5d534aea78b5d9108f967fa5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>createAuthToken</name>
      <anchorfile>classWt_1_1Auth_1_1AuthService.html</anchorfile>
      <anchor>ac794d5e37386427d4923982c3c5fa468</anchor>
      <arglist>(const User &amp;user) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual AuthTokenResult</type>
      <name>processAuthToken</name>
      <anchorfile>classWt_1_1Auth_1_1AuthService.html</anchorfile>
      <anchor>a12a1f5b10b9b2b83ee7ea3d38cc5c1a0</anchor>
      <arglist>(const std::string &amp;token, AbstractUserDatabase &amp;users) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAuthTokenValidity</name>
      <anchorfile>classWt_1_1Auth_1_1AuthService.html</anchorfile>
      <anchor>a53c56267c8588a58affe3d6ed66edeb6</anchor>
      <arglist>(int minutes)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>authTokenValidity</name>
      <anchorfile>classWt_1_1Auth_1_1AuthService.html</anchorfile>
      <anchor>acba63e9762d76c6db4f54673a3535b4b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setEmailVerificationEnabled</name>
      <anchorfile>classWt_1_1Auth_1_1AuthService.html</anchorfile>
      <anchor>a545208b47b73bc8f4d736753fd967eec</anchor>
      <arglist>(bool enabled)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>emailVerificationEnabled</name>
      <anchorfile>classWt_1_1Auth_1_1AuthService.html</anchorfile>
      <anchor>abe67d8a15464f55ed91d380376e114bb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setEmailVerificationRequired</name>
      <anchorfile>classWt_1_1Auth_1_1AuthService.html</anchorfile>
      <anchor>a2dcdb5d4a23e22389823c55aee91cbc4</anchor>
      <arglist>(bool enabled)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>emailVerificationRequired</name>
      <anchorfile>classWt_1_1Auth_1_1AuthService.html</anchorfile>
      <anchor>a6250ffb2a3eb06e7783961861a3d89d7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setEmailRedirectInternalPath</name>
      <anchorfile>classWt_1_1Auth_1_1AuthService.html</anchorfile>
      <anchor>ac1ce625114817d88f32b041473e5cfcf</anchor>
      <arglist>(const std::string &amp;internalPath)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>emailRedirectInternalPath</name>
      <anchorfile>classWt_1_1Auth_1_1AuthService.html</anchorfile>
      <anchor>a94f811133e4b2d4dc71d150a0ccd450c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>parseEmailToken</name>
      <anchorfile>classWt_1_1Auth_1_1AuthService.html</anchorfile>
      <anchor>a7c466ec5021fcf79d92bd8059a26e65d</anchor>
      <arglist>(const std::string &amp;internalPath) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>verifyEmailAddress</name>
      <anchorfile>classWt_1_1Auth_1_1AuthService.html</anchorfile>
      <anchor>ad3ce95efe27f424a60a9ccf782fe497e</anchor>
      <arglist>(const User &amp;user, const std::string &amp;emailAddress) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>lostPassword</name>
      <anchorfile>classWt_1_1Auth_1_1AuthService.html</anchorfile>
      <anchor>a147dc2a6e7002c97140f2f39f5a1e0ac</anchor>
      <arglist>(const std::string &amp;emailAddress, AbstractUserDatabase &amp;users) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual EmailTokenResult</type>
      <name>processEmailToken</name>
      <anchorfile>classWt_1_1Auth_1_1AuthService.html</anchorfile>
      <anchor>ada5a22a95c7f74eb75aeb5f3802f7332</anchor>
      <arglist>(const std::string &amp;token, AbstractUserDatabase &amp;users) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setEmailTokenValidity</name>
      <anchorfile>classWt_1_1Auth_1_1AuthService.html</anchorfile>
      <anchor>ad184b5136649e3af107dab3153eb9374</anchor>
      <arglist>(int minutes)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>emailTokenValidity</name>
      <anchorfile>classWt_1_1Auth_1_1AuthService.html</anchorfile>
      <anchor>a3c17b53e96796e64ab687a329ce4e875</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>sendMail</name>
      <anchorfile>classWt_1_1Auth_1_1AuthService.html</anchorfile>
      <anchor>a12fc4369e2c96dbef7b0cfe82a0a0014</anchor>
      <arglist>(const Mail::Message &amp;message) const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>sendConfirmMail</name>
      <anchorfile>classWt_1_1Auth_1_1AuthService.html</anchorfile>
      <anchor>a711536a9386e17dcce0137adfa4df3e4</anchor>
      <arglist>(const std::string &amp;address, const User &amp;user, const std::string &amp;token) const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>sendLostPasswordMail</name>
      <anchorfile>classWt_1_1Auth_1_1AuthService.html</anchorfile>
      <anchor>a90e544b6897b85aad70c1a5ee9d863f5</anchor>
      <arglist>(const std::string &amp;address, const User &amp;user, const std::string &amp;token) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAuthTokensEnabled</name>
      <anchorfile>classWt_1_1Auth_1_1AuthService.html</anchorfile>
      <anchor>adf5b811cbedec93de7d4b97950565af3</anchor>
      <arglist>(bool enabled, const std::string &amp;cookieName=&quot;wtauth&quot;, const std::string &amp;cookieDomain=std::string())</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>authTokensEnabled</name>
      <anchorfile>classWt_1_1Auth_1_1AuthService.html</anchorfile>
      <anchor>a4fcb5dbd78c66ca4e88ba34d8bc595af</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAuthTokenUpdateEnabled</name>
      <anchorfile>classWt_1_1Auth_1_1AuthService.html</anchorfile>
      <anchor>aee229af97b12975d00e7448e486f9cb2</anchor>
      <arglist>(bool enabled)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>authTokenUpdateEnabled</name>
      <anchorfile>classWt_1_1Auth_1_1AuthService.html</anchorfile>
      <anchor>a6b0904b340b82c111a78aadf43e4fa89</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>authTokenCookieName</name>
      <anchorfile>classWt_1_1Auth_1_1AuthService.html</anchorfile>
      <anchor>a14681ebd1a116357762b577f9b770149</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>authTokenCookieDomain</name>
      <anchorfile>classWt_1_1Auth_1_1AuthService.html</anchorfile>
      <anchor>a38c3fa6b8f0ebdd58263f1ca23ef722f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTokenHashFunction</name>
      <anchorfile>classWt_1_1Auth_1_1AuthService.html</anchorfile>
      <anchor>a87578d5b56f0ad4d3c768d4dbe43ef38</anchor>
      <arglist>(std::unique_ptr&lt; HashFunction &gt; function)</arglist>
    </member>
    <member kind="function">
      <type>HashFunction *</type>
      <name>tokenHashFunction</name>
      <anchorfile>classWt_1_1Auth_1_1AuthService.html</anchorfile>
      <anchor>af579a6ee5d534aea78b5d9108f967fa5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>createAuthToken</name>
      <anchorfile>classWt_1_1Auth_1_1AuthService.html</anchorfile>
      <anchor>ac794d5e37386427d4923982c3c5fa468</anchor>
      <arglist>(const User &amp;user) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual AuthTokenResult</type>
      <name>processAuthToken</name>
      <anchorfile>classWt_1_1Auth_1_1AuthService.html</anchorfile>
      <anchor>a12a1f5b10b9b2b83ee7ea3d38cc5c1a0</anchor>
      <arglist>(const std::string &amp;token, AbstractUserDatabase &amp;users) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAuthTokenValidity</name>
      <anchorfile>classWt_1_1Auth_1_1AuthService.html</anchorfile>
      <anchor>a53c56267c8588a58affe3d6ed66edeb6</anchor>
      <arglist>(int minutes)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>authTokenValidity</name>
      <anchorfile>classWt_1_1Auth_1_1AuthService.html</anchorfile>
      <anchor>acba63e9762d76c6db4f54673a3535b4b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setEmailVerificationEnabled</name>
      <anchorfile>classWt_1_1Auth_1_1AuthService.html</anchorfile>
      <anchor>a545208b47b73bc8f4d736753fd967eec</anchor>
      <arglist>(bool enabled)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>emailVerificationEnabled</name>
      <anchorfile>classWt_1_1Auth_1_1AuthService.html</anchorfile>
      <anchor>abe67d8a15464f55ed91d380376e114bb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setEmailVerificationRequired</name>
      <anchorfile>classWt_1_1Auth_1_1AuthService.html</anchorfile>
      <anchor>a2dcdb5d4a23e22389823c55aee91cbc4</anchor>
      <arglist>(bool enabled)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>emailVerificationRequired</name>
      <anchorfile>classWt_1_1Auth_1_1AuthService.html</anchorfile>
      <anchor>a6250ffb2a3eb06e7783961861a3d89d7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setEmailRedirectInternalPath</name>
      <anchorfile>classWt_1_1Auth_1_1AuthService.html</anchorfile>
      <anchor>ac1ce625114817d88f32b041473e5cfcf</anchor>
      <arglist>(const std::string &amp;internalPath)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>emailRedirectInternalPath</name>
      <anchorfile>classWt_1_1Auth_1_1AuthService.html</anchorfile>
      <anchor>a94f811133e4b2d4dc71d150a0ccd450c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>parseEmailToken</name>
      <anchorfile>classWt_1_1Auth_1_1AuthService.html</anchorfile>
      <anchor>a7c466ec5021fcf79d92bd8059a26e65d</anchor>
      <arglist>(const std::string &amp;internalPath) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>verifyEmailAddress</name>
      <anchorfile>classWt_1_1Auth_1_1AuthService.html</anchorfile>
      <anchor>ad3ce95efe27f424a60a9ccf782fe497e</anchor>
      <arglist>(const User &amp;user, const std::string &amp;emailAddress) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>lostPassword</name>
      <anchorfile>classWt_1_1Auth_1_1AuthService.html</anchorfile>
      <anchor>a147dc2a6e7002c97140f2f39f5a1e0ac</anchor>
      <arglist>(const std::string &amp;emailAddress, AbstractUserDatabase &amp;users) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual EmailTokenResult</type>
      <name>processEmailToken</name>
      <anchorfile>classWt_1_1Auth_1_1AuthService.html</anchorfile>
      <anchor>ada5a22a95c7f74eb75aeb5f3802f7332</anchor>
      <arglist>(const std::string &amp;token, AbstractUserDatabase &amp;users) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setEmailTokenValidity</name>
      <anchorfile>classWt_1_1Auth_1_1AuthService.html</anchorfile>
      <anchor>ad184b5136649e3af107dab3153eb9374</anchor>
      <arglist>(int minutes)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>emailTokenValidity</name>
      <anchorfile>classWt_1_1Auth_1_1AuthService.html</anchorfile>
      <anchor>a3c17b53e96796e64ab687a329ce4e875</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>sendMail</name>
      <anchorfile>classWt_1_1Auth_1_1AuthService.html</anchorfile>
      <anchor>a12fc4369e2c96dbef7b0cfe82a0a0014</anchor>
      <arglist>(const Mail::Message &amp;message) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Auth::Dbo::AuthToken</name>
    <filename>classWt_1_1Auth_1_1Dbo_1_1AuthToken.html</filename>
    <member kind="function">
      <type></type>
      <name>AuthToken</name>
      <anchorfile>classWt_1_1Auth_1_1Dbo_1_1AuthToken.html</anchorfile>
      <anchor>a854bcf3bb476596c01910af30940c2f2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AuthToken</name>
      <anchorfile>classWt_1_1Auth_1_1Dbo_1_1AuthToken.html</anchorfile>
      <anchor>a93d8a8ab329dbb40a31a164b60a9d9ee</anchor>
      <arglist>(const std::string &amp;value, const Wt::WDateTime &amp;expires)</arglist>
    </member>
    <member kind="function">
      <type>Wt::Dbo::ptr&lt; AuthInfoType &gt;</type>
      <name>authInfo</name>
      <anchorfile>classWt_1_1Auth_1_1Dbo_1_1AuthToken.html</anchorfile>
      <anchor>a27832e7ddcd88561681954063575b766</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>value</name>
      <anchorfile>classWt_1_1Auth_1_1Dbo_1_1AuthToken.html</anchorfile>
      <anchor>ac04d7dc9a924e49aaa5748c79ebf0e6f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setValue</name>
      <anchorfile>classWt_1_1Auth_1_1Dbo_1_1AuthToken.html</anchorfile>
      <anchor>ac4925637e5692c1621e0f75ec2ce6aeb</anchor>
      <arglist>(const std::string &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>const Wt::WDateTime &amp;</type>
      <name>expires</name>
      <anchorfile>classWt_1_1Auth_1_1Dbo_1_1AuthToken.html</anchorfile>
      <anchor>a62074a1a95f2e0ec619feb6cf08bd828</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persist</name>
      <anchorfile>classWt_1_1Auth_1_1Dbo_1_1AuthToken.html</anchorfile>
      <anchor>afb52c8519c286de02f6c4a327ea703bc</anchor>
      <arglist>(Action &amp;a)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Auth::AuthTokenResult</name>
    <filename>classWt_1_1Auth_1_1AuthTokenResult.html</filename>
    <member kind="typedef">
      <type>AuthTokenState</type>
      <name>State</name>
      <anchorfile>classWt_1_1Auth_1_1AuthTokenResult.html</anchorfile>
      <anchor>a578f0380c3955e71ca4ab14203d06ed6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AuthTokenResult</name>
      <anchorfile>classWt_1_1Auth_1_1AuthTokenResult.html</anchorfile>
      <anchor>ae022d57bc61d0e561e4417f50b29d1bc</anchor>
      <arglist>(AuthTokenState state, const User &amp;user=User(), const std::string &amp;newToken=std::string(), int newTokenValidity=-1)</arglist>
    </member>
    <member kind="function">
      <type>AuthTokenState</type>
      <name>state</name>
      <anchorfile>classWt_1_1Auth_1_1AuthTokenResult.html</anchorfile>
      <anchor>af775780f726b366d3272e1e92a186fe3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const User &amp;</type>
      <name>user</name>
      <anchorfile>classWt_1_1Auth_1_1AuthTokenResult.html</anchorfile>
      <anchor>a718754e8602e07fc658a973495fda870</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>newToken</name>
      <anchorfile>classWt_1_1Auth_1_1AuthTokenResult.html</anchorfile>
      <anchor>a00dd1a9167a21463a9ce3bd0338fb6c3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>newTokenValidity</name>
      <anchorfile>classWt_1_1Auth_1_1AuthTokenResult.html</anchorfile>
      <anchor>ad0071aa6c443d11ae12c028e7e53758b</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Auth::AuthWidget</name>
    <filename>classWt_1_1Auth_1_1AuthWidget.html</filename>
    <base>Wt::WTemplateFormView</base>
    <member kind="function">
      <type></type>
      <name>AuthWidget</name>
      <anchorfile>classWt_1_1Auth_1_1AuthWidget.html</anchorfile>
      <anchor>a90ffdf515a53e24b6b545bf6b9e1bcc9</anchor>
      <arglist>(const AuthService &amp;baseAuth, AbstractUserDatabase &amp;users, Login &amp;login)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AuthWidget</name>
      <anchorfile>classWt_1_1Auth_1_1AuthWidget.html</anchorfile>
      <anchor>a37c7b8bf18ccf5fb14a570a923807ee4</anchor>
      <arglist>(Login &amp;login)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setModel</name>
      <anchorfile>classWt_1_1Auth_1_1AuthWidget.html</anchorfile>
      <anchor>a93036a2d6cb7b39fa5101172591a717c</anchor>
      <arglist>(std::unique_ptr&lt; AuthModel &gt; model)</arglist>
    </member>
    <member kind="function">
      <type>AuthModel *</type>
      <name>model</name>
      <anchorfile>classWt_1_1Auth_1_1AuthWidget.html</anchorfile>
      <anchor>a976da62e6cde8e5ef132b1caaaecd80b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Login &amp;</type>
      <name>login</name>
      <anchorfile>classWt_1_1Auth_1_1AuthWidget.html</anchorfile>
      <anchor>ada371aafa2d133314decb29f4520b75e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInternalBasePath</name>
      <anchorfile>classWt_1_1Auth_1_1AuthWidget.html</anchorfile>
      <anchor>a3d8e977c355660bcc2441ac11b42f97a</anchor>
      <arglist>(const std::string &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>internalBasePath</name>
      <anchorfile>classWt_1_1Auth_1_1AuthWidget.html</anchorfile>
      <anchor>aa5c848614e0ad2fb4c5a8ba168e55337</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRegistrationEnabled</name>
      <anchorfile>classWt_1_1Auth_1_1AuthWidget.html</anchorfile>
      <anchor>a155794d70cfd4c07c44b0efdd7dec341</anchor>
      <arglist>(bool enabled)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>registerNewUser</name>
      <anchorfile>classWt_1_1Auth_1_1AuthWidget.html</anchorfile>
      <anchor>af39805f0625f450368250fed8fe7a244</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>registerNewUser</name>
      <anchorfile>classWt_1_1Auth_1_1AuthWidget.html</anchorfile>
      <anchor>a49ebff7095fe9e756131073be1188eb8</anchor>
      <arglist>(const Identity &amp;oauth)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>processEnvironment</name>
      <anchorfile>classWt_1_1Auth_1_1AuthWidget.html</anchorfile>
      <anchor>a7e64d84a1717f437fa9a32d5901ca411</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>letUpdatePassword</name>
      <anchorfile>classWt_1_1Auth_1_1AuthWidget.html</anchorfile>
      <anchor>aff3fbd75b84abc7b2c9592033012e4e2</anchor>
      <arglist>(const User &amp;user, bool promptPassword)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>handleLostPassword</name>
      <anchorfile>classWt_1_1Auth_1_1AuthWidget.html</anchorfile>
      <anchor>a1d54b23038ef22e09892edaac4bb9856</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::unique_ptr&lt; WWidget &gt;</type>
      <name>createLostPasswordView</name>
      <anchorfile>classWt_1_1Auth_1_1AuthWidget.html</anchorfile>
      <anchor>a4c63227e60e05de1fe39083a02cb2d98</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::unique_ptr&lt; WWidget &gt;</type>
      <name>createRegistrationView</name>
      <anchorfile>classWt_1_1Auth_1_1AuthWidget.html</anchorfile>
      <anchor>abf3af077809f2fc24941cddc4dbe0705</anchor>
      <arglist>(const Identity &amp;id)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::unique_ptr&lt; WWidget &gt;</type>
      <name>createUpdatePasswordView</name>
      <anchorfile>classWt_1_1Auth_1_1AuthWidget.html</anchorfile>
      <anchor>a5bb831e7d526bbb5ed5905893e5c89fb</anchor>
      <arglist>(const User &amp;user, bool promptPassword)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WDialog *</type>
      <name>createPasswordPromptDialog</name>
      <anchorfile>classWt_1_1Auth_1_1AuthWidget.html</anchorfile>
      <anchor>a9d504386871c467effe71b415d48590e</anchor>
      <arglist>(Login &amp;login)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>displayError</name>
      <anchorfile>classWt_1_1Auth_1_1AuthWidget.html</anchorfile>
      <anchor>a1158f0c94ced0297d9e9e19ef3fd7b15</anchor>
      <arglist>(const WString &amp;error)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>displayInfo</name>
      <anchorfile>classWt_1_1Auth_1_1AuthWidget.html</anchorfile>
      <anchor>a120b4795813ea6e41966a878da8750db</anchor>
      <arglist>(const WString &amp;message)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>create</name>
      <anchorfile>classWt_1_1Auth_1_1AuthWidget.html</anchorfile>
      <anchor>ae5e9eb9426ee6cd1e6e9c602914ad8d7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>createLoginView</name>
      <anchorfile>classWt_1_1Auth_1_1AuthWidget.html</anchorfile>
      <anchor>ab9aaf604093867440e6ec536e11c452b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>createLoggedInView</name>
      <anchorfile>classWt_1_1Auth_1_1AuthWidget.html</anchorfile>
      <anchor>aed83b29ceec9330b176ae258c8966e3a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>createPasswordLoginView</name>
      <anchorfile>classWt_1_1Auth_1_1AuthWidget.html</anchorfile>
      <anchor>aa2bd7bb802e6002001d9d0d39ae82448</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>createOAuthLoginView</name>
      <anchorfile>classWt_1_1Auth_1_1AuthWidget.html</anchorfile>
      <anchor>a8c39d6a467ce4117bc2a6bae73973e21</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual WDialog *</type>
      <name>showDialog</name>
      <anchorfile>classWt_1_1Auth_1_1AuthWidget.html</anchorfile>
      <anchor>af608e9a9c86f00c0127f77ccad2ce52a</anchor>
      <arglist>(const WString &amp;title, std::unique_ptr&lt; WWidget &gt; contents)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual std::unique_ptr&lt; RegistrationModel &gt;</type>
      <name>createRegistrationModel</name>
      <anchorfile>classWt_1_1Auth_1_1AuthWidget.html</anchorfile>
      <anchor>a3d690103201896f47d8e7467c64fb2ae</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>render</name>
      <anchorfile>classWt_1_1Auth_1_1AuthWidget.html</anchorfile>
      <anchor>a023637259ae50599affa901c5e665fc8</anchor>
      <arglist>(WFlags&lt; RenderFlag &gt; flags) override</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Wt::Chart::AxisConfig</name>
    <filename>structWt_1_1Chart_1_1AxisConfig.html</filename>
    <member kind="variable">
      <type>AxisValue</type>
      <name>side</name>
      <anchorfile>structWt_1_1Chart_1_1AxisConfig.html</anchorfile>
      <anchor>a1e5ce1e97cbe27e322ed48945f098f71</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>zoomLevel</name>
      <anchorfile>structWt_1_1Chart_1_1AxisConfig.html</anchorfile>
      <anchor>a3c1df1211450dbe448fc3e91bcb768c1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Wt::WAbstractProxyModel::BaseItem</name>
    <filename>structWt_1_1WAbstractProxyModel_1_1BaseItem.html</filename>
    <member kind="function">
      <type></type>
      <name>BaseItem</name>
      <anchorfile>structWt_1_1WAbstractProxyModel_1_1BaseItem.html</anchorfile>
      <anchor>aafa7dca61e51d29f3f8d3ae0c89e60a9</anchor>
      <arglist>(const WModelIndex &amp;sourceIndex)</arglist>
    </member>
    <member kind="variable">
      <type>WModelIndex</type>
      <name>sourceIndex_</name>
      <anchorfile>structWt_1_1WAbstractProxyModel_1_1BaseItem.html</anchorfile>
      <anchor>a135d8a4d32a468703e29bf60cbdcadfd</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Auth::BCryptHashFunction</name>
    <filename>classWt_1_1Auth_1_1BCryptHashFunction.html</filename>
    <base>Wt::Auth::HashFunction</base>
    <member kind="function">
      <type></type>
      <name>BCryptHashFunction</name>
      <anchorfile>classWt_1_1Auth_1_1BCryptHashFunction.html</anchorfile>
      <anchor>aefb9597277b162b10c0b61e9b5e0114f</anchor>
      <arglist>(int count=0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>name</name>
      <anchorfile>classWt_1_1Auth_1_1BCryptHashFunction.html</anchorfile>
      <anchor>a3394467233445eb1634bcc50442134f8</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>compute</name>
      <anchorfile>classWt_1_1Auth_1_1BCryptHashFunction.html</anchorfile>
      <anchor>ae12212f3fd79e878365271a2a613d30f</anchor>
      <arglist>(const std::string &amp;msg, const std::string &amp;salt) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>verify</name>
      <anchorfile>classWt_1_1Auth_1_1BCryptHashFunction.html</anchorfile>
      <anchor>afae24f1316fa52ae3f39440e1d8f9e5c</anchor>
      <arglist>(const std::string &amp;msg, const std::string &amp;salt, const std::string &amp;hash) const override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WGLWidget::Buffer</name>
    <filename>classWt_1_1WGLWidget_1_1Buffer.html</filename>
    <base>Wt::WGLWidget::GlObject</base>
  </compound>
  <compound kind="class">
    <name>Wt::Http::Request::ByteRange</name>
    <filename>classWt_1_1Http_1_1Request_1_1ByteRange.html</filename>
    <member kind="function">
      <type></type>
      <name>ByteRange</name>
      <anchorfile>classWt_1_1Http_1_1Request_1_1ByteRange.html</anchorfile>
      <anchor>aceb2856a1d7b4a188979a540d30da5d3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ByteRange</name>
      <anchorfile>classWt_1_1Http_1_1Request_1_1ByteRange.html</anchorfile>
      <anchor>a717c70f6065a373553802c7f5aaaa26f</anchor>
      <arglist>(::uint64_t first, ::uint64_t last)</arglist>
    </member>
    <member kind="function">
      <type>::uint64_t</type>
      <name>firstByte</name>
      <anchorfile>classWt_1_1Http_1_1Request_1_1ByteRange.html</anchorfile>
      <anchor>a533d765d7ecb85bbffccb63d04b930f7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>::uint64_t</type>
      <name>lastByte</name>
      <anchorfile>classWt_1_1Http_1_1Request_1_1ByteRange.html</anchorfile>
      <anchor>a7cacf31dc951871de3df192d8db7e92f</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Http::Request::ByteRangeSpecifier</name>
    <filename>classWt_1_1Http_1_1Request_1_1ByteRangeSpecifier.html</filename>
    <member kind="function">
      <type></type>
      <name>ByteRangeSpecifier</name>
      <anchorfile>classWt_1_1Http_1_1Request_1_1ByteRangeSpecifier.html</anchorfile>
      <anchor>ac4fc38d1759336f50099de17d4c22af4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSatisfiable</name>
      <anchorfile>classWt_1_1Http_1_1Request_1_1ByteRangeSpecifier.html</anchorfile>
      <anchor>a1acda3e94a0108d39eda22aea55cd2a0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSatisfiable</name>
      <anchorfile>classWt_1_1Http_1_1Request_1_1ByteRangeSpecifier.html</anchorfile>
      <anchor>afc7043d292dbf9fa16dcde9ff30b813a</anchor>
      <arglist>(bool satisfiable)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Dbo::Call</name>
    <filename>classWt_1_1Dbo_1_1Call.html</filename>
    <member kind="function">
      <type></type>
      <name>~Call</name>
      <anchorfile>classWt_1_1Dbo_1_1Call.html</anchorfile>
      <anchor>ac32ad969b5d6a194099c54a2b6ab8a61</anchor>
      <arglist>() noexcept(false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Call</name>
      <anchorfile>classWt_1_1Dbo_1_1Call.html</anchorfile>
      <anchor>ace6fa91750481408ad768a908a33a73d</anchor>
      <arglist>(const Call &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Call &amp;</type>
      <name>bind</name>
      <anchorfile>classWt_1_1Dbo_1_1Call.html</anchorfile>
      <anchor>a902fdd5bc8ff98d7a100074d1de4e130</anchor>
      <arglist>(const T &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>run</name>
      <anchorfile>classWt_1_1Dbo_1_1Call.html</anchorfile>
      <anchor>a3208686427d7efeaf45e48d98c843e6a</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Http::Client</name>
    <filename>classWt_1_1Http_1_1Client.html</filename>
    <base>Wt::WObject</base>
    <class kind="struct">Wt::Http::Client::URL</class>
    <member kind="function">
      <type></type>
      <name>Client</name>
      <anchorfile>classWt_1_1Http_1_1Client.html</anchorfile>
      <anchor>ab850f51173c33a12ec3d4b3371e7d1b0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Client</name>
      <anchorfile>classWt_1_1Http_1_1Client.html</anchorfile>
      <anchor>a966378bd63f2babf2f8d2beb2783e45e</anchor>
      <arglist>(Wt::AsioWrapper::asio::io_service &amp;ioService)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Client</name>
      <anchorfile>classWt_1_1Http_1_1Client.html</anchorfile>
      <anchor>a7da4dec8f24f8215f87efffbd20657e3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTimeout</name>
      <anchorfile>classWt_1_1Http_1_1Client.html</anchorfile>
      <anchor>a3d8f9647e25c264cd9296a61aba16753</anchor>
      <arglist>(std::chrono::steady_clock::duration timeout)</arglist>
    </member>
    <member kind="function">
      <type>std::chrono::steady_clock::duration</type>
      <name>timeout</name>
      <anchorfile>classWt_1_1Http_1_1Client.html</anchorfile>
      <anchor>ab98a080e1ae3a5d0e09ab0fca76a43ea</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMaximumResponseSize</name>
      <anchorfile>classWt_1_1Http_1_1Client.html</anchorfile>
      <anchor>a45b25de10c5da7c7c5abf0892593a04d</anchor>
      <arglist>(std::size_t bytes)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>maximumResponseSize</name>
      <anchorfile>classWt_1_1Http_1_1Client.html</anchorfile>
      <anchor>ab8d6c65425f43fb373e4b66860033d31</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSslCertificateVerificationEnabled</name>
      <anchorfile>classWt_1_1Http_1_1Client.html</anchorfile>
      <anchor>a54355849e1235697747eb0361eb643dd</anchor>
      <arglist>(bool enabled)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSslCertificateVerificationEnabled</name>
      <anchorfile>classWt_1_1Http_1_1Client.html</anchorfile>
      <anchor>ae683fec0c7c53aa39085c3455a9ba519</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSslVerifyFile</name>
      <anchorfile>classWt_1_1Http_1_1Client.html</anchorfile>
      <anchor>ac6b8b35ab2813a22c3c2e2ae7d1f9a35</anchor>
      <arglist>(const std::string &amp;verifyFile)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSslVerifyPath</name>
      <anchorfile>classWt_1_1Http_1_1Client.html</anchorfile>
      <anchor>a7c9fbf7fc9f671519b0652f3bbe38521</anchor>
      <arglist>(const std::string &amp;verifyPath)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get</name>
      <anchorfile>classWt_1_1Http_1_1Client.html</anchorfile>
      <anchor>a1bf5f26230279a99fa1429ab84315458</anchor>
      <arglist>(const std::string &amp;url)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get</name>
      <anchorfile>classWt_1_1Http_1_1Client.html</anchorfile>
      <anchor>ab8b9fe9ff278c5a8cb97125ed3671bb3</anchor>
      <arglist>(const std::string &amp;url, const std::vector&lt; Message::Header &gt; headers)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>head</name>
      <anchorfile>classWt_1_1Http_1_1Client.html</anchorfile>
      <anchor>a28336ba9677e6e3cc6c890f490f2965a</anchor>
      <arglist>(const std::string &amp;url)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>head</name>
      <anchorfile>classWt_1_1Http_1_1Client.html</anchorfile>
      <anchor>a47fb86c27312b38145c90e47e72153af</anchor>
      <arglist>(const std::string &amp;url, const std::vector&lt; Message::Header &gt; headers)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>post</name>
      <anchorfile>classWt_1_1Http_1_1Client.html</anchorfile>
      <anchor>a2b5cad895252510ff1cd0e8e6e31c453</anchor>
      <arglist>(const std::string &amp;url, const Message &amp;message)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>put</name>
      <anchorfile>classWt_1_1Http_1_1Client.html</anchorfile>
      <anchor>a7ec02e13a1436a6ab0eb7707681730e7</anchor>
      <arglist>(const std::string &amp;url, const Message &amp;message)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>deleteRequest</name>
      <anchorfile>classWt_1_1Http_1_1Client.html</anchorfile>
      <anchor>afbed44b0b94e5a5c9cedc793609fc817</anchor>
      <arglist>(const std::string &amp;url, const Message &amp;message)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>patch</name>
      <anchorfile>classWt_1_1Http_1_1Client.html</anchorfile>
      <anchor>a54cd8725e2af030be90c207d19c05493</anchor>
      <arglist>(const std::string &amp;url, const Message &amp;message)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>request</name>
      <anchorfile>classWt_1_1Http_1_1Client.html</anchorfile>
      <anchor>aed50841f6c792d8f08e44225401abab0</anchor>
      <arglist>(Http::Method method, const std::string &amp;url, const Message &amp;message)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>abort</name>
      <anchorfile>classWt_1_1Http_1_1Client.html</anchorfile>
      <anchor>ac2a756dec030880f02bb3411469c737e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Signal&lt; Wt::AsioWrapper::error_code, Message &gt; &amp;</type>
      <name>done</name>
      <anchorfile>classWt_1_1Http_1_1Client.html</anchorfile>
      <anchor>ad288d9121ba7d6f7dd1e29c9ed2a627d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Signal&lt; Message &gt; &amp;</type>
      <name>headersReceived</name>
      <anchorfile>classWt_1_1Http_1_1Client.html</anchorfile>
      <anchor>aad874b0869cb2202f6cd2b79e3956773</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Signal&lt; std::string &gt; &amp;</type>
      <name>bodyDataReceived</name>
      <anchorfile>classWt_1_1Http_1_1Client.html</anchorfile>
      <anchor>a391c75cf826d9918ad4dc200eadd8be3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>followRedirect</name>
      <anchorfile>classWt_1_1Http_1_1Client.html</anchorfile>
      <anchor>a34bc95c42292f3fd7d6e54f86b3781b6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFollowRedirect</name>
      <anchorfile>classWt_1_1Http_1_1Client.html</anchorfile>
      <anchor>abede092c50845c4d6f788dde19dc9898</anchor>
      <arglist>(bool followRedirect)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>maxRedirects</name>
      <anchorfile>classWt_1_1Http_1_1Client.html</anchorfile>
      <anchor>a91e8fb79cd34391b2c6da2b59fe7f223</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMaxRedirects</name>
      <anchorfile>classWt_1_1Http_1_1Client.html</anchorfile>
      <anchor>a269c521c9ff7355b780a3b9056914ab0</anchor>
      <arglist>(int maxRedirects)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>parseUrl</name>
      <anchorfile>classWt_1_1Http_1_1Client.html</anchorfile>
      <anchor>a7855c34bd3d468a53d1d75446a358724</anchor>
      <arglist>(const std::string &amp;url, URL &amp;parsedUrl)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Mail::Client</name>
    <filename>classWt_1_1Mail_1_1Client.html</filename>
    <member kind="function">
      <type></type>
      <name>Client</name>
      <anchorfile>classWt_1_1Mail_1_1Client.html</anchorfile>
      <anchor>a564f5bfd10f9ae1c4c783c9e8a6b54a0</anchor>
      <arglist>(const std::string &amp;selfHost=std::string())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Client</name>
      <anchorfile>classWt_1_1Mail_1_1Client.html</anchorfile>
      <anchor>ab28a973133a812d556e121a5020be932</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>enableAuthentication</name>
      <anchorfile>classWt_1_1Mail_1_1Client.html</anchorfile>
      <anchor>a4861b5d0157663d803a3edcb97f651f4</anchor>
      <arglist>(const std::string &amp;username, const std::string &amp;password, AuthenticationMethod method=AuthenticationMethod::Plain)</arglist>
    </member>
    <member kind="function">
      <type>AuthenticationMethod</type>
      <name>authenticationMethod</name>
      <anchorfile>classWt_1_1Mail_1_1Client.html</anchorfile>
      <anchor>a2d2d96b7dda28a26f26a5c9671570a18</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>authenticationEnabled</name>
      <anchorfile>classWt_1_1Mail_1_1Client.html</anchorfile>
      <anchor>a23f2a1dadb45dc4aaf14db9208a428d0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSslCertificateVerificationEnabled</name>
      <anchorfile>classWt_1_1Mail_1_1Client.html</anchorfile>
      <anchor>af3c7e902b51760be9a29efd75a15fc59</anchor>
      <arglist>(bool enabled)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSslCertificateVerificationEnabled</name>
      <anchorfile>classWt_1_1Mail_1_1Client.html</anchorfile>
      <anchor>af1adb5000a02917fa701e51e72414789</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTransportEncryption</name>
      <anchorfile>classWt_1_1Mail_1_1Client.html</anchorfile>
      <anchor>a170288f392a84a1e4e560422843c9a74</anchor>
      <arglist>(TransportEncryption method)</arglist>
    </member>
    <member kind="function">
      <type>TransportEncryption</type>
      <name>transportEncryption</name>
      <anchorfile>classWt_1_1Mail_1_1Client.html</anchorfile>
      <anchor>adb629ce1fa076187de2883c72aafbea3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>connect</name>
      <anchorfile>classWt_1_1Mail_1_1Client.html</anchorfile>
      <anchor>a25527078ad8fdc02707f09623da61c85</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>connect</name>
      <anchorfile>classWt_1_1Mail_1_1Client.html</anchorfile>
      <anchor>af7bf43e793d265034c6cb343636b4024</anchor>
      <arglist>(const std::string &amp;smtpHost, int smtpPort=25)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>disconnect</name>
      <anchorfile>classWt_1_1Mail_1_1Client.html</anchorfile>
      <anchor>aa48da8e0c3e301da9d2ca8e566ea83f8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>send</name>
      <anchorfile>classWt_1_1Mail_1_1Client.html</anchorfile>
      <anchor>a958089e2b169f9baed3107b40b958bb9</anchor>
      <arglist>(const Message &amp;message)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Dbo::collection</name>
    <filename>classWt_1_1Dbo_1_1collection.html</filename>
    <templarg></templarg>
    <class kind="class">Wt::Dbo::collection::const_iterator</class>
    <class kind="class">Wt::Dbo::collection::iterator</class>
    <member kind="typedef">
      <type>C</type>
      <name>value_type</name>
      <anchorfile>classWt_1_1Dbo_1_1collection.html</anchorfile>
      <anchor>a49af50adc6d43f473f2bb45e57a77e0d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>collection</name>
      <anchorfile>classWt_1_1Dbo_1_1collection.html</anchorfile>
      <anchor>affe4c75e050ce2a5980a10498bc5fccb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>collection</name>
      <anchorfile>classWt_1_1Dbo_1_1collection.html</anchorfile>
      <anchor>aecf456e81d943c9d2e0aaf9d001b5d7d</anchor>
      <arglist>(const collection&lt; C &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>collection</name>
      <anchorfile>classWt_1_1Dbo_1_1collection.html</anchorfile>
      <anchor>a0d0268c153cad76755af11337262aa85</anchor>
      <arglist>(collection&lt; C &gt; &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>collection&lt; C &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1Dbo_1_1collection.html</anchorfile>
      <anchor>a678c22774766a86e65891fa9ecb1713e</anchor>
      <arglist>(const collection&lt; C &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>collection&lt; C &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1Dbo_1_1collection.html</anchorfile>
      <anchor>a94edf10c48924057e5cc9d40bdcdb45f</anchor>
      <arglist>(collection&lt; C &gt; &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~collection</name>
      <anchorfile>classWt_1_1Dbo_1_1collection.html</anchorfile>
      <anchor>abd01cbfac7573fafa8cc69bf58cd8cd4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>begin</name>
      <anchorfile>classWt_1_1Dbo_1_1collection.html</anchorfile>
      <anchor>a34a2c5408e6df76ddceca97f391e49fa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>end</name>
      <anchorfile>classWt_1_1Dbo_1_1collection.html</anchorfile>
      <anchor>a4931ae96b15c78394e9e1abdc1bfd462</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>begin</name>
      <anchorfile>classWt_1_1Dbo_1_1collection.html</anchorfile>
      <anchor>a21ae6a6da232c3283d20c120b4115cc8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>end</name>
      <anchorfile>classWt_1_1Dbo_1_1collection.html</anchorfile>
      <anchor>a8377b36c601e58aeb5ada686d3708797</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>C</type>
      <name>front</name>
      <anchorfile>classWt_1_1Dbo_1_1collection.html</anchorfile>
      <anchor>a7f0de078b2b0f0927f3f61ce9708b598</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>size_type</type>
      <name>size</name>
      <anchorfile>classWt_1_1Dbo_1_1collection.html</anchorfile>
      <anchor>a7ecc225c15dafe95aef5cb7cef8f9608</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>empty</name>
      <anchorfile>classWt_1_1Dbo_1_1collection.html</anchorfile>
      <anchor>a0608d6931cf97831c4798bfbb25c34cd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insert</name>
      <anchorfile>classWt_1_1Dbo_1_1collection.html</anchorfile>
      <anchor>a7b497add0d6ac2b1e098820f9ee64c93</anchor>
      <arglist>(C c)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>erase</name>
      <anchorfile>classWt_1_1Dbo_1_1collection.html</anchorfile>
      <anchor>a35d046e991b3fec59af85d501fd49e51</anchor>
      <arglist>(C c)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classWt_1_1Dbo_1_1collection.html</anchorfile>
      <anchor>af153d38d1b3ce7c0dcb6ad68d52e8e9b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>count</name>
      <anchorfile>classWt_1_1Dbo_1_1collection.html</anchorfile>
      <anchor>a527909301213c80c855b0249a4652729</anchor>
      <arglist>(C c) const</arglist>
    </member>
    <member kind="function">
      <type>Session *</type>
      <name>session</name>
      <anchorfile>classWt_1_1Dbo_1_1collection.html</anchorfile>
      <anchor>a2726da873bd60becfa488f14f83eb546</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Query&lt; C, DynamicBinding &gt;</type>
      <name>find</name>
      <anchorfile>classWt_1_1Dbo_1_1collection.html</anchorfile>
      <anchor>abd04a49cd9bfff5aaf49adf16dad100e</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>collection&lt; Wt::Dbo::ptr&lt; AuthIdentityType &gt; &gt;</name>
    <filename>classWt_1_1Dbo_1_1collection.html</filename>
    <member kind="typedef">
      <type>Wt::Dbo::ptr&lt; AuthIdentityType &gt;</type>
      <name>value_type</name>
      <anchorfile>classWt_1_1Dbo_1_1collection.html</anchorfile>
      <anchor>a49af50adc6d43f473f2bb45e57a77e0d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>collection</name>
      <anchorfile>classWt_1_1Dbo_1_1collection.html</anchorfile>
      <anchor>affe4c75e050ce2a5980a10498bc5fccb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>collection</name>
      <anchorfile>classWt_1_1Dbo_1_1collection.html</anchorfile>
      <anchor>aecf456e81d943c9d2e0aaf9d001b5d7d</anchor>
      <arglist>(const collection&lt; Wt::Dbo::ptr&lt; AuthIdentityType &gt; &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>collection</name>
      <anchorfile>classWt_1_1Dbo_1_1collection.html</anchorfile>
      <anchor>a0d0268c153cad76755af11337262aa85</anchor>
      <arglist>(collection&lt; Wt::Dbo::ptr&lt; AuthIdentityType &gt; &gt; &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>collection&lt; Wt::Dbo::ptr&lt; AuthIdentityType &gt; &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1Dbo_1_1collection.html</anchorfile>
      <anchor>a678c22774766a86e65891fa9ecb1713e</anchor>
      <arglist>(const collection&lt; Wt::Dbo::ptr&lt; AuthIdentityType &gt; &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>collection&lt; Wt::Dbo::ptr&lt; AuthIdentityType &gt; &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1Dbo_1_1collection.html</anchorfile>
      <anchor>a94edf10c48924057e5cc9d40bdcdb45f</anchor>
      <arglist>(collection&lt; Wt::Dbo::ptr&lt; AuthIdentityType &gt; &gt; &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~collection</name>
      <anchorfile>classWt_1_1Dbo_1_1collection.html</anchorfile>
      <anchor>abd01cbfac7573fafa8cc69bf58cd8cd4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>begin</name>
      <anchorfile>classWt_1_1Dbo_1_1collection.html</anchorfile>
      <anchor>a34a2c5408e6df76ddceca97f391e49fa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>begin</name>
      <anchorfile>classWt_1_1Dbo_1_1collection.html</anchorfile>
      <anchor>a21ae6a6da232c3283d20c120b4115cc8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>end</name>
      <anchorfile>classWt_1_1Dbo_1_1collection.html</anchorfile>
      <anchor>a4931ae96b15c78394e9e1abdc1bfd462</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>end</name>
      <anchorfile>classWt_1_1Dbo_1_1collection.html</anchorfile>
      <anchor>a8377b36c601e58aeb5ada686d3708797</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Wt::Dbo::ptr&lt; AuthIdentityType &gt;</type>
      <name>front</name>
      <anchorfile>classWt_1_1Dbo_1_1collection.html</anchorfile>
      <anchor>a7f0de078b2b0f0927f3f61ce9708b598</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>size_type</type>
      <name>size</name>
      <anchorfile>classWt_1_1Dbo_1_1collection.html</anchorfile>
      <anchor>a7ecc225c15dafe95aef5cb7cef8f9608</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>empty</name>
      <anchorfile>classWt_1_1Dbo_1_1collection.html</anchorfile>
      <anchor>a0608d6931cf97831c4798bfbb25c34cd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insert</name>
      <anchorfile>classWt_1_1Dbo_1_1collection.html</anchorfile>
      <anchor>a7b497add0d6ac2b1e098820f9ee64c93</anchor>
      <arglist>(Wt::Dbo::ptr&lt; AuthIdentityType &gt; c)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>erase</name>
      <anchorfile>classWt_1_1Dbo_1_1collection.html</anchorfile>
      <anchor>a35d046e991b3fec59af85d501fd49e51</anchor>
      <arglist>(Wt::Dbo::ptr&lt; AuthIdentityType &gt; c)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classWt_1_1Dbo_1_1collection.html</anchorfile>
      <anchor>af153d38d1b3ce7c0dcb6ad68d52e8e9b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>count</name>
      <anchorfile>classWt_1_1Dbo_1_1collection.html</anchorfile>
      <anchor>a527909301213c80c855b0249a4652729</anchor>
      <arglist>(Wt::Dbo::ptr&lt; AuthIdentityType &gt; c) const</arglist>
    </member>
    <member kind="function">
      <type>Session *</type>
      <name>session</name>
      <anchorfile>classWt_1_1Dbo_1_1collection.html</anchorfile>
      <anchor>a2726da873bd60becfa488f14f83eb546</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Query&lt; Wt::Dbo::ptr&lt; AuthIdentityType &gt;, DynamicBinding &gt;</type>
      <name>find</name>
      <anchorfile>classWt_1_1Dbo_1_1collection.html</anchorfile>
      <anchor>abd04a49cd9bfff5aaf49adf16dad100e</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>collection&lt; Wt::Dbo::ptr&lt; AuthTokenType &gt; &gt;</name>
    <filename>classWt_1_1Dbo_1_1collection.html</filename>
    <member kind="typedef">
      <type>Wt::Dbo::ptr&lt; AuthTokenType &gt;</type>
      <name>value_type</name>
      <anchorfile>classWt_1_1Dbo_1_1collection.html</anchorfile>
      <anchor>a49af50adc6d43f473f2bb45e57a77e0d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>collection</name>
      <anchorfile>classWt_1_1Dbo_1_1collection.html</anchorfile>
      <anchor>affe4c75e050ce2a5980a10498bc5fccb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>collection</name>
      <anchorfile>classWt_1_1Dbo_1_1collection.html</anchorfile>
      <anchor>aecf456e81d943c9d2e0aaf9d001b5d7d</anchor>
      <arglist>(const collection&lt; Wt::Dbo::ptr&lt; AuthTokenType &gt; &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>collection</name>
      <anchorfile>classWt_1_1Dbo_1_1collection.html</anchorfile>
      <anchor>a0d0268c153cad76755af11337262aa85</anchor>
      <arglist>(collection&lt; Wt::Dbo::ptr&lt; AuthTokenType &gt; &gt; &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>collection&lt; Wt::Dbo::ptr&lt; AuthTokenType &gt; &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1Dbo_1_1collection.html</anchorfile>
      <anchor>a678c22774766a86e65891fa9ecb1713e</anchor>
      <arglist>(const collection&lt; Wt::Dbo::ptr&lt; AuthTokenType &gt; &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>collection&lt; Wt::Dbo::ptr&lt; AuthTokenType &gt; &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1Dbo_1_1collection.html</anchorfile>
      <anchor>a94edf10c48924057e5cc9d40bdcdb45f</anchor>
      <arglist>(collection&lt; Wt::Dbo::ptr&lt; AuthTokenType &gt; &gt; &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~collection</name>
      <anchorfile>classWt_1_1Dbo_1_1collection.html</anchorfile>
      <anchor>abd01cbfac7573fafa8cc69bf58cd8cd4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>begin</name>
      <anchorfile>classWt_1_1Dbo_1_1collection.html</anchorfile>
      <anchor>a34a2c5408e6df76ddceca97f391e49fa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>begin</name>
      <anchorfile>classWt_1_1Dbo_1_1collection.html</anchorfile>
      <anchor>a21ae6a6da232c3283d20c120b4115cc8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>end</name>
      <anchorfile>classWt_1_1Dbo_1_1collection.html</anchorfile>
      <anchor>a4931ae96b15c78394e9e1abdc1bfd462</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>end</name>
      <anchorfile>classWt_1_1Dbo_1_1collection.html</anchorfile>
      <anchor>a8377b36c601e58aeb5ada686d3708797</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Wt::Dbo::ptr&lt; AuthTokenType &gt;</type>
      <name>front</name>
      <anchorfile>classWt_1_1Dbo_1_1collection.html</anchorfile>
      <anchor>a7f0de078b2b0f0927f3f61ce9708b598</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>size_type</type>
      <name>size</name>
      <anchorfile>classWt_1_1Dbo_1_1collection.html</anchorfile>
      <anchor>a7ecc225c15dafe95aef5cb7cef8f9608</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>empty</name>
      <anchorfile>classWt_1_1Dbo_1_1collection.html</anchorfile>
      <anchor>a0608d6931cf97831c4798bfbb25c34cd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insert</name>
      <anchorfile>classWt_1_1Dbo_1_1collection.html</anchorfile>
      <anchor>a7b497add0d6ac2b1e098820f9ee64c93</anchor>
      <arglist>(Wt::Dbo::ptr&lt; AuthTokenType &gt; c)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>erase</name>
      <anchorfile>classWt_1_1Dbo_1_1collection.html</anchorfile>
      <anchor>a35d046e991b3fec59af85d501fd49e51</anchor>
      <arglist>(Wt::Dbo::ptr&lt; AuthTokenType &gt; c)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classWt_1_1Dbo_1_1collection.html</anchorfile>
      <anchor>af153d38d1b3ce7c0dcb6ad68d52e8e9b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>count</name>
      <anchorfile>classWt_1_1Dbo_1_1collection.html</anchorfile>
      <anchor>a527909301213c80c855b0249a4652729</anchor>
      <arglist>(Wt::Dbo::ptr&lt; AuthTokenType &gt; c) const</arglist>
    </member>
    <member kind="function">
      <type>Session *</type>
      <name>session</name>
      <anchorfile>classWt_1_1Dbo_1_1collection.html</anchorfile>
      <anchor>a2726da873bd60becfa488f14f83eb546</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Query&lt; Wt::Dbo::ptr&lt; AuthTokenType &gt;, DynamicBinding &gt;</type>
      <name>find</name>
      <anchorfile>classWt_1_1Dbo_1_1collection.html</anchorfile>
      <anchor>abd04a49cd9bfff5aaf49adf16dad100e</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>collection&lt; Wt::Dbo::ptr&lt; C &gt; &gt;</name>
    <filename>classWt_1_1Dbo_1_1collection.html</filename>
    <member kind="typedef">
      <type>Wt::Dbo::ptr&lt; C &gt;</type>
      <name>value_type</name>
      <anchorfile>classWt_1_1Dbo_1_1collection.html</anchorfile>
      <anchor>a49af50adc6d43f473f2bb45e57a77e0d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>collection</name>
      <anchorfile>classWt_1_1Dbo_1_1collection.html</anchorfile>
      <anchor>affe4c75e050ce2a5980a10498bc5fccb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>collection</name>
      <anchorfile>classWt_1_1Dbo_1_1collection.html</anchorfile>
      <anchor>aecf456e81d943c9d2e0aaf9d001b5d7d</anchor>
      <arglist>(const collection&lt; Wt::Dbo::ptr&lt; C &gt; &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>collection</name>
      <anchorfile>classWt_1_1Dbo_1_1collection.html</anchorfile>
      <anchor>a0d0268c153cad76755af11337262aa85</anchor>
      <arglist>(collection&lt; Wt::Dbo::ptr&lt; C &gt; &gt; &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>collection&lt; Wt::Dbo::ptr&lt; C &gt; &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1Dbo_1_1collection.html</anchorfile>
      <anchor>a678c22774766a86e65891fa9ecb1713e</anchor>
      <arglist>(const collection&lt; Wt::Dbo::ptr&lt; C &gt; &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>collection&lt; Wt::Dbo::ptr&lt; C &gt; &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1Dbo_1_1collection.html</anchorfile>
      <anchor>a94edf10c48924057e5cc9d40bdcdb45f</anchor>
      <arglist>(collection&lt; Wt::Dbo::ptr&lt; C &gt; &gt; &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~collection</name>
      <anchorfile>classWt_1_1Dbo_1_1collection.html</anchorfile>
      <anchor>abd01cbfac7573fafa8cc69bf58cd8cd4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>begin</name>
      <anchorfile>classWt_1_1Dbo_1_1collection.html</anchorfile>
      <anchor>a34a2c5408e6df76ddceca97f391e49fa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>begin</name>
      <anchorfile>classWt_1_1Dbo_1_1collection.html</anchorfile>
      <anchor>a21ae6a6da232c3283d20c120b4115cc8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>end</name>
      <anchorfile>classWt_1_1Dbo_1_1collection.html</anchorfile>
      <anchor>a4931ae96b15c78394e9e1abdc1bfd462</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>end</name>
      <anchorfile>classWt_1_1Dbo_1_1collection.html</anchorfile>
      <anchor>a8377b36c601e58aeb5ada686d3708797</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Wt::Dbo::ptr&lt; C &gt;</type>
      <name>front</name>
      <anchorfile>classWt_1_1Dbo_1_1collection.html</anchorfile>
      <anchor>a7f0de078b2b0f0927f3f61ce9708b598</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>size_type</type>
      <name>size</name>
      <anchorfile>classWt_1_1Dbo_1_1collection.html</anchorfile>
      <anchor>a7ecc225c15dafe95aef5cb7cef8f9608</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>empty</name>
      <anchorfile>classWt_1_1Dbo_1_1collection.html</anchorfile>
      <anchor>a0608d6931cf97831c4798bfbb25c34cd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insert</name>
      <anchorfile>classWt_1_1Dbo_1_1collection.html</anchorfile>
      <anchor>a7b497add0d6ac2b1e098820f9ee64c93</anchor>
      <arglist>(Wt::Dbo::ptr&lt; C &gt; c)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>erase</name>
      <anchorfile>classWt_1_1Dbo_1_1collection.html</anchorfile>
      <anchor>a35d046e991b3fec59af85d501fd49e51</anchor>
      <arglist>(Wt::Dbo::ptr&lt; C &gt; c)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classWt_1_1Dbo_1_1collection.html</anchorfile>
      <anchor>af153d38d1b3ce7c0dcb6ad68d52e8e9b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>count</name>
      <anchorfile>classWt_1_1Dbo_1_1collection.html</anchorfile>
      <anchor>a527909301213c80c855b0249a4652729</anchor>
      <arglist>(Wt::Dbo::ptr&lt; C &gt; c) const</arglist>
    </member>
    <member kind="function">
      <type>Session *</type>
      <name>session</name>
      <anchorfile>classWt_1_1Dbo_1_1collection.html</anchorfile>
      <anchor>a2726da873bd60becfa488f14f83eb546</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Query&lt; Wt::Dbo::ptr&lt; C &gt;, DynamicBinding &gt;</type>
      <name>find</name>
      <anchorfile>classWt_1_1Dbo_1_1collection.html</anchorfile>
      <anchor>abd04a49cd9bfff5aaf49adf16dad100e</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>collection&lt; Wt::Dbo::ptr&lt; MutC &gt; &gt;</name>
    <filename>classWt_1_1Dbo_1_1collection.html</filename>
    <member kind="typedef">
      <type>Wt::Dbo::ptr&lt; MutC &gt;</type>
      <name>value_type</name>
      <anchorfile>classWt_1_1Dbo_1_1collection.html</anchorfile>
      <anchor>a49af50adc6d43f473f2bb45e57a77e0d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>collection</name>
      <anchorfile>classWt_1_1Dbo_1_1collection.html</anchorfile>
      <anchor>affe4c75e050ce2a5980a10498bc5fccb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>collection</name>
      <anchorfile>classWt_1_1Dbo_1_1collection.html</anchorfile>
      <anchor>aecf456e81d943c9d2e0aaf9d001b5d7d</anchor>
      <arglist>(const collection&lt; Wt::Dbo::ptr&lt; MutC &gt; &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>collection</name>
      <anchorfile>classWt_1_1Dbo_1_1collection.html</anchorfile>
      <anchor>a0d0268c153cad76755af11337262aa85</anchor>
      <arglist>(collection&lt; Wt::Dbo::ptr&lt; MutC &gt; &gt; &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>collection&lt; Wt::Dbo::ptr&lt; MutC &gt; &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1Dbo_1_1collection.html</anchorfile>
      <anchor>a678c22774766a86e65891fa9ecb1713e</anchor>
      <arglist>(const collection&lt; Wt::Dbo::ptr&lt; MutC &gt; &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>collection&lt; Wt::Dbo::ptr&lt; MutC &gt; &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1Dbo_1_1collection.html</anchorfile>
      <anchor>a94edf10c48924057e5cc9d40bdcdb45f</anchor>
      <arglist>(collection&lt; Wt::Dbo::ptr&lt; MutC &gt; &gt; &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~collection</name>
      <anchorfile>classWt_1_1Dbo_1_1collection.html</anchorfile>
      <anchor>abd01cbfac7573fafa8cc69bf58cd8cd4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>begin</name>
      <anchorfile>classWt_1_1Dbo_1_1collection.html</anchorfile>
      <anchor>a34a2c5408e6df76ddceca97f391e49fa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>begin</name>
      <anchorfile>classWt_1_1Dbo_1_1collection.html</anchorfile>
      <anchor>a21ae6a6da232c3283d20c120b4115cc8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>end</name>
      <anchorfile>classWt_1_1Dbo_1_1collection.html</anchorfile>
      <anchor>a4931ae96b15c78394e9e1abdc1bfd462</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>end</name>
      <anchorfile>classWt_1_1Dbo_1_1collection.html</anchorfile>
      <anchor>a8377b36c601e58aeb5ada686d3708797</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Wt::Dbo::ptr&lt; MutC &gt;</type>
      <name>front</name>
      <anchorfile>classWt_1_1Dbo_1_1collection.html</anchorfile>
      <anchor>a7f0de078b2b0f0927f3f61ce9708b598</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>size_type</type>
      <name>size</name>
      <anchorfile>classWt_1_1Dbo_1_1collection.html</anchorfile>
      <anchor>a7ecc225c15dafe95aef5cb7cef8f9608</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>empty</name>
      <anchorfile>classWt_1_1Dbo_1_1collection.html</anchorfile>
      <anchor>a0608d6931cf97831c4798bfbb25c34cd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insert</name>
      <anchorfile>classWt_1_1Dbo_1_1collection.html</anchorfile>
      <anchor>a7b497add0d6ac2b1e098820f9ee64c93</anchor>
      <arglist>(Wt::Dbo::ptr&lt; MutC &gt; c)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>erase</name>
      <anchorfile>classWt_1_1Dbo_1_1collection.html</anchorfile>
      <anchor>a35d046e991b3fec59af85d501fd49e51</anchor>
      <arglist>(Wt::Dbo::ptr&lt; MutC &gt; c)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classWt_1_1Dbo_1_1collection.html</anchorfile>
      <anchor>af153d38d1b3ce7c0dcb6ad68d52e8e9b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>count</name>
      <anchorfile>classWt_1_1Dbo_1_1collection.html</anchorfile>
      <anchor>a527909301213c80c855b0249a4652729</anchor>
      <arglist>(Wt::Dbo::ptr&lt; MutC &gt; c) const</arglist>
    </member>
    <member kind="function">
      <type>Session *</type>
      <name>session</name>
      <anchorfile>classWt_1_1Dbo_1_1collection.html</anchorfile>
      <anchor>a2726da873bd60becfa488f14f83eb546</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Query&lt; Wt::Dbo::ptr&lt; MutC &gt;, DynamicBinding &gt;</type>
      <name>find</name>
      <anchorfile>classWt_1_1Dbo_1_1collection.html</anchorfile>
      <anchor>abd04a49cd9bfff5aaf49adf16dad100e</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WGradient::ColorStop</name>
    <filename>classWt_1_1WGradient_1_1ColorStop.html</filename>
    <member kind="function">
      <type></type>
      <name>ColorStop</name>
      <anchorfile>classWt_1_1WGradient_1_1ColorStop.html</anchorfile>
      <anchor>a0f15323be8781e7913efb0e80fdabcfa</anchor>
      <arglist>(double position, const WColor &amp;color)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>position</name>
      <anchorfile>classWt_1_1WGradient_1_1ColorStop.html</anchorfile>
      <anchor>aed8a517a2c743be24a9868f5e6def311</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const WColor &amp;</type>
      <name>color</name>
      <anchorfile>classWt_1_1WGradient_1_1ColorStop.html</anchorfile>
      <anchor>a1162e4fda697a1b559e138ecf8dd2c1c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classWt_1_1WGradient_1_1ColorStop.html</anchorfile>
      <anchor>a94a22f60c52de71b39f7dc08e333c0c3</anchor>
      <arglist>(const ColorStop &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classWt_1_1WGradient_1_1ColorStop.html</anchorfile>
      <anchor>a23b3b57e0f5e7f249f72255d1c441e9f</anchor>
      <arglist>(const ColorStop &amp;other) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Dbo::collection::const_iterator</name>
    <filename>classWt_1_1Dbo_1_1collection_1_1const__iterator.html</filename>
    <member kind="function">
      <type></type>
      <name>const_iterator</name>
      <anchorfile>classWt_1_1Dbo_1_1collection_1_1const__iterator.html</anchorfile>
      <anchor>a6c93b191d6e60994018c6db50a6927e9</anchor>
      <arglist>(const const_iterator &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>const_iterator</name>
      <anchorfile>classWt_1_1Dbo_1_1collection_1_1const__iterator.html</anchorfile>
      <anchor>ae7ef6ea9eeeeedd4c9d98da200c069e8</anchor>
      <arglist>(const typename collection&lt; C &gt;::iterator &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>const_iterator &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1Dbo_1_1collection_1_1const__iterator.html</anchorfile>
      <anchor>af81865bea2595d6d8ce23d5f9f2f15e9</anchor>
      <arglist>(const const_iterator &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>const_iterator &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1Dbo_1_1collection_1_1const__iterator.html</anchorfile>
      <anchor>a3a3caae866c474c4ab814a0d005a23e8</anchor>
      <arglist>(const iterator &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>C</type>
      <name>operator*</name>
      <anchorfile>classWt_1_1Dbo_1_1collection_1_1const__iterator.html</anchorfile>
      <anchor>a67ecc97837ab6205844bdef88c92f79c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const C *</type>
      <name>operator-&gt;</name>
      <anchorfile>classWt_1_1Dbo_1_1collection_1_1const__iterator.html</anchorfile>
      <anchor>ae79babb91d587a163c1e0645dfefd6c3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classWt_1_1Dbo_1_1collection_1_1const__iterator.html</anchorfile>
      <anchor>a795fa7d7b43cae5b9b8d7f54b4eedcdb</anchor>
      <arglist>(const const_iterator &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classWt_1_1Dbo_1_1collection_1_1const__iterator.html</anchorfile>
      <anchor>a92b39adc31e25effc961e16bdea03540</anchor>
      <arglist>(const const_iterator &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>const_iterator &amp;</type>
      <name>operator++</name>
      <anchorfile>classWt_1_1Dbo_1_1collection_1_1const__iterator.html</anchorfile>
      <anchor>a9bbb34e3847103f449fe11298372670b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>operator++</name>
      <anchorfile>classWt_1_1Dbo_1_1collection_1_1const__iterator.html</anchorfile>
      <anchor>a05b9118effe01b8ec5ec4778578060de</anchor>
      <arglist>(int)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WGoogleMap::Coordinate</name>
    <filename>classWt_1_1WGoogleMap_1_1Coordinate.html</filename>
    <member kind="function">
      <type></type>
      <name>Coordinate</name>
      <anchorfile>classWt_1_1WGoogleMap_1_1Coordinate.html</anchorfile>
      <anchor>a4c9df44997cafefdbab28fe680901930</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Coordinate</name>
      <anchorfile>classWt_1_1WGoogleMap_1_1Coordinate.html</anchorfile>
      <anchor>abbb42d1557e16098bbae3da50d99a9d3</anchor>
      <arglist>(double latitude, double longitude)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLatitude</name>
      <anchorfile>classWt_1_1WGoogleMap_1_1Coordinate.html</anchorfile>
      <anchor>aedbf38dfae561e239c102e482f0780c6</anchor>
      <arglist>(double latitude)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLongitude</name>
      <anchorfile>classWt_1_1WGoogleMap_1_1Coordinate.html</anchorfile>
      <anchor>ab3c170ef039993e331448f2ea5d63daf</anchor>
      <arglist>(double longitude)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>latitude</name>
      <anchorfile>classWt_1_1WGoogleMap_1_1Coordinate.html</anchorfile>
      <anchor>a12649dcbc88f3386efea03755a2d190f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>longitude</name>
      <anchorfile>classWt_1_1WGoogleMap_1_1Coordinate.html</anchorfile>
      <anchor>a4a88690fa2e79c59ca596d427ebe04e4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>distanceTo</name>
      <anchorfile>classWt_1_1WGoogleMap_1_1Coordinate.html</anchorfile>
      <anchor>a5fe404d0f1b53d36b0f5ae2b1e5f47ed</anchor>
      <arglist>(const Coordinate &amp;rhs) const</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; double, double &gt;</type>
      <name>operator()</name>
      <anchorfile>classWt_1_1WGoogleMap_1_1Coordinate.html</anchorfile>
      <anchor>ac47f3f4af2d2b81b0a12b66eacd30f64</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WLeafletMap::Coordinate</name>
    <filename>classWt_1_1WLeafletMap_1_1Coordinate.html</filename>
    <member kind="function">
      <type></type>
      <name>Coordinate</name>
      <anchorfile>classWt_1_1WLeafletMap_1_1Coordinate.html</anchorfile>
      <anchor>a553552a976fac7fe403954f1d16c472c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Coordinate</name>
      <anchorfile>classWt_1_1WLeafletMap_1_1Coordinate.html</anchorfile>
      <anchor>a829319a8e2e099ff7eebda0ce4d5e49a</anchor>
      <arglist>(double latitude, double longitude)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLatitude</name>
      <anchorfile>classWt_1_1WLeafletMap_1_1Coordinate.html</anchorfile>
      <anchor>a6d0316a04b95407914bccc4910b99a57</anchor>
      <arglist>(double latitude)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>latitude</name>
      <anchorfile>classWt_1_1WLeafletMap_1_1Coordinate.html</anchorfile>
      <anchor>a6cbae556e79381535c34613338af48ab</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLongitude</name>
      <anchorfile>classWt_1_1WLeafletMap_1_1Coordinate.html</anchorfile>
      <anchor>adda1f476c1bf9ab45e70229cd3d61db7</anchor>
      <arglist>(double longitude)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>longitude</name>
      <anchorfile>classWt_1_1WLeafletMap_1_1Coordinate.html</anchorfile>
      <anchor>a39554366dd4f33999132c29a2186c020</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classWt_1_1WLeafletMap_1_1Coordinate.html</anchorfile>
      <anchor>a3aa7af03618f62a320bbd8ee31c788d0</anchor>
      <arglist>(const Coordinate &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classWt_1_1WLeafletMap_1_1Coordinate.html</anchorfile>
      <anchor>af90f35cb2e6029269866948bdc321903</anchor>
      <arglist>(const Coordinate &amp;other) const</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Wt::Coordinates</name>
    <filename>structWt_1_1Coordinates.html</filename>
    <member kind="function">
      <type></type>
      <name>Coordinates</name>
      <anchorfile>structWt_1_1Coordinates.html</anchorfile>
      <anchor>a416b99925a4a45bde5f64024bf1a60eb</anchor>
      <arglist>(int X, int Y)</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>x</name>
      <anchorfile>structWt_1_1Coordinates.html</anchorfile>
      <anchor>ac815a7cef6b961e1bc2a0c8dfb4e203c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>y</name>
      <anchorfile>structWt_1_1Coordinates.html</anchorfile>
      <anchor>a8a66b0bce898256585044d213758b399</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Chart::CurveLabel</name>
    <filename>classWt_1_1Chart_1_1CurveLabel.html</filename>
    <member kind="function">
      <type></type>
      <name>CurveLabel</name>
      <anchorfile>classWt_1_1Chart_1_1CurveLabel.html</anchorfile>
      <anchor>a84a4616394254189f9cf78ac60252a5f</anchor>
      <arglist>(const WDataSeries &amp;series, const WPointF &amp;point, const WString &amp;label)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CurveLabel</name>
      <anchorfile>classWt_1_1Chart_1_1CurveLabel.html</anchorfile>
      <anchor>a54029d564c03ca7c4b8e01d6632b750c</anchor>
      <arglist>(const WDataSeries &amp;series, const cpp17::any &amp;x, const cpp17::any &amp;y, const WString &amp;label)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSeries</name>
      <anchorfile>classWt_1_1Chart_1_1CurveLabel.html</anchorfile>
      <anchor>a774981e4c801a00b9b82f9cc0bf46f7d</anchor>
      <arglist>(const WDataSeries &amp;series)</arglist>
    </member>
    <member kind="function">
      <type>const WDataSeries &amp;</type>
      <name>series</name>
      <anchorfile>classWt_1_1Chart_1_1CurveLabel.html</anchorfile>
      <anchor>adc8828ce35e73358da70ce4685947d90</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPoint</name>
      <anchorfile>classWt_1_1Chart_1_1CurveLabel.html</anchorfile>
      <anchor>a08447ab6a5b19075d4ad7ebc7265fe91</anchor>
      <arglist>(const WPointF &amp;point)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPoint</name>
      <anchorfile>classWt_1_1Chart_1_1CurveLabel.html</anchorfile>
      <anchor>abeb184e3566a55b55146d8b3a1f932a4</anchor>
      <arglist>(const cpp17::any &amp;x, const cpp17::any &amp;y)</arglist>
    </member>
    <member kind="function">
      <type>const WPointF</type>
      <name>point</name>
      <anchorfile>classWt_1_1Chart_1_1CurveLabel.html</anchorfile>
      <anchor>a2f5d3c89bfc0bdcf87d793b9ee4f619e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const cpp17::any &amp;</type>
      <name>x</name>
      <anchorfile>classWt_1_1Chart_1_1CurveLabel.html</anchorfile>
      <anchor>a961103c0ac5f250e7188d850a0eb4579</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const cpp17::any &amp;</type>
      <name>y</name>
      <anchorfile>classWt_1_1Chart_1_1CurveLabel.html</anchorfile>
      <anchor>a75e405bebc5b07a00881deb989fedd71</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLabel</name>
      <anchorfile>classWt_1_1Chart_1_1CurveLabel.html</anchorfile>
      <anchor>ab7138a97baa1276aeb0191d5c0d80c81</anchor>
      <arglist>(const WString &amp;label)</arglist>
    </member>
    <member kind="function">
      <type>const WString &amp;</type>
      <name>label</name>
      <anchorfile>classWt_1_1Chart_1_1CurveLabel.html</anchorfile>
      <anchor>a9704e451849b21b9dd5c37b44b3bf238</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setOffset</name>
      <anchorfile>classWt_1_1Chart_1_1CurveLabel.html</anchorfile>
      <anchor>a8d92b4dc700b1903a7bbec541d739d1b</anchor>
      <arglist>(const WPointF &amp;offset)</arglist>
    </member>
    <member kind="function">
      <type>const WPointF &amp;</type>
      <name>offset</name>
      <anchorfile>classWt_1_1Chart_1_1CurveLabel.html</anchorfile>
      <anchor>a8fd1c4644032fb4deba1e17751737b11</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setWidth</name>
      <anchorfile>classWt_1_1Chart_1_1CurveLabel.html</anchorfile>
      <anchor>a096aa6d006242cee2db4308ce93f5a61</anchor>
      <arglist>(int width)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>width</name>
      <anchorfile>classWt_1_1Chart_1_1CurveLabel.html</anchorfile>
      <anchor>a16a81a58ab3eb4a54a8eda1866d2141d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLinePen</name>
      <anchorfile>classWt_1_1Chart_1_1CurveLabel.html</anchorfile>
      <anchor>a4ec424d27e3ea69139ed93cb92b16de7</anchor>
      <arglist>(const WPen &amp;pen)</arglist>
    </member>
    <member kind="function">
      <type>const WPen &amp;</type>
      <name>linePen</name>
      <anchorfile>classWt_1_1Chart_1_1CurveLabel.html</anchorfile>
      <anchor>ae6c2d56084cc1c9c6b74cb3c80c31b3e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTextPen</name>
      <anchorfile>classWt_1_1Chart_1_1CurveLabel.html</anchorfile>
      <anchor>a670ace457e5f4a62d03c628cf079f6a3</anchor>
      <arglist>(const WPen &amp;pen)</arglist>
    </member>
    <member kind="function">
      <type>const WPen &amp;</type>
      <name>textPen</name>
      <anchorfile>classWt_1_1Chart_1_1CurveLabel.html</anchorfile>
      <anchor>a98aadd477f53d91816ff4ca5b9df7a2a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBoxBrush</name>
      <anchorfile>classWt_1_1Chart_1_1CurveLabel.html</anchorfile>
      <anchor>a0a8bbb3b7d3d89e61a88098ca8cbe2fb</anchor>
      <arglist>(const WBrush &amp;brush)</arglist>
    </member>
    <member kind="function">
      <type>const WBrush &amp;</type>
      <name>boxBrush</name>
      <anchorfile>classWt_1_1Chart_1_1CurveLabel.html</anchorfile>
      <anchor>a123e83a0e50d518d7953e73535e0839a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMarkerBrush</name>
      <anchorfile>classWt_1_1Chart_1_1CurveLabel.html</anchorfile>
      <anchor>a395a0ae65dadae83b8adcee602e2100b</anchor>
      <arglist>(const WBrush &amp;brush)</arglist>
    </member>
    <member kind="function">
      <type>const WBrush &amp;</type>
      <name>markerBrush</name>
      <anchorfile>classWt_1_1Chart_1_1CurveLabel.html</anchorfile>
      <anchor>a5ecd3b998c53c1116d7f1bf035d73ef3</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Payment::Customer</name>
    <filename>classWt_1_1Payment_1_1Customer.html</filename>
    <member kind="function">
      <type></type>
      <name>Customer</name>
      <anchorfile>classWt_1_1Payment_1_1Customer.html</anchorfile>
      <anchor>abfa142d3a223494aa35fb73dfb8fea5f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFirstName</name>
      <anchorfile>classWt_1_1Payment_1_1Customer.html</anchorfile>
      <anchor>a9a1dd728c891488c8a6fda806abbca49</anchor>
      <arglist>(const WString &amp;firstName)</arglist>
    </member>
    <member kind="function">
      <type>WString</type>
      <name>firstName</name>
      <anchorfile>classWt_1_1Payment_1_1Customer.html</anchorfile>
      <anchor>a07f41ff414cd7323f86f24afdb10f8ca</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLastName</name>
      <anchorfile>classWt_1_1Payment_1_1Customer.html</anchorfile>
      <anchor>a74416a4171e395986bc8d8df922d97ab</anchor>
      <arglist>(const WString &amp;lastName)</arglist>
    </member>
    <member kind="function">
      <type>WString</type>
      <name>lastName</name>
      <anchorfile>classWt_1_1Payment_1_1Customer.html</anchorfile>
      <anchor>a0d413024821f1a66aa004524117e1cac</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setEmail</name>
      <anchorfile>classWt_1_1Payment_1_1Customer.html</anchorfile>
      <anchor>affe8248291a3028298145898d334b72e</anchor>
      <arglist>(const std::string &amp;email)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>email</name>
      <anchorfile>classWt_1_1Payment_1_1Customer.html</anchorfile>
      <anchor>ab71d3cf2da8565d2da6c3de1d7c41c7c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setShippingAddress</name>
      <anchorfile>classWt_1_1Payment_1_1Customer.html</anchorfile>
      <anchor>a48d8d792b5fed0abed456b6a45f90d4e</anchor>
      <arglist>(const Address &amp;address)</arglist>
    </member>
    <member kind="function">
      <type>const Address &amp;</type>
      <name>shippingAddress</name>
      <anchorfile>classWt_1_1Payment_1_1Customer.html</anchorfile>
      <anchor>a7976e394e2cbb0bbff4c69322c1744cb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLocale</name>
      <anchorfile>classWt_1_1Payment_1_1Customer.html</anchorfile>
      <anchor>a9e27e95aac03d909cb95e78608832716</anchor>
      <arglist>(const std::string &amp;locale)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>locale</name>
      <anchorfile>classWt_1_1Payment_1_1Customer.html</anchorfile>
      <anchor>ad80b95848c199b18d2966de414965d2e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPayerId</name>
      <anchorfile>classWt_1_1Payment_1_1Customer.html</anchorfile>
      <anchor>a615abc3571fa671a989215280cf5c50d</anchor>
      <arglist>(const std::string &amp;payerId)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>payerId</name>
      <anchorfile>classWt_1_1Payment_1_1Customer.html</anchorfile>
      <anchor>a80ad0a9ca6400f48ea832bb1fcf2c2c2</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Dbo::Dbo</name>
    <filename>classWt_1_1Dbo_1_1Dbo.html</filename>
    <templarg></templarg>
    <member kind="function">
      <type></type>
      <name>Dbo</name>
      <anchorfile>classWt_1_1Dbo_1_1Dbo.html</anchorfile>
      <anchor>a8f4aadc99b20bfccbeb446ae0eac312f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Dbo</name>
      <anchorfile>classWt_1_1Dbo_1_1Dbo.html</anchorfile>
      <anchor>aea653a2a9810f2a90d5c934ad69dd8cd</anchor>
      <arglist>(const Dbo&lt; C &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>dbo_traits&lt; C &gt;::IdType</type>
      <name>id</name>
      <anchorfile>classWt_1_1Dbo_1_1Dbo.html</anchorfile>
      <anchor>ad2949fe9c49d634857a4851e41d4175a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Session *</type>
      <name>session</name>
      <anchorfile>classWt_1_1Dbo_1_1Dbo.html</anchorfile>
      <anchor>a0ecc76a58123e62842720445608d22df</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDirty</name>
      <anchorfile>classWt_1_1Dbo_1_1Dbo.html</anchorfile>
      <anchor>a5083ea4d43e159632f147ba056f9d5ea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isDirty</name>
      <anchorfile>classWt_1_1Dbo_1_1Dbo.html</anchorfile>
      <anchor>a92090e4f4e5802074de78300996089c2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ptr&lt; C &gt;</type>
      <name>self</name>
      <anchorfile>classWt_1_1Dbo_1_1Dbo.html</anchorfile>
      <anchor>a4d1e5adb0e03766b76aef26b430906ae</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dbo&lt; AuthInfo&lt; UserType &gt; &gt;</name>
    <filename>classWt_1_1Dbo_1_1Dbo.html</filename>
    <member kind="function">
      <type></type>
      <name>Dbo</name>
      <anchorfile>classWt_1_1Dbo_1_1Dbo.html</anchorfile>
      <anchor>a8f4aadc99b20bfccbeb446ae0eac312f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Dbo</name>
      <anchorfile>classWt_1_1Dbo_1_1Dbo.html</anchorfile>
      <anchor>aea653a2a9810f2a90d5c934ad69dd8cd</anchor>
      <arglist>(const Dbo&lt; AuthInfo&lt; UserType &gt; &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>dbo_traits&lt; AuthInfo&lt; UserType &gt; &gt;::IdType</type>
      <name>id</name>
      <anchorfile>classWt_1_1Dbo_1_1Dbo.html</anchorfile>
      <anchor>ad2949fe9c49d634857a4851e41d4175a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Session *</type>
      <name>session</name>
      <anchorfile>classWt_1_1Dbo_1_1Dbo.html</anchorfile>
      <anchor>a0ecc76a58123e62842720445608d22df</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDirty</name>
      <anchorfile>classWt_1_1Dbo_1_1Dbo.html</anchorfile>
      <anchor>a5083ea4d43e159632f147ba056f9d5ea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isDirty</name>
      <anchorfile>classWt_1_1Dbo_1_1Dbo.html</anchorfile>
      <anchor>a92090e4f4e5802074de78300996089c2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ptr&lt; AuthInfo&lt; UserType &gt; &gt;</type>
      <name>self</name>
      <anchorfile>classWt_1_1Dbo_1_1Dbo.html</anchorfile>
      <anchor>a4d1e5adb0e03766b76aef26b430906ae</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Dbo::dbo_default_traits</name>
    <filename>structWt_1_1Dbo_1_1dbo__default__traits.html</filename>
    <member kind="typedef">
      <type>long long</type>
      <name>IdType</name>
      <anchorfile>structWt_1_1Dbo_1_1dbo__default__traits.html</anchorfile>
      <anchor>a89170e677a75348ef6913d9f4ba496ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static IdType</type>
      <name>invalidId</name>
      <anchorfile>structWt_1_1Dbo_1_1dbo__default__traits.html</anchorfile>
      <anchor>a6bb01d0dc6a5bbd25481fa16b642b996</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const char *</type>
      <name>surrogateIdField</name>
      <anchorfile>structWt_1_1Dbo_1_1dbo__default__traits.html</anchorfile>
      <anchor>a0c092c6b045f77d4fc04b5360b762b7f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const char *</type>
      <name>versionField</name>
      <anchorfile>structWt_1_1Dbo_1_1dbo__default__traits.html</anchorfile>
      <anchor>af4da1fde75771c5f2e707827e2a885c4</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Dbo::dbo_traits</name>
    <filename>structWt_1_1Dbo_1_1dbo__traits.html</filename>
    <templarg></templarg>
    <base>Wt::Dbo::dbo_default_traits</base>
    <member kind="typedef">
      <type>YourIdType</type>
      <name>IdType</name>
      <anchorfile>structWt_1_1Dbo_1_1dbo__traits.html</anchorfile>
      <anchor>afb62c3f28967b0b14b13360d47cd37dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static IdType</type>
      <name>invalidId</name>
      <anchorfile>structWt_1_1Dbo_1_1dbo__traits.html</anchorfile>
      <anchor>aae2a13a4ca038f5bad337fbc2d70d37c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const char *</type>
      <name>surrogateIdField</name>
      <anchorfile>structWt_1_1Dbo_1_1dbo__traits.html</anchorfile>
      <anchor>a44c5455df89390fae082aadf7cf1bc13</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const char *</type>
      <name>versionField</name>
      <anchorfile>structWt_1_1Dbo_1_1dbo__traits.html</anchorfile>
      <anchor>a701b53b0401836a7c966c619f3c9656d</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dbo_traits&lt; AuthInfo&lt; UserType &gt; &gt;</name>
    <filename>structWt_1_1Dbo_1_1dbo__traits.html</filename>
    <base>Wt::Dbo::dbo_default_traits</base>
    <member kind="typedef">
      <type>YourIdType</type>
      <name>IdType</name>
      <anchorfile>structWt_1_1Dbo_1_1dbo__traits.html</anchorfile>
      <anchor>afb62c3f28967b0b14b13360d47cd37dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static IdType</type>
      <name>invalidId</name>
      <anchorfile>structWt_1_1Dbo_1_1dbo__traits.html</anchorfile>
      <anchor>aae2a13a4ca038f5bad337fbc2d70d37c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const char *</type>
      <name>surrogateIdField</name>
      <anchorfile>structWt_1_1Dbo_1_1dbo__traits.html</anchorfile>
      <anchor>a44c5455df89390fae082aadf7cf1bc13</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const char *</type>
      <name>versionField</name>
      <anchorfile>structWt_1_1Dbo_1_1dbo__traits.html</anchorfile>
      <anchor>a701b53b0401836a7c966c619f3c9656d</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dbo_traits&lt; MutC &gt;</name>
    <filename>structWt_1_1Dbo_1_1dbo__traits.html</filename>
    <base>Wt::Dbo::dbo_default_traits</base>
    <member kind="typedef">
      <type>YourIdType</type>
      <name>IdType</name>
      <anchorfile>structWt_1_1Dbo_1_1dbo__traits.html</anchorfile>
      <anchor>afb62c3f28967b0b14b13360d47cd37dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static IdType</type>
      <name>invalidId</name>
      <anchorfile>structWt_1_1Dbo_1_1dbo__traits.html</anchorfile>
      <anchor>aae2a13a4ca038f5bad337fbc2d70d37c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const char *</type>
      <name>surrogateIdField</name>
      <anchorfile>structWt_1_1Dbo_1_1dbo__traits.html</anchorfile>
      <anchor>a44c5455df89390fae082aadf7cf1bc13</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const char *</type>
      <name>versionField</name>
      <anchorfile>structWt_1_1Dbo_1_1dbo__traits.html</anchorfile>
      <anchor>a701b53b0401836a7c966c619f3c9656d</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Dbo::DirectBinding</name>
    <filename>structWt_1_1Dbo_1_1DirectBinding.html</filename>
  </compound>
  <compound kind="class">
    <name>Wt::WSslCertificate::DnAttribute</name>
    <filename>classWt_1_1WSslCertificate_1_1DnAttribute.html</filename>
    <member kind="function">
      <type>DnAttributeName</type>
      <name>name</name>
      <anchorfile>classWt_1_1WSslCertificate_1_1DnAttribute.html</anchorfile>
      <anchor>ab8cb4d1eec0f7090d6afa5cc98cf9972</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>value</name>
      <anchorfile>classWt_1_1WSslCertificate_1_1DnAttribute.html</anchorfile>
      <anchor>a16038b30d1b5d5cbab6fd6389b26d805</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>longName</name>
      <anchorfile>classWt_1_1WSslCertificate_1_1DnAttribute.html</anchorfile>
      <anchor>a7dd73ff42af10741beb3a71bd0ac169e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>shortName</name>
      <anchorfile>classWt_1_1WSslCertificate_1_1DnAttribute.html</anchorfile>
      <anchor>a4dec6cb42f8ba0418561900ab73afce2</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::DomElement</name>
    <filename>classWt_1_1DomElement.html</filename>
    <class kind="struct">Wt::DomElement::EventAction</class>
    <class kind="struct">Wt::DomElement::TimeoutEvent</class>
    <member kind="enumeration">
      <type></type>
      <name>Mode</name>
      <anchorfile>classWt_1_1DomElement.html</anchorfile>
      <anchor>a1c5ce5f37501019e28470a28af164980</anchor>
      <arglist></arglist>
      <enumvalue file="classWt_1_1DomElement.html" anchor="a1c5ce5f37501019e28470a28af164980a686e697538050e4664636337cc3b834f">Create</enumvalue>
      <enumvalue file="classWt_1_1DomElement.html" anchor="a1c5ce5f37501019e28470a28af164980a06933067aafd48425d67bcb01bba5cb6">Update</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Priority</name>
      <anchorfile>classWt_1_1DomElement.html</anchorfile>
      <anchor>acc6b0a5da92686dc8d133a25aad027b4</anchor>
      <arglist></arglist>
      <enumvalue file="classWt_1_1DomElement.html" anchor="acc6b0a5da92686dc8d133a25aad027b4af2a6c498fb90ee345d997f888fce3b18">Delete</enumvalue>
      <enumvalue file="classWt_1_1DomElement.html" anchor="acc6b0a5da92686dc8d133a25aad027b4a686e697538050e4664636337cc3b834f">Create</enumvalue>
      <enumvalue file="classWt_1_1DomElement.html" anchor="acc6b0a5da92686dc8d133a25aad027b4a06933067aafd48425d67bcb01bba5cb6">Update</enumvalue>
    </member>
    <member kind="typedef">
      <type>std::map&lt; Wt::Property, std::string &gt;</type>
      <name>PropertyMap</name>
      <anchorfile>classWt_1_1DomElement.html</anchorfile>
      <anchor>af9504607c64b16c95571d9f3b6f1e592</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; TimeoutEvent &gt;</type>
      <name>TimeoutList</name>
      <anchorfile>classWt_1_1DomElement.html</anchorfile>
      <anchor>a7eaddab8ab997eae0d15950c5a7f0cd8</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DomElement</name>
      <anchorfile>classWt_1_1DomElement.html</anchorfile>
      <anchor>ab7cf03188b10c8fe05b7805e6b4c6043</anchor>
      <arglist>(Mode mode, DomElementType type)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~DomElement</name>
      <anchorfile>classWt_1_1DomElement.html</anchorfile>
      <anchor>ab64fd2b0d7f0e0f613d8b97743087e0f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDomElementTagName</name>
      <anchorfile>classWt_1_1DomElement.html</anchorfile>
      <anchor>a2b2bd6bd639721416be1cd944a1cee44</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>Mode</type>
      <name>mode</name>
      <anchorfile>classWt_1_1DomElement.html</anchorfile>
      <anchor>aacbbef999d62fc496149ee8bb263e2bd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setType</name>
      <anchorfile>classWt_1_1DomElement.html</anchorfile>
      <anchor>a75dce5563643e5d0c99e8c1ec906fedf</anchor>
      <arglist>(DomElementType type)</arglist>
    </member>
    <member kind="function">
      <type>DomElementType</type>
      <name>type</name>
      <anchorfile>classWt_1_1DomElement.html</anchorfile>
      <anchor>a97e5b357576a91d7d922abb1b1128857</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>var</name>
      <anchorfile>classWt_1_1DomElement.html</anchorfile>
      <anchor>ac1fdc4afc7030cf44c427b1fd21a210a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setWasEmpty</name>
      <anchorfile>classWt_1_1DomElement.html</anchorfile>
      <anchor>a9477f9bc7f6eabeb42f5f098bfbaabf6</anchor>
      <arglist>(bool how)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addChild</name>
      <anchorfile>classWt_1_1DomElement.html</anchorfile>
      <anchor>a97f5ea81d743d69e68f5f47b73325c8b</anchor>
      <arglist>(DomElement *child)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertChildAt</name>
      <anchorfile>classWt_1_1DomElement.html</anchorfile>
      <anchor>abe1a8f0117d701629ffa9001b3997f4f</anchor>
      <arglist>(DomElement *child, int pos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>saveChild</name>
      <anchorfile>classWt_1_1DomElement.html</anchorfile>
      <anchor>a1a7612999c9b74ac20a74c2a49a3c126</anchor>
      <arglist>(const std::string &amp;id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAttribute</name>
      <anchorfile>classWt_1_1DomElement.html</anchorfile>
      <anchor>ad985f6288a98f6ff37eea10cbbcebff2</anchor>
      <arglist>(const std::string &amp;attribute, const std::string &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getAttribute</name>
      <anchorfile>classWt_1_1DomElement.html</anchorfile>
      <anchor>a86edc99c09015430132322c109f3e699</anchor>
      <arglist>(const std::string &amp;attribute) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeAttribute</name>
      <anchorfile>classWt_1_1DomElement.html</anchorfile>
      <anchor>a07a21ab605f0cf82430af407a8dc914b</anchor>
      <arglist>(const std::string &amp;attribute)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProperty</name>
      <anchorfile>classWt_1_1DomElement.html</anchorfile>
      <anchor>ad7053166ff7724b432a4741c1113601b</anchor>
      <arglist>(Wt::Property property, const std::string &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addPropertyWord</name>
      <anchorfile>classWt_1_1DomElement.html</anchorfile>
      <anchor>a5ee6061254c40e0575ea9af8144eb3fd</anchor>
      <arglist>(Wt::Property property, const std::string &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getProperty</name>
      <anchorfile>classWt_1_1DomElement.html</anchorfile>
      <anchor>a78fc2ce1a1fa27c6f50f3990f60fa62d</anchor>
      <arglist>(Wt::Property property) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeProperty</name>
      <anchorfile>classWt_1_1DomElement.html</anchorfile>
      <anchor>a215dd7f3da8b4ecd723e0183b79f8d42</anchor>
      <arglist>(Wt::Property property)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProperties</name>
      <anchorfile>classWt_1_1DomElement.html</anchorfile>
      <anchor>af82d4572f074eae5638b38e00a888ae9</anchor>
      <arglist>(const PropertyMap &amp;properties)</arglist>
    </member>
    <member kind="function">
      <type>const PropertyMap &amp;</type>
      <name>properties</name>
      <anchorfile>classWt_1_1DomElement.html</anchorfile>
      <anchor>a0b29fb8c4709ab6fd445c5d5dda26cb1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearProperties</name>
      <anchorfile>classWt_1_1DomElement.html</anchorfile>
      <anchor>a2e37b56c89d32c2cecd77e3d462d9223</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setEventSignal</name>
      <anchorfile>classWt_1_1DomElement.html</anchorfile>
      <anchor>a0bbbae1ffb7f9766945a8aeb103684ab</anchor>
      <arglist>(const char *eventName, const EventSignalBase &amp;signal)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setEvent</name>
      <anchorfile>classWt_1_1DomElement.html</anchorfile>
      <anchor>a0436dd897d8aa1a49d943c16572fecf6</anchor>
      <arglist>(const char *eventName, const std::string &amp;jsCode, const std::string &amp;signalName, bool isExposed=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setEvent</name>
      <anchorfile>classWt_1_1DomElement.html</anchorfile>
      <anchor>ae601efee23eedd2da95efe4a58dab92e</anchor>
      <arglist>(const char *eventName, const std::string &amp;jsCode)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addEvent</name>
      <anchorfile>classWt_1_1DomElement.html</anchorfile>
      <anchor>a5aedc9a0aae410cec225fa20516c2802</anchor>
      <arglist>(const char *eventName, const std::string &amp;jsCode)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setEvent</name>
      <anchorfile>classWt_1_1DomElement.html</anchorfile>
      <anchor>aeaf5ac8fc95abf2c619e2fee1a916099</anchor>
      <arglist>(const char *eventName, const std::vector&lt; EventAction &gt; &amp;actions)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setId</name>
      <anchorfile>classWt_1_1DomElement.html</anchorfile>
      <anchor>ae9aa66aaf4fa5503e9410432ebc9369a</anchor>
      <arglist>(const std::string &amp;id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setName</name>
      <anchorfile>classWt_1_1DomElement.html</anchorfile>
      <anchor>aaba49f646c7020e33db7ce0648fa29c4</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTimeout</name>
      <anchorfile>classWt_1_1DomElement.html</anchorfile>
      <anchor>a3b6ebc26cefcb923788695255364dbd0</anchor>
      <arglist>(int msec, bool jsRepeat)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTimeout</name>
      <anchorfile>classWt_1_1DomElement.html</anchorfile>
      <anchor>a9ef19ae5a6dfc8153e8aa841de980425</anchor>
      <arglist>(int delay, int interval)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>callMethod</name>
      <anchorfile>classWt_1_1DomElement.html</anchorfile>
      <anchor>aa06765cbb373956e9ae9a2a707a68fd7</anchor>
      <arglist>(const std::string &amp;method)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>callJavaScript</name>
      <anchorfile>classWt_1_1DomElement.html</anchorfile>
      <anchor>a76e75e4259fee4d00f15170eb464682e</anchor>
      <arglist>(const std::string &amp;javascript, bool evenWhenDeleted=false)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>id</name>
      <anchorfile>classWt_1_1DomElement.html</anchorfile>
      <anchor>a782e9f673bcf9ec48c3917a4ac4b1ac4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeAllChildren</name>
      <anchorfile>classWt_1_1DomElement.html</anchorfile>
      <anchor>a0db82d40e191015d2e1ffed13c5132fb</anchor>
      <arglist>(int firstChild=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeFromParent</name>
      <anchorfile>classWt_1_1DomElement.html</anchorfile>
      <anchor>af2e6a415e039de60835136d5401b386a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>replaceWith</name>
      <anchorfile>classWt_1_1DomElement.html</anchorfile>
      <anchor>a678359a74d49159e968559cb092a421b</anchor>
      <arglist>(DomElement *newElement)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unstubWith</name>
      <anchorfile>classWt_1_1DomElement.html</anchorfile>
      <anchor>a375e6ce034f56980002b97be693e1d02</anchor>
      <arglist>(DomElement *newElement, bool hideWithDisplay)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertBefore</name>
      <anchorfile>classWt_1_1DomElement.html</anchorfile>
      <anchor>a885dec0124ff03caec8ab7b2c9a9b9dc</anchor>
      <arglist>(DomElement *sibling)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unwrap</name>
      <anchorfile>classWt_1_1DomElement.html</anchorfile>
      <anchor>a71eb9b71169d68cce20f596f5ec72867</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>asJavaScript</name>
      <anchorfile>classWt_1_1DomElement.html</anchorfile>
      <anchor>a2d88b1d5d23132a89465812225821151</anchor>
      <arglist>(WStringStream &amp;out)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>asJavaScript</name>
      <anchorfile>classWt_1_1DomElement.html</anchorfile>
      <anchor>ac792fe8da2a48cacf75ba655ad285982</anchor>
      <arglist>(EStream &amp;out, Priority priority) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>asHTML</name>
      <anchorfile>classWt_1_1DomElement.html</anchorfile>
      <anchor>a39325a0abbbd28e438d980f6f5057369</anchor>
      <arglist>(EStream &amp;out, EStream &amp;javaScript, TimeoutList &amp;timeouts, bool openingTagOnly=false) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isDefaultInline</name>
      <anchorfile>classWt_1_1DomElement.html</anchorfile>
      <anchor>af09e1b576dcbec40c781644b3b60ab4d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>declare</name>
      <anchorfile>classWt_1_1DomElement.html</anchorfile>
      <anchor>a90ae962d3bd184d0335b2124eb94e68e</anchor>
      <arglist>(EStream &amp;out) const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>cssStyle</name>
      <anchorfile>classWt_1_1DomElement.html</anchorfile>
      <anchor>afcff4bca0b0778453802038b2b6a6a2c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>javaScript</name>
      <anchorfile>classWt_1_1DomElement.html</anchorfile>
      <anchor>a5ba072ab3beda98b1d9ed3344119487a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateInnerHtmlOnly</name>
      <anchorfile>classWt_1_1DomElement.html</anchorfile>
      <anchor>a7803a2e63e259dbf66911f7faf329d0f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>addToParent</name>
      <anchorfile>classWt_1_1DomElement.html</anchorfile>
      <anchor>a49fd65cf314bc901d9656e449d80a976</anchor>
      <arglist>(WStringStream &amp;out, const std::string &amp;parentVar, int pos, WApplication *app)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>createElement</name>
      <anchorfile>classWt_1_1DomElement.html</anchorfile>
      <anchor>ad2063733f8e62129491af86718972e69</anchor>
      <arglist>(WStringStream &amp;out, WApplication *app, const std::string &amp;domInsertJS)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>createVar</name>
      <anchorfile>classWt_1_1DomElement.html</anchorfile>
      <anchor>a83b8ec4e3f30cb448375d738fa1ef474</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>urlEncodeS</name>
      <anchorfile>classWt_1_1DomElement.html</anchorfile>
      <anchor>ae14502f7c99128c0bb69719ea7ba3dd9</anchor>
      <arglist>(const std::string &amp;url)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>urlEncodeS</name>
      <anchorfile>classWt_1_1DomElement.html</anchorfile>
      <anchor>aa922ecb957a9f55c76e3804826987d57</anchor>
      <arglist>(const std::string &amp;url, const std::string &amp;allowed)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static DomElement *</type>
      <name>createNew</name>
      <anchorfile>classWt_1_1DomElement.html</anchorfile>
      <anchor>aad7000a8619cdb9024a09babcebea787</anchor>
      <arglist>(DomElementType type)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static DomElement *</type>
      <name>getForUpdate</name>
      <anchorfile>classWt_1_1DomElement.html</anchorfile>
      <anchor>abff6867c719e1c3eb567bee25d79e548</anchor>
      <arglist>(const std::string &amp;id, DomElementType type)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static DomElement *</type>
      <name>getForUpdate</name>
      <anchorfile>classWt_1_1DomElement.html</anchorfile>
      <anchor>a43229345fda21580e5dc371c6b4f006f</anchor>
      <arglist>(const WObject *object, DomElementType type)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static DomElement *</type>
      <name>updateGiven</name>
      <anchorfile>classWt_1_1DomElement.html</anchorfile>
      <anchor>a76df2eed1ca608f72d29ec45d2cc04b8</anchor>
      <arglist>(const std::string &amp;el, DomElementType type)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>createTimeoutJs</name>
      <anchorfile>classWt_1_1DomElement.html</anchorfile>
      <anchor>ae6b4d47cb2e381eb5fa819826822bd98</anchor>
      <arglist>(WStringStream &amp;out, const TimeoutList &amp;timeouts, WApplication *app)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>fastJsStringLiteral</name>
      <anchorfile>classWt_1_1DomElement.html</anchorfile>
      <anchor>a37db415bae33243ed72b80406a0738f9</anchor>
      <arglist>(EStream &amp;outRaw, const EStream &amp;outEscaped, const std::string &amp;s)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>jsStringLiteral</name>
      <anchorfile>classWt_1_1DomElement.html</anchorfile>
      <anchor>aa3f0a705d5fc7d0b39367c1881d07526</anchor>
      <arglist>(EStream &amp;out, const std::string &amp;s, char delimiter)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>jsStringLiteral</name>
      <anchorfile>classWt_1_1DomElement.html</anchorfile>
      <anchor>a0403f7fdbe8c91cd82f31ffe003f1520</anchor>
      <arglist>(WStringStream &amp;out, const std::string &amp;s, char delimiter)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>fastHtmlAttributeValue</name>
      <anchorfile>classWt_1_1DomElement.html</anchorfile>
      <anchor>a32e103c8320f70c63d788f49f0783b82</anchor>
      <arglist>(EStream &amp;outRaw, const EStream &amp;outEscaped, const std::string &amp;s)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>htmlAttributeValue</name>
      <anchorfile>classWt_1_1DomElement.html</anchorfile>
      <anchor>af0da7708e6c7059ab4b20af3842fb6de</anchor>
      <arglist>(WStringStream &amp;out, const std::string &amp;s)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>isSelfClosingTag</name>
      <anchorfile>classWt_1_1DomElement.html</anchorfile>
      <anchor>a48a82b27e66cac5207d9fc356931d335</anchor>
      <arglist>(const std::string &amp;tag)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>isSelfClosingTag</name>
      <anchorfile>classWt_1_1DomElement.html</anchorfile>
      <anchor>abfa0da17ca741fa6e0d05675f2dc6303</anchor>
      <arglist>(DomElementType element)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static DomElementType</type>
      <name>parseTagName</name>
      <anchorfile>classWt_1_1DomElement.html</anchorfile>
      <anchor>a895bb07a71ac445cf25fdcbcaa8e1466</anchor>
      <arglist>(const std::string &amp;tag)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>tagName</name>
      <anchorfile>classWt_1_1DomElement.html</anchorfile>
      <anchor>afc84854d39ddf1ef8d178d6ac7c087a3</anchor>
      <arglist>(DomElementType type)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const std::string &amp;</type>
      <name>cssName</name>
      <anchorfile>classWt_1_1DomElement.html</anchorfile>
      <anchor>a60e867278a36973ee5152a9ec03ddfac</anchor>
      <arglist>(Property property)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>isDefaultInline</name>
      <anchorfile>classWt_1_1DomElement.html</anchorfile>
      <anchor>adba30a2436ed94858d05d2d2f7787589</anchor>
      <arglist>(DomElementType type)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Dbo::DynamicBinding</name>
    <filename>structWt_1_1Dbo_1_1DynamicBinding.html</filename>
  </compound>
  <compound kind="class">
    <name>Wt::Auth::EmailTokenResult</name>
    <filename>classWt_1_1Auth_1_1EmailTokenResult.html</filename>
    <member kind="typedef">
      <type>EmailTokenState</type>
      <name>State</name>
      <anchorfile>classWt_1_1Auth_1_1EmailTokenResult.html</anchorfile>
      <anchor>a74389372a2dea17513d339d6be97a659</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EmailTokenResult</name>
      <anchorfile>classWt_1_1Auth_1_1EmailTokenResult.html</anchorfile>
      <anchor>afb07d47fd326f46b3940135354cf7fe6</anchor>
      <arglist>(EmailTokenState state, const User &amp;user=User())</arglist>
    </member>
    <member kind="function">
      <type>EmailTokenState</type>
      <name>state</name>
      <anchorfile>classWt_1_1Auth_1_1EmailTokenResult.html</anchorfile>
      <anchor>aecb6c424699242ac3b3de4995f5d96fc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const User &amp;</type>
      <name>user</name>
      <anchorfile>classWt_1_1Auth_1_1EmailTokenResult.html</anchorfile>
      <anchor>ad5f56618da20c12b7e0d41dd11df8c41</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Wt::DomElement::EventAction</name>
    <filename>structWt_1_1DomElement_1_1EventAction.html</filename>
  </compound>
  <compound kind="class">
    <name>Wt::EventSignal</name>
    <filename>classWt_1_1EventSignal.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isConnected</name>
      <anchorfile>classWt_1_1EventSignal.html</anchorfile>
      <anchor>aa49b05f37fe150597add34d0a3d40f04</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1EventSignal.html</anchorfile>
      <anchor>a2669720d9c90a84df79e442f8aba60ec</anchor>
      <arglist>(F function)</arglist>
    </member>
    <member kind="function">
      <type>Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1EventSignal.html</anchorfile>
      <anchor>a11caa4eba52212308e87e27bfc9568a4</anchor>
      <arglist>(T *target, void(V::*method)())</arglist>
    </member>
    <member kind="function">
      <type>Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1EventSignal.html</anchorfile>
      <anchor>aab8d98e9b5466df313c2cd98e210ad65</anchor>
      <arglist>(T *target, void(V::*method)(E))</arglist>
    </member>
    <member kind="function">
      <type>Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1EventSignal.html</anchorfile>
      <anchor>ac633cf7afbe79fcb913d84bee7bbd174</anchor>
      <arglist>(T *target, void(V::*method)(const E &amp;))</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>connect</name>
      <anchorfile>classWt_1_1EventSignal.html</anchorfile>
      <anchor>add4e7bf537e0559beebd40ed9b2cf17c</anchor>
      <arglist>(const std::string &amp;function)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>connect</name>
      <anchorfile>classWt_1_1EventSignal.html</anchorfile>
      <anchor>a7459dfa6636d4c4f65cc8928eb8675a7</anchor>
      <arglist>(JSlot &amp;slot)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>emit</name>
      <anchorfile>classWt_1_1EventSignal.html</anchorfile>
      <anchor>ab541fe8ebf0a24afd0240c8d13a1931b</anchor>
      <arglist>(E e=NoClass()) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>classWt_1_1EventSignal.html</anchorfile>
      <anchor>a84296930afc302d2f9022bca33176c98</anchor>
      <arglist>(E e) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::EventSignalBase</name>
    <filename>classWt_1_1EventSignalBase.html</filename>
    <base>Wt::SignalBase</base>
    <member kind="function">
      <type>const char *</type>
      <name>name</name>
      <anchorfile>classWt_1_1EventSignalBase.html</anchorfile>
      <anchor>abfb27bd7b4d3497fedfdd7280b633417</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isConnected</name>
      <anchorfile>classWt_1_1EventSignalBase.html</anchorfile>
      <anchor>aa8a7c5f59ca3dcd7740c074cf75ef677</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>disconnect</name>
      <anchorfile>classWt_1_1EventSignalBase.html</anchorfile>
      <anchor>a33923cc362b9e87baddebeb97de8db1b</anchor>
      <arglist>(JSlot &amp;slot)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>preventDefaultAction</name>
      <anchorfile>classWt_1_1EventSignalBase.html</anchorfile>
      <anchor>afd8983929683ffc4c6dda8a91a7bda7b</anchor>
      <arglist>(bool prevent=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>defaultActionPrevented</name>
      <anchorfile>classWt_1_1EventSignalBase.html</anchorfile>
      <anchor>aeb110a69a17988a30ed832f3aab45b52</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>preventPropagation</name>
      <anchorfile>classWt_1_1EventSignalBase.html</anchorfile>
      <anchor>a63f088978e6dd375b3a329f458f9db3f</anchor>
      <arglist>(bool prevent=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>propagationPrevented</name>
      <anchorfile>classWt_1_1EventSignalBase.html</anchorfile>
      <anchor>af5fa42e5f6dd422505ac3397a7f2c52e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>virtual Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1EventSignalBase.html</anchorfile>
      <anchor>ae43b51490db269a8a3b2356b218222d6</anchor>
      <arglist>(WObject *target, WObject::Method method)=0</arglist>
    </member>
    <member kind="function">
      <type>Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1EventSignalBase.html</anchorfile>
      <anchor>a1f4178f19a827a31454d948e503848ad</anchor>
      <arglist>(T *target, void(V::*method)())</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WServer::Exception</name>
    <filename>classWt_1_1WServer_1_1Exception.html</filename>
    <base>Wt::WException</base>
  </compound>
  <compound kind="class">
    <name>Wt::Dbo::Exception</name>
    <filename>classWt_1_1Dbo_1_1Exception.html</filename>
    <member kind="function">
      <type></type>
      <name>Exception</name>
      <anchorfile>classWt_1_1Dbo_1_1Exception.html</anchorfile>
      <anchor>a0bf5b90f8b9828a5b78ed543db5b61a6</anchor>
      <arglist>(const std::string &amp;error, const std::string &amp;code=std::string())</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>code</name>
      <anchorfile>classWt_1_1Dbo_1_1Exception.html</anchorfile>
      <anchor>aec872dea5420267dc96b1b03c8193c49</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Auth::FacebookService</name>
    <filename>classWt_1_1Auth_1_1FacebookService.html</filename>
    <base>Wt::Auth::OAuthService</base>
    <member kind="function">
      <type></type>
      <name>FacebookService</name>
      <anchorfile>classWt_1_1Auth_1_1FacebookService.html</anchorfile>
      <anchor>a9d731a03e36a7378b7fb26b98dfa3d35</anchor>
      <arglist>(const AuthService &amp;baseAuthService)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>name</name>
      <anchorfile>classWt_1_1Auth_1_1FacebookService.html</anchorfile>
      <anchor>ae8624d0e6d5e254674283913b5a791e5</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WString</type>
      <name>description</name>
      <anchorfile>classWt_1_1Auth_1_1FacebookService.html</anchorfile>
      <anchor>a1f1c1f9cb8d43e1ce7ca710e169ae86c</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>popupWidth</name>
      <anchorfile>classWt_1_1Auth_1_1FacebookService.html</anchorfile>
      <anchor>a7912283a9f309837116295e72cde76ca</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>popupHeight</name>
      <anchorfile>classWt_1_1Auth_1_1FacebookService.html</anchorfile>
      <anchor>af3ad702beb5eb3d48e06bf06a4360753</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>authenticationScope</name>
      <anchorfile>classWt_1_1Auth_1_1FacebookService.html</anchorfile>
      <anchor>a349c438e35bb8e0feca6a70c68205228</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>redirectEndpoint</name>
      <anchorfile>classWt_1_1Auth_1_1FacebookService.html</anchorfile>
      <anchor>a777a91c311fd784623035b4557b29eea</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>redirectEndpointPath</name>
      <anchorfile>classWt_1_1Auth_1_1FacebookService.html</anchorfile>
      <anchor>a33ac850b81dfdd17cce52904d7246af4</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>authorizationEndpoint</name>
      <anchorfile>classWt_1_1Auth_1_1FacebookService.html</anchorfile>
      <anchor>a82dc4bf8c14e538e6d66426dd7abc5b4</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>tokenEndpoint</name>
      <anchorfile>classWt_1_1Auth_1_1FacebookService.html</anchorfile>
      <anchor>aa2c72ba1369364fdbaf405cbe1c5158b</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>clientId</name>
      <anchorfile>classWt_1_1Auth_1_1FacebookService.html</anchorfile>
      <anchor>a4b9f60cd35920be859cafe66dcc6233b</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>clientSecret</name>
      <anchorfile>classWt_1_1Auth_1_1FacebookService.html</anchorfile>
      <anchor>a8ccf91609f405a55027bb3e282a7918c</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ClientSecretMethod</type>
      <name>clientSecretMethod</name>
      <anchorfile>classWt_1_1Auth_1_1FacebookService.html</anchorfile>
      <anchor>abe4b6964738a5202e4bb923ebc3a65f7</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Http::Method</type>
      <name>tokenRequestMethod</name>
      <anchorfile>classWt_1_1Auth_1_1FacebookService.html</anchorfile>
      <anchor>a4b3af05aa337ad4b55b70c077e98dae0</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::unique_ptr&lt; OAuthProcess &gt;</type>
      <name>createProcess</name>
      <anchorfile>classWt_1_1Auth_1_1FacebookService.html</anchorfile>
      <anchor>a5eb3d863fe9608494409168a42c2c16d</anchor>
      <arglist>(const std::string &amp;scope) const override</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>configured</name>
      <anchorfile>classWt_1_1Auth_1_1FacebookService.html</anchorfile>
      <anchor>a5f454856da204ee55b48bd7841c6c5e3</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WLogger::Field</name>
    <filename>classWt_1_1WLogger_1_1Field.html</filename>
    <member kind="function">
      <type>std::string</type>
      <name>name</name>
      <anchorfile>classWt_1_1WLogger_1_1Field.html</anchorfile>
      <anchor>a49f724b71031d50b73ba646d4189ec62</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isString</name>
      <anchorfile>classWt_1_1WLogger_1_1Field.html</anchorfile>
      <anchor>a07feaa4d5e1dee9fcd51e5d541642baf</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Dbo::FieldInfo</name>
    <filename>classWt_1_1Dbo_1_1FieldInfo.html</filename>
    <member kind="function">
      <type></type>
      <name>FieldInfo</name>
      <anchorfile>classWt_1_1Dbo_1_1FieldInfo.html</anchorfile>
      <anchor>a2ac38659a204f772c8dd4bffa6550c2b</anchor>
      <arglist>(const std::string &amp;name, const std::type_info *type, const std::string &amp;sqlType, int flags)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FieldInfo</name>
      <anchorfile>classWt_1_1Dbo_1_1FieldInfo.html</anchorfile>
      <anchor>a010c03cba8dc01a2b86443f839d4e220</anchor>
      <arglist>(const std::string &amp;name, const std::type_info *type, const std::string &amp;sqlType, const std::string &amp;foreignKeyTable, const std::string &amp;foreignKeyName, int flags, int fkConstraints)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setQualifier</name>
      <anchorfile>classWt_1_1Dbo_1_1FieldInfo.html</anchorfile>
      <anchor>a1c9b9be3aeb53d07c98d7199fc97e965</anchor>
      <arglist>(const std::string &amp;qualifier, bool firstQualified=false)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>name</name>
      <anchorfile>classWt_1_1Dbo_1_1FieldInfo.html</anchorfile>
      <anchor>a3320402439a3ed27cf2abce4fd15e27d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>sqlType</name>
      <anchorfile>classWt_1_1Dbo_1_1FieldInfo.html</anchorfile>
      <anchor>ad30c002482c0209fc74814188df44da0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>qualifier</name>
      <anchorfile>classWt_1_1Dbo_1_1FieldInfo.html</anchorfile>
      <anchor>af64ed8be93742adb7e0642f66d0fcd03</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::type_info *</type>
      <name>type</name>
      <anchorfile>classWt_1_1Dbo_1_1FieldInfo.html</anchorfile>
      <anchor>a48ffdac08f5f530ff586542171bc74f2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isIdField</name>
      <anchorfile>classWt_1_1Dbo_1_1FieldInfo.html</anchorfile>
      <anchor>afac7ca6b34463110cd2d0492b387800a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isNaturalIdField</name>
      <anchorfile>classWt_1_1Dbo_1_1FieldInfo.html</anchorfile>
      <anchor>a940f250245fb467fcd10be7a8d49feb7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSurrogateIdField</name>
      <anchorfile>classWt_1_1Dbo_1_1FieldInfo.html</anchorfile>
      <anchor>a14eb2b38b59664d6deda858511e9b4aa</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isVersionField</name>
      <anchorfile>classWt_1_1Dbo_1_1FieldInfo.html</anchorfile>
      <anchor>ae9330e797a132267655b01f3208a6fae</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isMutable</name>
      <anchorfile>classWt_1_1Dbo_1_1FieldInfo.html</anchorfile>
      <anchor>a6fd4dc2652f7f793f823d18bde35ddcd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>needsQuotes</name>
      <anchorfile>classWt_1_1Dbo_1_1FieldInfo.html</anchorfile>
      <anchor>a6306874db8fad8e87fdae20b0bc88fa2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isForeignKey</name>
      <anchorfile>classWt_1_1Dbo_1_1FieldInfo.html</anchorfile>
      <anchor>a7c1001c11f1c496d96d170da91d35545</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WFileDropWidget::File</name>
    <filename>classWt_1_1WFileDropWidget_1_1File.html</filename>
    <base>Wt::WObject</base>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>clientFileName</name>
      <anchorfile>classWt_1_1WFileDropWidget_1_1File.html</anchorfile>
      <anchor>a5355a0e71abfc66ae70675ee716161cc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>mimeType</name>
      <anchorfile>classWt_1_1WFileDropWidget_1_1File.html</anchorfile>
      <anchor>a2adf0753648576f325cbe4d0c4c0af2e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>::uint64_t</type>
      <name>size</name>
      <anchorfile>classWt_1_1WFileDropWidget_1_1File.html</anchorfile>
      <anchor>a37a541465c133fe57280b895dad8b346</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const Http::UploadedFile &amp;</type>
      <name>uploadedFile</name>
      <anchorfile>classWt_1_1WFileDropWidget_1_1File.html</anchorfile>
      <anchor>a7e12c11b1739aba2f8f4e3897eb8bca6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>uploadFinished</name>
      <anchorfile>classWt_1_1WFileDropWidget_1_1File.html</anchorfile>
      <anchor>a07fc8b308117991516b7c8ac1d5d7404</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Signal&lt; ::uint64_t, ::uint64_t &gt; &amp;</type>
      <name>dataReceived</name>
      <anchorfile>classWt_1_1WFileDropWidget_1_1File.html</anchorfile>
      <anchor>a904c05ff3877aefd715019f12f380b51</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Signal &amp;</type>
      <name>uploaded</name>
      <anchorfile>classWt_1_1WFileDropWidget_1_1File.html</anchorfile>
      <anchor>a5c3775d8a43d3fc5fb1e41b6fb2a2b8e</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Dbo::backend::Firebird</name>
    <filename>classWt_1_1Dbo_1_1backend_1_1Firebird.html</filename>
    <base>Wt::Dbo::SqlConnection</base>
    <member kind="function">
      <type></type>
      <name>Firebird</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1Firebird.html</anchorfile>
      <anchor>a2e5453a38e548108c18cb79a2b4a7388</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Firebird</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1Firebird.html</anchorfile>
      <anchor>acfbb6df642e4beed3004d4bbfc7428f7</anchor>
      <arglist>(const std::string &amp;ServerName, const std::string &amp;DatabaseName, const std::string &amp;UserName, const std::string &amp;UserPassword, const std::string &amp;RoleName, const std::string &amp;CharSet=std::string(), const std::string &amp;CreateParams=std::string())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Firebird</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1Firebird.html</anchorfile>
      <anchor>a6e3631cd5519f11d408fc8ca9d12dab4</anchor>
      <arglist>(IBPP::Database db)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Firebird</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1Firebird.html</anchorfile>
      <anchor>ab88a5f9e24a76871d133e75f60c1a9fc</anchor>
      <arglist>(const Firebird &amp;other)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Firebird</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1Firebird.html</anchorfile>
      <anchor>a9afb6ed4017bb66c2bbc8e8214ab3291</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>connect</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1Firebird.html</anchorfile>
      <anchor>a005c4bbefcffeaee86b90846ea5dc9e8</anchor>
      <arglist>(const std::string &amp;ServerName, const std::string &amp;DatabaseName, const std::string &amp;UserName, const std::string &amp;UserPassword, const std::string &amp;RoleName, const std::string &amp;CharSet=std::string(), const std::string &amp;CreateParams=std::string())</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::unique_ptr&lt; SqlConnection &gt;</type>
      <name>clone</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1Firebird.html</anchorfile>
      <anchor>afdecd38078e3862b45d198fa858d81ac</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>IBPP::Database</type>
      <name>connection</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1Firebird.html</anchorfile>
      <anchor>aa7ba16b32a3d92e3cc4160d986d08ad1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>startTransaction</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1Firebird.html</anchorfile>
      <anchor>a960e9311895223122098e85a8602f148</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>commitTransaction</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1Firebird.html</anchorfile>
      <anchor>ac9b3c6358a38bca5bc535d49fa882be4</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>rollbackTransaction</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1Firebird.html</anchorfile>
      <anchor>a5117b0b6e05237cdbea1399627bf7445</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::unique_ptr&lt; SqlStatement &gt;</type>
      <name>prepareStatement</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1Firebird.html</anchorfile>
      <anchor>aa258984838919fa5cc2c36bcf13024c8</anchor>
      <arglist>(const std::string &amp;sql) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>prepareForDropTables</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1Firebird.html</anchorfile>
      <anchor>aa2332ac3e679d96a726c19e96d912afa</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>autoincrementSql</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1Firebird.html</anchorfile>
      <anchor>aff52d3b18a53244d465137e5d0843910</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::vector&lt; std::string &gt;</type>
      <name>autoincrementCreateSequenceSql</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1Firebird.html</anchorfile>
      <anchor>a7799863a9224770b314a0ed3a3b32d15</anchor>
      <arglist>(const std::string &amp;table, const std::string &amp;id) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::vector&lt; std::string &gt;</type>
      <name>autoincrementDropSequenceSql</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1Firebird.html</anchorfile>
      <anchor>ac852ff52d08839fc837e56061f192726</anchor>
      <arglist>(const std::string &amp;table, const std::string &amp;id) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>autoincrementType</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1Firebird.html</anchorfile>
      <anchor>a416738afe4692ac4b4a07adc9dca173a</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>autoincrementInsertSuffix</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1Firebird.html</anchorfile>
      <anchor>a47f60db3d830354e31a6e89ac718bea3</anchor>
      <arglist>(const std::string &amp;id) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>dateTimeType</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1Firebird.html</anchorfile>
      <anchor>a8b979a16ea4abda4dcb7a540a2774448</anchor>
      <arglist>(SqlDateTimeType type) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>blobType</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1Firebird.html</anchorfile>
      <anchor>ad491d6d81ebed1f3ca16a753287e0073</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>textType</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1Firebird.html</anchorfile>
      <anchor>ad5d52166ee4d564a13ce89c50abdc7ba</anchor>
      <arglist>(int size) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>booleanType</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1Firebird.html</anchorfile>
      <anchor>afce1ead2f9cd848b4c8c2626024da480</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>supportAlterTable</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1Firebird.html</anchorfile>
      <anchor>aac9dac203b2ea822f3b1061b81eb74ae</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>usesRowsFromTo</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1Firebird.html</anchorfile>
      <anchor>a8e44d67e127a9c1ef987c19b386f7ca1</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>autoincrementSql</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1Firebird.html</anchorfile>
      <anchor>aff52d3b18a53244d465137e5d0843910</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::vector&lt; std::string &gt;</type>
      <name>autoincrementCreateSequenceSql</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1Firebird.html</anchorfile>
      <anchor>a7799863a9224770b314a0ed3a3b32d15</anchor>
      <arglist>(const std::string &amp;table, const std::string &amp;id) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::vector&lt; std::string &gt;</type>
      <name>autoincrementDropSequenceSql</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1Firebird.html</anchorfile>
      <anchor>ac852ff52d08839fc837e56061f192726</anchor>
      <arglist>(const std::string &amp;table, const std::string &amp;id) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>autoincrementType</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1Firebird.html</anchorfile>
      <anchor>a416738afe4692ac4b4a07adc9dca173a</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>autoincrementInsertSuffix</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1Firebird.html</anchorfile>
      <anchor>a47f60db3d830354e31a6e89ac718bea3</anchor>
      <arglist>(const std::string &amp;id) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>dateTimeType</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1Firebird.html</anchorfile>
      <anchor>a8b979a16ea4abda4dcb7a540a2774448</anchor>
      <arglist>(SqlDateTimeType type) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>blobType</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1Firebird.html</anchorfile>
      <anchor>ad491d6d81ebed1f3ca16a753287e0073</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>textType</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1Firebird.html</anchorfile>
      <anchor>ad5d52166ee4d564a13ce89c50abdc7ba</anchor>
      <arglist>(int size) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>booleanType</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1Firebird.html</anchorfile>
      <anchor>afce1ead2f9cd848b4c8c2626024da480</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>supportAlterTable</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1Firebird.html</anchorfile>
      <anchor>aac9dac203b2ea822f3b1061b81eb74ae</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>usesRowsFromTo</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1Firebird.html</anchorfile>
      <anchor>a8e44d67e127a9c1ef987c19b386f7ca1</anchor>
      <arglist>() const override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Dbo::FixedSqlConnectionPool</name>
    <filename>classWt_1_1Dbo_1_1FixedSqlConnectionPool.html</filename>
    <base>Wt::Dbo::SqlConnectionPool</base>
    <member kind="function">
      <type></type>
      <name>FixedSqlConnectionPool</name>
      <anchorfile>classWt_1_1Dbo_1_1FixedSqlConnectionPool.html</anchorfile>
      <anchor>a437db9e5f6d1f60614d6358997c4acc9</anchor>
      <arglist>(std::unique_ptr&lt; SqlConnection &gt; connection, int size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTimeout</name>
      <anchorfile>classWt_1_1Dbo_1_1FixedSqlConnectionPool.html</anchorfile>
      <anchor>aea8202906cf5264216a6e909b0008a74</anchor>
      <arglist>(std::chrono::steady_clock::duration timeout)</arglist>
    </member>
    <member kind="function">
      <type>std::chrono::steady_clock::duration</type>
      <name>timeout</name>
      <anchorfile>classWt_1_1Dbo_1_1FixedSqlConnectionPool.html</anchorfile>
      <anchor>ab7291dc4ff981598a75606ac29184002</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::unique_ptr&lt; SqlConnection &gt;</type>
      <name>getConnection</name>
      <anchorfile>classWt_1_1Dbo_1_1FixedSqlConnectionPool.html</anchorfile>
      <anchor>a01db441d42b79195e1efddb5daf08fb7</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>returnConnection</name>
      <anchorfile>classWt_1_1Dbo_1_1FixedSqlConnectionPool.html</anchorfile>
      <anchor>acbc45b358a071eb2e72dbd265b691f04</anchor>
      <arglist>(std::unique_ptr&lt; SqlConnection &gt;) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>prepareForDropTables</name>
      <anchorfile>classWt_1_1Dbo_1_1FixedSqlConnectionPool.html</anchorfile>
      <anchor>adcb2f9bd6d9c52fffdc6412246ed446c</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>handleTimeout</name>
      <anchorfile>classWt_1_1Dbo_1_1FixedSqlConnectionPool.html</anchorfile>
      <anchor>a1686353ea7f5f5e79ff1de661bf265e5</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Dbo::ForeignKeyConstraint</name>
    <filename>classWt_1_1Dbo_1_1ForeignKeyConstraint.html</filename>
  </compound>
  <compound kind="class">
    <name>Wt::Auth::FormBaseModel</name>
    <filename>classWt_1_1Auth_1_1FormBaseModel.html</filename>
    <base>Wt::WFormModel</base>
    <member kind="function">
      <type></type>
      <name>FormBaseModel</name>
      <anchorfile>classWt_1_1Auth_1_1FormBaseModel.html</anchorfile>
      <anchor>a44a317a22dde28a5267013e9c659bde4</anchor>
      <arglist>(const AuthService &amp;baseAuth, AbstractUserDatabase &amp;users)</arglist>
    </member>
    <member kind="function">
      <type>const AuthService *</type>
      <name>baseAuth</name>
      <anchorfile>classWt_1_1Auth_1_1FormBaseModel.html</anchorfile>
      <anchor>a37e8facdc2ea29975c948567b5d8192f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>AbstractUserDatabase &amp;</type>
      <name>users</name>
      <anchorfile>classWt_1_1Auth_1_1FormBaseModel.html</anchorfile>
      <anchor>a28037bb9c5b0ef277b3832b4f823ae11</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>addPasswordAuth</name>
      <anchorfile>classWt_1_1Auth_1_1FormBaseModel.html</anchorfile>
      <anchor>a970b5cff2c2fe0ce9eefbb32c7cf0aed</anchor>
      <arglist>(const AbstractPasswordService *auth)</arglist>
    </member>
    <member kind="function">
      <type>const AbstractPasswordService *</type>
      <name>passwordAuth</name>
      <anchorfile>classWt_1_1Auth_1_1FormBaseModel.html</anchorfile>
      <anchor>a218d6385e522ebfcf7c2ab4cf7368111</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>addOAuth</name>
      <anchorfile>classWt_1_1Auth_1_1FormBaseModel.html</anchorfile>
      <anchor>ab69e01f34fc48375ec6fe9412b2b8ed0</anchor>
      <arglist>(const OAuthService *auth)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>addOAuth</name>
      <anchorfile>classWt_1_1Auth_1_1FormBaseModel.html</anchorfile>
      <anchor>a2e79d700403b9127af19ca15772b3bb0</anchor>
      <arglist>(const std::vector&lt; const OAuthService * &gt; &amp;auth)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; const OAuthService * &gt;</type>
      <name>oAuth</name>
      <anchorfile>classWt_1_1Auth_1_1FormBaseModel.html</anchorfile>
      <anchor>a688aad26179f370121d45694a41ec85b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WString</type>
      <name>label</name>
      <anchorfile>classWt_1_1Auth_1_1FormBaseModel.html</anchorfile>
      <anchor>a3fbea96cf8a798055725247933dad6ed</anchor>
      <arglist>(Field field) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>loginUser</name>
      <anchorfile>classWt_1_1Auth_1_1FormBaseModel.html</anchorfile>
      <anchor>ad2d4615e7d27bbc5fb2a551bf184aa2e</anchor>
      <arglist>(Login &amp;login, User &amp;user, LoginState state=LoginState::Strong)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const Field</type>
      <name>LoginNameField</name>
      <anchorfile>classWt_1_1Auth_1_1FormBaseModel.html</anchorfile>
      <anchor>af534625d4e3c8b4e428efa3e013be003</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WGLWidget::Framebuffer</name>
    <filename>classWt_1_1WGLWidget_1_1Framebuffer.html</filename>
    <base>Wt::WGLWidget::GlObject</base>
  </compound>
  <compound kind="struct">
    <name>Wt::WTemplate::Functions</name>
    <filename>structWt_1_1WTemplate_1_1Functions.html</filename>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>tr</name>
      <anchorfile>structWt_1_1WTemplate_1_1Functions.html</anchorfile>
      <anchor>a849649f5cb5609a681cb9361117d0348</anchor>
      <arglist>(WTemplate *t, const std::vector&lt; WString &gt; &amp;args, std::ostream &amp;result)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>block</name>
      <anchorfile>structWt_1_1WTemplate_1_1Functions.html</anchorfile>
      <anchor>a734f46b7a8155cbc6cf0407dd3dbe85d</anchor>
      <arglist>(WTemplate *t, const std::vector&lt; WString &gt; &amp;args, std::ostream &amp;result)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>while_f</name>
      <anchorfile>structWt_1_1WTemplate_1_1Functions.html</anchorfile>
      <anchor>ab070ae026639fb7edc0c70db6510abc7</anchor>
      <arglist>(WTemplate *t, const std::vector&lt; WString &gt; &amp;args, std::ostream &amp;result)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>id</name>
      <anchorfile>structWt_1_1WTemplate_1_1Functions.html</anchorfile>
      <anchor>a73c9f4b259c0947e168da9b6925cfdad</anchor>
      <arglist>(WTemplate *t, const std::vector&lt; WString &gt; &amp;args, std::ostream &amp;result)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WGLWidget::GlObject</name>
    <filename>classWt_1_1WGLWidget_1_1GlObject.html</filename>
  </compound>
  <compound kind="class">
    <name>Wt::Auth::GoogleService</name>
    <filename>classWt_1_1Auth_1_1GoogleService.html</filename>
    <base>Wt::Auth::OidcService</base>
    <member kind="function">
      <type></type>
      <name>GoogleService</name>
      <anchorfile>classWt_1_1Auth_1_1GoogleService.html</anchorfile>
      <anchor>a86bcf010d33b29810f74664fdc926a1c</anchor>
      <arglist>(const AuthService &amp;baseAuth)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>redirectEndpointPath</name>
      <anchorfile>classWt_1_1Auth_1_1GoogleService.html</anchorfile>
      <anchor>abe882038b2428240b08ae81e518f0aa8</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>configured</name>
      <anchorfile>classWt_1_1Auth_1_1GoogleService.html</anchorfile>
      <anchor>ab9b1a1d09831fc92a8fdbef39de4899e</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Auth::HashFunction</name>
    <filename>classWt_1_1Auth_1_1HashFunction.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~HashFunction</name>
      <anchorfile>classWt_1_1Auth_1_1HashFunction.html</anchorfile>
      <anchor>af000dbbffc0dfd84c310e2bdab9c5ffe</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>name</name>
      <anchorfile>classWt_1_1Auth_1_1HashFunction.html</anchorfile>
      <anchor>aaa3f4d60d558577c118c3d8684f72ed4</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>compute</name>
      <anchorfile>classWt_1_1Auth_1_1HashFunction.html</anchorfile>
      <anchor>a7a79f2aae54b390ba8a3b451d590ac92</anchor>
      <arglist>(const std::string &amp;msg, const std::string &amp;salt) const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>verify</name>
      <anchorfile>classWt_1_1Auth_1_1HashFunction.html</anchorfile>
      <anchor>a7e6edce0c48cf7ec74ea7df78335e87c</anchor>
      <arglist>(const std::string &amp;msg, const std::string &amp;salt, const std::string &amp;hash) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Http::Message::Header</name>
    <filename>classWt_1_1Http_1_1Message_1_1Header.html</filename>
    <member kind="function">
      <type></type>
      <name>Header</name>
      <anchorfile>classWt_1_1Http_1_1Message_1_1Header.html</anchorfile>
      <anchor>ae6382d914c857edcb61d878cd3c96faf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Header</name>
      <anchorfile>classWt_1_1Http_1_1Message_1_1Header.html</anchorfile>
      <anchor>a1f30259eb37c9b380cf6edd715a44ac7</anchor>
      <arglist>(const std::string &amp;name, const std::string &amp;value)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Header</name>
      <anchorfile>classWt_1_1Http_1_1Message_1_1Header.html</anchorfile>
      <anchor>ab5d2948443b66ef4771be6872cd9302a</anchor>
      <arglist>(const Header &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setName</name>
      <anchorfile>classWt_1_1Http_1_1Message_1_1Header.html</anchorfile>
      <anchor>afb63b23e332531e6c53260a6223834a8</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>name</name>
      <anchorfile>classWt_1_1Http_1_1Message_1_1Header.html</anchorfile>
      <anchor>ae0e6a12ed23a39eecc45d81fd6fdbb5a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setValue</name>
      <anchorfile>classWt_1_1Http_1_1Message_1_1Header.html</anchorfile>
      <anchor>a2a626182b1920748b3ca009126fef772</anchor>
      <arglist>(const std::string &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>value</name>
      <anchorfile>classWt_1_1Http_1_1Message_1_1Header.html</anchorfile>
      <anchor>acb8db5ee49138902a54657555bb1b1e2</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Mail::Message::Header</name>
    <filename>classWt_1_1Mail_1_1Message_1_1Header.html</filename>
    <member kind="function">
      <type></type>
      <name>Header</name>
      <anchorfile>classWt_1_1Mail_1_1Message_1_1Header.html</anchorfile>
      <anchor>a4762da830ccd9542817cf46c615696ae</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Header</name>
      <anchorfile>classWt_1_1Mail_1_1Message_1_1Header.html</anchorfile>
      <anchor>adaf4d1369b78bffbf589fa23dd3bf536</anchor>
      <arglist>(const std::string &amp;name, const std::string &amp;value)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Header</name>
      <anchorfile>classWt_1_1Mail_1_1Message_1_1Header.html</anchorfile>
      <anchor>aed0cb73d51a6dd96a469bb1a4b33126e</anchor>
      <arglist>(const Header &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setName</name>
      <anchorfile>classWt_1_1Mail_1_1Message_1_1Header.html</anchorfile>
      <anchor>a5f27f1f3614b3c6b1f7c4126a2d8938e</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>name</name>
      <anchorfile>classWt_1_1Mail_1_1Message_1_1Header.html</anchorfile>
      <anchor>a07d45a89a912e7e5a98c975dfae155fd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setValue</name>
      <anchorfile>classWt_1_1Mail_1_1Message_1_1Header.html</anchorfile>
      <anchor>a09bfbe231058096e4542155d0d862e00</anchor>
      <arglist>(const std::string &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>value</name>
      <anchorfile>classWt_1_1Mail_1_1Message_1_1Header.html</anchorfile>
      <anchor>aa4cacf2fce496b032efa254eb3f0e18c</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Auth::Identity</name>
    <filename>classWt_1_1Auth_1_1Identity.html</filename>
    <member kind="function">
      <type></type>
      <name>Identity</name>
      <anchorfile>classWt_1_1Auth_1_1Identity.html</anchorfile>
      <anchor>a449befb50421eca487fb921a86624881</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Identity</name>
      <anchorfile>classWt_1_1Auth_1_1Identity.html</anchorfile>
      <anchor>a4d222837201d09347fc411cc2ddaf92b</anchor>
      <arglist>(const std::string &amp;provider, const std::string &amp;id, const WString &amp;name, const std::string &amp;email, bool emailVerified)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isValid</name>
      <anchorfile>classWt_1_1Auth_1_1Identity.html</anchorfile>
      <anchor>a0cecd842fd6235d55bd43ff00adc555a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>provider</name>
      <anchorfile>classWt_1_1Auth_1_1Identity.html</anchorfile>
      <anchor>a7685ce88dbb909f5ead9bdac33505b62</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>id</name>
      <anchorfile>classWt_1_1Auth_1_1Identity.html</anchorfile>
      <anchor>a42c293946ae39e1832972564bfc2823b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const WString &amp;</type>
      <name>name</name>
      <anchorfile>classWt_1_1Auth_1_1Identity.html</anchorfile>
      <anchor>afc0aaa759539f1d6cb5f7ab401d2a37d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>email</name>
      <anchorfile>classWt_1_1Auth_1_1Identity.html</anchorfile>
      <anchor>a43c37584703707c410056e3e73936214</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>emailVerified</name>
      <anchorfile>classWt_1_1Auth_1_1Identity.html</anchorfile>
      <anchor>abf32a82078ce388e5bdec7e052f06d71</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const Identity</type>
      <name>Invalid</name>
      <anchorfile>classWt_1_1Auth_1_1Identity.html</anchorfile>
      <anchor>aca9a52ebe8245174cff6452c833ce31e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const std::string</type>
      <name>LoginName</name>
      <anchorfile>classWt_1_1Auth_1_1Identity.html</anchorfile>
      <anchor>a1d680fd0dbf7a12684a511d74081eb06</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WPainter::Image</name>
    <filename>classWt_1_1WPainter_1_1Image.html</filename>
    <member kind="function">
      <type></type>
      <name>Image</name>
      <anchorfile>classWt_1_1WPainter_1_1Image.html</anchorfile>
      <anchor>a54578ddf7c3c625ce0e32173a9f0e781</anchor>
      <arglist>(const std::string &amp;url, int width, int height)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Image</name>
      <anchorfile>classWt_1_1WPainter_1_1Image.html</anchorfile>
      <anchor>a7a82ffdf4f9222bf44175ee0e7f62582</anchor>
      <arglist>(const std::string &amp;url, const std::string &amp;file)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>uri</name>
      <anchorfile>classWt_1_1WPainter_1_1Image.html</anchorfile>
      <anchor>acf7719f9824f6bd0a8d0d4727115f457</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>width</name>
      <anchorfile>classWt_1_1WPainter_1_1Image.html</anchorfile>
      <anchor>aaf13c1098f4fab30bdfafadb469dea6f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>height</name>
      <anchorfile>classWt_1_1WPainter_1_1Image.html</anchorfile>
      <anchor>abd50aca73dffb5dfb787c28a525b599a</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Chart::WCartesian3DChart::IntersectionPlane</name>
    <filename>structWt_1_1Chart_1_1WCartesian3DChart_1_1IntersectionPlane.html</filename>
    <member kind="function">
      <type></type>
      <name>IntersectionPlane</name>
      <anchorfile>structWt_1_1Chart_1_1WCartesian3DChart_1_1IntersectionPlane.html</anchorfile>
      <anchor>a3863b1e41ce1653b7493cde3084efc1a</anchor>
      <arglist>(Axis axis, double position, WColor col)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Auth::IssuedToken</name>
    <filename>classWt_1_1Auth_1_1IssuedToken.html</filename>
    <member kind="function">
      <type></type>
      <name>IssuedToken</name>
      <anchorfile>classWt_1_1Auth_1_1IssuedToken.html</anchorfile>
      <anchor>ad6a2b95979be78f196edcb12bcc905f9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>IssuedToken</name>
      <anchorfile>classWt_1_1Auth_1_1IssuedToken.html</anchorfile>
      <anchor>ac42eb735fcf46f04394b9e7b25f7b5d7</anchor>
      <arglist>(const std::string &amp;id, const AbstractUserDatabase &amp;userDatabase)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>checkValid</name>
      <anchorfile>classWt_1_1Auth_1_1IssuedToken.html</anchorfile>
      <anchor>a48bc119da89dc7cccc2622efd92df6c3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::string</type>
      <name>id</name>
      <anchorfile>classWt_1_1Auth_1_1IssuedToken.html</anchorfile>
      <anchor>a602131c38672fbfd05b76a0184e36d03</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::string</type>
      <name>value</name>
      <anchorfile>classWt_1_1Auth_1_1IssuedToken.html</anchorfile>
      <anchor>a8ff8e0b4bc19c1343b9794f630943a77</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const WDateTime</type>
      <name>expirationTime</name>
      <anchorfile>classWt_1_1Auth_1_1IssuedToken.html</anchorfile>
      <anchor>a656d89935b0bbbd057d7e8e06a16f971</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::string</type>
      <name>purpose</name>
      <anchorfile>classWt_1_1Auth_1_1IssuedToken.html</anchorfile>
      <anchor>a70670f4e7a6d4a974f8795ab1014fed2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::string</type>
      <name>scope</name>
      <anchorfile>classWt_1_1Auth_1_1IssuedToken.html</anchorfile>
      <anchor>a48fa6b939c73813c20c0b1476e4ac7ad</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::string</type>
      <name>redirectUri</name>
      <anchorfile>classWt_1_1Auth_1_1IssuedToken.html</anchorfile>
      <anchor>a2c83edf802a43839ca2cf87adba99d1c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const User</type>
      <name>user</name>
      <anchorfile>classWt_1_1Auth_1_1IssuedToken.html</anchorfile>
      <anchor>acaca6a863782a750b22077006d18d1e2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const OAuthClient</type>
      <name>authClient</name>
      <anchorfile>classWt_1_1Auth_1_1IssuedToken.html</anchorfile>
      <anchor>a6796fa67d950cea1ee6fa9adee4f0c65</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::ItemDataRole</name>
    <filename>classWt_1_1ItemDataRole.html</filename>
    <member kind="function">
      <type>constexpr</type>
      <name>ItemDataRole</name>
      <anchorfile>classWt_1_1ItemDataRole.html</anchorfile>
      <anchor>a95dd11c8d6d4ec738d8a77ed6a36f274</anchor>
      <arglist>(int role) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr int</type>
      <name>value</name>
      <anchorfile>classWt_1_1ItemDataRole.html</anchorfile>
      <anchor>abb0f38bda456085d7ceb999b4bbf3f92</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const int</type>
      <name>Display</name>
      <anchorfile>classWt_1_1ItemDataRole.html</anchorfile>
      <anchor>a9384385a63c07daaeee6e1365f063082</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const int</type>
      <name>Decoration</name>
      <anchorfile>classWt_1_1ItemDataRole.html</anchorfile>
      <anchor>adb71f76394281016febf0a9e5dde99bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const int</type>
      <name>Edit</name>
      <anchorfile>classWt_1_1ItemDataRole.html</anchorfile>
      <anchor>a7c4c3e1fad2c0b0358cdf535ca856b69</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const int</type>
      <name>StyleClass</name>
      <anchorfile>classWt_1_1ItemDataRole.html</anchorfile>
      <anchor>ae84d343fbf7093c610ff7fbdd0f7fa7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const int</type>
      <name>Checked</name>
      <anchorfile>classWt_1_1ItemDataRole.html</anchorfile>
      <anchor>aa3523d3b986535339737f49032e669ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const int</type>
      <name>ToolTip</name>
      <anchorfile>classWt_1_1ItemDataRole.html</anchorfile>
      <anchor>a81ddfb5978015ef80319445b3cb0749d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const int</type>
      <name>Link</name>
      <anchorfile>classWt_1_1ItemDataRole.html</anchorfile>
      <anchor>a4f39ded746ca62ea63ed222f2b852cf6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const int</type>
      <name>MimeType</name>
      <anchorfile>classWt_1_1ItemDataRole.html</anchorfile>
      <anchor>affe22762efa1f414a1f9d89c494eaed1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const int</type>
      <name>Level</name>
      <anchorfile>classWt_1_1ItemDataRole.html</anchorfile>
      <anchor>af7f52e56d69d99a9ff3815c4eb9770b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const int</type>
      <name>MarkerPenColor</name>
      <anchorfile>classWt_1_1ItemDataRole.html</anchorfile>
      <anchor>ae8bed21aa155649f81455fc27fb6bb49</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const int</type>
      <name>MarkerBrushColor</name>
      <anchorfile>classWt_1_1ItemDataRole.html</anchorfile>
      <anchor>a596a0e46422c5e87712a41ccc6d713c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const int</type>
      <name>MarkerScaleFactor</name>
      <anchorfile>classWt_1_1ItemDataRole.html</anchorfile>
      <anchor>a3ab7fd396561b0d7eb6a7f282ea29e70</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const int</type>
      <name>MarkerType</name>
      <anchorfile>classWt_1_1ItemDataRole.html</anchorfile>
      <anchor>af593515a1cc8e972679cc00e362db4ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const int</type>
      <name>BarPenColor</name>
      <anchorfile>classWt_1_1ItemDataRole.html</anchorfile>
      <anchor>a44e6a756dab78705251a0dd47d76cd4f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const int</type>
      <name>BarBrushColor</name>
      <anchorfile>classWt_1_1ItemDataRole.html</anchorfile>
      <anchor>a80b5cf583101671cadd601b59b4c23ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const int</type>
      <name>User</name>
      <anchorfile>classWt_1_1ItemDataRole.html</anchorfile>
      <anchor>a2c1af1bd2892a981fe00fff9c84d8aff</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Wt::WStringStream::iterator</name>
    <filename>structWt_1_1WStringStream_1_1iterator.html</filename>
  </compound>
  <compound kind="class">
    <name>Wt::Dbo::collection::iterator</name>
    <filename>classWt_1_1Dbo_1_1collection_1_1iterator.html</filename>
    <member kind="function">
      <type></type>
      <name>iterator</name>
      <anchorfile>classWt_1_1Dbo_1_1collection_1_1iterator.html</anchorfile>
      <anchor>a2a1fc326dc3e9fd2481474265684cd96</anchor>
      <arglist>(const iterator &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~iterator</name>
      <anchorfile>classWt_1_1Dbo_1_1collection_1_1iterator.html</anchorfile>
      <anchor>a38e29354a59f37c21fc9256eac448ccf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>iterator &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1Dbo_1_1collection_1_1iterator.html</anchorfile>
      <anchor>a1721d43a4942b8d299fe339cb7998e73</anchor>
      <arglist>(const iterator &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>C &amp;</type>
      <name>operator*</name>
      <anchorfile>classWt_1_1Dbo_1_1collection_1_1iterator.html</anchorfile>
      <anchor>a25017c318c5ffdb74572c55b6e828b23</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>C *</type>
      <name>operator-&gt;</name>
      <anchorfile>classWt_1_1Dbo_1_1collection_1_1iterator.html</anchorfile>
      <anchor>af857e37a583737b0c3f4688e3dbd9cc9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classWt_1_1Dbo_1_1collection_1_1iterator.html</anchorfile>
      <anchor>a7b3cb2b006cf40643e7e90067bc0a34b</anchor>
      <arglist>(const iterator &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classWt_1_1Dbo_1_1collection_1_1iterator.html</anchorfile>
      <anchor>a22288d751a9f7769f1555d14f9868a86</anchor>
      <arglist>(const iterator &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>iterator &amp;</type>
      <name>operator++</name>
      <anchorfile>classWt_1_1Dbo_1_1collection_1_1iterator.html</anchorfile>
      <anchor>acc0bf632de3ea3c77d498e05c775c519</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>operator++</name>
      <anchorfile>classWt_1_1Dbo_1_1collection_1_1iterator.html</anchorfile>
      <anchor>a7ec894ba3e75c7d69ab6545da67bf7bc</anchor>
      <arglist>(int)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WGLWidget::JavaScriptMatrix4x4</name>
    <filename>classWt_1_1WGLWidget_1_1JavaScriptMatrix4x4.html</filename>
    <member kind="function">
      <type></type>
      <name>JavaScriptMatrix4x4</name>
      <anchorfile>classWt_1_1WGLWidget_1_1JavaScriptMatrix4x4.html</anchorfile>
      <anchor>ad700af3d7d72064c169870d4f0d94697</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>initialized</name>
      <anchorfile>classWt_1_1WGLWidget_1_1JavaScriptMatrix4x4.html</anchorfile>
      <anchor>a1c1b5e19ad2cb1fae8e29a2963ea638b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasContext</name>
      <anchorfile>classWt_1_1WGLWidget_1_1JavaScriptMatrix4x4.html</anchorfile>
      <anchor>a110225922f1cfe016f3e21abfcadba07</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>jsRef</name>
      <anchorfile>classWt_1_1WGLWidget_1_1JavaScriptMatrix4x4.html</anchorfile>
      <anchor>a612ceb7e169d85b31aa1ae86a8b85d3c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WMatrix4x4</type>
      <name>value</name>
      <anchorfile>classWt_1_1WGLWidget_1_1JavaScriptMatrix4x4.html</anchorfile>
      <anchor>a53c331d233eda425de32f3d8c83d195c</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WGLWidget::JavaScriptVector</name>
    <filename>classWt_1_1WGLWidget_1_1JavaScriptVector.html</filename>
    <member kind="function">
      <type></type>
      <name>JavaScriptVector</name>
      <anchorfile>classWt_1_1WGLWidget_1_1JavaScriptVector.html</anchorfile>
      <anchor>a536f1fdba53630d3b071b8f04b28dcf4</anchor>
      <arglist>(unsigned length)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>initialized</name>
      <anchorfile>classWt_1_1WGLWidget_1_1JavaScriptVector.html</anchorfile>
      <anchor>a7a7d507edf04252392deee3e59d531fd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasContext</name>
      <anchorfile>classWt_1_1WGLWidget_1_1JavaScriptVector.html</anchorfile>
      <anchor>a9cd44eed8ee43ccd92d3f7f6d583b959</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>unsigned</type>
      <name>length</name>
      <anchorfile>classWt_1_1WGLWidget_1_1JavaScriptVector.html</anchorfile>
      <anchor>a0bdc7fcccaaffc20dfe3fc9d5551fa8d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>jsRef</name>
      <anchorfile>classWt_1_1WGLWidget_1_1JavaScriptVector.html</anchorfile>
      <anchor>a45e8e4093ee8b542cf34bc9f3cda5c5b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; float &gt;</type>
      <name>value</name>
      <anchorfile>classWt_1_1WGLWidget_1_1JavaScriptVector.html</anchorfile>
      <anchor>adf401f8a1ba8b57c24ce4daee9f6f28a</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::JSignal</name>
    <filename>classWt_1_1JSignal.html</filename>
    <templarg>A</templarg>
    <base>Wt::EventSignalBase</base>
    <member kind="function">
      <type></type>
      <name>JSignal</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>ae11c6c13478f958489504e795ab4f29f</anchor>
      <arglist>(WObject *object, const std::string &amp;name, bool collectSlotJavaScript=false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~JSignal</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>a597f615429a2f153ae1788de48f232dc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>name</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>a5d934e6626016915137fd0b01adc87e1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::string</type>
      <name>createCall</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>ac7b6d3575d8443d4ae4ac85f5ed869e1</anchor>
      <arglist>(std::initializer_list&lt; std::string &gt; args) const</arglist>
    </member>
    <member kind="function">
      <type>const std::string</type>
      <name>createEventCall</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>a40e4e42f64060345e26ba85e612f217d</anchor>
      <arglist>(const std::string &amp;jsObject, const std::string &amp;jsEvent, std::initializer_list&lt; std::string &gt; args) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isConnected</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>aa1ca52a2197cbb9d9c6bd818c2e3b719</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>a3988327cd744b0316d8c18b0faa1820c</anchor>
      <arglist>(F function)</arglist>
    </member>
    <member kind="function">
      <type>Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>a2b2cbbeef96ed318d061c75cfdc94b46</anchor>
      <arglist>(T *target, void(V::*method)(B...))</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>connect</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>aa1bbce0061f64c60209d3129909f866e</anchor>
      <arglist>(const std::string &amp;function)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>connect</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>a2a9199db323365ba7df5d8925217dda6</anchor>
      <arglist>(JSlot &amp;slot)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>emit</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>a4bb81029fe99094c09dbb060360a77f7</anchor>
      <arglist>(A... args) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>a2e38fdbee2b1dc791c54b804b6d0a9d5</anchor>
      <arglist>(A... args) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>ad8779cd000919968e6f693c57a7da6fd</anchor>
      <arglist>(WObject *target, void(WObject::*method)()) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>JSignal&lt; ::int64_t &gt;</name>
    <filename>classWt_1_1JSignal.html</filename>
    <base>Wt::EventSignalBase</base>
    <member kind="function">
      <type></type>
      <name>JSignal</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>ae11c6c13478f958489504e795ab4f29f</anchor>
      <arglist>(WObject *object, const std::string &amp;name, bool collectSlotJavaScript=false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~JSignal</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>a597f615429a2f153ae1788de48f232dc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>name</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>a5d934e6626016915137fd0b01adc87e1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::string</type>
      <name>createCall</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>ac7b6d3575d8443d4ae4ac85f5ed869e1</anchor>
      <arglist>(std::initializer_list&lt; std::string &gt; args) const</arglist>
    </member>
    <member kind="function">
      <type>const std::string</type>
      <name>createEventCall</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>a40e4e42f64060345e26ba85e612f217d</anchor>
      <arglist>(const std::string &amp;jsObject, const std::string &amp;jsEvent, std::initializer_list&lt; std::string &gt; args) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isConnected</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>aa1ca52a2197cbb9d9c6bd818c2e3b719</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>a3988327cd744b0316d8c18b0faa1820c</anchor>
      <arglist>(F function)</arglist>
    </member>
    <member kind="function">
      <type>Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>a2b2cbbeef96ed318d061c75cfdc94b46</anchor>
      <arglist>(T *target, void(V::*method)(B...))</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>connect</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>aa1bbce0061f64c60209d3129909f866e</anchor>
      <arglist>(const std::string &amp;function)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>connect</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>a2a9199db323365ba7df5d8925217dda6</anchor>
      <arglist>(JSlot &amp;slot)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>ad8779cd000919968e6f693c57a7da6fd</anchor>
      <arglist>(WObject *target, void(WObject::*method)()) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>emit</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>a4bb81029fe99094c09dbb060360a77f7</anchor>
      <arglist>(A... args) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>a2e38fdbee2b1dc791c54b804b6d0a9d5</anchor>
      <arglist>(A... args) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>JSignal&lt; ::uint64_t &gt;</name>
    <filename>classWt_1_1JSignal.html</filename>
    <base>Wt::EventSignalBase</base>
    <member kind="function">
      <type></type>
      <name>JSignal</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>ae11c6c13478f958489504e795ab4f29f</anchor>
      <arglist>(WObject *object, const std::string &amp;name, bool collectSlotJavaScript=false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~JSignal</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>a597f615429a2f153ae1788de48f232dc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>name</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>a5d934e6626016915137fd0b01adc87e1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::string</type>
      <name>createCall</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>ac7b6d3575d8443d4ae4ac85f5ed869e1</anchor>
      <arglist>(std::initializer_list&lt; std::string &gt; args) const</arglist>
    </member>
    <member kind="function">
      <type>const std::string</type>
      <name>createEventCall</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>a40e4e42f64060345e26ba85e612f217d</anchor>
      <arglist>(const std::string &amp;jsObject, const std::string &amp;jsEvent, std::initializer_list&lt; std::string &gt; args) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isConnected</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>aa1ca52a2197cbb9d9c6bd818c2e3b719</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>a3988327cd744b0316d8c18b0faa1820c</anchor>
      <arglist>(F function)</arglist>
    </member>
    <member kind="function">
      <type>Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>a2b2cbbeef96ed318d061c75cfdc94b46</anchor>
      <arglist>(T *target, void(V::*method)(B...))</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>connect</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>aa1bbce0061f64c60209d3129909f866e</anchor>
      <arglist>(const std::string &amp;function)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>connect</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>a2a9199db323365ba7df5d8925217dda6</anchor>
      <arglist>(JSlot &amp;slot)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>ad8779cd000919968e6f693c57a7da6fd</anchor>
      <arglist>(WObject *target, void(WObject::*method)()) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>emit</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>a4bb81029fe99094c09dbb060360a77f7</anchor>
      <arglist>(A... args) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>a2e38fdbee2b1dc791c54b804b6d0a9d5</anchor>
      <arglist>(A... args) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>JSignal&lt; bool &gt;</name>
    <filename>classWt_1_1JSignal.html</filename>
    <base>Wt::EventSignalBase</base>
    <member kind="function">
      <type></type>
      <name>JSignal</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>ae11c6c13478f958489504e795ab4f29f</anchor>
      <arglist>(WObject *object, const std::string &amp;name, bool collectSlotJavaScript=false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~JSignal</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>a597f615429a2f153ae1788de48f232dc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>name</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>a5d934e6626016915137fd0b01adc87e1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::string</type>
      <name>createCall</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>ac7b6d3575d8443d4ae4ac85f5ed869e1</anchor>
      <arglist>(std::initializer_list&lt; std::string &gt; args) const</arglist>
    </member>
    <member kind="function">
      <type>const std::string</type>
      <name>createEventCall</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>a40e4e42f64060345e26ba85e612f217d</anchor>
      <arglist>(const std::string &amp;jsObject, const std::string &amp;jsEvent, std::initializer_list&lt; std::string &gt; args) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isConnected</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>aa1ca52a2197cbb9d9c6bd818c2e3b719</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>a3988327cd744b0316d8c18b0faa1820c</anchor>
      <arglist>(F function)</arglist>
    </member>
    <member kind="function">
      <type>Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>a2b2cbbeef96ed318d061c75cfdc94b46</anchor>
      <arglist>(T *target, void(V::*method)(B...))</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>connect</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>aa1bbce0061f64c60209d3129909f866e</anchor>
      <arglist>(const std::string &amp;function)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>connect</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>a2a9199db323365ba7df5d8925217dda6</anchor>
      <arglist>(JSlot &amp;slot)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>ad8779cd000919968e6f693c57a7da6fd</anchor>
      <arglist>(WObject *target, void(WObject::*method)()) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>emit</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>a4bb81029fe99094c09dbb060360a77f7</anchor>
      <arglist>(A... args) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>a2e38fdbee2b1dc791c54b804b6d0a9d5</anchor>
      <arglist>(A... args) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>JSignal&lt; double &gt;</name>
    <filename>classWt_1_1JSignal.html</filename>
    <base>Wt::EventSignalBase</base>
    <member kind="function">
      <type></type>
      <name>JSignal</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>ae11c6c13478f958489504e795ab4f29f</anchor>
      <arglist>(WObject *object, const std::string &amp;name, bool collectSlotJavaScript=false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~JSignal</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>a597f615429a2f153ae1788de48f232dc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>name</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>a5d934e6626016915137fd0b01adc87e1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::string</type>
      <name>createCall</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>ac7b6d3575d8443d4ae4ac85f5ed869e1</anchor>
      <arglist>(std::initializer_list&lt; std::string &gt; args) const</arglist>
    </member>
    <member kind="function">
      <type>const std::string</type>
      <name>createEventCall</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>a40e4e42f64060345e26ba85e612f217d</anchor>
      <arglist>(const std::string &amp;jsObject, const std::string &amp;jsEvent, std::initializer_list&lt; std::string &gt; args) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isConnected</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>aa1ca52a2197cbb9d9c6bd818c2e3b719</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>a3988327cd744b0316d8c18b0faa1820c</anchor>
      <arglist>(F function)</arglist>
    </member>
    <member kind="function">
      <type>Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>a2b2cbbeef96ed318d061c75cfdc94b46</anchor>
      <arglist>(T *target, void(V::*method)(B...))</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>connect</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>aa1bbce0061f64c60209d3129909f866e</anchor>
      <arglist>(const std::string &amp;function)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>connect</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>a2a9199db323365ba7df5d8925217dda6</anchor>
      <arglist>(JSlot &amp;slot)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>ad8779cd000919968e6f693c57a7da6fd</anchor>
      <arglist>(WObject *target, void(WObject::*method)()) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>emit</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>a4bb81029fe99094c09dbb060360a77f7</anchor>
      <arglist>(A... args) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>a2e38fdbee2b1dc791c54b804b6d0a9d5</anchor>
      <arglist>(A... args) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>JSignal&lt; double, double &gt;</name>
    <filename>classWt_1_1JSignal.html</filename>
    <base>Wt::EventSignalBase</base>
    <member kind="function">
      <type></type>
      <name>JSignal</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>ae11c6c13478f958489504e795ab4f29f</anchor>
      <arglist>(WObject *object, const std::string &amp;name, bool collectSlotJavaScript=false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~JSignal</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>a597f615429a2f153ae1788de48f232dc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>name</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>a5d934e6626016915137fd0b01adc87e1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::string</type>
      <name>createCall</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>ac7b6d3575d8443d4ae4ac85f5ed869e1</anchor>
      <arglist>(std::initializer_list&lt; std::string &gt; args) const</arglist>
    </member>
    <member kind="function">
      <type>const std::string</type>
      <name>createEventCall</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>a40e4e42f64060345e26ba85e612f217d</anchor>
      <arglist>(const std::string &amp;jsObject, const std::string &amp;jsEvent, std::initializer_list&lt; std::string &gt; args) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isConnected</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>aa1ca52a2197cbb9d9c6bd818c2e3b719</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>a3988327cd744b0316d8c18b0faa1820c</anchor>
      <arglist>(F function)</arglist>
    </member>
    <member kind="function">
      <type>Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>a2b2cbbeef96ed318d061c75cfdc94b46</anchor>
      <arglist>(T *target, void(V::*method)(B...))</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>connect</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>aa1bbce0061f64c60209d3129909f866e</anchor>
      <arglist>(const std::string &amp;function)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>connect</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>a2a9199db323365ba7df5d8925217dda6</anchor>
      <arglist>(JSlot &amp;slot)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>ad8779cd000919968e6f693c57a7da6fd</anchor>
      <arglist>(WObject *target, void(WObject::*method)()) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>emit</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>a4bb81029fe99094c09dbb060360a77f7</anchor>
      <arglist>(A... args) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>a2e38fdbee2b1dc791c54b804b6d0a9d5</anchor>
      <arglist>(A... args) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>JSignal&lt; int &gt;</name>
    <filename>classWt_1_1JSignal.html</filename>
    <base>Wt::EventSignalBase</base>
    <member kind="function">
      <type></type>
      <name>JSignal</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>ae11c6c13478f958489504e795ab4f29f</anchor>
      <arglist>(WObject *object, const std::string &amp;name, bool collectSlotJavaScript=false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~JSignal</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>a597f615429a2f153ae1788de48f232dc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>name</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>a5d934e6626016915137fd0b01adc87e1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::string</type>
      <name>createCall</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>ac7b6d3575d8443d4ae4ac85f5ed869e1</anchor>
      <arglist>(std::initializer_list&lt; std::string &gt; args) const</arglist>
    </member>
    <member kind="function">
      <type>const std::string</type>
      <name>createEventCall</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>a40e4e42f64060345e26ba85e612f217d</anchor>
      <arglist>(const std::string &amp;jsObject, const std::string &amp;jsEvent, std::initializer_list&lt; std::string &gt; args) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isConnected</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>aa1ca52a2197cbb9d9c6bd818c2e3b719</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>a3988327cd744b0316d8c18b0faa1820c</anchor>
      <arglist>(F function)</arglist>
    </member>
    <member kind="function">
      <type>Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>a2b2cbbeef96ed318d061c75cfdc94b46</anchor>
      <arglist>(T *target, void(V::*method)(B...))</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>connect</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>aa1bbce0061f64c60209d3129909f866e</anchor>
      <arglist>(const std::string &amp;function)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>connect</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>a2a9199db323365ba7df5d8925217dda6</anchor>
      <arglist>(JSlot &amp;slot)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>ad8779cd000919968e6f693c57a7da6fd</anchor>
      <arglist>(WObject *target, void(WObject::*method)()) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>emit</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>a4bb81029fe99094c09dbb060360a77f7</anchor>
      <arglist>(A... args) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>a2e38fdbee2b1dc791c54b804b6d0a9d5</anchor>
      <arglist>(A... args) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>JSignal&lt; int, int &gt;</name>
    <filename>classWt_1_1JSignal.html</filename>
    <base>Wt::EventSignalBase</base>
    <member kind="function">
      <type></type>
      <name>JSignal</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>ae11c6c13478f958489504e795ab4f29f</anchor>
      <arglist>(WObject *object, const std::string &amp;name, bool collectSlotJavaScript=false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~JSignal</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>a597f615429a2f153ae1788de48f232dc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>name</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>a5d934e6626016915137fd0b01adc87e1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::string</type>
      <name>createCall</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>ac7b6d3575d8443d4ae4ac85f5ed869e1</anchor>
      <arglist>(std::initializer_list&lt; std::string &gt; args) const</arglist>
    </member>
    <member kind="function">
      <type>const std::string</type>
      <name>createEventCall</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>a40e4e42f64060345e26ba85e612f217d</anchor>
      <arglist>(const std::string &amp;jsObject, const std::string &amp;jsEvent, std::initializer_list&lt; std::string &gt; args) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isConnected</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>aa1ca52a2197cbb9d9c6bd818c2e3b719</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>a3988327cd744b0316d8c18b0faa1820c</anchor>
      <arglist>(F function)</arglist>
    </member>
    <member kind="function">
      <type>Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>a2b2cbbeef96ed318d061c75cfdc94b46</anchor>
      <arglist>(T *target, void(V::*method)(B...))</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>connect</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>aa1bbce0061f64c60209d3129909f866e</anchor>
      <arglist>(const std::string &amp;function)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>connect</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>a2a9199db323365ba7df5d8925217dda6</anchor>
      <arglist>(JSlot &amp;slot)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>ad8779cd000919968e6f693c57a7da6fd</anchor>
      <arglist>(WObject *target, void(WObject::*method)()) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>emit</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>a4bb81029fe99094c09dbb060360a77f7</anchor>
      <arglist>(A... args) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>a2e38fdbee2b1dc791c54b804b6d0a9d5</anchor>
      <arglist>(A... args) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>JSignal&lt; int, int, int, int &gt;</name>
    <filename>classWt_1_1JSignal.html</filename>
    <base>Wt::EventSignalBase</base>
    <member kind="function">
      <type></type>
      <name>JSignal</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>ae11c6c13478f958489504e795ab4f29f</anchor>
      <arglist>(WObject *object, const std::string &amp;name, bool collectSlotJavaScript=false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~JSignal</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>a597f615429a2f153ae1788de48f232dc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>name</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>a5d934e6626016915137fd0b01adc87e1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::string</type>
      <name>createCall</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>ac7b6d3575d8443d4ae4ac85f5ed869e1</anchor>
      <arglist>(std::initializer_list&lt; std::string &gt; args) const</arglist>
    </member>
    <member kind="function">
      <type>const std::string</type>
      <name>createEventCall</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>a40e4e42f64060345e26ba85e612f217d</anchor>
      <arglist>(const std::string &amp;jsObject, const std::string &amp;jsEvent, std::initializer_list&lt; std::string &gt; args) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isConnected</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>aa1ca52a2197cbb9d9c6bd818c2e3b719</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>a3988327cd744b0316d8c18b0faa1820c</anchor>
      <arglist>(F function)</arglist>
    </member>
    <member kind="function">
      <type>Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>a2b2cbbeef96ed318d061c75cfdc94b46</anchor>
      <arglist>(T *target, void(V::*method)(B...))</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>connect</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>aa1bbce0061f64c60209d3129909f866e</anchor>
      <arglist>(const std::string &amp;function)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>connect</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>a2a9199db323365ba7df5d8925217dda6</anchor>
      <arglist>(JSlot &amp;slot)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>ad8779cd000919968e6f693c57a7da6fd</anchor>
      <arglist>(WObject *target, void(WObject::*method)()) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>emit</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>a4bb81029fe99094c09dbb060360a77f7</anchor>
      <arglist>(A... args) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>a2e38fdbee2b1dc791c54b804b6d0a9d5</anchor>
      <arglist>(A... args) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>JSignal&lt; int, int, std::string, std::string, Wt::WMouseEvent &gt;</name>
    <filename>classWt_1_1JSignal.html</filename>
    <base>Wt::EventSignalBase</base>
    <member kind="function">
      <type></type>
      <name>JSignal</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>ae11c6c13478f958489504e795ab4f29f</anchor>
      <arglist>(WObject *object, const std::string &amp;name, bool collectSlotJavaScript=false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~JSignal</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>a597f615429a2f153ae1788de48f232dc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>name</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>a5d934e6626016915137fd0b01adc87e1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::string</type>
      <name>createCall</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>ac7b6d3575d8443d4ae4ac85f5ed869e1</anchor>
      <arglist>(std::initializer_list&lt; std::string &gt; args) const</arglist>
    </member>
    <member kind="function">
      <type>const std::string</type>
      <name>createEventCall</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>a40e4e42f64060345e26ba85e612f217d</anchor>
      <arglist>(const std::string &amp;jsObject, const std::string &amp;jsEvent, std::initializer_list&lt; std::string &gt; args) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isConnected</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>aa1ca52a2197cbb9d9c6bd818c2e3b719</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>a3988327cd744b0316d8c18b0faa1820c</anchor>
      <arglist>(F function)</arglist>
    </member>
    <member kind="function">
      <type>Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>a2b2cbbeef96ed318d061c75cfdc94b46</anchor>
      <arglist>(T *target, void(V::*method)(B...))</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>connect</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>aa1bbce0061f64c60209d3129909f866e</anchor>
      <arglist>(const std::string &amp;function)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>connect</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>a2a9199db323365ba7df5d8925217dda6</anchor>
      <arglist>(JSlot &amp;slot)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>ad8779cd000919968e6f693c57a7da6fd</anchor>
      <arglist>(WObject *target, void(WObject::*method)()) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>emit</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>a4bb81029fe99094c09dbb060360a77f7</anchor>
      <arglist>(A... args) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>a2e38fdbee2b1dc791c54b804b6d0a9d5</anchor>
      <arglist>(A... args) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>JSignal&lt; std::string &gt;</name>
    <filename>classWt_1_1JSignal.html</filename>
    <base>Wt::EventSignalBase</base>
    <member kind="function">
      <type></type>
      <name>JSignal</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>ae11c6c13478f958489504e795ab4f29f</anchor>
      <arglist>(WObject *object, const std::string &amp;name, bool collectSlotJavaScript=false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~JSignal</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>a597f615429a2f153ae1788de48f232dc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>name</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>a5d934e6626016915137fd0b01adc87e1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::string</type>
      <name>createCall</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>ac7b6d3575d8443d4ae4ac85f5ed869e1</anchor>
      <arglist>(std::initializer_list&lt; std::string &gt; args) const</arglist>
    </member>
    <member kind="function">
      <type>const std::string</type>
      <name>createEventCall</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>a40e4e42f64060345e26ba85e612f217d</anchor>
      <arglist>(const std::string &amp;jsObject, const std::string &amp;jsEvent, std::initializer_list&lt; std::string &gt; args) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isConnected</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>aa1ca52a2197cbb9d9c6bd818c2e3b719</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>a3988327cd744b0316d8c18b0faa1820c</anchor>
      <arglist>(F function)</arglist>
    </member>
    <member kind="function">
      <type>Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>a2b2cbbeef96ed318d061c75cfdc94b46</anchor>
      <arglist>(T *target, void(V::*method)(B...))</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>connect</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>aa1bbce0061f64c60209d3129909f866e</anchor>
      <arglist>(const std::string &amp;function)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>connect</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>a2a9199db323365ba7df5d8925217dda6</anchor>
      <arglist>(JSlot &amp;slot)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>ad8779cd000919968e6f693c57a7da6fd</anchor>
      <arglist>(WObject *target, void(WObject::*method)()) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>emit</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>a4bb81029fe99094c09dbb060360a77f7</anchor>
      <arglist>(A... args) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>a2e38fdbee2b1dc791c54b804b6d0a9d5</anchor>
      <arglist>(A... args) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>JSignal&lt; std::string, std::string &gt;</name>
    <filename>classWt_1_1JSignal.html</filename>
    <base>Wt::EventSignalBase</base>
    <member kind="function">
      <type></type>
      <name>JSignal</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>ae11c6c13478f958489504e795ab4f29f</anchor>
      <arglist>(WObject *object, const std::string &amp;name, bool collectSlotJavaScript=false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~JSignal</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>a597f615429a2f153ae1788de48f232dc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>name</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>a5d934e6626016915137fd0b01adc87e1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::string</type>
      <name>createCall</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>ac7b6d3575d8443d4ae4ac85f5ed869e1</anchor>
      <arglist>(std::initializer_list&lt; std::string &gt; args) const</arglist>
    </member>
    <member kind="function">
      <type>const std::string</type>
      <name>createEventCall</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>a40e4e42f64060345e26ba85e612f217d</anchor>
      <arglist>(const std::string &amp;jsObject, const std::string &amp;jsEvent, std::initializer_list&lt; std::string &gt; args) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isConnected</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>aa1ca52a2197cbb9d9c6bd818c2e3b719</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>a3988327cd744b0316d8c18b0faa1820c</anchor>
      <arglist>(F function)</arglist>
    </member>
    <member kind="function">
      <type>Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>a2b2cbbeef96ed318d061c75cfdc94b46</anchor>
      <arglist>(T *target, void(V::*method)(B...))</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>connect</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>aa1bbce0061f64c60209d3129909f866e</anchor>
      <arglist>(const std::string &amp;function)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>connect</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>a2a9199db323365ba7df5d8925217dda6</anchor>
      <arglist>(JSlot &amp;slot)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>ad8779cd000919968e6f693c57a7da6fd</anchor>
      <arglist>(WObject *target, void(WObject::*method)()) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>emit</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>a4bb81029fe99094c09dbb060360a77f7</anchor>
      <arglist>(A... args) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>a2e38fdbee2b1dc791c54b804b6d0a9d5</anchor>
      <arglist>(A... args) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>JSignal&lt; std::string, std::string, std::string, std::string, Wt::WMouseEvent &gt;</name>
    <filename>classWt_1_1JSignal.html</filename>
    <base>Wt::EventSignalBase</base>
    <member kind="function">
      <type></type>
      <name>JSignal</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>ae11c6c13478f958489504e795ab4f29f</anchor>
      <arglist>(WObject *object, const std::string &amp;name, bool collectSlotJavaScript=false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~JSignal</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>a597f615429a2f153ae1788de48f232dc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>name</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>a5d934e6626016915137fd0b01adc87e1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::string</type>
      <name>createCall</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>ac7b6d3575d8443d4ae4ac85f5ed869e1</anchor>
      <arglist>(std::initializer_list&lt; std::string &gt; args) const</arglist>
    </member>
    <member kind="function">
      <type>const std::string</type>
      <name>createEventCall</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>a40e4e42f64060345e26ba85e612f217d</anchor>
      <arglist>(const std::string &amp;jsObject, const std::string &amp;jsEvent, std::initializer_list&lt; std::string &gt; args) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isConnected</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>aa1ca52a2197cbb9d9c6bd818c2e3b719</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>a3988327cd744b0316d8c18b0faa1820c</anchor>
      <arglist>(F function)</arglist>
    </member>
    <member kind="function">
      <type>Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>a2b2cbbeef96ed318d061c75cfdc94b46</anchor>
      <arglist>(T *target, void(V::*method)(B...))</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>connect</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>aa1bbce0061f64c60209d3129909f866e</anchor>
      <arglist>(const std::string &amp;function)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>connect</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>a2a9199db323365ba7df5d8925217dda6</anchor>
      <arglist>(JSlot &amp;slot)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>ad8779cd000919968e6f693c57a7da6fd</anchor>
      <arglist>(WObject *target, void(WObject::*method)()) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>emit</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>a4bb81029fe99094c09dbb060360a77f7</anchor>
      <arglist>(A... args) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>a2e38fdbee2b1dc791c54b804b6d0a9d5</anchor>
      <arglist>(A... args) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>JSignal&lt; std::string, std::string, Wt::WMouseEvent &gt;</name>
    <filename>classWt_1_1JSignal.html</filename>
    <base>Wt::EventSignalBase</base>
    <member kind="function">
      <type></type>
      <name>JSignal</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>ae11c6c13478f958489504e795ab4f29f</anchor>
      <arglist>(WObject *object, const std::string &amp;name, bool collectSlotJavaScript=false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~JSignal</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>a597f615429a2f153ae1788de48f232dc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>name</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>a5d934e6626016915137fd0b01adc87e1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::string</type>
      <name>createCall</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>ac7b6d3575d8443d4ae4ac85f5ed869e1</anchor>
      <arglist>(std::initializer_list&lt; std::string &gt; args) const</arglist>
    </member>
    <member kind="function">
      <type>const std::string</type>
      <name>createEventCall</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>a40e4e42f64060345e26ba85e612f217d</anchor>
      <arglist>(const std::string &amp;jsObject, const std::string &amp;jsEvent, std::initializer_list&lt; std::string &gt; args) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isConnected</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>aa1ca52a2197cbb9d9c6bd818c2e3b719</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>a3988327cd744b0316d8c18b0faa1820c</anchor>
      <arglist>(F function)</arglist>
    </member>
    <member kind="function">
      <type>Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>a2b2cbbeef96ed318d061c75cfdc94b46</anchor>
      <arglist>(T *target, void(V::*method)(B...))</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>connect</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>aa1bbce0061f64c60209d3129909f866e</anchor>
      <arglist>(const std::string &amp;function)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>connect</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>a2a9199db323365ba7df5d8925217dda6</anchor>
      <arglist>(JSlot &amp;slot)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>ad8779cd000919968e6f693c57a7da6fd</anchor>
      <arglist>(WObject *target, void(WObject::*method)()) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>emit</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>a4bb81029fe99094c09dbb060360a77f7</anchor>
      <arglist>(A... args) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>a2e38fdbee2b1dc791c54b804b6d0a9d5</anchor>
      <arglist>(A... args) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>JSignal&lt; std::string, std::string, Wt::WTouchEvent &gt;</name>
    <filename>classWt_1_1JSignal.html</filename>
    <base>Wt::EventSignalBase</base>
    <member kind="function">
      <type></type>
      <name>JSignal</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>ae11c6c13478f958489504e795ab4f29f</anchor>
      <arglist>(WObject *object, const std::string &amp;name, bool collectSlotJavaScript=false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~JSignal</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>a597f615429a2f153ae1788de48f232dc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>name</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>a5d934e6626016915137fd0b01adc87e1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::string</type>
      <name>createCall</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>ac7b6d3575d8443d4ae4ac85f5ed869e1</anchor>
      <arglist>(std::initializer_list&lt; std::string &gt; args) const</arglist>
    </member>
    <member kind="function">
      <type>const std::string</type>
      <name>createEventCall</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>a40e4e42f64060345e26ba85e612f217d</anchor>
      <arglist>(const std::string &amp;jsObject, const std::string &amp;jsEvent, std::initializer_list&lt; std::string &gt; args) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isConnected</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>aa1ca52a2197cbb9d9c6bd818c2e3b719</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>a3988327cd744b0316d8c18b0faa1820c</anchor>
      <arglist>(F function)</arglist>
    </member>
    <member kind="function">
      <type>Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>a2b2cbbeef96ed318d061c75cfdc94b46</anchor>
      <arglist>(T *target, void(V::*method)(B...))</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>connect</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>aa1bbce0061f64c60209d3129909f866e</anchor>
      <arglist>(const std::string &amp;function)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>connect</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>a2a9199db323365ba7df5d8925217dda6</anchor>
      <arglist>(JSlot &amp;slot)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>ad8779cd000919968e6f693c57a7da6fd</anchor>
      <arglist>(WObject *target, void(WObject::*method)()) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>emit</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>a4bb81029fe99094c09dbb060360a77f7</anchor>
      <arglist>(A... args) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>a2e38fdbee2b1dc791c54b804b6d0a9d5</anchor>
      <arglist>(A... args) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>JSignal&lt; Wt::WGoogleMap::Coordinate &gt;</name>
    <filename>classWt_1_1JSignal.html</filename>
    <base>Wt::EventSignalBase</base>
    <member kind="function">
      <type></type>
      <name>JSignal</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>ae11c6c13478f958489504e795ab4f29f</anchor>
      <arglist>(WObject *object, const std::string &amp;name, bool collectSlotJavaScript=false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~JSignal</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>a597f615429a2f153ae1788de48f232dc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>name</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>a5d934e6626016915137fd0b01adc87e1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::string</type>
      <name>createCall</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>ac7b6d3575d8443d4ae4ac85f5ed869e1</anchor>
      <arglist>(std::initializer_list&lt; std::string &gt; args) const</arglist>
    </member>
    <member kind="function">
      <type>const std::string</type>
      <name>createEventCall</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>a40e4e42f64060345e26ba85e612f217d</anchor>
      <arglist>(const std::string &amp;jsObject, const std::string &amp;jsEvent, std::initializer_list&lt; std::string &gt; args) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isConnected</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>aa1ca52a2197cbb9d9c6bd818c2e3b719</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>a3988327cd744b0316d8c18b0faa1820c</anchor>
      <arglist>(F function)</arglist>
    </member>
    <member kind="function">
      <type>Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>a2b2cbbeef96ed318d061c75cfdc94b46</anchor>
      <arglist>(T *target, void(V::*method)(B...))</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>connect</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>aa1bbce0061f64c60209d3129909f866e</anchor>
      <arglist>(const std::string &amp;function)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>connect</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>a2a9199db323365ba7df5d8925217dda6</anchor>
      <arglist>(JSlot &amp;slot)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>ad8779cd000919968e6f693c57a7da6fd</anchor>
      <arglist>(WObject *target, void(WObject::*method)()) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>emit</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>a4bb81029fe99094c09dbb060360a77f7</anchor>
      <arglist>(A... args) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>a2e38fdbee2b1dc791c54b804b6d0a9d5</anchor>
      <arglist>(A... args) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>JSignal&lt; Wt::WTouchEvent &gt;</name>
    <filename>classWt_1_1JSignal.html</filename>
    <base>Wt::EventSignalBase</base>
    <member kind="function">
      <type></type>
      <name>JSignal</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>ae11c6c13478f958489504e795ab4f29f</anchor>
      <arglist>(WObject *object, const std::string &amp;name, bool collectSlotJavaScript=false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~JSignal</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>a597f615429a2f153ae1788de48f232dc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>name</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>a5d934e6626016915137fd0b01adc87e1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::string</type>
      <name>createCall</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>ac7b6d3575d8443d4ae4ac85f5ed869e1</anchor>
      <arglist>(std::initializer_list&lt; std::string &gt; args) const</arglist>
    </member>
    <member kind="function">
      <type>const std::string</type>
      <name>createEventCall</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>a40e4e42f64060345e26ba85e612f217d</anchor>
      <arglist>(const std::string &amp;jsObject, const std::string &amp;jsEvent, std::initializer_list&lt; std::string &gt; args) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isConnected</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>aa1ca52a2197cbb9d9c6bd818c2e3b719</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>a3988327cd744b0316d8c18b0faa1820c</anchor>
      <arglist>(F function)</arglist>
    </member>
    <member kind="function">
      <type>Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>a2b2cbbeef96ed318d061c75cfdc94b46</anchor>
      <arglist>(T *target, void(V::*method)(B...))</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>connect</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>aa1bbce0061f64c60209d3129909f866e</anchor>
      <arglist>(const std::string &amp;function)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>connect</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>a2a9199db323365ba7df5d8925217dda6</anchor>
      <arglist>(JSlot &amp;slot)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>ad8779cd000919968e6f693c57a7da6fd</anchor>
      <arglist>(WObject *target, void(WObject::*method)()) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>emit</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>a4bb81029fe99094c09dbb060360a77f7</anchor>
      <arglist>(A... args) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>a2e38fdbee2b1dc791c54b804b6d0a9d5</anchor>
      <arglist>(A... args) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>JSignal&lt;&gt;</name>
    <filename>classWt_1_1JSignal.html</filename>
    <base>Wt::EventSignalBase</base>
    <member kind="function">
      <type></type>
      <name>JSignal</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>ae11c6c13478f958489504e795ab4f29f</anchor>
      <arglist>(WObject *object, const std::string &amp;name, bool collectSlotJavaScript=false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~JSignal</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>a597f615429a2f153ae1788de48f232dc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>name</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>a5d934e6626016915137fd0b01adc87e1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::string</type>
      <name>createCall</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>ac7b6d3575d8443d4ae4ac85f5ed869e1</anchor>
      <arglist>(std::initializer_list&lt; std::string &gt; args) const</arglist>
    </member>
    <member kind="function">
      <type>const std::string</type>
      <name>createEventCall</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>a40e4e42f64060345e26ba85e612f217d</anchor>
      <arglist>(const std::string &amp;jsObject, const std::string &amp;jsEvent, std::initializer_list&lt; std::string &gt; args) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isConnected</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>aa1ca52a2197cbb9d9c6bd818c2e3b719</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>a3988327cd744b0316d8c18b0faa1820c</anchor>
      <arglist>(F function)</arglist>
    </member>
    <member kind="function">
      <type>Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>a2b2cbbeef96ed318d061c75cfdc94b46</anchor>
      <arglist>(T *target, void(V::*method)(B...))</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>connect</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>aa1bbce0061f64c60209d3129909f866e</anchor>
      <arglist>(const std::string &amp;function)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>connect</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>a2a9199db323365ba7df5d8925217dda6</anchor>
      <arglist>(JSlot &amp;slot)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>ad8779cd000919968e6f693c57a7da6fd</anchor>
      <arglist>(WObject *target, void(WObject::*method)()) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>emit</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>a4bb81029fe99094c09dbb060360a77f7</anchor>
      <arglist>(A... args) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>a2e38fdbee2b1dc791c54b804b6d0a9d5</anchor>
      <arglist>(A... args) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::JSlot</name>
    <filename>classWt_1_1JSlot.html</filename>
    <member kind="function">
      <type></type>
      <name>JSlot</name>
      <anchorfile>classWt_1_1JSlot.html</anchorfile>
      <anchor>ae38e6dec998f9cdf58ac5f21a0933eed</anchor>
      <arglist>(WWidget *parent=nullptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>JSlot</name>
      <anchorfile>classWt_1_1JSlot.html</anchorfile>
      <anchor>a46f22d81196c94ac9aea4342a02facd9</anchor>
      <arglist>(const std::string &amp;javaScript, WWidget *parent=nullptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>JSlot</name>
      <anchorfile>classWt_1_1JSlot.html</anchorfile>
      <anchor>a5c28369902ffe488c09cc18d431549ab</anchor>
      <arglist>(int nbArgs, WWidget *parent)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>JSlot</name>
      <anchorfile>classWt_1_1JSlot.html</anchorfile>
      <anchor>ab4fe65d94a9fd7859087cc9044f84f7d</anchor>
      <arglist>(const std::string &amp;javaScript, int nbArgs, WWidget *parent=nullptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~JSlot</name>
      <anchorfile>classWt_1_1JSlot.html</anchorfile>
      <anchor>ade213c06a4ee987a4ec39446e6954e21</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setJavaScript</name>
      <anchorfile>classWt_1_1JSlot.html</anchorfile>
      <anchor>a3702c8e823928d5ddfd286d639911a4e</anchor>
      <arglist>(const std::string &amp;javaScript, int nbArgs=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>exec</name>
      <anchorfile>classWt_1_1JSlot.html</anchorfile>
      <anchor>ad6a3fa210e840eccecb38e5f9fea7c71</anchor>
      <arglist>(const std::string &amp;object=&quot;null&quot;, const std::string &amp;event=&quot;null&quot;, const std::string &amp;arg1=&quot;null&quot;, const std::string &amp;arg2=&quot;null&quot;, const std::string &amp;arg3=&quot;null&quot;, const std::string &amp;arg4=&quot;null&quot;, const std::string &amp;arg5=&quot;null&quot;, const std::string &amp;arg6=&quot;null&quot;)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>execJs</name>
      <anchorfile>classWt_1_1JSlot.html</anchorfile>
      <anchor>a8463b73f0ae919dd058060932612486e</anchor>
      <arglist>(const std::string &amp;object=&quot;null&quot;, const std::string &amp;event=&quot;null&quot;, const std::string &amp;arg1=&quot;null&quot;, const std::string &amp;arg2=&quot;null&quot;, const std::string &amp;arg3=&quot;null&quot;, const std::string &amp;arg4=&quot;null&quot;, const std::string &amp;arg5=&quot;null&quot;, const std::string &amp;arg6=&quot;null&quot;)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNbArgs</name>
      <anchorfile>classWt_1_1JSlot.html</anchorfile>
      <anchor>a32939de16dd18bf662f16ef363228594</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Dbo::JsonSerializer</name>
    <filename>classWt_1_1Dbo_1_1JsonSerializer.html</filename>
    <member kind="function">
      <type></type>
      <name>JsonSerializer</name>
      <anchorfile>classWt_1_1Dbo_1_1JsonSerializer.html</anchorfile>
      <anchor>a555dfce1175498bf30c40dcfc6c8b929</anchor>
      <arglist>(std::ostream &amp;out)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~JsonSerializer</name>
      <anchorfile>classWt_1_1Dbo_1_1JsonSerializer.html</anchorfile>
      <anchor>a93e03a03228088fc7c7fc0f8ce7a1e07</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>serialize</name>
      <anchorfile>classWt_1_1Dbo_1_1JsonSerializer.html</anchorfile>
      <anchor>a7b62337c94d1a100c54e00db782e4171</anchor>
      <arglist>(const T &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>serialize</name>
      <anchorfile>classWt_1_1Dbo_1_1JsonSerializer.html</anchorfile>
      <anchor>a251fb9f5e2fd0c0ac156c369149cd297</anchor>
      <arglist>(const ptr&lt; T &gt; &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>serialize</name>
      <anchorfile>classWt_1_1Dbo_1_1JsonSerializer.html</anchorfile>
      <anchor>ab9ab56c5a4b193b803084c7de31902a9</anchor>
      <arglist>(const std::vector&lt; ptr&lt; T &gt; &gt; &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>serialize</name>
      <anchorfile>classWt_1_1Dbo_1_1JsonSerializer.html</anchorfile>
      <anchor>a9e47a55c2f9e000c17da59e0100b4f2f</anchor>
      <arglist>(const collection&lt; ptr&lt; T &gt; &gt; &amp;c)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WLeafletMap::LeafletMarker</name>
    <filename>classWt_1_1WLeafletMap_1_1LeafletMarker.html</filename>
    <base>Wt::WLeafletMap::Marker</base>
    <member kind="function">
      <type></type>
      <name>LeafletMarker</name>
      <anchorfile>classWt_1_1WLeafletMap_1_1LeafletMarker.html</anchorfile>
      <anchor>af8179034073fa22e09d785380bbd185d</anchor>
      <arglist>(const Coordinate &amp;pos)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::LocalizedString</name>
    <filename>structWt_1_1LocalizedString.html</filename>
    <member kind="function">
      <type></type>
      <name>LocalizedString</name>
      <anchorfile>structWt_1_1LocalizedString.html</anchorfile>
      <anchor>afa11b6117ef1dbc08208ab00a19fd2f8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>LocalizedString</name>
      <anchorfile>structWt_1_1LocalizedString.html</anchorfile>
      <anchor>a62bbad7e333bd3a53a0f08575e49cde6</anchor>
      <arglist>(std::string v, TextFormat f)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator bool</name>
      <anchorfile>structWt_1_1LocalizedString.html</anchorfile>
      <anchor>acc599858a6457de9248eacaeb3e963ff</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>value</name>
      <anchorfile>structWt_1_1LocalizedString.html</anchorfile>
      <anchor>a5de74d86075ca84c62c97d97ea170323</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>TextFormat</type>
      <name>format</name>
      <anchorfile>structWt_1_1LocalizedString.html</anchorfile>
      <anchor>a9ec1ebe73882ef7d7fcca9587a712403</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>success</name>
      <anchorfile>structWt_1_1LocalizedString.html</anchorfile>
      <anchor>a42364c3c0c2b97124c7d8284c6f556f7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Auth::Login</name>
    <filename>classWt_1_1Auth_1_1Login.html</filename>
    <base>Wt::WObject</base>
    <member kind="typedef">
      <type>LoginState</type>
      <name>State</name>
      <anchorfile>classWt_1_1Auth_1_1Login.html</anchorfile>
      <anchor>a2764ee1d445fbb8f5c7a93d9d2932b6c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Login</name>
      <anchorfile>classWt_1_1Auth_1_1Login.html</anchorfile>
      <anchor>a528837a0fd1e66dfce9eae6ff15a7b79</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>login</name>
      <anchorfile>classWt_1_1Auth_1_1Login.html</anchorfile>
      <anchor>af3993f0f74c0deea96cd5cc62cdc6749</anchor>
      <arglist>(const User &amp;user, LoginState state=LoginState::Strong)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>logout</name>
      <anchorfile>classWt_1_1Auth_1_1Login.html</anchorfile>
      <anchor>af10e98871028d79460a4e64415ca90e4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>LoginState</type>
      <name>state</name>
      <anchorfile>classWt_1_1Auth_1_1Login.html</anchorfile>
      <anchor>a99cb512c352f7d011ab6d39fc8f4ec0e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>loggedIn</name>
      <anchorfile>classWt_1_1Auth_1_1Login.html</anchorfile>
      <anchor>ab80cb200923961dbd1c6573b0845addb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const User &amp;</type>
      <name>user</name>
      <anchorfile>classWt_1_1Auth_1_1Login.html</anchorfile>
      <anchor>a3991393fedbe5d6f52b3b02ad6c9d845</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Signal &amp;</type>
      <name>changed</name>
      <anchorfile>classWt_1_1Auth_1_1Login.html</anchorfile>
      <anchor>aafb1d791aeee8b59d28faeda88e8392b</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Auth::LostPasswordWidget</name>
    <filename>classWt_1_1Auth_1_1LostPasswordWidget.html</filename>
    <base>Wt::WTemplate</base>
    <member kind="function">
      <type></type>
      <name>LostPasswordWidget</name>
      <anchorfile>classWt_1_1Auth_1_1LostPasswordWidget.html</anchorfile>
      <anchor>ac19572c0571eda6360d8454ed9845284</anchor>
      <arglist>(AbstractUserDatabase &amp;users, const AuthService &amp;auth)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Mail::Mailbox</name>
    <filename>classWt_1_1Mail_1_1Mailbox.html</filename>
    <member kind="function">
      <type></type>
      <name>Mailbox</name>
      <anchorfile>classWt_1_1Mail_1_1Mailbox.html</anchorfile>
      <anchor>a24ca04831bf8978b8dcf0e592f66c227</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Mailbox</name>
      <anchorfile>classWt_1_1Mail_1_1Mailbox.html</anchorfile>
      <anchor>aaa5fe1249a42f6a9e13bb4e17e509a38</anchor>
      <arglist>(const std::string &amp;address)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Mailbox</name>
      <anchorfile>classWt_1_1Mail_1_1Mailbox.html</anchorfile>
      <anchor>a8f093563701bc8cfe5f22480439f19c9</anchor>
      <arglist>(const std::string &amp;address, const WString &amp;displayName)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>empty</name>
      <anchorfile>classWt_1_1Mail_1_1Mailbox.html</anchorfile>
      <anchor>a2e4b794b1708a179882d0b9f0f1d0177</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>address</name>
      <anchorfile>classWt_1_1Mail_1_1Mailbox.html</anchorfile>
      <anchor>abff813c28b973db6cefdc9e48f76fbc2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const WString &amp;</type>
      <name>displayName</name>
      <anchorfile>classWt_1_1Mail_1_1Mailbox.html</anchorfile>
      <anchor>a29aa1fc1d88e89e7a2bfa27483ea1c4f</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WLeafletMap::Marker</name>
    <filename>classWt_1_1WLeafletMap_1_1Marker.html</filename>
    <member kind="function">
      <type>void</type>
      <name>move</name>
      <anchorfile>classWt_1_1WLeafletMap_1_1Marker.html</anchorfile>
      <anchor>a29c5657c649235cc36ed40363e475d50</anchor>
      <arglist>(const Coordinate &amp;pos)</arglist>
    </member>
    <member kind="function">
      <type>Coordinate</type>
      <name>position</name>
      <anchorfile>classWt_1_1WLeafletMap_1_1Marker.html</anchorfile>
      <anchor>a0c4fbe1bfeffb1a3acf50d6c5521e1d9</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Auth::MD5HashFunction</name>
    <filename>classWt_1_1Auth_1_1MD5HashFunction.html</filename>
    <base>Wt::Auth::HashFunction</base>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>name</name>
      <anchorfile>classWt_1_1Auth_1_1MD5HashFunction.html</anchorfile>
      <anchor>a059d8531b937813d66b776b277a3c3b8</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>compute</name>
      <anchorfile>classWt_1_1Auth_1_1MD5HashFunction.html</anchorfile>
      <anchor>adada399abf12047887c409c14785f632</anchor>
      <arglist>(const std::string &amp;msg, const std::string &amp;salt) const override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Http::Message</name>
    <filename>classWt_1_1Http_1_1Message.html</filename>
    <class kind="class">Wt::Http::Message::Header</class>
    <member kind="function">
      <type></type>
      <name>Message</name>
      <anchorfile>classWt_1_1Http_1_1Message.html</anchorfile>
      <anchor>a5a55ee432496f398b3b20bb8f9703195</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Message</name>
      <anchorfile>classWt_1_1Http_1_1Message.html</anchorfile>
      <anchor>a75a34f09beb3093c789e09e205a455ea</anchor>
      <arglist>(std::vector&lt; Header &gt; headers)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Message</name>
      <anchorfile>classWt_1_1Http_1_1Message.html</anchorfile>
      <anchor>ab07007d02d923da4bbec0d66314bae95</anchor>
      <arglist>(const Message &amp;message)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setStatus</name>
      <anchorfile>classWt_1_1Http_1_1Message.html</anchorfile>
      <anchor>ae6098f85d8f1eb832f74e0ff7620ec21</anchor>
      <arglist>(int status)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>status</name>
      <anchorfile>classWt_1_1Http_1_1Message.html</anchorfile>
      <anchor>aa1e1d063746fc61c15ed479b79a4d48e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setHeader</name>
      <anchorfile>classWt_1_1Http_1_1Message.html</anchorfile>
      <anchor>afe89b9985a884a500266df9ce358f013</anchor>
      <arglist>(const std::string &amp;name, const std::string &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addHeader</name>
      <anchorfile>classWt_1_1Http_1_1Message.html</anchorfile>
      <anchor>af3ae185c24c499d08bf3475e594b1b2f</anchor>
      <arglist>(const std::string &amp;name, const std::string &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; Header &gt; &amp;</type>
      <name>headers</name>
      <anchorfile>classWt_1_1Http_1_1Message.html</anchorfile>
      <anchor>aed6a1a14a0e4134f4c503d8f5c626789</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::string *</type>
      <name>getHeader</name>
      <anchorfile>classWt_1_1Http_1_1Message.html</anchorfile>
      <anchor>a92b3f53bac71810693801e1fbfada3fd</anchor>
      <arglist>(const std::string &amp;name) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addBodyText</name>
      <anchorfile>classWt_1_1Http_1_1Message.html</anchorfile>
      <anchor>afeab67c20483f8862015a79b9f9fa8d6</anchor>
      <arglist>(const std::string &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>body</name>
      <anchorfile>classWt_1_1Http_1_1Message.html</anchorfile>
      <anchor>a6473e57fd50db07d436c1e156d59845f</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Mail::Message</name>
    <filename>classWt_1_1Mail_1_1Message.html</filename>
    <class kind="class">Wt::Mail::Message::Header</class>
    <class kind="class">Wt::Mail::Message::Recipient</class>
    <member kind="function">
      <type></type>
      <name>Message</name>
      <anchorfile>classWt_1_1Mail_1_1Message.html</anchorfile>
      <anchor>acb395cbd2f149780f8c55ef7d1250e8c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFrom</name>
      <anchorfile>classWt_1_1Mail_1_1Message.html</anchorfile>
      <anchor>a3ae211155763576a85f43c4f1a4115f3</anchor>
      <arglist>(const Mailbox &amp;from)</arglist>
    </member>
    <member kind="function">
      <type>const Mailbox &amp;</type>
      <name>from</name>
      <anchorfile>classWt_1_1Mail_1_1Message.html</anchorfile>
      <anchor>a5214bd7ad16fe6e2e465cbb70fc5c8ea</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setReplyTo</name>
      <anchorfile>classWt_1_1Mail_1_1Message.html</anchorfile>
      <anchor>ab9590a4b6249247d95b36e20652e181c</anchor>
      <arglist>(const Mailbox &amp;replyTo)</arglist>
    </member>
    <member kind="function">
      <type>const Mailbox &amp;</type>
      <name>replyTo</name>
      <anchorfile>classWt_1_1Mail_1_1Message.html</anchorfile>
      <anchor>ad33eb0ae9d4c29fcc6f0d8dbaf789e0e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSubject</name>
      <anchorfile>classWt_1_1Mail_1_1Message.html</anchorfile>
      <anchor>ae073e95a1d71941910738ae62ad697c6</anchor>
      <arglist>(const WString &amp;subject)</arglist>
    </member>
    <member kind="function">
      <type>const WString &amp;</type>
      <name>subject</name>
      <anchorfile>classWt_1_1Mail_1_1Message.html</anchorfile>
      <anchor>a92081f3fea617508029cb11ea32a9c74</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDate</name>
      <anchorfile>classWt_1_1Mail_1_1Message.html</anchorfile>
      <anchor>ad5a8045f2be8be02ffe84d24e07024c3</anchor>
      <arglist>(const WLocalDateTime &amp;date)</arglist>
    </member>
    <member kind="function">
      <type>WLocalDateTime</type>
      <name>date</name>
      <anchorfile>classWt_1_1Mail_1_1Message.html</anchorfile>
      <anchor>abb89f6216ce1215f3a9d84e0e0b74f3b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBody</name>
      <anchorfile>classWt_1_1Mail_1_1Message.html</anchorfile>
      <anchor>af26c2dc27a2815786725d9d3116a584c</anchor>
      <arglist>(const WString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>const WString &amp;</type>
      <name>body</name>
      <anchorfile>classWt_1_1Mail_1_1Message.html</anchorfile>
      <anchor>a923d2aee96e16be97207e93491cb70ab</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addRecipient</name>
      <anchorfile>classWt_1_1Mail_1_1Message.html</anchorfile>
      <anchor>ab9f8c9869fcc74f3425708e10ae17c0a</anchor>
      <arglist>(RecipientType type, const Mailbox &amp;recipient)</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; Recipient &gt; &amp;</type>
      <name>recipients</name>
      <anchorfile>classWt_1_1Mail_1_1Message.html</anchorfile>
      <anchor>a89a6d830485bdc4ee4fc3ac2fe0664d2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setHeader</name>
      <anchorfile>classWt_1_1Mail_1_1Message.html</anchorfile>
      <anchor>a4b5cd1fa011257c35f12f7dc0e70fb1f</anchor>
      <arglist>(const std::string &amp;name, const std::string &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addHeader</name>
      <anchorfile>classWt_1_1Mail_1_1Message.html</anchorfile>
      <anchor>a2873f091f84913dff243c241ff411b92</anchor>
      <arglist>(const std::string &amp;name, const std::string &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; Header &gt; &amp;</type>
      <name>headers</name>
      <anchorfile>classWt_1_1Mail_1_1Message.html</anchorfile>
      <anchor>a59c8e9c493252bd15f47b5357fd2ea26</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::string *</type>
      <name>getHeader</name>
      <anchorfile>classWt_1_1Mail_1_1Message.html</anchorfile>
      <anchor>a5e8af788a3ec4a187eb755f7056d7b7e</anchor>
      <arglist>(const std::string &amp;name) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addHtmlBody</name>
      <anchorfile>classWt_1_1Mail_1_1Message.html</anchorfile>
      <anchor>ab24036ddd6ee45837d12968ad9a5d962</anchor>
      <arglist>(const WString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>const WString &amp;</type>
      <name>htmlBody</name>
      <anchorfile>classWt_1_1Mail_1_1Message.html</anchorfile>
      <anchor>a4f7a5b67db90765bff7770b84b32df29</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addAttachment</name>
      <anchorfile>classWt_1_1Mail_1_1Message.html</anchorfile>
      <anchor>a00cdb9874009e9b6310d4e677901878e</anchor>
      <arglist>(const std::string &amp;mimeType, const std::string &amp;fileName, std::istream *data)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>write</name>
      <anchorfile>classWt_1_1Mail_1_1Message.html</anchorfile>
      <anchor>a2599e3c485686961d57c7d675a1f7696</anchor>
      <arglist>(std::ostream &amp;out) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Payment::Money</name>
    <filename>classWt_1_1Payment_1_1Money.html</filename>
    <member kind="function">
      <type></type>
      <name>Money</name>
      <anchorfile>classWt_1_1Payment_1_1Money.html</anchorfile>
      <anchor>aa4fbef6a960bad5daa2e74c9d9627b88</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Money</name>
      <anchorfile>classWt_1_1Payment_1_1Money.html</anchorfile>
      <anchor>a719ceadd8261cc1af06d34491ac4cedc</anchor>
      <arglist>(long long value, int cents, const std::string &amp;currency)</arglist>
    </member>
    <member kind="function">
      <type>long long</type>
      <name>value</name>
      <anchorfile>classWt_1_1Payment_1_1Money.html</anchorfile>
      <anchor>a5d1a97d4c32ab6e5f9e8f6ad1ae5236c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>cents</name>
      <anchorfile>classWt_1_1Payment_1_1Money.html</anchorfile>
      <anchor>a15189968fdfea2536ea8888a84dfe9c5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCurrency</name>
      <anchorfile>classWt_1_1Payment_1_1Money.html</anchorfile>
      <anchor>ab0f4f1fa6730fc63e874a5ad491013d9</anchor>
      <arglist>(std::string currency)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>currency</name>
      <anchorfile>classWt_1_1Payment_1_1Money.html</anchorfile>
      <anchor>a053955d3ab22a5c63a4be64502864939</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::string</type>
      <name>toString</name>
      <anchorfile>classWt_1_1Payment_1_1Money.html</anchorfile>
      <anchor>a9950406222f16893dc5b64d5376d594b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Money &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1Payment_1_1Money.html</anchorfile>
      <anchor>a17132712c06787f44b7439df6bfa8079</anchor>
      <arglist>(const Money &amp;money)</arglist>
    </member>
    <member kind="function">
      <type>Money &amp;</type>
      <name>operator+=</name>
      <anchorfile>classWt_1_1Payment_1_1Money.html</anchorfile>
      <anchor>a81736f5d841b2647ec88de4f036bf223</anchor>
      <arglist>(const Money &amp;money)</arglist>
    </member>
    <member kind="function">
      <type>Money &amp;</type>
      <name>operator-=</name>
      <anchorfile>classWt_1_1Payment_1_1Money.html</anchorfile>
      <anchor>a0b50491a7de5f7075b323932170fb4f8</anchor>
      <arglist>(const Money &amp;money)</arglist>
    </member>
    <member kind="function">
      <type>Money &amp;</type>
      <name>operator*=</name>
      <anchorfile>classWt_1_1Payment_1_1Money.html</anchorfile>
      <anchor>ab3fd27a3260454ebbd87db6530640b1a</anchor>
      <arglist>(double value)</arglist>
    </member>
    <member kind="function">
      <type>Money &amp;</type>
      <name>operator/=</name>
      <anchorfile>classWt_1_1Payment_1_1Money.html</anchorfile>
      <anchor>afaae5f4a55a0fa2d042d4ae84bc2b75c</anchor>
      <arglist>(double value)</arglist>
    </member>
    <member kind="function">
      <type>Money &amp;</type>
      <name>operator*=</name>
      <anchorfile>classWt_1_1Payment_1_1Money.html</anchorfile>
      <anchor>a4427baae930b2f45c2a34dd150e2cf77</anchor>
      <arglist>(unsigned value)</arglist>
    </member>
    <member kind="function">
      <type>Money &amp;</type>
      <name>operator/=</name>
      <anchorfile>classWt_1_1Payment_1_1Money.html</anchorfile>
      <anchor>af2e24a7f63633ec52619a6ccc096834e</anchor>
      <arglist>(unsigned value)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Dbo::backend::MSSQLServer</name>
    <filename>classWt_1_1Dbo_1_1backend_1_1MSSQLServer.html</filename>
    <base>Wt::Dbo::SqlConnection</base>
    <member kind="function">
      <type></type>
      <name>MSSQLServer</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1MSSQLServer.html</anchorfile>
      <anchor>afda9637829e54d2a680c2407d23d177f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MSSQLServer</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1MSSQLServer.html</anchorfile>
      <anchor>a220e291b15082e72e5a6e270a7d8777b</anchor>
      <arglist>(const std::string &amp;connectionString)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MSSQLServer</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1MSSQLServer.html</anchorfile>
      <anchor>a247231314e4b29c6dcbdf30b16757171</anchor>
      <arglist>(const MSSQLServer &amp;other)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MSSQLServer</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1MSSQLServer.html</anchorfile>
      <anchor>a32f9f71883fce04d5a4f3cbe81bde74c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::unique_ptr&lt; Wt::Dbo::SqlConnection &gt;</type>
      <name>clone</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1MSSQLServer.html</anchorfile>
      <anchor>a7fc999ad00b4496e8aa327a8de75d7dd</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>connect</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1MSSQLServer.html</anchorfile>
      <anchor>a15f9d413937ccc56a704f0e3314d2cd8</anchor>
      <arglist>(const std::string &amp;connectionString)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>executeSql</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1MSSQLServer.html</anchorfile>
      <anchor>a507a07f4050e00a9ef9c14181f0b3dd1</anchor>
      <arglist>(const std::string &amp;sql) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>startTransaction</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1MSSQLServer.html</anchorfile>
      <anchor>aad01883ffdaa712d73fdd5b704370f7d</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>commitTransaction</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1MSSQLServer.html</anchorfile>
      <anchor>a6c4d888a6e2494eabc399902bd64fcc8</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>rollbackTransaction</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1MSSQLServer.html</anchorfile>
      <anchor>aa23f211a5e1d644af99d87d623ead1ed</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::unique_ptr&lt; SqlStatement &gt;</type>
      <name>prepareStatement</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1MSSQLServer.html</anchorfile>
      <anchor>a9c323871afaa40fd871797e2de753e13</anchor>
      <arglist>(const std::string &amp;sql) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>autoincrementSql</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1MSSQLServer.html</anchorfile>
      <anchor>a40267f279a7807a474d2cc573766a4ed</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::vector&lt; std::string &gt;</type>
      <name>autoincrementCreateSequenceSql</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1MSSQLServer.html</anchorfile>
      <anchor>a8f0875f0289f6000109040d4189a0b73</anchor>
      <arglist>(const std::string &amp;table, const std::string &amp;id) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::vector&lt; std::string &gt;</type>
      <name>autoincrementDropSequenceSql</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1MSSQLServer.html</anchorfile>
      <anchor>aa0a0a1b50ddf172d42a24a9576e5e12d</anchor>
      <arglist>(const std::string &amp;table, const std::string &amp;id) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>autoincrementType</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1MSSQLServer.html</anchorfile>
      <anchor>aba5b869ff055622f567390115c9ee6df</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>autoincrementInsertInfix</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1MSSQLServer.html</anchorfile>
      <anchor>adfc6c4132b822102a886f942bdc30aea</anchor>
      <arglist>(const std::string &amp;id) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>autoincrementInsertSuffix</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1MSSQLServer.html</anchorfile>
      <anchor>ae0c2271979a596e508ab900f2431f4b0</anchor>
      <arglist>(const std::string &amp;id) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>dateTimeType</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1MSSQLServer.html</anchorfile>
      <anchor>ad7eb9ca74e0ef96feadf6646bf92951f</anchor>
      <arglist>(SqlDateTimeType type) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>blobType</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1MSSQLServer.html</anchorfile>
      <anchor>a9d109003f3d63edfebf3267d1a6102b8</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>requireSubqueryAlias</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1MSSQLServer.html</anchorfile>
      <anchor>a51cf2af871a6332c0b693b6c48ab9a6c</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>booleanType</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1MSSQLServer.html</anchorfile>
      <anchor>afa8b17a3d320964f5049dee8a7bae668</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>supportAlterTable</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1MSSQLServer.html</anchorfile>
      <anchor>ac07b66bcd93302c8ef442d302b9349b8</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>textType</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1MSSQLServer.html</anchorfile>
      <anchor>ac82969a4482cebbf15b9ddb70cc963cc</anchor>
      <arglist>(int size) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>autoincrementSql</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1MSSQLServer.html</anchorfile>
      <anchor>a40267f279a7807a474d2cc573766a4ed</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::vector&lt; std::string &gt;</type>
      <name>autoincrementCreateSequenceSql</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1MSSQLServer.html</anchorfile>
      <anchor>a8f0875f0289f6000109040d4189a0b73</anchor>
      <arglist>(const std::string &amp;table, const std::string &amp;id) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::vector&lt; std::string &gt;</type>
      <name>autoincrementDropSequenceSql</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1MSSQLServer.html</anchorfile>
      <anchor>aa0a0a1b50ddf172d42a24a9576e5e12d</anchor>
      <arglist>(const std::string &amp;table, const std::string &amp;id) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>autoincrementType</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1MSSQLServer.html</anchorfile>
      <anchor>aba5b869ff055622f567390115c9ee6df</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>autoincrementInsertInfix</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1MSSQLServer.html</anchorfile>
      <anchor>adfc6c4132b822102a886f942bdc30aea</anchor>
      <arglist>(const std::string &amp;id) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>autoincrementInsertSuffix</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1MSSQLServer.html</anchorfile>
      <anchor>ae0c2271979a596e508ab900f2431f4b0</anchor>
      <arglist>(const std::string &amp;id) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>dateTimeType</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1MSSQLServer.html</anchorfile>
      <anchor>ad7eb9ca74e0ef96feadf6646bf92951f</anchor>
      <arglist>(SqlDateTimeType type) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>blobType</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1MSSQLServer.html</anchorfile>
      <anchor>a9d109003f3d63edfebf3267d1a6102b8</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>requireSubqueryAlias</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1MSSQLServer.html</anchorfile>
      <anchor>a51cf2af871a6332c0b693b6c48ab9a6c</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>booleanType</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1MSSQLServer.html</anchorfile>
      <anchor>afa8b17a3d320964f5049dee8a7bae668</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>supportAlterTable</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1MSSQLServer.html</anchorfile>
      <anchor>ac07b66bcd93302c8ef442d302b9349b8</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>textType</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1MSSQLServer.html</anchorfile>
      <anchor>ac82969a4482cebbf15b9ddb70cc963cc</anchor>
      <arglist>(int size) const override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Dbo::backend::MySQL</name>
    <filename>classWt_1_1Dbo_1_1backend_1_1MySQL.html</filename>
    <base>Wt::Dbo::SqlConnection</base>
    <member kind="function">
      <type></type>
      <name>MySQL</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1MySQL.html</anchorfile>
      <anchor>a63610e88d55ae94d600efccfb2f9408a</anchor>
      <arglist>(const std::string &amp;db, const std::string &amp;dbuser=&quot;root&quot;, const std::string &amp;dbpasswd=&quot;&quot;, const std::string dbhost=&quot;localhost&quot;, unsigned int dbport=0, const std::string &amp;dbsocket=&quot;/var/run/mysqld/mysqld.sock&quot;, int fractionalSecondsPart=-1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MySQL</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1MySQL.html</anchorfile>
      <anchor>aca6c1a113207f893dade5a9f6cdb56f4</anchor>
      <arglist>(const MySQL &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~MySQL</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1MySQL.html</anchorfile>
      <anchor>ae479950b9729c2b40196ec78ce44d867</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::unique_ptr&lt; SqlConnection &gt;</type>
      <name>clone</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1MySQL.html</anchorfile>
      <anchor>abf68dfe81d60b47aa3fa1018e8e96e1e</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>connect</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1MySQL.html</anchorfile>
      <anchor>a016de5d42ec0c7de6a7d3ae667de56e9</anchor>
      <arglist>(const std::string &amp;db, const std::string &amp;dbuser=&quot;root&quot;, const std::string &amp;dbpasswd=&quot;&quot;, const std::string &amp;dbhost=&quot;localhost&quot;, unsigned int dbport=0, const std::string &amp;dbsocket=&quot;/var/run/mysqld/mysqld.sock&quot;)</arglist>
    </member>
    <member kind="function">
      <type>MySQL_impl *</type>
      <name>connection</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1MySQL.html</anchorfile>
      <anchor>a3a3b7075d485a4133f188719a9c244a2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>executeSql</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1MySQL.html</anchorfile>
      <anchor>ac0341395b12b0a032cd76a003a7f4a15</anchor>
      <arglist>(const std::string &amp;sql) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>startTransaction</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1MySQL.html</anchorfile>
      <anchor>a4fde1729b6c065786c145ef2177deb0b</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>commitTransaction</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1MySQL.html</anchorfile>
      <anchor>a60d17477ee14d27f46b5ccbc947e939a</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>rollbackTransaction</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1MySQL.html</anchorfile>
      <anchor>ae1dc60d9fdaf18479db4cfeb8dfced2a</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::unique_ptr&lt; SqlStatement &gt;</type>
      <name>prepareStatement</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1MySQL.html</anchorfile>
      <anchor>a65afdfdd9092799b7134dc1cde44c7ad</anchor>
      <arglist>(const std::string &amp;sql) override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getFractionalSecondsPart</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1MySQL.html</anchorfile>
      <anchor>a8325469159d931eb2a4031aacba853d5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFractionalSecondsPart</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1MySQL.html</anchorfile>
      <anchor>a0424fc4ee7979c5636e4f8c977a1338c</anchor>
      <arglist>(int fractionalSecondsPart)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>autoincrementSql</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1MySQL.html</anchorfile>
      <anchor>aad1d7ff840d2f60de33eedb65ba26c44</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>autoincrementType</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1MySQL.html</anchorfile>
      <anchor>a352ee37adb15cb612cc94f3dbf5d2b4d</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>autoincrementInsertSuffix</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1MySQL.html</anchorfile>
      <anchor>a9c44c4432a6b614c207f8cf099011471</anchor>
      <arglist>(const std::string &amp;id) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::vector&lt; std::string &gt;</type>
      <name>autoincrementCreateSequenceSql</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1MySQL.html</anchorfile>
      <anchor>a14bfa6e6cdb21c0325525bbecad4f8bf</anchor>
      <arglist>(const std::string &amp;table, const std::string &amp;id) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::vector&lt; std::string &gt;</type>
      <name>autoincrementDropSequenceSql</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1MySQL.html</anchorfile>
      <anchor>a360217e867a3cfbca686af7de5d7c1e4</anchor>
      <arglist>(const std::string &amp;table, const std::string &amp;id) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>dateTimeType</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1MySQL.html</anchorfile>
      <anchor>a7e7bc4e5602b70459ce2782b3c5abad3</anchor>
      <arglist>(SqlDateTimeType type) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>blobType</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1MySQL.html</anchorfile>
      <anchor>af6903da7876729bc5d65e65e350aa74d</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>supportAlterTable</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1MySQL.html</anchorfile>
      <anchor>a42c6a7d34697dd5367ac392e29ba7dc7</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>alterTableConstraintString</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1MySQL.html</anchorfile>
      <anchor>acad1306efa6b63f921fbd830656bad6a</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>requireSubqueryAlias</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1MySQL.html</anchorfile>
      <anchor>aa66a5693b1ee5fc70e8ddb03dab1af2b</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>autoincrementSql</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1MySQL.html</anchorfile>
      <anchor>aad1d7ff840d2f60de33eedb65ba26c44</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>autoincrementType</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1MySQL.html</anchorfile>
      <anchor>a352ee37adb15cb612cc94f3dbf5d2b4d</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>autoincrementInsertSuffix</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1MySQL.html</anchorfile>
      <anchor>a9c44c4432a6b614c207f8cf099011471</anchor>
      <arglist>(const std::string &amp;id) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::vector&lt; std::string &gt;</type>
      <name>autoincrementCreateSequenceSql</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1MySQL.html</anchorfile>
      <anchor>a14bfa6e6cdb21c0325525bbecad4f8bf</anchor>
      <arglist>(const std::string &amp;table, const std::string &amp;id) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::vector&lt; std::string &gt;</type>
      <name>autoincrementDropSequenceSql</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1MySQL.html</anchorfile>
      <anchor>a360217e867a3cfbca686af7de5d7c1e4</anchor>
      <arglist>(const std::string &amp;table, const std::string &amp;id) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>dateTimeType</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1MySQL.html</anchorfile>
      <anchor>a7e7bc4e5602b70459ce2782b3c5abad3</anchor>
      <arglist>(SqlDateTimeType type) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>blobType</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1MySQL.html</anchorfile>
      <anchor>af6903da7876729bc5d65e65e350aa74d</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>supportAlterTable</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1MySQL.html</anchorfile>
      <anchor>a42c6a7d34697dd5367ac392e29ba7dc7</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>alterTableConstraintString</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1MySQL.html</anchorfile>
      <anchor>acad1306efa6b63f921fbd830656bad6a</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>requireSubqueryAlias</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1MySQL.html</anchorfile>
      <anchor>aa66a5693b1ee5fc70e8ddb03dab1af2b</anchor>
      <arglist>() const override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Dbo::backend::MySQLStatement</name>
    <filename>classWt_1_1Dbo_1_1backend_1_1MySQLStatement.html</filename>
    <base>Wt::Dbo::SqlStatement</base>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>reset</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1MySQLStatement.html</anchorfile>
      <anchor>ac72245e222b98d227fcb8d027b81ce36</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>bind</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1MySQLStatement.html</anchorfile>
      <anchor>ab077c95d8c9abefa3df85d2bf0cae210</anchor>
      <arglist>(int column, const std::string &amp;value) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>bind</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1MySQLStatement.html</anchorfile>
      <anchor>a87375dc6da3da6ee647cff5478ce1a23</anchor>
      <arglist>(int column, short value) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>bind</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1MySQLStatement.html</anchorfile>
      <anchor>a8f59d105d336738655e0e819583e501d</anchor>
      <arglist>(int column, int value) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>bind</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1MySQLStatement.html</anchorfile>
      <anchor>a73b56a7c9c2658e5ed20cbf4654335f3</anchor>
      <arglist>(int column, long long value) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>bind</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1MySQLStatement.html</anchorfile>
      <anchor>a622963d8138536849551c177ca8b4345</anchor>
      <arglist>(int column, float value) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>bind</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1MySQLStatement.html</anchorfile>
      <anchor>af303a4150946cda9e5061b9b9c0b6633</anchor>
      <arglist>(int column, double value) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>bind</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1MySQLStatement.html</anchorfile>
      <anchor>a26395aab876c1e3dd26c797f8c9589a0</anchor>
      <arglist>(int column, const std::chrono::system_clock::time_point &amp;value, SqlDateTimeType type) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>bind</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1MySQLStatement.html</anchorfile>
      <anchor>a398adce4961617df2b4f0e6eb35b7868</anchor>
      <arglist>(int column, const std::chrono::duration&lt; int, std::milli &gt; &amp;value) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>bind</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1MySQLStatement.html</anchorfile>
      <anchor>aa637847db45e36bfc37553fdfe72c0d9</anchor>
      <arglist>(int column, const std::vector&lt; unsigned char &gt; &amp;value) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>bindNull</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1MySQLStatement.html</anchorfile>
      <anchor>a316e3578a9d43824df24bddbc1b68adf</anchor>
      <arglist>(int column) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>execute</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1MySQLStatement.html</anchorfile>
      <anchor>a2f9b9691a6cd1e9ca226524c85c41851</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual long long</type>
      <name>insertedId</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1MySQLStatement.html</anchorfile>
      <anchor>ae904a01d0cc859d9c056a546ce624074</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>affectedRowCount</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1MySQLStatement.html</anchorfile>
      <anchor>af6bbbb958d8cdb691bdcc6f385dd757a</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>nextRow</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1MySQLStatement.html</anchorfile>
      <anchor>ae00b76ea16e0be055b6bad7a07daee21</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>columnCount</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1MySQLStatement.html</anchorfile>
      <anchor>af3682edccf563d6d1aeea0b2ac15fe1d</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>getResult</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1MySQLStatement.html</anchorfile>
      <anchor>a8397d580f8a437578b0b6abef9d8e107</anchor>
      <arglist>(int column, std::string *value, int size) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>getResult</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1MySQLStatement.html</anchorfile>
      <anchor>afaa82a86f1c6fedc2678dc7abab25f38</anchor>
      <arglist>(int column, short *value) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>getResult</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1MySQLStatement.html</anchorfile>
      <anchor>a1436fe825c97082f626a78180b02ed01</anchor>
      <arglist>(int column, int *value) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>getResult</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1MySQLStatement.html</anchorfile>
      <anchor>ad07148c90de057f0e10d8b575edb74be</anchor>
      <arglist>(int column, long long *value) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>getResult</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1MySQLStatement.html</anchorfile>
      <anchor>a4c3936979b363f2f7598732c3d698ee2</anchor>
      <arglist>(int column, float *value) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>getResult</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1MySQLStatement.html</anchorfile>
      <anchor>a07ae4b42a70098f15dfdf7208f4e59c2</anchor>
      <arglist>(int column, double *value) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>getResult</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1MySQLStatement.html</anchorfile>
      <anchor>aa03001605ad3792b51c5236a5c390a35</anchor>
      <arglist>(int column, std::chrono::system_clock::time_point *value, SqlDateTimeType type) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>getResult</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1MySQLStatement.html</anchorfile>
      <anchor>aa4514aea947029f842005bb5f9a5d6f4</anchor>
      <arglist>(int column, std::chrono::duration&lt; int, std::milli &gt; *value) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>getResult</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1MySQLStatement.html</anchorfile>
      <anchor>abe0362b5bc74f99047b9959507822994</anchor>
      <arglist>(int column, std::vector&lt; unsigned char &gt; *value, int size) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>sql</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1MySQLStatement.html</anchorfile>
      <anchor>ae54d14cef1dc6ecafcb3cf73a2999bd3</anchor>
      <arglist>() const override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Render::WTextRenderer::Node</name>
    <filename>classWt_1_1Render_1_1WTextRenderer_1_1Node.html</filename>
    <member kind="function">
      <type>DomElementType</type>
      <name>type</name>
      <anchorfile>classWt_1_1Render_1_1WTextRenderer_1_1Node.html</anchorfile>
      <anchor>a5fa3445668379de91d6996f7166dc252</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>attributeValue</name>
      <anchorfile>classWt_1_1Render_1_1WTextRenderer_1_1Node.html</anchorfile>
      <anchor>aa6ea3648252a4cde553e01c6d69a55b2</anchor>
      <arglist>(const std::string &amp;attribute) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>page</name>
      <anchorfile>classWt_1_1Render_1_1WTextRenderer_1_1Node.html</anchorfile>
      <anchor>a2ee5ac7badeb5f14bc9f5e52ccf4a8aa</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>x</name>
      <anchorfile>classWt_1_1Render_1_1WTextRenderer_1_1Node.html</anchorfile>
      <anchor>a0774d103370727f2670cfcbe022fe9ed</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>y</name>
      <anchorfile>classWt_1_1Render_1_1WTextRenderer_1_1Node.html</anchorfile>
      <anchor>a7da5c2086460245a759eae31616e50a1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>width</name>
      <anchorfile>classWt_1_1Render_1_1WTextRenderer_1_1Node.html</anchorfile>
      <anchor>adac57b22263d927c4c60db234ab9e74e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>height</name>
      <anchorfile>classWt_1_1Render_1_1WTextRenderer_1_1Node.html</anchorfile>
      <anchor>a71c4b40df6c134c610f17cd7cc6b0813</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>fragment</name>
      <anchorfile>classWt_1_1Render_1_1WTextRenderer_1_1Node.html</anchorfile>
      <anchor>a4cca51c728a08e9559aa93bf0c0f0d33</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>fragmentCount</name>
      <anchorfile>classWt_1_1Render_1_1WTextRenderer_1_1Node.html</anchorfile>
      <anchor>a4f87a4c6e4ef83b549bfe81147733672</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Dbo::NoUniqueResultException</name>
    <filename>classWt_1_1Dbo_1_1NoUniqueResultException.html</filename>
    <base>Wt::Dbo::Exception</base>
    <member kind="function">
      <type></type>
      <name>NoUniqueResultException</name>
      <anchorfile>classWt_1_1Dbo_1_1NoUniqueResultException.html</anchorfile>
      <anchor>ad89a102eab9ef0d5d0d36975a6c958ab</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Auth::OAuthAccessToken</name>
    <filename>classWt_1_1Auth_1_1OAuthAccessToken.html</filename>
    <member kind="function">
      <type></type>
      <name>OAuthAccessToken</name>
      <anchorfile>classWt_1_1Auth_1_1OAuthAccessToken.html</anchorfile>
      <anchor>a84511cf5d3a55299e5ffcecfde2497db</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>OAuthAccessToken</name>
      <anchorfile>classWt_1_1Auth_1_1OAuthAccessToken.html</anchorfile>
      <anchor>ad7caa332a879d695a5d09edbd240ab7e</anchor>
      <arglist>(const std::string &amp;value, const WDateTime &amp;expires, const std::string &amp;refreshToken)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>OAuthAccessToken</name>
      <anchorfile>classWt_1_1Auth_1_1OAuthAccessToken.html</anchorfile>
      <anchor>a268c798f6ff9e6d4200f4374cc2bdebe</anchor>
      <arglist>(const std::string &amp;value, const WDateTime &amp;expires, const std::string &amp;refreshToken, const std::string &amp;idToken)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isValid</name>
      <anchorfile>classWt_1_1Auth_1_1OAuthAccessToken.html</anchorfile>
      <anchor>acbb4ec55c068fb1c0b6b4dbb4a3106c7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>value</name>
      <anchorfile>classWt_1_1Auth_1_1OAuthAccessToken.html</anchorfile>
      <anchor>ad98c896c01fc3ebdcbf2487f17381590</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WDateTime</type>
      <name>expires</name>
      <anchorfile>classWt_1_1Auth_1_1OAuthAccessToken.html</anchorfile>
      <anchor>aa90d10dea14ad5abfa8863bd51aeeb61</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>refreshToken</name>
      <anchorfile>classWt_1_1Auth_1_1OAuthAccessToken.html</anchorfile>
      <anchor>a7f62c5e5b3cccaf4de5ad564e88a77f8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const OAuthAccessToken</type>
      <name>Invalid</name>
      <anchorfile>classWt_1_1Auth_1_1OAuthAccessToken.html</anchorfile>
      <anchor>a183ece279d90ff813d5ec082ee71d0bf</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Auth::OAuthAuthorizationEndpointProcess</name>
    <filename>classWt_1_1Auth_1_1OAuthAuthorizationEndpointProcess.html</filename>
    <base>Wt::WObject</base>
    <member kind="function">
      <type></type>
      <name>OAuthAuthorizationEndpointProcess</name>
      <anchorfile>classWt_1_1Auth_1_1OAuthAuthorizationEndpointProcess.html</anchorfile>
      <anchor>a3d3464a8ed6b70038bcf03af3bf2ae40</anchor>
      <arglist>(Login &amp;login, AbstractUserDatabase &amp;db)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>processEnvironment</name>
      <anchorfile>classWt_1_1Auth_1_1OAuthAuthorizationEndpointProcess.html</anchorfile>
      <anchor>a55ae9c812d2ae560e31382ca94e3bb97</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>validRequest</name>
      <anchorfile>classWt_1_1Auth_1_1OAuthAuthorizationEndpointProcess.html</anchorfile>
      <anchor>a319471d5fa3e2dc5c77979d71f7a0905</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Signal&lt; std::string &gt; &amp;</type>
      <name>authorized</name>
      <anchorfile>classWt_1_1Auth_1_1OAuthAuthorizationEndpointProcess.html</anchorfile>
      <anchor>ac79f4ce1a95b2de29d7deffcc13aef5c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>authorizeScope</name>
      <anchorfile>classWt_1_1Auth_1_1OAuthAuthorizationEndpointProcess.html</anchorfile>
      <anchor>aafcea878368e0cb17f4ee075bc12b809</anchor>
      <arglist>(const std::string &amp;scope)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAuthCodeExpSecs</name>
      <anchorfile>classWt_1_1Auth_1_1OAuthAuthorizationEndpointProcess.html</anchorfile>
      <anchor>ad470578a353058c0beb08cac0dd05795</anchor>
      <arglist>(int seconds)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Auth::OAuthClient</name>
    <filename>classWt_1_1Auth_1_1OAuthClient.html</filename>
    <member kind="function">
      <type></type>
      <name>OAuthClient</name>
      <anchorfile>classWt_1_1Auth_1_1OAuthClient.html</anchorfile>
      <anchor>ae33e12e222abd8291ec1ba4139d653bf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>OAuthClient</name>
      <anchorfile>classWt_1_1Auth_1_1OAuthClient.html</anchorfile>
      <anchor>abd066abe152aba1d3b27fa0dba0fe291</anchor>
      <arglist>(const std::string &amp;id, const AbstractUserDatabase &amp;db)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>checkValid</name>
      <anchorfile>classWt_1_1Auth_1_1OAuthClient.html</anchorfile>
      <anchor>a5a7c7d8a80fd44beb6fbf938127c9bc9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>id</name>
      <anchorfile>classWt_1_1Auth_1_1OAuthClient.html</anchorfile>
      <anchor>a105b00c1b59a62524aba3143176e1571</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>clientId</name>
      <anchorfile>classWt_1_1Auth_1_1OAuthClient.html</anchorfile>
      <anchor>a5ef115487e58fa631eb5108449f9e057</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>verifySecret</name>
      <anchorfile>classWt_1_1Auth_1_1OAuthClient.html</anchorfile>
      <anchor>acb88bad3fecf2f9c8ecde16a494925a4</anchor>
      <arglist>(const std::string &amp;secret) const</arglist>
    </member>
    <member kind="function">
      <type>std::set&lt; std::string &gt;</type>
      <name>redirectUris</name>
      <anchorfile>classWt_1_1Auth_1_1OAuthClient.html</anchorfile>
      <anchor>a78d7e08e3782b6649903103e11c7b895</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>confidential</name>
      <anchorfile>classWt_1_1Auth_1_1OAuthClient.html</anchorfile>
      <anchor>a1dff18e04e5c614bb4e861d6b657a7e9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ClientSecretMethod</type>
      <name>authMethod</name>
      <anchorfile>classWt_1_1Auth_1_1OAuthClient.html</anchorfile>
      <anchor>ad14a3f485e298c8dd582643435c599bb</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Auth::OAuthProcess</name>
    <filename>classWt_1_1Auth_1_1OAuthProcess.html</filename>
    <base>Wt::WObject</base>
    <class kind="class">Wt::Auth::OAuthProcess::TokenError</class>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>scope</name>
      <anchorfile>classWt_1_1Auth_1_1OAuthProcess.html</anchorfile>
      <anchor>a0abac41f14450571445d1c82e9dba4cc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const OAuthService &amp;</type>
      <name>service</name>
      <anchorfile>classWt_1_1Auth_1_1OAuthProcess.html</anchorfile>
      <anchor>acee5353a12ed322183b7418558d27025</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>startAuthorize</name>
      <anchorfile>classWt_1_1Auth_1_1OAuthProcess.html</anchorfile>
      <anchor>a3be5a91214f39bf357996e9b3d4741c8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>startAuthenticate</name>
      <anchorfile>classWt_1_1Auth_1_1OAuthProcess.html</anchorfile>
      <anchor>a3f6e1c6cf8015d5515d61875cc81fd6c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getIdentity</name>
      <anchorfile>classWt_1_1Auth_1_1OAuthProcess.html</anchorfile>
      <anchor>aa8102afbc7fa52027e15f4a952288923</anchor>
      <arglist>(const OAuthAccessToken &amp;token)</arglist>
    </member>
    <member kind="function">
      <type>WString</type>
      <name>error</name>
      <anchorfile>classWt_1_1Auth_1_1OAuthProcess.html</anchorfile>
      <anchor>a0422fcabe43babfc6763b7ef22775e41</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const OAuthAccessToken &amp;</type>
      <name>token</name>
      <anchorfile>classWt_1_1Auth_1_1OAuthProcess.html</anchorfile>
      <anchor>aea64f50455bdef267ebc854e9991e4f8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Signal&lt; OAuthAccessToken &gt; &amp;</type>
      <name>authorized</name>
      <anchorfile>classWt_1_1Auth_1_1OAuthProcess.html</anchorfile>
      <anchor>ad1f0c2b2915d4d2e75143b1d73170b86</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Signal&lt; Identity &gt; &amp;</type>
      <name>authenticated</name>
      <anchorfile>classWt_1_1Auth_1_1OAuthProcess.html</anchorfile>
      <anchor>a22d65da9fa8a510363beff4b6e057d8b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>OAuthProcess</name>
      <anchorfile>classWt_1_1Auth_1_1OAuthProcess.html</anchorfile>
      <anchor>aa31f2e070502f9614a90ec3dfc5037fc</anchor>
      <arglist>(const OAuthService &amp;service, const std::string &amp;scope)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual OAuthAccessToken</type>
      <name>parseTokenResponse</name>
      <anchorfile>classWt_1_1Auth_1_1OAuthProcess.html</anchorfile>
      <anchor>ad951ad389cff9c3de719f416f40c9a75</anchor>
      <arglist>(const Http::Message &amp;response)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>setError</name>
      <anchorfile>classWt_1_1Auth_1_1OAuthProcess.html</anchorfile>
      <anchor>ae1a2ab7a8f9e120c2b5bf8e8a3aa1a21</anchor>
      <arglist>(const WString &amp;e)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Auth::OAuthService</name>
    <filename>classWt_1_1Auth_1_1OAuthService.html</filename>
    <member kind="function">
      <type></type>
      <name>OAuthService</name>
      <anchorfile>classWt_1_1Auth_1_1OAuthService.html</anchorfile>
      <anchor>acfe5b14051c69894c8e49e6a8a68b271</anchor>
      <arglist>(const AuthService &amp;baseAuth)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~OAuthService</name>
      <anchorfile>classWt_1_1Auth_1_1OAuthService.html</anchorfile>
      <anchor>a7bd497ad95bafcee292937099f453022</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const AuthService &amp;</type>
      <name>baseAuth</name>
      <anchorfile>classWt_1_1Auth_1_1OAuthService.html</anchorfile>
      <anchor>a9f0d00b998656e9b9be808b447f705d9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::unique_ptr&lt; OAuthProcess &gt;</type>
      <name>createProcess</name>
      <anchorfile>classWt_1_1Auth_1_1OAuthService.html</anchorfile>
      <anchor>a2978c25f9b60f7e0b5fac414e23923a6</anchor>
      <arglist>(const std::string &amp;scope) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>name</name>
      <anchorfile>classWt_1_1Auth_1_1OAuthService.html</anchorfile>
      <anchor>a5718ddabc7de591b5f056daf1f17701e</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual WString</type>
      <name>description</name>
      <anchorfile>classWt_1_1Auth_1_1OAuthService.html</anchorfile>
      <anchor>a17346a2921fe706bc83018fb2443f236</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>popupWidth</name>
      <anchorfile>classWt_1_1Auth_1_1OAuthService.html</anchorfile>
      <anchor>ae7caef7e593e4e078a50e5f872f14d20</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>popupHeight</name>
      <anchorfile>classWt_1_1Auth_1_1OAuthService.html</anchorfile>
      <anchor>a3f5f2ca918803753061105c0a5836a1e</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>authenticationScope</name>
      <anchorfile>classWt_1_1Auth_1_1OAuthService.html</anchorfile>
      <anchor>a040351f2a2b956c059ea9974e6829d13</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>redirectEndpoint</name>
      <anchorfile>classWt_1_1Auth_1_1OAuthService.html</anchorfile>
      <anchor>add76eee14370693fa109c2768ca70725</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>redirectEndpointPath</name>
      <anchorfile>classWt_1_1Auth_1_1OAuthService.html</anchorfile>
      <anchor>a623aeb8b3748532daf30c1a42b16adc3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>authorizationEndpoint</name>
      <anchorfile>classWt_1_1Auth_1_1OAuthService.html</anchorfile>
      <anchor>acab141d7eb5a987baf8ea9281bf00a9a</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>tokenEndpoint</name>
      <anchorfile>classWt_1_1Auth_1_1OAuthService.html</anchorfile>
      <anchor>ad649c21d85628e58eeba7171f1bb9990</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>clientId</name>
      <anchorfile>classWt_1_1Auth_1_1OAuthService.html</anchorfile>
      <anchor>a3f5d653cb613109848321463663ba636</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>clientSecret</name>
      <anchorfile>classWt_1_1Auth_1_1OAuthService.html</anchorfile>
      <anchor>a10f60c79a0892266e75fef4b0965c1f8</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>encodeState</name>
      <anchorfile>classWt_1_1Auth_1_1OAuthService.html</anchorfile>
      <anchor>a0020c014ada141c1e47ee694abfece16</anchor>
      <arglist>(const std::string &amp;sessionId) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>decodeState</name>
      <anchorfile>classWt_1_1Auth_1_1OAuthService.html</anchorfile>
      <anchor>a7b713158153011b7a6017756fc6ec2b2</anchor>
      <arglist>(const std::string &amp;state) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Http::Method</type>
      <name>tokenRequestMethod</name>
      <anchorfile>classWt_1_1Auth_1_1OAuthService.html</anchorfile>
      <anchor>a4956dc1959bb9e968907c939100005c5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ClientSecretMethod</type>
      <name>clientSecretMethod</name>
      <anchorfile>classWt_1_1Auth_1_1OAuthService.html</anchorfile>
      <anchor>a375e645974e14c31d7ef755526cc35a4</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>configureRedirectEndpoint</name>
      <anchorfile>classWt_1_1Auth_1_1OAuthService.html</anchorfile>
      <anchor>a850ad411f84c427d9eff0334499eb3d4</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Auth::OAuthTokenEndpoint</name>
    <filename>classWt_1_1Auth_1_1OAuthTokenEndpoint.html</filename>
    <base>Wt::WResource</base>
    <member kind="function">
      <type></type>
      <name>OAuthTokenEndpoint</name>
      <anchorfile>classWt_1_1Auth_1_1OAuthTokenEndpoint.html</anchorfile>
      <anchor>a5dd3800e03fa5af253380be320f45bd5</anchor>
      <arglist>(AbstractUserDatabase &amp;db, std::string issuer)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>handleRequest</name>
      <anchorfile>classWt_1_1Auth_1_1OAuthTokenEndpoint.html</anchorfile>
      <anchor>ac79c00cc209f0aec1445d3c680bbf55f</anchor>
      <arglist>(const Http::Request &amp;request, Http::Response &amp;response) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAccessExpSecs</name>
      <anchorfile>classWt_1_1Auth_1_1OAuthTokenEndpoint.html</anchorfile>
      <anchor>a1fe06232ec1b3a101efef693222e62b1</anchor>
      <arglist>(int seconds)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setIdExpSecs</name>
      <anchorfile>classWt_1_1Auth_1_1OAuthTokenEndpoint.html</anchorfile>
      <anchor>aa04d278762dee4c557e31abb19bfc12a</anchor>
      <arglist>(int seconds)</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual const std::string</type>
      <name>idTokenPayload</name>
      <anchorfile>classWt_1_1Auth_1_1OAuthTokenEndpoint.html</anchorfile>
      <anchor>a3c3d7a3dd61b8da177adc9e70d87691c</anchor>
      <arglist>(const std::string &amp;clientId, const std::string &amp;scope, const User &amp;user)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Json::Object</name>
    <filename>classWt_1_1Json_1_1Object.html</filename>
    <member kind="function">
      <type></type>
      <name>Object</name>
      <anchorfile>classWt_1_1Json_1_1Object.html</anchorfile>
      <anchor>a2abb77d33f8b911fefabdd4021754014</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Object</name>
      <anchorfile>classWt_1_1Json_1_1Object.html</anchorfile>
      <anchor>a6f99813d64aa25323f36eddf6c70e07c</anchor>
      <arglist>(const Object &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swap</name>
      <anchorfile>classWt_1_1Json_1_1Object.html</anchorfile>
      <anchor>a1f6f6959695bb37e6b724aae2edb524f</anchor>
      <arglist>(Object &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Object &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1Json_1_1Object.html</anchorfile>
      <anchor>a04e8dc96a9a0fc90b5a20be0a2d105f9</anchor>
      <arglist>(const Object &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Object</name>
      <anchorfile>classWt_1_1Json_1_1Object.html</anchorfile>
      <anchor>a8edeb75d4fc8184314b420ce7d8c71f5</anchor>
      <arglist>(Object &amp;&amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Object</name>
      <anchorfile>classWt_1_1Json_1_1Object.html</anchorfile>
      <anchor>a96de9fcf1f1304e5cfcc5f442dd57e8d</anchor>
      <arglist>(std::initializer_list&lt; std::pair&lt; const std::string, Value &gt; &gt; list)</arglist>
    </member>
    <member kind="function">
      <type>Object &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1Json_1_1Object.html</anchorfile>
      <anchor>aaf94f3cee4c2926270808366b6df43b8</anchor>
      <arglist>(Object &amp;&amp;other)</arglist>
    </member>
    <member kind="function">
      <type>std::set&lt; std::string &gt;</type>
      <name>names</name>
      <anchorfile>classWt_1_1Json_1_1Object.html</anchorfile>
      <anchor>abe9d74dbffa84351b8cfdce1d6f98e15</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>contains</name>
      <anchorfile>classWt_1_1Json_1_1Object.html</anchorfile>
      <anchor>a5742ce5e390d8d4773195cf59f2e01ff</anchor>
      <arglist>(const std::string &amp;name) const</arglist>
    </member>
    <member kind="function">
      <type>Type</type>
      <name>type</name>
      <anchorfile>classWt_1_1Json_1_1Object.html</anchorfile>
      <anchor>a4f71037ffb20c20b9327b1a32c67ac89</anchor>
      <arglist>(const std::string &amp;name) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isNull</name>
      <anchorfile>classWt_1_1Json_1_1Object.html</anchorfile>
      <anchor>ae7e910f80568a3909111c11c1eb2590c</anchor>
      <arglist>(const std::string &amp;name) const</arglist>
    </member>
    <member kind="function">
      <type>const Value &amp;</type>
      <name>get</name>
      <anchorfile>classWt_1_1Json_1_1Object.html</anchorfile>
      <anchor>a943987e83d6727c2c8ddb2aa8d8beae0</anchor>
      <arglist>(const std::string &amp;name) const</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static Object</type>
      <name>Empty</name>
      <anchorfile>classWt_1_1Json_1_1Object.html</anchorfile>
      <anchor>aec3396b45321e6d8ec34127d9a5f0ded</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Dbo::ObjectNotFoundException</name>
    <filename>classWt_1_1Dbo_1_1ObjectNotFoundException.html</filename>
    <base>Wt::Dbo::Exception</base>
    <member kind="function">
      <type></type>
      <name>ObjectNotFoundException</name>
      <anchorfile>classWt_1_1Dbo_1_1ObjectNotFoundException.html</anchorfile>
      <anchor>a2de452fb4deac3655f34d337763dae6a</anchor>
      <arglist>(const char *table, const std::string &amp;id)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Core::observable</name>
    <filename>classWt_1_1Core_1_1observable.html</filename>
    <member kind="function">
      <type></type>
      <name>observable</name>
      <anchorfile>classWt_1_1Core_1_1observable.html</anchorfile>
      <anchor>ac18aee9da79a11ad8492ed5e95ed52e4</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~observable</name>
      <anchorfile>classWt_1_1Core_1_1observable.html</anchorfile>
      <anchor>aaff32cdbd6cd167b3e384f0d7ee7d0b8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>auto</type>
      <name>bindSafe</name>
      <anchorfile>classWt_1_1Core_1_1observable.html</anchorfile>
      <anchor>a836dedaeb83d6002de00d6ac2a5b0315</anchor>
      <arglist>(void(C::*method)(Args...)) noexcept</arglist>
    </member>
    <member kind="function">
      <type>auto</type>
      <name>bindSafe</name>
      <anchorfile>classWt_1_1Core_1_1observable.html</anchorfile>
      <anchor>aaae8420328720c8b37c31613dda586ad</anchor>
      <arglist>(void(C::*method)(Args...) const) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>auto</type>
      <name>bindSafe</name>
      <anchorfile>classWt_1_1Core_1_1observable.html</anchorfile>
      <anchor>a8f17f1b96a1a3967f4c6c30150c95d58</anchor>
      <arglist>(const Function &amp;function) noexcept</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Core::observing_ptr</name>
    <filename>classWt_1_1Core_1_1observing__ptr.html</filename>
    <templarg></templarg>
    <member kind="function">
      <type></type>
      <name>observing_ptr</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>a019dcdee0ca9c68f82d30ad254954dbf</anchor>
      <arglist>(T *t=nullptr) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>observing_ptr</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>a49b26d1fc76764731c32a6f8ac004951</anchor>
      <arglist>(const observing_ptr&lt; T &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>observing_ptr</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>a0b6dff1392e1a57ca65498338c332895</anchor>
      <arglist>(observing_ptr&lt; T &gt; &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>observing_ptr&lt; T &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>adee3c5bbc1fe9cd8a992598a1b60dd59</anchor>
      <arglist>(const observing_ptr&lt; T &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>observing_ptr&lt; T &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>af37943c1d861583c64aae519ebb679b9</anchor>
      <arglist>(observing_ptr&lt; T &gt; &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>observing_ptr</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>a7d2793de37f48ea7a6854ab5a4eab962</anchor>
      <arglist>(const observing_ptr&lt; S &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>observing_ptr</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>a0bd38248b74bcd4ebd21ab01c8773086</anchor>
      <arglist>(observing_ptr&lt; S &gt; &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>observing_ptr&lt; T &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>ad976b83b916c82e9da9132baba459863</anchor>
      <arglist>(const observing_ptr&lt; S &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>observing_ptr&lt; T &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>a89597e93ba01dcaec0dde744981365a2</anchor>
      <arglist>(observing_ptr&lt; S &gt; &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>T *</type>
      <name>get</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>af745a40b7370189170b79eac7c21bdc6</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>a6139259d12c8ff49978bb0bd5529dfea</anchor>
      <arglist>(T *v=nullptr) noexcept</arglist>
    </member>
    <member kind="function">
      <type>T *</type>
      <name>operator-&gt;</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>a686ef1c8d64d64f97c325d87a04e60c3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>operator*</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>ad2271dd1888a778febfdd00ee5062cea</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator bool</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>a93ae9f0dd2a1553dc081faad7e1078ee</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>observedDeleted</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>a8ef46842358b32e880d540a3010b0332</anchor>
      <arglist>() const noexcept</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>observing_ptr&lt; const Wt::Core::observable &gt;</name>
    <filename>classWt_1_1Core_1_1observing__ptr.html</filename>
    <member kind="function">
      <type></type>
      <name>observing_ptr</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>a019dcdee0ca9c68f82d30ad254954dbf</anchor>
      <arglist>(const Wt::Core::observable *t=nullptr) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>observing_ptr</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>a49b26d1fc76764731c32a6f8ac004951</anchor>
      <arglist>(const observing_ptr&lt; const Wt::Core::observable &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>observing_ptr</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>a0b6dff1392e1a57ca65498338c332895</anchor>
      <arglist>(observing_ptr&lt; const Wt::Core::observable &gt; &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>observing_ptr</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>a7d2793de37f48ea7a6854ab5a4eab962</anchor>
      <arglist>(const observing_ptr&lt; S &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>observing_ptr</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>a0bd38248b74bcd4ebd21ab01c8773086</anchor>
      <arglist>(observing_ptr&lt; S &gt; &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>observing_ptr&lt; const Wt::Core::observable &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>adee3c5bbc1fe9cd8a992598a1b60dd59</anchor>
      <arglist>(const observing_ptr&lt; const Wt::Core::observable &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>observing_ptr&lt; const Wt::Core::observable &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>af37943c1d861583c64aae519ebb679b9</anchor>
      <arglist>(observing_ptr&lt; const Wt::Core::observable &gt; &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>observing_ptr&lt; const Wt::Core::observable &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>ad976b83b916c82e9da9132baba459863</anchor>
      <arglist>(const observing_ptr&lt; S &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>observing_ptr&lt; const Wt::Core::observable &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>a89597e93ba01dcaec0dde744981365a2</anchor>
      <arglist>(observing_ptr&lt; S &gt; &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>const Wt::Core::observable *</type>
      <name>get</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>af745a40b7370189170b79eac7c21bdc6</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>a6139259d12c8ff49978bb0bd5529dfea</anchor>
      <arglist>(const Wt::Core::observable *v=nullptr) noexcept</arglist>
    </member>
    <member kind="function">
      <type>const Wt::Core::observable *</type>
      <name>operator-&gt;</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>a686ef1c8d64d64f97c325d87a04e60c3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const Wt::Core::observable &amp;</type>
      <name>operator*</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>ad2271dd1888a778febfdd00ee5062cea</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator bool</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>a93ae9f0dd2a1553dc081faad7e1078ee</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>observedDeleted</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>a8ef46842358b32e880d540a3010b0332</anchor>
      <arglist>() const noexcept</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>observing_ptr&lt; SoundManager &gt;</name>
    <filename>classWt_1_1Core_1_1observing__ptr.html</filename>
    <member kind="function">
      <type></type>
      <name>observing_ptr</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>a019dcdee0ca9c68f82d30ad254954dbf</anchor>
      <arglist>(SoundManager *t=nullptr) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>observing_ptr</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>a49b26d1fc76764731c32a6f8ac004951</anchor>
      <arglist>(const observing_ptr&lt; SoundManager &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>observing_ptr</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>a0b6dff1392e1a57ca65498338c332895</anchor>
      <arglist>(observing_ptr&lt; SoundManager &gt; &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>observing_ptr</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>a7d2793de37f48ea7a6854ab5a4eab962</anchor>
      <arglist>(const observing_ptr&lt; S &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>observing_ptr</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>a0bd38248b74bcd4ebd21ab01c8773086</anchor>
      <arglist>(observing_ptr&lt; S &gt; &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>observing_ptr&lt; SoundManager &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>adee3c5bbc1fe9cd8a992598a1b60dd59</anchor>
      <arglist>(const observing_ptr&lt; SoundManager &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>observing_ptr&lt; SoundManager &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>af37943c1d861583c64aae519ebb679b9</anchor>
      <arglist>(observing_ptr&lt; SoundManager &gt; &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>observing_ptr&lt; SoundManager &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>ad976b83b916c82e9da9132baba459863</anchor>
      <arglist>(const observing_ptr&lt; S &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>observing_ptr&lt; SoundManager &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>a89597e93ba01dcaec0dde744981365a2</anchor>
      <arglist>(observing_ptr&lt; S &gt; &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>SoundManager *</type>
      <name>get</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>af745a40b7370189170b79eac7c21bdc6</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>a6139259d12c8ff49978bb0bd5529dfea</anchor>
      <arglist>(SoundManager *v=nullptr) noexcept</arglist>
    </member>
    <member kind="function">
      <type>SoundManager *</type>
      <name>operator-&gt;</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>a686ef1c8d64d64f97c325d87a04e60c3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>SoundManager &amp;</type>
      <name>operator*</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>ad2271dd1888a778febfdd00ee5062cea</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator bool</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>a93ae9f0dd2a1553dc081faad7e1078ee</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>observedDeleted</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>a8ef46842358b32e880d540a3010b0332</anchor>
      <arglist>() const noexcept</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>observing_ptr&lt; Wt::WContainerWidget &gt;</name>
    <filename>classWt_1_1Core_1_1observing__ptr.html</filename>
    <member kind="function">
      <type></type>
      <name>observing_ptr</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>a019dcdee0ca9c68f82d30ad254954dbf</anchor>
      <arglist>(Wt::WContainerWidget *t=nullptr) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>observing_ptr</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>a49b26d1fc76764731c32a6f8ac004951</anchor>
      <arglist>(const observing_ptr&lt; Wt::WContainerWidget &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>observing_ptr</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>a0b6dff1392e1a57ca65498338c332895</anchor>
      <arglist>(observing_ptr&lt; Wt::WContainerWidget &gt; &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>observing_ptr</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>a7d2793de37f48ea7a6854ab5a4eab962</anchor>
      <arglist>(const observing_ptr&lt; S &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>observing_ptr</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>a0bd38248b74bcd4ebd21ab01c8773086</anchor>
      <arglist>(observing_ptr&lt; S &gt; &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>observing_ptr&lt; Wt::WContainerWidget &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>adee3c5bbc1fe9cd8a992598a1b60dd59</anchor>
      <arglist>(const observing_ptr&lt; Wt::WContainerWidget &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>observing_ptr&lt; Wt::WContainerWidget &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>af37943c1d861583c64aae519ebb679b9</anchor>
      <arglist>(observing_ptr&lt; Wt::WContainerWidget &gt; &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>observing_ptr&lt; Wt::WContainerWidget &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>ad976b83b916c82e9da9132baba459863</anchor>
      <arglist>(const observing_ptr&lt; S &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>observing_ptr&lt; Wt::WContainerWidget &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>a89597e93ba01dcaec0dde744981365a2</anchor>
      <arglist>(observing_ptr&lt; S &gt; &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Wt::WContainerWidget *</type>
      <name>get</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>af745a40b7370189170b79eac7c21bdc6</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>a6139259d12c8ff49978bb0bd5529dfea</anchor>
      <arglist>(Wt::WContainerWidget *v=nullptr) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Wt::WContainerWidget *</type>
      <name>operator-&gt;</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>a686ef1c8d64d64f97c325d87a04e60c3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Wt::WContainerWidget &amp;</type>
      <name>operator*</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>ad2271dd1888a778febfdd00ee5062cea</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator bool</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>a93ae9f0dd2a1553dc081faad7e1078ee</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>observedDeleted</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>a8ef46842358b32e880d540a3010b0332</anchor>
      <arglist>() const noexcept</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>observing_ptr&lt; Wt::WCssTemplateRule &gt;</name>
    <filename>classWt_1_1Core_1_1observing__ptr.html</filename>
    <member kind="function">
      <type></type>
      <name>observing_ptr</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>a019dcdee0ca9c68f82d30ad254954dbf</anchor>
      <arglist>(Wt::WCssTemplateRule *t=nullptr) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>observing_ptr</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>a49b26d1fc76764731c32a6f8ac004951</anchor>
      <arglist>(const observing_ptr&lt; Wt::WCssTemplateRule &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>observing_ptr</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>a0b6dff1392e1a57ca65498338c332895</anchor>
      <arglist>(observing_ptr&lt; Wt::WCssTemplateRule &gt; &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>observing_ptr</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>a7d2793de37f48ea7a6854ab5a4eab962</anchor>
      <arglist>(const observing_ptr&lt; S &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>observing_ptr</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>a0bd38248b74bcd4ebd21ab01c8773086</anchor>
      <arglist>(observing_ptr&lt; S &gt; &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>observing_ptr&lt; Wt::WCssTemplateRule &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>adee3c5bbc1fe9cd8a992598a1b60dd59</anchor>
      <arglist>(const observing_ptr&lt; Wt::WCssTemplateRule &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>observing_ptr&lt; Wt::WCssTemplateRule &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>af37943c1d861583c64aae519ebb679b9</anchor>
      <arglist>(observing_ptr&lt; Wt::WCssTemplateRule &gt; &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>observing_ptr&lt; Wt::WCssTemplateRule &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>ad976b83b916c82e9da9132baba459863</anchor>
      <arglist>(const observing_ptr&lt; S &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>observing_ptr&lt; Wt::WCssTemplateRule &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>a89597e93ba01dcaec0dde744981365a2</anchor>
      <arglist>(observing_ptr&lt; S &gt; &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Wt::WCssTemplateRule *</type>
      <name>get</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>af745a40b7370189170b79eac7c21bdc6</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>a6139259d12c8ff49978bb0bd5529dfea</anchor>
      <arglist>(Wt::WCssTemplateRule *v=nullptr) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Wt::WCssTemplateRule *</type>
      <name>operator-&gt;</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>a686ef1c8d64d64f97c325d87a04e60c3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Wt::WCssTemplateRule &amp;</type>
      <name>operator*</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>ad2271dd1888a778febfdd00ee5062cea</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator bool</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>a93ae9f0dd2a1553dc081faad7e1078ee</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>observedDeleted</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>a8ef46842358b32e880d540a3010b0332</anchor>
      <arglist>() const noexcept</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>observing_ptr&lt; Wt::WFormWidget &gt;</name>
    <filename>classWt_1_1Core_1_1observing__ptr.html</filename>
    <member kind="function">
      <type></type>
      <name>observing_ptr</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>a019dcdee0ca9c68f82d30ad254954dbf</anchor>
      <arglist>(Wt::WFormWidget *t=nullptr) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>observing_ptr</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>a49b26d1fc76764731c32a6f8ac004951</anchor>
      <arglist>(const observing_ptr&lt; Wt::WFormWidget &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>observing_ptr</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>a0b6dff1392e1a57ca65498338c332895</anchor>
      <arglist>(observing_ptr&lt; Wt::WFormWidget &gt; &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>observing_ptr</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>a7d2793de37f48ea7a6854ab5a4eab962</anchor>
      <arglist>(const observing_ptr&lt; S &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>observing_ptr</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>a0bd38248b74bcd4ebd21ab01c8773086</anchor>
      <arglist>(observing_ptr&lt; S &gt; &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>observing_ptr&lt; Wt::WFormWidget &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>adee3c5bbc1fe9cd8a992598a1b60dd59</anchor>
      <arglist>(const observing_ptr&lt; Wt::WFormWidget &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>observing_ptr&lt; Wt::WFormWidget &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>af37943c1d861583c64aae519ebb679b9</anchor>
      <arglist>(observing_ptr&lt; Wt::WFormWidget &gt; &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>observing_ptr&lt; Wt::WFormWidget &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>ad976b83b916c82e9da9132baba459863</anchor>
      <arglist>(const observing_ptr&lt; S &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>observing_ptr&lt; Wt::WFormWidget &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>a89597e93ba01dcaec0dde744981365a2</anchor>
      <arglist>(observing_ptr&lt; S &gt; &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Wt::WFormWidget *</type>
      <name>get</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>af745a40b7370189170b79eac7c21bdc6</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>a6139259d12c8ff49978bb0bd5529dfea</anchor>
      <arglist>(Wt::WFormWidget *v=nullptr) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Wt::WFormWidget *</type>
      <name>operator-&gt;</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>a686ef1c8d64d64f97c325d87a04e60c3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Wt::WFormWidget &amp;</type>
      <name>operator*</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>ad2271dd1888a778febfdd00ee5062cea</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator bool</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>a93ae9f0dd2a1553dc081faad7e1078ee</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>observedDeleted</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>a8ef46842358b32e880d540a3010b0332</anchor>
      <arglist>() const noexcept</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>observing_ptr&lt; Wt::WImage &gt;</name>
    <filename>classWt_1_1Core_1_1observing__ptr.html</filename>
    <member kind="function">
      <type></type>
      <name>observing_ptr</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>a019dcdee0ca9c68f82d30ad254954dbf</anchor>
      <arglist>(Wt::WImage *t=nullptr) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>observing_ptr</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>a49b26d1fc76764731c32a6f8ac004951</anchor>
      <arglist>(const observing_ptr&lt; Wt::WImage &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>observing_ptr</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>a0b6dff1392e1a57ca65498338c332895</anchor>
      <arglist>(observing_ptr&lt; Wt::WImage &gt; &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>observing_ptr</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>a7d2793de37f48ea7a6854ab5a4eab962</anchor>
      <arglist>(const observing_ptr&lt; S &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>observing_ptr</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>a0bd38248b74bcd4ebd21ab01c8773086</anchor>
      <arglist>(observing_ptr&lt; S &gt; &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>observing_ptr&lt; Wt::WImage &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>adee3c5bbc1fe9cd8a992598a1b60dd59</anchor>
      <arglist>(const observing_ptr&lt; Wt::WImage &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>observing_ptr&lt; Wt::WImage &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>af37943c1d861583c64aae519ebb679b9</anchor>
      <arglist>(observing_ptr&lt; Wt::WImage &gt; &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>observing_ptr&lt; Wt::WImage &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>ad976b83b916c82e9da9132baba459863</anchor>
      <arglist>(const observing_ptr&lt; S &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>observing_ptr&lt; Wt::WImage &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>a89597e93ba01dcaec0dde744981365a2</anchor>
      <arglist>(observing_ptr&lt; S &gt; &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Wt::WImage *</type>
      <name>get</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>af745a40b7370189170b79eac7c21bdc6</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>a6139259d12c8ff49978bb0bd5529dfea</anchor>
      <arglist>(Wt::WImage *v=nullptr) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Wt::WImage *</type>
      <name>operator-&gt;</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>a686ef1c8d64d64f97c325d87a04e60c3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Wt::WImage &amp;</type>
      <name>operator*</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>ad2271dd1888a778febfdd00ee5062cea</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator bool</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>a93ae9f0dd2a1553dc081faad7e1078ee</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>observedDeleted</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>a8ef46842358b32e880d540a3010b0332</anchor>
      <arglist>() const noexcept</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>observing_ptr&lt; Wt::WInteractWidget &gt;</name>
    <filename>classWt_1_1Core_1_1observing__ptr.html</filename>
    <member kind="function">
      <type></type>
      <name>observing_ptr</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>a019dcdee0ca9c68f82d30ad254954dbf</anchor>
      <arglist>(Wt::WInteractWidget *t=nullptr) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>observing_ptr</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>a49b26d1fc76764731c32a6f8ac004951</anchor>
      <arglist>(const observing_ptr&lt; Wt::WInteractWidget &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>observing_ptr</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>a0b6dff1392e1a57ca65498338c332895</anchor>
      <arglist>(observing_ptr&lt; Wt::WInteractWidget &gt; &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>observing_ptr</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>a7d2793de37f48ea7a6854ab5a4eab962</anchor>
      <arglist>(const observing_ptr&lt; S &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>observing_ptr</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>a0bd38248b74bcd4ebd21ab01c8773086</anchor>
      <arglist>(observing_ptr&lt; S &gt; &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>observing_ptr&lt; Wt::WInteractWidget &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>adee3c5bbc1fe9cd8a992598a1b60dd59</anchor>
      <arglist>(const observing_ptr&lt; Wt::WInteractWidget &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>observing_ptr&lt; Wt::WInteractWidget &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>af37943c1d861583c64aae519ebb679b9</anchor>
      <arglist>(observing_ptr&lt; Wt::WInteractWidget &gt; &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>observing_ptr&lt; Wt::WInteractWidget &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>ad976b83b916c82e9da9132baba459863</anchor>
      <arglist>(const observing_ptr&lt; S &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>observing_ptr&lt; Wt::WInteractWidget &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>a89597e93ba01dcaec0dde744981365a2</anchor>
      <arglist>(observing_ptr&lt; S &gt; &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Wt::WInteractWidget *</type>
      <name>get</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>af745a40b7370189170b79eac7c21bdc6</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>a6139259d12c8ff49978bb0bd5529dfea</anchor>
      <arglist>(Wt::WInteractWidget *v=nullptr) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Wt::WInteractWidget *</type>
      <name>operator-&gt;</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>a686ef1c8d64d64f97c325d87a04e60c3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Wt::WInteractWidget &amp;</type>
      <name>operator*</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>ad2271dd1888a778febfdd00ee5062cea</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator bool</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>a93ae9f0dd2a1553dc081faad7e1078ee</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>observedDeleted</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>a8ef46842358b32e880d540a3010b0332</anchor>
      <arglist>() const noexcept</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>observing_ptr&lt; Wt::WPushButton &gt;</name>
    <filename>classWt_1_1Core_1_1observing__ptr.html</filename>
    <member kind="function">
      <type></type>
      <name>observing_ptr</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>a019dcdee0ca9c68f82d30ad254954dbf</anchor>
      <arglist>(Wt::WPushButton *t=nullptr) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>observing_ptr</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>a49b26d1fc76764731c32a6f8ac004951</anchor>
      <arglist>(const observing_ptr&lt; Wt::WPushButton &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>observing_ptr</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>a0b6dff1392e1a57ca65498338c332895</anchor>
      <arglist>(observing_ptr&lt; Wt::WPushButton &gt; &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>observing_ptr</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>a7d2793de37f48ea7a6854ab5a4eab962</anchor>
      <arglist>(const observing_ptr&lt; S &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>observing_ptr</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>a0bd38248b74bcd4ebd21ab01c8773086</anchor>
      <arglist>(observing_ptr&lt; S &gt; &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>observing_ptr&lt; Wt::WPushButton &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>adee3c5bbc1fe9cd8a992598a1b60dd59</anchor>
      <arglist>(const observing_ptr&lt; Wt::WPushButton &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>observing_ptr&lt; Wt::WPushButton &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>af37943c1d861583c64aae519ebb679b9</anchor>
      <arglist>(observing_ptr&lt; Wt::WPushButton &gt; &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>observing_ptr&lt; Wt::WPushButton &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>ad976b83b916c82e9da9132baba459863</anchor>
      <arglist>(const observing_ptr&lt; S &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>observing_ptr&lt; Wt::WPushButton &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>a89597e93ba01dcaec0dde744981365a2</anchor>
      <arglist>(observing_ptr&lt; S &gt; &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Wt::WPushButton *</type>
      <name>get</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>af745a40b7370189170b79eac7c21bdc6</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>a6139259d12c8ff49978bb0bd5529dfea</anchor>
      <arglist>(Wt::WPushButton *v=nullptr) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Wt::WPushButton *</type>
      <name>operator-&gt;</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>a686ef1c8d64d64f97c325d87a04e60c3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Wt::WPushButton &amp;</type>
      <name>operator*</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>ad2271dd1888a778febfdd00ee5062cea</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator bool</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>a93ae9f0dd2a1553dc081faad7e1078ee</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>observedDeleted</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>a8ef46842358b32e880d540a3010b0332</anchor>
      <arglist>() const noexcept</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>observing_ptr&lt; Wt::WText &gt;</name>
    <filename>classWt_1_1Core_1_1observing__ptr.html</filename>
    <member kind="function">
      <type></type>
      <name>observing_ptr</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>a019dcdee0ca9c68f82d30ad254954dbf</anchor>
      <arglist>(Wt::WText *t=nullptr) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>observing_ptr</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>a49b26d1fc76764731c32a6f8ac004951</anchor>
      <arglist>(const observing_ptr&lt; Wt::WText &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>observing_ptr</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>a0b6dff1392e1a57ca65498338c332895</anchor>
      <arglist>(observing_ptr&lt; Wt::WText &gt; &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>observing_ptr</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>a7d2793de37f48ea7a6854ab5a4eab962</anchor>
      <arglist>(const observing_ptr&lt; S &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>observing_ptr</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>a0bd38248b74bcd4ebd21ab01c8773086</anchor>
      <arglist>(observing_ptr&lt; S &gt; &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>observing_ptr&lt; Wt::WText &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>adee3c5bbc1fe9cd8a992598a1b60dd59</anchor>
      <arglist>(const observing_ptr&lt; Wt::WText &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>observing_ptr&lt; Wt::WText &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>af37943c1d861583c64aae519ebb679b9</anchor>
      <arglist>(observing_ptr&lt; Wt::WText &gt; &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>observing_ptr&lt; Wt::WText &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>ad976b83b916c82e9da9132baba459863</anchor>
      <arglist>(const observing_ptr&lt; S &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>observing_ptr&lt; Wt::WText &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>a89597e93ba01dcaec0dde744981365a2</anchor>
      <arglist>(observing_ptr&lt; S &gt; &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Wt::WText *</type>
      <name>get</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>af745a40b7370189170b79eac7c21bdc6</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>a6139259d12c8ff49978bb0bd5529dfea</anchor>
      <arglist>(Wt::WText *v=nullptr) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Wt::WText *</type>
      <name>operator-&gt;</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>a686ef1c8d64d64f97c325d87a04e60c3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Wt::WText &amp;</type>
      <name>operator*</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>ad2271dd1888a778febfdd00ee5062cea</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator bool</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>a93ae9f0dd2a1553dc081faad7e1078ee</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>observedDeleted</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>a8ef46842358b32e880d540a3010b0332</anchor>
      <arglist>() const noexcept</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>observing_ptr&lt; Wt::WWidget &gt;</name>
    <filename>classWt_1_1Core_1_1observing__ptr.html</filename>
    <member kind="function">
      <type></type>
      <name>observing_ptr</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>a019dcdee0ca9c68f82d30ad254954dbf</anchor>
      <arglist>(Wt::WWidget *t=nullptr) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>observing_ptr</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>a49b26d1fc76764731c32a6f8ac004951</anchor>
      <arglist>(const observing_ptr&lt; Wt::WWidget &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>observing_ptr</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>a0b6dff1392e1a57ca65498338c332895</anchor>
      <arglist>(observing_ptr&lt; Wt::WWidget &gt; &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>observing_ptr</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>a7d2793de37f48ea7a6854ab5a4eab962</anchor>
      <arglist>(const observing_ptr&lt; S &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>observing_ptr</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>a0bd38248b74bcd4ebd21ab01c8773086</anchor>
      <arglist>(observing_ptr&lt; S &gt; &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>observing_ptr&lt; Wt::WWidget &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>adee3c5bbc1fe9cd8a992598a1b60dd59</anchor>
      <arglist>(const observing_ptr&lt; Wt::WWidget &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>observing_ptr&lt; Wt::WWidget &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>af37943c1d861583c64aae519ebb679b9</anchor>
      <arglist>(observing_ptr&lt; Wt::WWidget &gt; &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>observing_ptr&lt; Wt::WWidget &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>ad976b83b916c82e9da9132baba459863</anchor>
      <arglist>(const observing_ptr&lt; S &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>observing_ptr&lt; Wt::WWidget &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>a89597e93ba01dcaec0dde744981365a2</anchor>
      <arglist>(observing_ptr&lt; S &gt; &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Wt::WWidget *</type>
      <name>get</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>af745a40b7370189170b79eac7c21bdc6</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>a6139259d12c8ff49978bb0bd5529dfea</anchor>
      <arglist>(Wt::WWidget *v=nullptr) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Wt::WWidget *</type>
      <name>operator-&gt;</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>a686ef1c8d64d64f97c325d87a04e60c3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Wt::WWidget &amp;</type>
      <name>operator*</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>ad2271dd1888a778febfdd00ee5062cea</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator bool</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>a93ae9f0dd2a1553dc081faad7e1078ee</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>observedDeleted</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>a8ef46842358b32e880d540a3010b0332</anchor>
      <arglist>() const noexcept</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>observing_ptr&lt; WTimerWidget &gt;</name>
    <filename>classWt_1_1Core_1_1observing__ptr.html</filename>
    <member kind="function">
      <type></type>
      <name>observing_ptr</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>a019dcdee0ca9c68f82d30ad254954dbf</anchor>
      <arglist>(WTimerWidget *t=nullptr) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>observing_ptr</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>a49b26d1fc76764731c32a6f8ac004951</anchor>
      <arglist>(const observing_ptr&lt; WTimerWidget &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>observing_ptr</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>a0b6dff1392e1a57ca65498338c332895</anchor>
      <arglist>(observing_ptr&lt; WTimerWidget &gt; &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>observing_ptr</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>a7d2793de37f48ea7a6854ab5a4eab962</anchor>
      <arglist>(const observing_ptr&lt; S &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>observing_ptr</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>a0bd38248b74bcd4ebd21ab01c8773086</anchor>
      <arglist>(observing_ptr&lt; S &gt; &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>observing_ptr&lt; WTimerWidget &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>adee3c5bbc1fe9cd8a992598a1b60dd59</anchor>
      <arglist>(const observing_ptr&lt; WTimerWidget &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>observing_ptr&lt; WTimerWidget &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>af37943c1d861583c64aae519ebb679b9</anchor>
      <arglist>(observing_ptr&lt; WTimerWidget &gt; &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>observing_ptr&lt; WTimerWidget &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>ad976b83b916c82e9da9132baba459863</anchor>
      <arglist>(const observing_ptr&lt; S &gt; &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>observing_ptr&lt; WTimerWidget &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>a89597e93ba01dcaec0dde744981365a2</anchor>
      <arglist>(observing_ptr&lt; S &gt; &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>WTimerWidget *</type>
      <name>get</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>af745a40b7370189170b79eac7c21bdc6</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>a6139259d12c8ff49978bb0bd5529dfea</anchor>
      <arglist>(WTimerWidget *v=nullptr) noexcept</arglist>
    </member>
    <member kind="function">
      <type>WTimerWidget *</type>
      <name>operator-&gt;</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>a686ef1c8d64d64f97c325d87a04e60c3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WTimerWidget &amp;</type>
      <name>operator*</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>ad2271dd1888a778febfdd00ee5062cea</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator bool</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>a93ae9f0dd2a1553dc081faad7e1078ee</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>observedDeleted</name>
      <anchorfile>classWt_1_1Core_1_1observing__ptr.html</anchorfile>
      <anchor>a8ef46842358b32e880d540a3010b0332</anchor>
      <arglist>() const noexcept</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Auth::OidcProcess</name>
    <filename>classWt_1_1Auth_1_1OidcProcess.html</filename>
    <base>Wt::Auth::OAuthProcess</base>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>startAuthenticate</name>
      <anchorfile>classWt_1_1Auth_1_1OidcProcess.html</anchorfile>
      <anchor>a9f13e10a3f9e9121f919732d5b65f1db</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getIdentity</name>
      <anchorfile>classWt_1_1Auth_1_1OidcProcess.html</anchorfile>
      <anchor>a170597966e759ce8baa8ff40cdf3cba0</anchor>
      <arglist>(const OAuthAccessToken &amp;token) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Auth::OidcService</name>
    <filename>classWt_1_1Auth_1_1OidcService.html</filename>
    <base>Wt::Auth::OAuthService</base>
    <member kind="function">
      <type></type>
      <name>OidcService</name>
      <anchorfile>classWt_1_1Auth_1_1OidcService.html</anchorfile>
      <anchor>af5806a618d03b3cd6cba7649828d3570</anchor>
      <arglist>(const AuthService &amp;baseAuth)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>name</name>
      <anchorfile>classWt_1_1Auth_1_1OidcService.html</anchorfile>
      <anchor>adcb56614c72828bc7a4b423f9c4ef543</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WString</type>
      <name>description</name>
      <anchorfile>classWt_1_1Auth_1_1OidcService.html</anchorfile>
      <anchor>a5ba4e08a636113d29e6e72adbf188d20</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>popupWidth</name>
      <anchorfile>classWt_1_1Auth_1_1OidcService.html</anchorfile>
      <anchor>a8d98be3318242d985f32d16e1e76179e</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>popupHeight</name>
      <anchorfile>classWt_1_1Auth_1_1OidcService.html</anchorfile>
      <anchor>ab2a4393cf9b26dd929c97c54808138e7</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>authenticationScope</name>
      <anchorfile>classWt_1_1Auth_1_1OidcService.html</anchorfile>
      <anchor>ab7747346bb35de9a01cacf3fac0d1a76</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>redirectEndpoint</name>
      <anchorfile>classWt_1_1Auth_1_1OidcService.html</anchorfile>
      <anchor>aef1aceb2bd123fab39e352a1fbb4f69f</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>authorizationEndpoint</name>
      <anchorfile>classWt_1_1Auth_1_1OidcService.html</anchorfile>
      <anchor>a4421754ea3a7ac197d92cade6c9b0303</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>tokenEndpoint</name>
      <anchorfile>classWt_1_1Auth_1_1OidcService.html</anchorfile>
      <anchor>a1ac42991b7fb3fa3fc74f30409940517</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>userInfoEndpoint</name>
      <anchorfile>classWt_1_1Auth_1_1OidcService.html</anchorfile>
      <anchor>a85bf6db097007e35a6b9dda382950a61</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>clientId</name>
      <anchorfile>classWt_1_1Auth_1_1OidcService.html</anchorfile>
      <anchor>aadd82ba79a73180a507bc7fe948befe1</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>clientSecret</name>
      <anchorfile>classWt_1_1Auth_1_1OidcService.html</anchorfile>
      <anchor>a1a91ecf656aaa0cc99e26efe075c6fbe</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ClientSecretMethod</type>
      <name>clientSecretMethod</name>
      <anchorfile>classWt_1_1Auth_1_1OidcService.html</anchorfile>
      <anchor>a31d1f85ee72756275295a0524442b591</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::unique_ptr&lt; OAuthProcess &gt;</type>
      <name>createProcess</name>
      <anchorfile>classWt_1_1Auth_1_1OidcService.html</anchorfile>
      <anchor>a7cd6e5e7fd3e2a3f12b46815ea40ee1e</anchor>
      <arglist>(const std::string &amp;scope) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRedirectEndpoint</name>
      <anchorfile>classWt_1_1Auth_1_1OidcService.html</anchorfile>
      <anchor>a87442db845cb6fd7b1f44f23504768f1</anchor>
      <arglist>(const std::string &amp;url)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setClientId</name>
      <anchorfile>classWt_1_1Auth_1_1OidcService.html</anchorfile>
      <anchor>aa12f84e9b331fd91938d543d29b4a0bd</anchor>
      <arglist>(const std::string &amp;id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setClientSecret</name>
      <anchorfile>classWt_1_1Auth_1_1OidcService.html</anchorfile>
      <anchor>abe300481baecf41564df21d6e4d72244</anchor>
      <arglist>(const std::string &amp;secret)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAuthEndpoint</name>
      <anchorfile>classWt_1_1Auth_1_1OidcService.html</anchorfile>
      <anchor>a9249cab3d4a1f66e9edb74fcb82d939d</anchor>
      <arglist>(const std::string &amp;url)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTokenEndpoint</name>
      <anchorfile>classWt_1_1Auth_1_1OidcService.html</anchorfile>
      <anchor>a63c8a73987feac485094a5c7ca614dc9</anchor>
      <arglist>(const std::string &amp;url)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setUserInfoEndpoint</name>
      <anchorfile>classWt_1_1Auth_1_1OidcService.html</anchorfile>
      <anchor>a0fc05a920f1d6d59d37c691d47bf3390</anchor>
      <arglist>(const std::string &amp;url)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAuthenticationScope</name>
      <anchorfile>classWt_1_1Auth_1_1OidcService.html</anchorfile>
      <anchor>a2178b9cf03a12b551fdcd40171e2f202</anchor>
      <arglist>(const std::string &amp;scope)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setName</name>
      <anchorfile>classWt_1_1Auth_1_1OidcService.html</anchorfile>
      <anchor>a3f010c967abfa807cea2f8e89e89c6a1</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDescription</name>
      <anchorfile>classWt_1_1Auth_1_1OidcService.html</anchorfile>
      <anchor>a95dc4b3e9ac0cb6b64eb04cdc40cf671</anchor>
      <arglist>(const std::string &amp;description)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setClientSecretMethod</name>
      <anchorfile>classWt_1_1Auth_1_1OidcService.html</anchorfile>
      <anchor>ae7309be4aea4a0f249b9701b0be0ab3d</anchor>
      <arglist>(ClientSecretMethod method)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPopupWidth</name>
      <anchorfile>classWt_1_1Auth_1_1OidcService.html</anchorfile>
      <anchor>a7a8421e5617d4f4d4f31e207dfdd9bcd</anchor>
      <arglist>(int width)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPopupHeight</name>
      <anchorfile>classWt_1_1Auth_1_1OidcService.html</anchorfile>
      <anchor>abd3acd5d9d1785f9e591cc1ebe85bd34</anchor>
      <arglist>(int height)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Auth::OidcUserInfoEndpoint</name>
    <filename>classWt_1_1Auth_1_1OidcUserInfoEndpoint.html</filename>
    <base>Wt::WResource</base>
    <member kind="function">
      <type></type>
      <name>OidcUserInfoEndpoint</name>
      <anchorfile>classWt_1_1Auth_1_1OidcUserInfoEndpoint.html</anchorfile>
      <anchor>a4c20b9426a80e986a4c3b57e50599158</anchor>
      <arglist>(AbstractUserDatabase &amp;db)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>handleRequest</name>
      <anchorfile>classWt_1_1Auth_1_1OidcUserInfoEndpoint.html</anchorfile>
      <anchor>af957bd9b3d57c669909b3d3847ac9f9b</anchor>
      <arglist>(const Http::Request &amp;request, Http::Response &amp;response) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setScopeToken</name>
      <anchorfile>classWt_1_1Auth_1_1OidcUserInfoEndpoint.html</anchorfile>
      <anchor>aff78d14477456c4e836a446069547ba8</anchor>
      <arglist>(const std::string &amp;scopeToken, const std::set&lt; std::string &gt; &amp;claims)</arglist>
    </member>
    <member kind="function">
      <type>const std::map&lt; std::string, std::set&lt; std::string &gt; &gt; &amp;</type>
      <name>scopeTokens</name>
      <anchorfile>classWt_1_1Auth_1_1OidcUserInfoEndpoint.html</anchorfile>
      <anchor>a984e6c753886a81e606ef697a07307f9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual Json::Object</type>
      <name>generateUserInfo</name>
      <anchorfile>classWt_1_1Auth_1_1OidcUserInfoEndpoint.html</anchorfile>
      <anchor>aaa9049dc38b3a050b3cb7511b3051537</anchor>
      <arglist>(const User &amp;user, const std::set&lt; std::string &gt; &amp;scope)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Wt::WSuggestionPopup::Options</name>
    <filename>structWt_1_1WSuggestionPopup_1_1Options.html</filename>
    <member kind="variable">
      <type>std::string</type>
      <name>highlightBeginTag</name>
      <anchorfile>structWt_1_1WSuggestionPopup_1_1Options.html</anchorfile>
      <anchor>a641575cedc6544eee08473482de42b3d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>highlightEndTag</name>
      <anchorfile>structWt_1_1WSuggestionPopup_1_1Options.html</anchorfile>
      <anchor>af26bd646168b1fd0bc442015464188fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>listSeparator</name>
      <anchorfile>structWt_1_1WSuggestionPopup_1_1Options.html</anchorfile>
      <anchor>a4711cf874a36b2a64010ad669b3b68ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>whitespace</name>
      <anchorfile>structWt_1_1WSuggestionPopup_1_1Options.html</anchorfile>
      <anchor>aef3e98b66b4cc136e2c726079d6681de</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>wordSeparators</name>
      <anchorfile>structWt_1_1WSuggestionPopup_1_1Options.html</anchorfile>
      <anchor>a3e29211108f2b156a0b983a5a15ecece</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>appendReplacedText</name>
      <anchorfile>structWt_1_1WSuggestionPopup_1_1Options.html</anchorfile>
      <anchor>a800a6cda2637ce1fe3bbc8fe981dd1ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>wordStartRegexp</name>
      <anchorfile>structWt_1_1WSuggestionPopup_1_1Options.html</anchorfile>
      <anchor>a3b55d2736e01a48535b1582e9a5e5115</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Payment::Order</name>
    <filename>classWt_1_1Payment_1_1Order.html</filename>
    <member kind="function">
      <type>void</type>
      <name>setTax</name>
      <anchorfile>classWt_1_1Payment_1_1Order.html</anchorfile>
      <anchor>a4ac47656095d4b73902e86ed762193c7</anchor>
      <arglist>(const Money &amp;tax)</arglist>
    </member>
    <member kind="function">
      <type>Money</type>
      <name>tax</name>
      <anchorfile>classWt_1_1Payment_1_1Order.html</anchorfile>
      <anchor>a28dfafb6028dbfde3fcfdcf99b504743</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setShipping</name>
      <anchorfile>classWt_1_1Payment_1_1Order.html</anchorfile>
      <anchor>ab1c39884c02391c58d5a6c3e633d1eea</anchor>
      <arglist>(const Money &amp;shipping)</arglist>
    </member>
    <member kind="function">
      <type>Money</type>
      <name>shipping</name>
      <anchorfile>classWt_1_1Payment_1_1Order.html</anchorfile>
      <anchor>a0d919c1015fcd32e56a82fb16deff21a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setHandling</name>
      <anchorfile>classWt_1_1Payment_1_1Order.html</anchorfile>
      <anchor>a25b6cff682c04a19bd627c20af0eee4c</anchor>
      <arglist>(const Money &amp;handling)</arglist>
    </member>
    <member kind="function">
      <type>Money</type>
      <name>handling</name>
      <anchorfile>classWt_1_1Payment_1_1Order.html</anchorfile>
      <anchor>a33546d8409935083a4326bc8cd39d16a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setShippingDiscount</name>
      <anchorfile>classWt_1_1Payment_1_1Order.html</anchorfile>
      <anchor>a42953a3e3b0c6d42195ad3bd42639f87</anchor>
      <arglist>(const Money &amp;discount)</arglist>
    </member>
    <member kind="function">
      <type>Money</type>
      <name>shippingDiscount</name>
      <anchorfile>classWt_1_1Payment_1_1Order.html</anchorfile>
      <anchor>a545c7e7ff13ef7a8651a5dd04672f6ea</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setShippingInsurance</name>
      <anchorfile>classWt_1_1Payment_1_1Order.html</anchorfile>
      <anchor>aca46367d6d8fcf14e9eae92917f0cdeb</anchor>
      <arglist>(const Money &amp;insurance)</arglist>
    </member>
    <member kind="function">
      <type>Money</type>
      <name>shippingInsurance</name>
      <anchorfile>classWt_1_1Payment_1_1Order.html</anchorfile>
      <anchor>a30b14f638be58f1a14a6ec4016bd5be3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPaymentTransactionId</name>
      <anchorfile>classWt_1_1Payment_1_1Order.html</anchorfile>
      <anchor>a710bfd053525ebf2440b91de9691a6fc</anchor>
      <arglist>(const std::string &amp;transactionId)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>paymentTransactionId</name>
      <anchorfile>classWt_1_1Payment_1_1Order.html</anchorfile>
      <anchor>a5cee483c623e52b644110b9ca984f9dd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPaymentBroker</name>
      <anchorfile>classWt_1_1Payment_1_1Order.html</anchorfile>
      <anchor>ae69180866a4cce2658a4b1e3a18e2ac9</anchor>
      <arglist>(const std::string &amp;broker)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>paymentBroker</name>
      <anchorfile>classWt_1_1Payment_1_1Order.html</anchorfile>
      <anchor>acd18cbb96a01b086f8acb2f2a1b25e74</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDescription</name>
      <anchorfile>classWt_1_1Payment_1_1Order.html</anchorfile>
      <anchor>a18a1fc0eb651a3483089d6cf73623408</anchor>
      <arglist>(const std::string description)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>description</name>
      <anchorfile>classWt_1_1Payment_1_1Order.html</anchorfile>
      <anchor>a47539a88dca049bec1f0890ff5d125c7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; OrderItem &gt; &amp;</type>
      <name>items</name>
      <anchorfile>classWt_1_1Payment_1_1Order.html</anchorfile>
      <anchor>a7f992687af5c13fea0cdb510dd14c163</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; OrderItem &gt; &amp;</type>
      <name>items</name>
      <anchorfile>classWt_1_1Payment_1_1Order.html</anchorfile>
      <anchor>a323d42565a7e0fa12a6ca171580ef7ac</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Money</type>
      <name>computeTotalItemCost</name>
      <anchorfile>classWt_1_1Payment_1_1Order.html</anchorfile>
      <anchor>a5cb37abea90094f997d9b2ef6ed2938c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTotalItemCost</name>
      <anchorfile>classWt_1_1Payment_1_1Order.html</anchorfile>
      <anchor>a790af2b5162c85e1d55f5441f8f1a153</anchor>
      <arglist>(const Money &amp;totalItemCost)</arglist>
    </member>
    <member kind="function">
      <type>Money</type>
      <name>totalItemCost</name>
      <anchorfile>classWt_1_1Payment_1_1Order.html</anchorfile>
      <anchor>acb4f7263e533ba6eb3b06b10e824e04e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Money</type>
      <name>computeTotalOrderCost</name>
      <anchorfile>classWt_1_1Payment_1_1Order.html</anchorfile>
      <anchor>ae532cb2ebd0520442eac92e89780e687</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTotalOrderCost</name>
      <anchorfile>classWt_1_1Payment_1_1Order.html</anchorfile>
      <anchor>a2af6b7168158ddb2db605771a1aa347d</anchor>
      <arglist>(const Money &amp;totalOrderCost)</arglist>
    </member>
    <member kind="function">
      <type>Money</type>
      <name>totalOrderCost</name>
      <anchorfile>classWt_1_1Payment_1_1Order.html</anchorfile>
      <anchor>a071f2569d46217c9ff0aeb8867f1468f</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Payment::OrderItem</name>
    <filename>classWt_1_1Payment_1_1OrderItem.html</filename>
    <member kind="function">
      <type>void</type>
      <name>setName</name>
      <anchorfile>classWt_1_1Payment_1_1OrderItem.html</anchorfile>
      <anchor>ae9924346a6cac8b5b7dce78264a7543a</anchor>
      <arglist>(const WString &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>const WString &amp;</type>
      <name>name</name>
      <anchorfile>classWt_1_1Payment_1_1OrderItem.html</anchorfile>
      <anchor>adaedc2c14636d5ba8052703b24ea4d51</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNumber</name>
      <anchorfile>classWt_1_1Payment_1_1OrderItem.html</anchorfile>
      <anchor>a6092887cb709b5235c56f2c5ee59b4b2</anchor>
      <arglist>(const std::string &amp;number)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>number</name>
      <anchorfile>classWt_1_1Payment_1_1OrderItem.html</anchorfile>
      <anchor>a9a8026d4e1d44d7b262abed3f4f50e3f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDescription</name>
      <anchorfile>classWt_1_1Payment_1_1OrderItem.html</anchorfile>
      <anchor>abee604fd22f7f0ddd6895525debb61fe</anchor>
      <arglist>(const WString &amp;description)</arglist>
    </member>
    <member kind="function">
      <type>const WString &amp;</type>
      <name>description</name>
      <anchorfile>classWt_1_1Payment_1_1OrderItem.html</anchorfile>
      <anchor>a50690b4e0a2561167f24c81f96943ff0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setQuantity</name>
      <anchorfile>classWt_1_1Payment_1_1OrderItem.html</anchorfile>
      <anchor>ad1874e089bf9d24a5f83d7a4227a62e1</anchor>
      <arglist>(double quantity)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>quantity</name>
      <anchorfile>classWt_1_1Payment_1_1OrderItem.html</anchorfile>
      <anchor>a880aac25373a55f08ab0dc4e5369c412</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setUnitCost</name>
      <anchorfile>classWt_1_1Payment_1_1OrderItem.html</anchorfile>
      <anchor>ad89cfdf117b21011d81afea315bd0aab</anchor>
      <arglist>(const Money &amp;unitCost)</arglist>
    </member>
    <member kind="function">
      <type>Money</type>
      <name>unitCost</name>
      <anchorfile>classWt_1_1Payment_1_1OrderItem.html</anchorfile>
      <anchor>a02aeeac168834c1fbb8ea6736a6c646a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Money</type>
      <name>computeTotal</name>
      <anchorfile>classWt_1_1Payment_1_1OrderItem.html</anchorfile>
      <anchor>af7c3839009e0d63f874f6eff51e82101</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Chart::WStandardColorMap::Pair</name>
    <filename>classWt_1_1Chart_1_1WStandardColorMap_1_1Pair.html</filename>
    <member kind="function">
      <type></type>
      <name>Pair</name>
      <anchorfile>classWt_1_1Chart_1_1WStandardColorMap_1_1Pair.html</anchorfile>
      <anchor>a073760ad34ddc65dbbb7e171ebacd130</anchor>
      <arglist>(double val, WColor col)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Json::ParseError</name>
    <filename>classWt_1_1Json_1_1ParseError.html</filename>
    <base>Wt::WException</base>
  </compound>
  <compound kind="class">
    <name>Wt::Auth::PasswordHash</name>
    <filename>classWt_1_1Auth_1_1PasswordHash.html</filename>
    <member kind="function">
      <type></type>
      <name>PasswordHash</name>
      <anchorfile>classWt_1_1Auth_1_1PasswordHash.html</anchorfile>
      <anchor>a82eb58b5555043fedca73b2cc0b956d9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PasswordHash</name>
      <anchorfile>classWt_1_1Auth_1_1PasswordHash.html</anchorfile>
      <anchor>a8f0fdd8bd8e1d0d31fd5518ca00eab6c</anchor>
      <arglist>(const std::string &amp;function, const std::string &amp;salt, const std::string &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>empty</name>
      <anchorfile>classWt_1_1Auth_1_1PasswordHash.html</anchorfile>
      <anchor>a76b8ba884f97766dcc5e462128951363</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>function</name>
      <anchorfile>classWt_1_1Auth_1_1PasswordHash.html</anchorfile>
      <anchor>a9bb363f4caea289fe4e9428736c4ed92</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>salt</name>
      <anchorfile>classWt_1_1Auth_1_1PasswordHash.html</anchorfile>
      <anchor>a61cb59dace9d87feba89bb853d1f5991</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>value</name>
      <anchorfile>classWt_1_1Auth_1_1PasswordHash.html</anchorfile>
      <anchor>a2c284d9c9adf7df1566ed469c2979018</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Auth::PasswordPromptDialog</name>
    <filename>classWt_1_1Auth_1_1PasswordPromptDialog.html</filename>
    <base>Wt::WDialog</base>
    <member kind="function">
      <type></type>
      <name>PasswordPromptDialog</name>
      <anchorfile>classWt_1_1Auth_1_1PasswordPromptDialog.html</anchorfile>
      <anchor>aab670fd9035ef9152e11283d35bd701b</anchor>
      <arglist>(Login &amp;login, const std::shared_ptr&lt; AuthModel &gt; &amp;model)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Auth::PasswordService</name>
    <filename>classWt_1_1Auth_1_1PasswordService.html</filename>
    <base>Wt::Auth::AbstractPasswordService</base>
    <class kind="class">Wt::Auth::PasswordService::AbstractVerifier</class>
    <member kind="function">
      <type></type>
      <name>PasswordService</name>
      <anchorfile>classWt_1_1Auth_1_1PasswordService.html</anchorfile>
      <anchor>a7afc5128d074aa3b63d4875b11f37cbf</anchor>
      <arglist>(const AuthService &amp;baseAuth)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PasswordService</name>
      <anchorfile>classWt_1_1Auth_1_1PasswordService.html</anchorfile>
      <anchor>a782710946fc8e990b630d6dd73d95d31</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const AuthService &amp;</type>
      <name>baseAuth</name>
      <anchorfile>classWt_1_1Auth_1_1PasswordService.html</anchorfile>
      <anchor>ad3639aaebb8a0cf151574011b2f40d5d</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVerifier</name>
      <anchorfile>classWt_1_1Auth_1_1PasswordService.html</anchorfile>
      <anchor>ad5419a8729d76a3eec8cb976ff990e04</anchor>
      <arglist>(std::unique_ptr&lt; AbstractVerifier &gt; verifier)</arglist>
    </member>
    <member kind="function">
      <type>AbstractVerifier *</type>
      <name>verifier</name>
      <anchorfile>classWt_1_1Auth_1_1PasswordService.html</anchorfile>
      <anchor>ac74a7c8ee01f2fb2170053f0a865a885</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setStrengthValidator</name>
      <anchorfile>classWt_1_1Auth_1_1PasswordService.html</anchorfile>
      <anchor>ae9ae0c325b9f3333e354c77e59dae582</anchor>
      <arglist>(std::unique_ptr&lt; AbstractStrengthValidator &gt; validator)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual AbstractStrengthValidator *</type>
      <name>strengthValidator</name>
      <anchorfile>classWt_1_1Auth_1_1PasswordService.html</anchorfile>
      <anchor>a12f5eb2cbd790106931990a13c148e9f</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAttemptThrottlingEnabled</name>
      <anchorfile>classWt_1_1Auth_1_1PasswordService.html</anchorfile>
      <anchor>ad34f849188b771b47ed09e2362b548a5</anchor>
      <arglist>(bool enabled)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>attemptThrottlingEnabled</name>
      <anchorfile>classWt_1_1Auth_1_1PasswordService.html</anchorfile>
      <anchor>a9f776af40269c6da61c0af1750f0c845</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>delayForNextAttempt</name>
      <anchorfile>classWt_1_1Auth_1_1PasswordService.html</anchorfile>
      <anchor>a842bd27c48e8d247a26a17df8910f680</anchor>
      <arglist>(const User &amp;user) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual PasswordResult</type>
      <name>verifyPassword</name>
      <anchorfile>classWt_1_1Auth_1_1PasswordService.html</anchorfile>
      <anchor>a7d9515fa4cc898fd843d96f4dc921b74</anchor>
      <arglist>(const User &amp;user, const WString &amp;password) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>updatePassword</name>
      <anchorfile>classWt_1_1Auth_1_1PasswordService.html</anchorfile>
      <anchor>a7535bc32d4be15989a8c3665184ab111</anchor>
      <arglist>(const User &amp;user, const WString &amp;password) const override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual int</type>
      <name>getPasswordThrottle</name>
      <anchorfile>classWt_1_1Auth_1_1PasswordService.html</anchorfile>
      <anchor>a9d3cb9a3068d840b5078ef1e972f79ef</anchor>
      <arglist>(int failedAttempts) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Auth::PasswordStrengthValidator</name>
    <filename>classWt_1_1Auth_1_1PasswordStrengthValidator.html</filename>
    <base>Wt::Auth::AbstractPasswordService::AbstractStrengthValidator</base>
    <member kind="function">
      <type></type>
      <name>PasswordStrengthValidator</name>
      <anchorfile>classWt_1_1Auth_1_1PasswordStrengthValidator.html</anchorfile>
      <anchor>a38afde8bde83236ed7387d87bf8e71b6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMinimumLength</name>
      <anchorfile>classWt_1_1Auth_1_1PasswordStrengthValidator.html</anchorfile>
      <anchor>a18acc8ea3cc47870432631136cd6a169</anchor>
      <arglist>(PasswordStrengthType type, int length)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>minimumLength</name>
      <anchorfile>classWt_1_1Auth_1_1PasswordStrengthValidator.html</anchorfile>
      <anchor>a5f56a236baa32dbb996e6ed3b5f15650</anchor>
      <arglist>(PasswordStrengthType type)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMinimumPassPhraseWords</name>
      <anchorfile>classWt_1_1Auth_1_1PasswordStrengthValidator.html</anchorfile>
      <anchor>a90ec126aaf80f9feda8d3c8aa7c823fc</anchor>
      <arglist>(int words)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>minimumPassPhraseWords</name>
      <anchorfile>classWt_1_1Auth_1_1PasswordStrengthValidator.html</anchorfile>
      <anchor>a16c121a648e06216653383398d6f1266</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMinimumMatchLength</name>
      <anchorfile>classWt_1_1Auth_1_1PasswordStrengthValidator.html</anchorfile>
      <anchor>a762ff690ab0c610a6a09e006ef6ca706</anchor>
      <arglist>(int length)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>minimumMatchLength</name>
      <anchorfile>classWt_1_1Auth_1_1PasswordStrengthValidator.html</anchorfile>
      <anchor>a99ea4d8d45bf74cc2671a4733d2a6a94</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual AbstractPasswordService::StrengthValidatorResult</type>
      <name>evaluateStrength</name>
      <anchorfile>classWt_1_1Auth_1_1PasswordStrengthValidator.html</anchorfile>
      <anchor>ab6851adb741bd75f8bf12e6084e1bcbe</anchor>
      <arglist>(const WString &amp;password, const WString &amp;loginName, const std::string &amp;email) const override</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const int</type>
      <name>Disabled</name>
      <anchorfile>classWt_1_1Auth_1_1PasswordStrengthValidator.html</anchorfile>
      <anchor>a4b49625b79f367dbe0e34da2cadb3ed3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Auth::PasswordVerifier</name>
    <filename>classWt_1_1Auth_1_1PasswordVerifier.html</filename>
    <base>Wt::Auth::PasswordService::AbstractVerifier</base>
    <member kind="function">
      <type></type>
      <name>PasswordVerifier</name>
      <anchorfile>classWt_1_1Auth_1_1PasswordVerifier.html</anchorfile>
      <anchor>a3aa61534cbd936e01599d55dfe001d23</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PasswordVerifier</name>
      <anchorfile>classWt_1_1Auth_1_1PasswordVerifier.html</anchorfile>
      <anchor>aab38ab679eab4c6ea49dd92d2d91d1bb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSaltLength</name>
      <anchorfile>classWt_1_1Auth_1_1PasswordVerifier.html</anchorfile>
      <anchor>a8fdc288c1d54b7e0dedbab982ad4bf26</anchor>
      <arglist>(int words)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>saltLength</name>
      <anchorfile>classWt_1_1Auth_1_1PasswordVerifier.html</anchorfile>
      <anchor>a54f3ebd1c38048059d8e197bc385cf0b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addHashFunction</name>
      <anchorfile>classWt_1_1Auth_1_1PasswordVerifier.html</anchorfile>
      <anchor>af925131513a9f2e6fe2e28c6807c8aa3</anchor>
      <arglist>(std::unique_ptr&lt; HashFunction &gt; function)</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; HashFunction * &gt;</type>
      <name>hashFunctions</name>
      <anchorfile>classWt_1_1Auth_1_1PasswordVerifier.html</anchorfile>
      <anchor>a0f4c6234d28dc7360a550da83f0e8741</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>needsUpdate</name>
      <anchorfile>classWt_1_1Auth_1_1PasswordVerifier.html</anchorfile>
      <anchor>ace17f38fb68ed8cbcebd15322a81c701</anchor>
      <arglist>(const PasswordHash &amp;hash) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual PasswordHash</type>
      <name>hashPassword</name>
      <anchorfile>classWt_1_1Auth_1_1PasswordVerifier.html</anchorfile>
      <anchor>ab05d73263e6c5c016bf2dabb992f3c4f</anchor>
      <arglist>(const WString &amp;password) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>verify</name>
      <anchorfile>classWt_1_1Auth_1_1PasswordVerifier.html</anchorfile>
      <anchor>a3c172d72fc012c0e35af14f5bff7961d</anchor>
      <arglist>(const WString &amp;password, const PasswordHash &amp;hash) const override</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Wt::PathSegment</name>
    <filename>structWt_1_1PathSegment.html</filename>
  </compound>
  <compound kind="class">
    <name>Wt::Payment::PayPalExpressCheckout</name>
    <filename>classWt_1_1Payment_1_1PayPalExpressCheckout.html</filename>
    <base>Wt::WObject</base>
    <member kind="function">
      <type>void</type>
      <name>setPaymentAction</name>
      <anchorfile>classWt_1_1Payment_1_1PayPalExpressCheckout.html</anchorfile>
      <anchor>a1cd7acb78f0708359291d2aaebeb9c5a</anchor>
      <arglist>(PaymentAction action)</arglist>
    </member>
    <member kind="function">
      <type>PaymentAction</type>
      <name>paymentAction</name>
      <anchorfile>classWt_1_1Payment_1_1PayPalExpressCheckout.html</anchorfile>
      <anchor>a0e740310e10527c42fd3c57160f377ca</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setParameter</name>
      <anchorfile>classWt_1_1Payment_1_1PayPalExpressCheckout.html</anchorfile>
      <anchor>a7b81e081261bdba4813224e0f0d57e16</anchor>
      <arglist>(const std::string &amp;name, const std::string &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>const Customer &amp;</type>
      <name>customer</name>
      <anchorfile>classWt_1_1Payment_1_1PayPalExpressCheckout.html</anchorfile>
      <anchor>a2e450d43799b16fa496588005bdb2579</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const Order &amp;</type>
      <name>order</name>
      <anchorfile>classWt_1_1Payment_1_1PayPalExpressCheckout.html</anchorfile>
      <anchor>a771c5581b7ddd1643f8268020e7b118e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Signal&lt; Result &gt; &amp;</type>
      <name>setup</name>
      <anchorfile>classWt_1_1Payment_1_1PayPalExpressCheckout.html</anchorfile>
      <anchor>aeb2b74f64b1d0bd7f72d8040047dcc8f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>startPayment</name>
      <anchorfile>classWt_1_1Payment_1_1PayPalExpressCheckout.html</anchorfile>
      <anchor>a2ad80f81c4915cb60d23f37747e435f3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Signal&lt; Result &gt; &amp;</type>
      <name>updateCustomerDetails</name>
      <anchorfile>classWt_1_1Payment_1_1PayPalExpressCheckout.html</anchorfile>
      <anchor>af492f716a03a12e5ceadbf4cf2b10587</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Signal&lt; Result &gt; &amp;</type>
      <name>completePayment</name>
      <anchorfile>classWt_1_1Payment_1_1PayPalExpressCheckout.html</anchorfile>
      <anchor>a93ef2abcdc87ff53780541621004b39a</anchor>
      <arglist>(const Money &amp;totalAmount)</arglist>
    </member>
    <member kind="function">
      <type>Signal&lt; Approval &gt; &amp;</type>
      <name>paymentApproved</name>
      <anchorfile>classWt_1_1Payment_1_1PayPalExpressCheckout.html</anchorfile>
      <anchor>a09e40455db060194805dff7b39f8313c</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Payment::PayPalService</name>
    <filename>classWt_1_1Payment_1_1PayPalService.html</filename>
    <member kind="function">
      <type></type>
      <name>PayPalService</name>
      <anchorfile>classWt_1_1Payment_1_1PayPalService.html</anchorfile>
      <anchor>a80045636f9de6be47756237763572ff0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>configureFromProperties</name>
      <anchorfile>classWt_1_1Payment_1_1PayPalService.html</anchorfile>
      <anchor>a5b4f73466af7d3c3c6325f7f4982ba9f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>configureTestSandbox</name>
      <anchorfile>classWt_1_1Payment_1_1PayPalService.html</anchorfile>
      <anchor>aad50c3deaa420562629d5944d0caaf68</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setUser</name>
      <anchorfile>classWt_1_1Payment_1_1PayPalService.html</anchorfile>
      <anchor>a03d114f4aced054e1167a61b04f02e66</anchor>
      <arglist>(const std::string &amp;user)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>user</name>
      <anchorfile>classWt_1_1Payment_1_1PayPalService.html</anchorfile>
      <anchor>a8f93c6af0312b754478a3a4025346ed1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPassword</name>
      <anchorfile>classWt_1_1Payment_1_1PayPalService.html</anchorfile>
      <anchor>a92f075c16f4cf24e13e93f35227b4686</anchor>
      <arglist>(const std::string &amp;password)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>password</name>
      <anchorfile>classWt_1_1Payment_1_1PayPalService.html</anchorfile>
      <anchor>a9559f867221ad55a09dd49eff735751d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSignature</name>
      <anchorfile>classWt_1_1Payment_1_1PayPalService.html</anchorfile>
      <anchor>a409350306f5a9be0ad5b4026de7455dc</anchor>
      <arglist>(const std::string &amp;signature)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>signature</name>
      <anchorfile>classWt_1_1Payment_1_1PayPalService.html</anchorfile>
      <anchor>a3ca6bd9eb1d73aabb7f870b197e89298</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVersion</name>
      <anchorfile>classWt_1_1Payment_1_1PayPalService.html</anchorfile>
      <anchor>a9f1fa043a529d2914845eea78a236c22</anchor>
      <arglist>(const std::string &amp;version)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>version</name>
      <anchorfile>classWt_1_1Payment_1_1PayPalService.html</anchorfile>
      <anchor>ac3045c8eb5af9c71b1a648415932a7e6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setApiServerUrl</name>
      <anchorfile>classWt_1_1Payment_1_1PayPalService.html</anchorfile>
      <anchor>a1b184c5df20177e86137815d7dae9a72</anchor>
      <arglist>(const std::string &amp;url)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>apiServerUrl</name>
      <anchorfile>classWt_1_1Payment_1_1PayPalService.html</anchorfile>
      <anchor>a9f242924db0c6953f57bdde3bfa054dc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPayServerUrl</name>
      <anchorfile>classWt_1_1Payment_1_1PayPalService.html</anchorfile>
      <anchor>a1ceb0e345ab3bc53067bf7e5d244490d</anchor>
      <arglist>(const std::string &amp;url)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>payServerUrl</name>
      <anchorfile>classWt_1_1Payment_1_1PayPalService.html</anchorfile>
      <anchor>a3053dc40c2b62f3541e9737729110c6b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>PayPalExpressCheckout *</type>
      <name>createExpressCheckout</name>
      <anchorfile>classWt_1_1Payment_1_1PayPalService.html</anchorfile>
      <anchor>a2f763ee69490d64b541a6b635b5bbe55</anchor>
      <arglist>(const Customer &amp;customer, const Order &amp;order)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::PopupWindow</name>
    <filename>classWt_1_1PopupWindow.html</filename>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>loadJavaScript</name>
      <anchorfile>classWt_1_1PopupWindow.html</anchorfile>
      <anchor>a1eb23231ea7be46eabefa97fe044b30a</anchor>
      <arglist>(WApplication *app)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Dbo::backend::Postgres</name>
    <filename>classWt_1_1Dbo_1_1backend_1_1Postgres.html</filename>
    <base>Wt::Dbo::SqlConnection</base>
    <member kind="function">
      <type></type>
      <name>Postgres</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1Postgres.html</anchorfile>
      <anchor>a5699b228685c11aaf3293e1ec6243f35</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Postgres</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1Postgres.html</anchorfile>
      <anchor>a3fd006b93f9eb7d8c88d9f01d339606d</anchor>
      <arglist>(const std::string &amp;db)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Postgres</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1Postgres.html</anchorfile>
      <anchor>ae032939fe1a5e5007179d5c52e9074c1</anchor>
      <arglist>(const Postgres &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Postgres</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1Postgres.html</anchorfile>
      <anchor>a6b7dbc604df8610791e6cfdc57b55443</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::unique_ptr&lt; SqlConnection &gt;</type>
      <name>clone</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1Postgres.html</anchorfile>
      <anchor>af7d62f1faf4d47940acd084558e25c91</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>connect</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1Postgres.html</anchorfile>
      <anchor>a003ae8b797aea816669d4f02a34c6806</anchor>
      <arglist>(const std::string &amp;db)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>disconnect</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1Postgres.html</anchorfile>
      <anchor>a28b4cf9f73393f0fbe9f2fbaf06689d0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>reconnect</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1Postgres.html</anchorfile>
      <anchor>a768b932a39a230efac19912af235598d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>PGconn *</type>
      <name>connection</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1Postgres.html</anchorfile>
      <anchor>a025dd7452d7f25cdca2088999d37e238</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTimeout</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1Postgres.html</anchorfile>
      <anchor>abde27e10f272d0e6b139fa287a8bf35d</anchor>
      <arglist>(std::chrono::microseconds timeout)</arglist>
    </member>
    <member kind="function">
      <type>std::chrono::microseconds</type>
      <name>timeout</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1Postgres.html</anchorfile>
      <anchor>a3e9cb3dbec6f84665328e1a289a16103</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMaximumLifetime</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1Postgres.html</anchorfile>
      <anchor>a3fc3e070346245296a90ade9eb133def</anchor>
      <arglist>(std::chrono::seconds seconds)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>executeSql</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1Postgres.html</anchorfile>
      <anchor>aab5d1c0a3540313718dc9578e1689e82</anchor>
      <arglist>(const std::string &amp;sql) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>startTransaction</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1Postgres.html</anchorfile>
      <anchor>acc8f96867fd27079edfb4b2f4862146a</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>commitTransaction</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1Postgres.html</anchorfile>
      <anchor>a661cc0be895aeed22c62eca84b4a34a1</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>rollbackTransaction</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1Postgres.html</anchorfile>
      <anchor>ab7de6684195e737509d7eb5c50e434d5</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::unique_ptr&lt; SqlStatement &gt;</type>
      <name>prepareStatement</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1Postgres.html</anchorfile>
      <anchor>a5d46518220f81c8f6a4d9e8e07589c45</anchor>
      <arglist>(const std::string &amp;sql) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>autoincrementSql</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1Postgres.html</anchorfile>
      <anchor>abac68e6623df3da9ebbfba694408319f</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::vector&lt; std::string &gt;</type>
      <name>autoincrementCreateSequenceSql</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1Postgres.html</anchorfile>
      <anchor>accde84a39f6aa68b07486859724964cf</anchor>
      <arglist>(const std::string &amp;table, const std::string &amp;id) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::vector&lt; std::string &gt;</type>
      <name>autoincrementDropSequenceSql</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1Postgres.html</anchorfile>
      <anchor>adb283bdaedf7977771356f1306efc1b7</anchor>
      <arglist>(const std::string &amp;table, const std::string &amp;id) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>autoincrementType</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1Postgres.html</anchorfile>
      <anchor>aee70e850cb0355e00f534d212e3bfebb</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>autoincrementInsertSuffix</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1Postgres.html</anchorfile>
      <anchor>a8e654b57369702b76df9d1c22f1a9bd6</anchor>
      <arglist>(const std::string &amp;id) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>dateTimeType</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1Postgres.html</anchorfile>
      <anchor>a02fe43225d4c37df852afee98a78846e</anchor>
      <arglist>(SqlDateTimeType type) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>blobType</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1Postgres.html</anchorfile>
      <anchor>abcb8ddd4032e5d5460f40fbc42c3365b</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>supportAlterTable</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1Postgres.html</anchorfile>
      <anchor>a7585b5a37171519a5f4eafebf1374f03</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>supportDeferrableFKConstraint</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1Postgres.html</anchorfile>
      <anchor>a8f7eb471c10b77f4db16b6cca7678bdc</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>requireSubqueryAlias</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1Postgres.html</anchorfile>
      <anchor>a3edb187c158486014290e05f240bde25</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>autoincrementSql</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1Postgres.html</anchorfile>
      <anchor>abac68e6623df3da9ebbfba694408319f</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::vector&lt; std::string &gt;</type>
      <name>autoincrementCreateSequenceSql</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1Postgres.html</anchorfile>
      <anchor>accde84a39f6aa68b07486859724964cf</anchor>
      <arglist>(const std::string &amp;table, const std::string &amp;id) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::vector&lt; std::string &gt;</type>
      <name>autoincrementDropSequenceSql</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1Postgres.html</anchorfile>
      <anchor>adb283bdaedf7977771356f1306efc1b7</anchor>
      <arglist>(const std::string &amp;table, const std::string &amp;id) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>autoincrementType</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1Postgres.html</anchorfile>
      <anchor>aee70e850cb0355e00f534d212e3bfebb</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>autoincrementInsertSuffix</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1Postgres.html</anchorfile>
      <anchor>a8e654b57369702b76df9d1c22f1a9bd6</anchor>
      <arglist>(const std::string &amp;id) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>dateTimeType</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1Postgres.html</anchorfile>
      <anchor>a02fe43225d4c37df852afee98a78846e</anchor>
      <arglist>(SqlDateTimeType type) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>blobType</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1Postgres.html</anchorfile>
      <anchor>abcb8ddd4032e5d5460f40fbc42c3365b</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>supportAlterTable</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1Postgres.html</anchorfile>
      <anchor>a7585b5a37171519a5f4eafebf1374f03</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>supportDeferrableFKConstraint</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1Postgres.html</anchorfile>
      <anchor>a8f7eb471c10b77f4db16b6cca7678bdc</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>requireSubqueryAlias</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1Postgres.html</anchorfile>
      <anchor>a3edb187c158486014290e05f240bde25</anchor>
      <arglist>() const override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WGLWidget::Program</name>
    <filename>classWt_1_1WGLWidget_1_1Program.html</filename>
    <base>Wt::WGLWidget::GlObject</base>
  </compound>
  <compound kind="class">
    <name>Wt::Dbo::ptr</name>
    <filename>classWt_1_1Dbo_1_1ptr.html</filename>
    <member kind="function">
      <type></type>
      <name>ptr</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>a761e7372dedb096dc4876a9fc82d4d4a</anchor>
      <arglist>(std::unique_ptr&lt; C &gt; obj)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ptr</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>a69860430ebcbd337c28ca155a591de8e</anchor>
      <arglist>(const ptr&lt; C &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ptr</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>a12e02549989f27fc3d02ef2fdc5de6c1</anchor>
      <arglist>(ptr&lt; C &gt; &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ptr</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>acdde273c80b4f2eb114a78269aa1889d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>a9281235ed78e5b2a1670d9cc5fe1bbff</anchor>
      <arglist>(std::unique_ptr&lt; C &gt; obj=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>ptr&lt; C &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>af4ed63b2ab155d7d6291f66ed29de334</anchor>
      <arglist>(const ptr&lt; C &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>ptr&lt; C &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>a33b4ddeee49d252f0ae88ee6d4ed11b9</anchor>
      <arglist>(ptr&lt; C &gt; &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>const C *</type>
      <name>operator-&gt;</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>a5b450e6b7fb22d379285d051418ac5b5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const C *</type>
      <name>get</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>af18e109b0dbc3b1b69312c361a0fe7b5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const C &amp;</type>
      <name>operator*</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>ac1482fe83c6d66f46a3e1bb4aca24628</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>C *</type>
      <name>modify</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>aed605599617e3ae02d9e92b1daafa8e7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>a121523a4df84c9a3244ba5c3c2cfc24f</anchor>
      <arglist>(const ptr&lt; C &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>a72ac8c282c22b4b890cfbf1c84bff511</anchor>
      <arglist>(const weak_ptr&lt; C &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>afcf3e1d471def4bb62cc403e0ea1e8bd</anchor>
      <arglist>(const ptr&lt; C &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>a446b61787181634e6098facc209e428c</anchor>
      <arglist>(const weak_ptr&lt; C &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>a811da10ab69c82ae428e360dee852e7b</anchor>
      <arglist>(const ptr&lt; C &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator bool</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>afe0127d356d0f521738fcfa0eb6f5128</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>flush</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>a3e4e12079f2e3595bc201207217b6a4f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>af959d9c3b8c5ccb2ab29728c3698f343</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reread</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>aa8bfb5e7230ce4298f858d82022ec4e4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>purge</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>a4018f9d4f4f15c485023968b0c73c3ea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>dbo_traits&lt; C &gt;::IdType</type>
      <name>id</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>a43ea33191c46985752c192edb8254331</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>version</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>a9ce9ab6951182226bb0385a4e9464413</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isTransient</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>a357503bef1544de37665e57a5079248e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isDirty</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>a31050455873b569ffc47393a671d4a8e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Session *</type>
      <name>session</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>aad521e5a0ac60b91abe65f09934076c2</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ptr&lt; AuthIdentityType &gt;</name>
    <filename>classWt_1_1Dbo_1_1ptr.html</filename>
    <member kind="function">
      <type></type>
      <name>ptr</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>a761e7372dedb096dc4876a9fc82d4d4a</anchor>
      <arglist>(std::unique_ptr&lt; C &gt; obj)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ptr</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>a69860430ebcbd337c28ca155a591de8e</anchor>
      <arglist>(const ptr&lt; C &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ptr</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>a12e02549989f27fc3d02ef2fdc5de6c1</anchor>
      <arglist>(ptr&lt; C &gt; &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ptr</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>acdde273c80b4f2eb114a78269aa1889d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>a9281235ed78e5b2a1670d9cc5fe1bbff</anchor>
      <arglist>(std::unique_ptr&lt; C &gt; obj=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>ptr&lt; C &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>af4ed63b2ab155d7d6291f66ed29de334</anchor>
      <arglist>(const ptr&lt; C &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>ptr&lt; C &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>a33b4ddeee49d252f0ae88ee6d4ed11b9</anchor>
      <arglist>(ptr&lt; C &gt; &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>const C *</type>
      <name>operator-&gt;</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>a5b450e6b7fb22d379285d051418ac5b5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const C *</type>
      <name>get</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>af18e109b0dbc3b1b69312c361a0fe7b5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const C &amp;</type>
      <name>operator*</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>ac1482fe83c6d66f46a3e1bb4aca24628</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>C *</type>
      <name>modify</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>aed605599617e3ae02d9e92b1daafa8e7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>a121523a4df84c9a3244ba5c3c2cfc24f</anchor>
      <arglist>(const ptr&lt; C &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>a72ac8c282c22b4b890cfbf1c84bff511</anchor>
      <arglist>(const weak_ptr&lt; C &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>afcf3e1d471def4bb62cc403e0ea1e8bd</anchor>
      <arglist>(const ptr&lt; C &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>a446b61787181634e6098facc209e428c</anchor>
      <arglist>(const weak_ptr&lt; C &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>a811da10ab69c82ae428e360dee852e7b</anchor>
      <arglist>(const ptr&lt; C &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator bool</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>afe0127d356d0f521738fcfa0eb6f5128</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>flush</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>a3e4e12079f2e3595bc201207217b6a4f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>af959d9c3b8c5ccb2ab29728c3698f343</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reread</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>aa8bfb5e7230ce4298f858d82022ec4e4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>purge</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>a4018f9d4f4f15c485023968b0c73c3ea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>dbo_traits&lt; C &gt;::IdType</type>
      <name>id</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>a43ea33191c46985752c192edb8254331</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>version</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>a9ce9ab6951182226bb0385a4e9464413</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isTransient</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>a357503bef1544de37665e57a5079248e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isDirty</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>a31050455873b569ffc47393a671d4a8e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Session *</type>
      <name>session</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>aad521e5a0ac60b91abe65f09934076c2</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ptr&lt; AuthInfoType &gt;</name>
    <filename>classWt_1_1Dbo_1_1ptr.html</filename>
    <member kind="function">
      <type></type>
      <name>ptr</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>a761e7372dedb096dc4876a9fc82d4d4a</anchor>
      <arglist>(std::unique_ptr&lt; C &gt; obj)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ptr</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>a69860430ebcbd337c28ca155a591de8e</anchor>
      <arglist>(const ptr&lt; C &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ptr</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>a12e02549989f27fc3d02ef2fdc5de6c1</anchor>
      <arglist>(ptr&lt; C &gt; &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ptr</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>acdde273c80b4f2eb114a78269aa1889d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>a9281235ed78e5b2a1670d9cc5fe1bbff</anchor>
      <arglist>(std::unique_ptr&lt; C &gt; obj=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>ptr&lt; C &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>af4ed63b2ab155d7d6291f66ed29de334</anchor>
      <arglist>(const ptr&lt; C &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>ptr&lt; C &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>a33b4ddeee49d252f0ae88ee6d4ed11b9</anchor>
      <arglist>(ptr&lt; C &gt; &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>const C *</type>
      <name>operator-&gt;</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>a5b450e6b7fb22d379285d051418ac5b5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const C *</type>
      <name>get</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>af18e109b0dbc3b1b69312c361a0fe7b5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const C &amp;</type>
      <name>operator*</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>ac1482fe83c6d66f46a3e1bb4aca24628</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>C *</type>
      <name>modify</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>aed605599617e3ae02d9e92b1daafa8e7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>a121523a4df84c9a3244ba5c3c2cfc24f</anchor>
      <arglist>(const ptr&lt; C &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>a72ac8c282c22b4b890cfbf1c84bff511</anchor>
      <arglist>(const weak_ptr&lt; C &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>afcf3e1d471def4bb62cc403e0ea1e8bd</anchor>
      <arglist>(const ptr&lt; C &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>a446b61787181634e6098facc209e428c</anchor>
      <arglist>(const weak_ptr&lt; C &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>a811da10ab69c82ae428e360dee852e7b</anchor>
      <arglist>(const ptr&lt; C &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator bool</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>afe0127d356d0f521738fcfa0eb6f5128</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>flush</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>a3e4e12079f2e3595bc201207217b6a4f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>af959d9c3b8c5ccb2ab29728c3698f343</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reread</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>aa8bfb5e7230ce4298f858d82022ec4e4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>purge</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>a4018f9d4f4f15c485023968b0c73c3ea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>dbo_traits&lt; C &gt;::IdType</type>
      <name>id</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>a43ea33191c46985752c192edb8254331</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>version</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>a9ce9ab6951182226bb0385a4e9464413</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isTransient</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>a357503bef1544de37665e57a5079248e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isDirty</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>a31050455873b569ffc47393a671d4a8e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Session *</type>
      <name>session</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>aad521e5a0ac60b91abe65f09934076c2</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ptr&lt; AuthTokenType &gt;</name>
    <filename>classWt_1_1Dbo_1_1ptr.html</filename>
    <member kind="function">
      <type></type>
      <name>ptr</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>a761e7372dedb096dc4876a9fc82d4d4a</anchor>
      <arglist>(std::unique_ptr&lt; C &gt; obj)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ptr</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>a69860430ebcbd337c28ca155a591de8e</anchor>
      <arglist>(const ptr&lt; C &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ptr</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>a12e02549989f27fc3d02ef2fdc5de6c1</anchor>
      <arglist>(ptr&lt; C &gt; &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ptr</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>acdde273c80b4f2eb114a78269aa1889d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>a9281235ed78e5b2a1670d9cc5fe1bbff</anchor>
      <arglist>(std::unique_ptr&lt; C &gt; obj=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>ptr&lt; C &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>af4ed63b2ab155d7d6291f66ed29de334</anchor>
      <arglist>(const ptr&lt; C &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>ptr&lt; C &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>a33b4ddeee49d252f0ae88ee6d4ed11b9</anchor>
      <arglist>(ptr&lt; C &gt; &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>const C *</type>
      <name>operator-&gt;</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>a5b450e6b7fb22d379285d051418ac5b5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const C *</type>
      <name>get</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>af18e109b0dbc3b1b69312c361a0fe7b5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const C &amp;</type>
      <name>operator*</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>ac1482fe83c6d66f46a3e1bb4aca24628</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>C *</type>
      <name>modify</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>aed605599617e3ae02d9e92b1daafa8e7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>a121523a4df84c9a3244ba5c3c2cfc24f</anchor>
      <arglist>(const ptr&lt; C &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>a72ac8c282c22b4b890cfbf1c84bff511</anchor>
      <arglist>(const weak_ptr&lt; C &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>afcf3e1d471def4bb62cc403e0ea1e8bd</anchor>
      <arglist>(const ptr&lt; C &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>a446b61787181634e6098facc209e428c</anchor>
      <arglist>(const weak_ptr&lt; C &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>a811da10ab69c82ae428e360dee852e7b</anchor>
      <arglist>(const ptr&lt; C &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator bool</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>afe0127d356d0f521738fcfa0eb6f5128</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>flush</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>a3e4e12079f2e3595bc201207217b6a4f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>af959d9c3b8c5ccb2ab29728c3698f343</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reread</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>aa8bfb5e7230ce4298f858d82022ec4e4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>purge</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>a4018f9d4f4f15c485023968b0c73c3ea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>dbo_traits&lt; C &gt;::IdType</type>
      <name>id</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>a43ea33191c46985752c192edb8254331</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>version</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>a9ce9ab6951182226bb0385a4e9464413</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isTransient</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>a357503bef1544de37665e57a5079248e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isDirty</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>a31050455873b569ffc47393a671d4a8e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Session *</type>
      <name>session</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>aad521e5a0ac60b91abe65f09934076c2</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ptr&lt; C &gt;</name>
    <filename>classWt_1_1Dbo_1_1ptr.html</filename>
    <member kind="function">
      <type></type>
      <name>ptr</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>a761e7372dedb096dc4876a9fc82d4d4a</anchor>
      <arglist>(std::unique_ptr&lt; C &gt; obj)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ptr</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>a69860430ebcbd337c28ca155a591de8e</anchor>
      <arglist>(const ptr&lt; C &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ptr</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>a12e02549989f27fc3d02ef2fdc5de6c1</anchor>
      <arglist>(ptr&lt; C &gt; &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ptr</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>acdde273c80b4f2eb114a78269aa1889d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>a9281235ed78e5b2a1670d9cc5fe1bbff</anchor>
      <arglist>(std::unique_ptr&lt; C &gt; obj=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>ptr&lt; C &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>af4ed63b2ab155d7d6291f66ed29de334</anchor>
      <arglist>(const ptr&lt; C &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>ptr&lt; C &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>a33b4ddeee49d252f0ae88ee6d4ed11b9</anchor>
      <arglist>(ptr&lt; C &gt; &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>const C *</type>
      <name>operator-&gt;</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>a5b450e6b7fb22d379285d051418ac5b5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const C *</type>
      <name>get</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>af18e109b0dbc3b1b69312c361a0fe7b5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const C &amp;</type>
      <name>operator*</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>ac1482fe83c6d66f46a3e1bb4aca24628</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>C *</type>
      <name>modify</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>aed605599617e3ae02d9e92b1daafa8e7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>a121523a4df84c9a3244ba5c3c2cfc24f</anchor>
      <arglist>(const ptr&lt; C &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>a72ac8c282c22b4b890cfbf1c84bff511</anchor>
      <arglist>(const weak_ptr&lt; C &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>afcf3e1d471def4bb62cc403e0ea1e8bd</anchor>
      <arglist>(const ptr&lt; C &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>a446b61787181634e6098facc209e428c</anchor>
      <arglist>(const weak_ptr&lt; C &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>a811da10ab69c82ae428e360dee852e7b</anchor>
      <arglist>(const ptr&lt; C &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator bool</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>afe0127d356d0f521738fcfa0eb6f5128</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>flush</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>a3e4e12079f2e3595bc201207217b6a4f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>af959d9c3b8c5ccb2ab29728c3698f343</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reread</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>aa8bfb5e7230ce4298f858d82022ec4e4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>purge</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>a4018f9d4f4f15c485023968b0c73c3ea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>dbo_traits&lt; C &gt;::IdType</type>
      <name>id</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>a43ea33191c46985752c192edb8254331</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>version</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>a9ce9ab6951182226bb0385a4e9464413</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isTransient</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>a357503bef1544de37665e57a5079248e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isDirty</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>a31050455873b569ffc47393a671d4a8e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Session *</type>
      <name>session</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>aad521e5a0ac60b91abe65f09934076c2</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ptr&lt; DboType &gt;</name>
    <filename>classWt_1_1Dbo_1_1ptr.html</filename>
    <member kind="function">
      <type></type>
      <name>ptr</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>a761e7372dedb096dc4876a9fc82d4d4a</anchor>
      <arglist>(std::unique_ptr&lt; C &gt; obj)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ptr</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>a69860430ebcbd337c28ca155a591de8e</anchor>
      <arglist>(const ptr&lt; C &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ptr</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>a12e02549989f27fc3d02ef2fdc5de6c1</anchor>
      <arglist>(ptr&lt; C &gt; &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ptr</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>acdde273c80b4f2eb114a78269aa1889d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>a9281235ed78e5b2a1670d9cc5fe1bbff</anchor>
      <arglist>(std::unique_ptr&lt; C &gt; obj=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>ptr&lt; C &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>af4ed63b2ab155d7d6291f66ed29de334</anchor>
      <arglist>(const ptr&lt; C &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>ptr&lt; C &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>a33b4ddeee49d252f0ae88ee6d4ed11b9</anchor>
      <arglist>(ptr&lt; C &gt; &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>const C *</type>
      <name>operator-&gt;</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>a5b450e6b7fb22d379285d051418ac5b5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const C *</type>
      <name>get</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>af18e109b0dbc3b1b69312c361a0fe7b5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const C &amp;</type>
      <name>operator*</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>ac1482fe83c6d66f46a3e1bb4aca24628</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>C *</type>
      <name>modify</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>aed605599617e3ae02d9e92b1daafa8e7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>a121523a4df84c9a3244ba5c3c2cfc24f</anchor>
      <arglist>(const ptr&lt; C &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>a72ac8c282c22b4b890cfbf1c84bff511</anchor>
      <arglist>(const weak_ptr&lt; C &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>afcf3e1d471def4bb62cc403e0ea1e8bd</anchor>
      <arglist>(const ptr&lt; C &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>a446b61787181634e6098facc209e428c</anchor>
      <arglist>(const weak_ptr&lt; C &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>a811da10ab69c82ae428e360dee852e7b</anchor>
      <arglist>(const ptr&lt; C &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator bool</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>afe0127d356d0f521738fcfa0eb6f5128</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>flush</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>a3e4e12079f2e3595bc201207217b6a4f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>af959d9c3b8c5ccb2ab29728c3698f343</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reread</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>aa8bfb5e7230ce4298f858d82022ec4e4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>purge</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>a4018f9d4f4f15c485023968b0c73c3ea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>dbo_traits&lt; C &gt;::IdType</type>
      <name>id</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>a43ea33191c46985752c192edb8254331</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>version</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>a9ce9ab6951182226bb0385a4e9464413</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isTransient</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>a357503bef1544de37665e57a5079248e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isDirty</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>a31050455873b569ffc47393a671d4a8e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Session *</type>
      <name>session</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>aad521e5a0ac60b91abe65f09934076c2</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ptr&lt; MutC &gt;</name>
    <filename>classWt_1_1Dbo_1_1ptr.html</filename>
    <member kind="function">
      <type></type>
      <name>ptr</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>a761e7372dedb096dc4876a9fc82d4d4a</anchor>
      <arglist>(std::unique_ptr&lt; C &gt; obj)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ptr</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>a69860430ebcbd337c28ca155a591de8e</anchor>
      <arglist>(const ptr&lt; C &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ptr</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>a12e02549989f27fc3d02ef2fdc5de6c1</anchor>
      <arglist>(ptr&lt; C &gt; &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ptr</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>acdde273c80b4f2eb114a78269aa1889d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>a9281235ed78e5b2a1670d9cc5fe1bbff</anchor>
      <arglist>(std::unique_ptr&lt; C &gt; obj=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>ptr&lt; C &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>af4ed63b2ab155d7d6291f66ed29de334</anchor>
      <arglist>(const ptr&lt; C &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>ptr&lt; C &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>a33b4ddeee49d252f0ae88ee6d4ed11b9</anchor>
      <arglist>(ptr&lt; C &gt; &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>const C *</type>
      <name>operator-&gt;</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>a5b450e6b7fb22d379285d051418ac5b5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const C *</type>
      <name>get</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>af18e109b0dbc3b1b69312c361a0fe7b5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const C &amp;</type>
      <name>operator*</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>ac1482fe83c6d66f46a3e1bb4aca24628</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>C *</type>
      <name>modify</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>aed605599617e3ae02d9e92b1daafa8e7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>a121523a4df84c9a3244ba5c3c2cfc24f</anchor>
      <arglist>(const ptr&lt; C &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>a72ac8c282c22b4b890cfbf1c84bff511</anchor>
      <arglist>(const weak_ptr&lt; C &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>afcf3e1d471def4bb62cc403e0ea1e8bd</anchor>
      <arglist>(const ptr&lt; C &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>a446b61787181634e6098facc209e428c</anchor>
      <arglist>(const weak_ptr&lt; C &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>a811da10ab69c82ae428e360dee852e7b</anchor>
      <arglist>(const ptr&lt; C &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator bool</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>afe0127d356d0f521738fcfa0eb6f5128</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>flush</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>a3e4e12079f2e3595bc201207217b6a4f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>af959d9c3b8c5ccb2ab29728c3698f343</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reread</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>aa8bfb5e7230ce4298f858d82022ec4e4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>purge</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>a4018f9d4f4f15c485023968b0c73c3ea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>dbo_traits&lt; C &gt;::IdType</type>
      <name>id</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>a43ea33191c46985752c192edb8254331</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>version</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>a9ce9ab6951182226bb0385a4e9464413</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isTransient</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>a357503bef1544de37665e57a5079248e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isDirty</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>a31050455873b569ffc47393a671d4a8e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Session *</type>
      <name>session</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>aad521e5a0ac60b91abe65f09934076c2</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ptr&lt; UserType &gt;</name>
    <filename>classWt_1_1Dbo_1_1ptr.html</filename>
    <member kind="function">
      <type></type>
      <name>ptr</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>a761e7372dedb096dc4876a9fc82d4d4a</anchor>
      <arglist>(std::unique_ptr&lt; C &gt; obj)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ptr</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>a69860430ebcbd337c28ca155a591de8e</anchor>
      <arglist>(const ptr&lt; C &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ptr</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>a12e02549989f27fc3d02ef2fdc5de6c1</anchor>
      <arglist>(ptr&lt; C &gt; &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ptr</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>acdde273c80b4f2eb114a78269aa1889d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>a9281235ed78e5b2a1670d9cc5fe1bbff</anchor>
      <arglist>(std::unique_ptr&lt; C &gt; obj=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>ptr&lt; C &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>af4ed63b2ab155d7d6291f66ed29de334</anchor>
      <arglist>(const ptr&lt; C &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>ptr&lt; C &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>a33b4ddeee49d252f0ae88ee6d4ed11b9</anchor>
      <arglist>(ptr&lt; C &gt; &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>const C *</type>
      <name>operator-&gt;</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>a5b450e6b7fb22d379285d051418ac5b5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const C *</type>
      <name>get</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>af18e109b0dbc3b1b69312c361a0fe7b5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const C &amp;</type>
      <name>operator*</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>ac1482fe83c6d66f46a3e1bb4aca24628</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>C *</type>
      <name>modify</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>aed605599617e3ae02d9e92b1daafa8e7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>a121523a4df84c9a3244ba5c3c2cfc24f</anchor>
      <arglist>(const ptr&lt; C &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>a72ac8c282c22b4b890cfbf1c84bff511</anchor>
      <arglist>(const weak_ptr&lt; C &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>afcf3e1d471def4bb62cc403e0ea1e8bd</anchor>
      <arglist>(const ptr&lt; C &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>a446b61787181634e6098facc209e428c</anchor>
      <arglist>(const weak_ptr&lt; C &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>a811da10ab69c82ae428e360dee852e7b</anchor>
      <arglist>(const ptr&lt; C &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator bool</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>afe0127d356d0f521738fcfa0eb6f5128</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>flush</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>a3e4e12079f2e3595bc201207217b6a4f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>af959d9c3b8c5ccb2ab29728c3698f343</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reread</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>aa8bfb5e7230ce4298f858d82022ec4e4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>purge</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>a4018f9d4f4f15c485023968b0c73c3ea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>dbo_traits&lt; C &gt;::IdType</type>
      <name>id</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>a43ea33191c46985752c192edb8254331</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>version</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>a9ce9ab6951182226bb0385a4e9464413</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isTransient</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>a357503bef1544de37665e57a5079248e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isDirty</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>a31050455873b569ffc47393a671d4a8e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Session *</type>
      <name>session</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>aad521e5a0ac60b91abe65f09934076c2</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Dbo::Query</name>
    <filename>classWt_1_1Dbo_1_1Query.html</filename>
    <member kind="function">
      <type></type>
      <name>Query</name>
      <anchorfile>classWt_1_1Dbo_1_1Query.html</anchorfile>
      <anchor>aed4d0a1826ac34890bf582fbfbf91e4e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Query</name>
      <anchorfile>classWt_1_1Dbo_1_1Query.html</anchorfile>
      <anchor>a8ae5bcde0606016abe908e5d9cb2cba5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Query</name>
      <anchorfile>classWt_1_1Dbo_1_1Query.html</anchorfile>
      <anchor>a382946df413b155652568ea806a488a2</anchor>
      <arglist>(const Query &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Query &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1Dbo_1_1Query.html</anchorfile>
      <anchor>acd506523a58404943dbfa936d6c74078</anchor>
      <arglist>(const Query &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; FieldInfo &gt;</type>
      <name>fields</name>
      <anchorfile>classWt_1_1Dbo_1_1Query.html</anchorfile>
      <anchor>aad926ae29cc7c8ae49f91a322499ba17</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Session &amp;</type>
      <name>session</name>
      <anchorfile>classWt_1_1Dbo_1_1Query.html</anchorfile>
      <anchor>a8ed6d8ce690b77eefaea0f08606776c2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Query&lt; Result, BindStrategy &gt; &amp;</type>
      <name>bind</name>
      <anchorfile>classWt_1_1Dbo_1_1Query.html</anchorfile>
      <anchor>ae59b2e3b0f09ab53114161dd3b1852a9</anchor>
      <arglist>(const T &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classWt_1_1Dbo_1_1Query.html</anchorfile>
      <anchor>a477493dc3736bfcf97a41ca55d1921b8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Result</type>
      <name>resultValue</name>
      <anchorfile>classWt_1_1Dbo_1_1Query.html</anchorfile>
      <anchor>af5de1b3f9440466fc13ee33d7c337126</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>collection&lt; Result &gt;</type>
      <name>resultList</name>
      <anchorfile>classWt_1_1Dbo_1_1Query.html</anchorfile>
      <anchor>a66aa61902ff553a69545d1a37c737445</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator Result</name>
      <anchorfile>classWt_1_1Dbo_1_1Query.html</anchorfile>
      <anchor>ac2e5c2eca0205ca742b617aa8f3e8cd1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator collection&lt; Result &gt;</name>
      <anchorfile>classWt_1_1Dbo_1_1Query.html</anchorfile>
      <anchor>adfef480ac737f750af9ee05ff12bce0f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Query&lt; Result, BindStrategy &gt; &amp;</type>
      <name>join</name>
      <anchorfile>classWt_1_1Dbo_1_1Query.html</anchorfile>
      <anchor>ac98660276507802cc43c5f97a3929428</anchor>
      <arglist>(const std::string &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Query&lt; Result, BindStrategy &gt; &amp;</type>
      <name>leftJoin</name>
      <anchorfile>classWt_1_1Dbo_1_1Query.html</anchorfile>
      <anchor>afa11c8511c2016b5b5949b9c70cde8a7</anchor>
      <arglist>(const std::string &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Query&lt; Result, BindStrategy &gt; &amp;</type>
      <name>rightJoin</name>
      <anchorfile>classWt_1_1Dbo_1_1Query.html</anchorfile>
      <anchor>af38e2d74f398ff85dd1b3d61c9c3919c</anchor>
      <arglist>(const std::string &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Query&lt; Result, BindStrategy &gt; &amp;</type>
      <name>where</name>
      <anchorfile>classWt_1_1Dbo_1_1Query.html</anchorfile>
      <anchor>abd0c72e24559e53b253370e1e23ac790</anchor>
      <arglist>(const std::string &amp;condition)</arglist>
    </member>
    <member kind="function">
      <type>Query&lt; Result, BindStrategy &gt; &amp;</type>
      <name>orWhere</name>
      <anchorfile>classWt_1_1Dbo_1_1Query.html</anchorfile>
      <anchor>a0d7f16e7ca0799ad6b337c3fd395dd3d</anchor>
      <arglist>(const std::string &amp;condition)</arglist>
    </member>
    <member kind="function">
      <type>Query&lt; Result, BindStrategy &gt; &amp;</type>
      <name>orderBy</name>
      <anchorfile>classWt_1_1Dbo_1_1Query.html</anchorfile>
      <anchor>aeec5c473ddeedc33ddb0053a96ff2411</anchor>
      <arglist>(const std::string &amp;fieldName)</arglist>
    </member>
    <member kind="function">
      <type>Query&lt; Result, BindStrategy &gt; &amp;</type>
      <name>groupBy</name>
      <anchorfile>classWt_1_1Dbo_1_1Query.html</anchorfile>
      <anchor>a42b2081c58cd8a290cf91d0fdfe24730</anchor>
      <arglist>(const std::string &amp;fields)</arglist>
    </member>
    <member kind="function">
      <type>Query&lt; Result, BindStrategy &gt; &amp;</type>
      <name>having</name>
      <anchorfile>classWt_1_1Dbo_1_1Query.html</anchorfile>
      <anchor>afde0ef25484aa76695594d8441378510</anchor>
      <arglist>(const std::string &amp;fields)</arglist>
    </member>
    <member kind="function">
      <type>Query&lt; Result, BindStrategy &gt; &amp;</type>
      <name>offset</name>
      <anchorfile>classWt_1_1Dbo_1_1Query.html</anchorfile>
      <anchor>a9a915f095284c3da0d9703c03fdfad5c</anchor>
      <arglist>(int count)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>offset</name>
      <anchorfile>classWt_1_1Dbo_1_1Query.html</anchorfile>
      <anchor>a78e8fea586c495dbe55cc6efad34b90c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Query&lt; Result, BindStrategy &gt; &amp;</type>
      <name>limit</name>
      <anchorfile>classWt_1_1Dbo_1_1Query.html</anchorfile>
      <anchor>a5b2ffcb044f91bddca154f1135051db9</anchor>
      <arglist>(int count)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>limit</name>
      <anchorfile>classWt_1_1Dbo_1_1Query.html</anchorfile>
      <anchor>ac3494aad3b7725e8061957bef34e917f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Query&lt; Result, BindStrategy &gt; &amp;</type>
      <name>join</name>
      <anchorfile>classWt_1_1Dbo_1_1Query.html</anchorfile>
      <anchor>ac98660276507802cc43c5f97a3929428</anchor>
      <arglist>(const std::string &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Query&lt; Result, BindStrategy &gt; &amp;</type>
      <name>leftJoin</name>
      <anchorfile>classWt_1_1Dbo_1_1Query.html</anchorfile>
      <anchor>afa11c8511c2016b5b5949b9c70cde8a7</anchor>
      <arglist>(const std::string &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Query&lt; Result, BindStrategy &gt; &amp;</type>
      <name>rightJoin</name>
      <anchorfile>classWt_1_1Dbo_1_1Query.html</anchorfile>
      <anchor>af38e2d74f398ff85dd1b3d61c9c3919c</anchor>
      <arglist>(const std::string &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Query&lt; Result, BindStrategy &gt; &amp;</type>
      <name>where</name>
      <anchorfile>classWt_1_1Dbo_1_1Query.html</anchorfile>
      <anchor>abd0c72e24559e53b253370e1e23ac790</anchor>
      <arglist>(const std::string &amp;condition)</arglist>
    </member>
    <member kind="function">
      <type>Query&lt; Result, BindStrategy &gt; &amp;</type>
      <name>orWhere</name>
      <anchorfile>classWt_1_1Dbo_1_1Query.html</anchorfile>
      <anchor>a0d7f16e7ca0799ad6b337c3fd395dd3d</anchor>
      <arglist>(const std::string &amp;condition)</arglist>
    </member>
    <member kind="function">
      <type>Query&lt; Result, BindStrategy &gt; &amp;</type>
      <name>orderBy</name>
      <anchorfile>classWt_1_1Dbo_1_1Query.html</anchorfile>
      <anchor>aeec5c473ddeedc33ddb0053a96ff2411</anchor>
      <arglist>(const std::string &amp;fieldName)</arglist>
    </member>
    <member kind="function">
      <type>Query&lt; Result, BindStrategy &gt; &amp;</type>
      <name>groupBy</name>
      <anchorfile>classWt_1_1Dbo_1_1Query.html</anchorfile>
      <anchor>a42b2081c58cd8a290cf91d0fdfe24730</anchor>
      <arglist>(const std::string &amp;fields)</arglist>
    </member>
    <member kind="function">
      <type>Query&lt; Result, BindStrategy &gt; &amp;</type>
      <name>having</name>
      <anchorfile>classWt_1_1Dbo_1_1Query.html</anchorfile>
      <anchor>afde0ef25484aa76695594d8441378510</anchor>
      <arglist>(const std::string &amp;fields)</arglist>
    </member>
    <member kind="function">
      <type>Query&lt; Result, BindStrategy &gt; &amp;</type>
      <name>offset</name>
      <anchorfile>classWt_1_1Dbo_1_1Query.html</anchorfile>
      <anchor>a9a915f095284c3da0d9703c03fdfad5c</anchor>
      <arglist>(int count)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>offset</name>
      <anchorfile>classWt_1_1Dbo_1_1Query.html</anchorfile>
      <anchor>a78e8fea586c495dbe55cc6efad34b90c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Query&lt; Result, BindStrategy &gt; &amp;</type>
      <name>limit</name>
      <anchorfile>classWt_1_1Dbo_1_1Query.html</anchorfile>
      <anchor>a5b2ffcb044f91bddca154f1135051db9</anchor>
      <arglist>(int count)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>limit</name>
      <anchorfile>classWt_1_1Dbo_1_1Query.html</anchorfile>
      <anchor>ac3494aad3b7725e8061957bef34e917f</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Query&lt; Result &gt;</name>
    <filename>classWt_1_1Dbo_1_1Query.html</filename>
    <member kind="function">
      <type></type>
      <name>Query</name>
      <anchorfile>classWt_1_1Dbo_1_1Query.html</anchorfile>
      <anchor>aed4d0a1826ac34890bf582fbfbf91e4e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Query</name>
      <anchorfile>classWt_1_1Dbo_1_1Query.html</anchorfile>
      <anchor>a382946df413b155652568ea806a488a2</anchor>
      <arglist>(const Query &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Query</name>
      <anchorfile>classWt_1_1Dbo_1_1Query.html</anchorfile>
      <anchor>a8ae5bcde0606016abe908e5d9cb2cba5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Query &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1Dbo_1_1Query.html</anchorfile>
      <anchor>acd506523a58404943dbfa936d6c74078</anchor>
      <arglist>(const Query &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; FieldInfo &gt;</type>
      <name>fields</name>
      <anchorfile>classWt_1_1Dbo_1_1Query.html</anchorfile>
      <anchor>aad926ae29cc7c8ae49f91a322499ba17</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Session &amp;</type>
      <name>session</name>
      <anchorfile>classWt_1_1Dbo_1_1Query.html</anchorfile>
      <anchor>a8ed6d8ce690b77eefaea0f08606776c2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Query&lt; Result, BindStrategy &gt; &amp;</type>
      <name>bind</name>
      <anchorfile>classWt_1_1Dbo_1_1Query.html</anchorfile>
      <anchor>ae59b2e3b0f09ab53114161dd3b1852a9</anchor>
      <arglist>(const T &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classWt_1_1Dbo_1_1Query.html</anchorfile>
      <anchor>a477493dc3736bfcf97a41ca55d1921b8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Result</type>
      <name>resultValue</name>
      <anchorfile>classWt_1_1Dbo_1_1Query.html</anchorfile>
      <anchor>af5de1b3f9440466fc13ee33d7c337126</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>collection&lt; Result &gt;</type>
      <name>resultList</name>
      <anchorfile>classWt_1_1Dbo_1_1Query.html</anchorfile>
      <anchor>a66aa61902ff553a69545d1a37c737445</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator Result</name>
      <anchorfile>classWt_1_1Dbo_1_1Query.html</anchorfile>
      <anchor>ac2e5c2eca0205ca742b617aa8f3e8cd1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator collection&lt; Result &gt;</name>
      <anchorfile>classWt_1_1Dbo_1_1Query.html</anchorfile>
      <anchor>adfef480ac737f750af9ee05ff12bce0f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Query&lt; Result, BindStrategy &gt; &amp;</type>
      <name>join</name>
      <anchorfile>classWt_1_1Dbo_1_1Query.html</anchorfile>
      <anchor>ac98660276507802cc43c5f97a3929428</anchor>
      <arglist>(const std::string &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Query&lt; Result, BindStrategy &gt; &amp;</type>
      <name>leftJoin</name>
      <anchorfile>classWt_1_1Dbo_1_1Query.html</anchorfile>
      <anchor>afa11c8511c2016b5b5949b9c70cde8a7</anchor>
      <arglist>(const std::string &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Query&lt; Result, BindStrategy &gt; &amp;</type>
      <name>rightJoin</name>
      <anchorfile>classWt_1_1Dbo_1_1Query.html</anchorfile>
      <anchor>af38e2d74f398ff85dd1b3d61c9c3919c</anchor>
      <arglist>(const std::string &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Query&lt; Result, BindStrategy &gt; &amp;</type>
      <name>where</name>
      <anchorfile>classWt_1_1Dbo_1_1Query.html</anchorfile>
      <anchor>abd0c72e24559e53b253370e1e23ac790</anchor>
      <arglist>(const std::string &amp;condition)</arglist>
    </member>
    <member kind="function">
      <type>Query&lt; Result, BindStrategy &gt; &amp;</type>
      <name>orWhere</name>
      <anchorfile>classWt_1_1Dbo_1_1Query.html</anchorfile>
      <anchor>a0d7f16e7ca0799ad6b337c3fd395dd3d</anchor>
      <arglist>(const std::string &amp;condition)</arglist>
    </member>
    <member kind="function">
      <type>Query&lt; Result, BindStrategy &gt; &amp;</type>
      <name>orderBy</name>
      <anchorfile>classWt_1_1Dbo_1_1Query.html</anchorfile>
      <anchor>aeec5c473ddeedc33ddb0053a96ff2411</anchor>
      <arglist>(const std::string &amp;fieldName)</arglist>
    </member>
    <member kind="function">
      <type>Query&lt; Result, BindStrategy &gt; &amp;</type>
      <name>groupBy</name>
      <anchorfile>classWt_1_1Dbo_1_1Query.html</anchorfile>
      <anchor>a42b2081c58cd8a290cf91d0fdfe24730</anchor>
      <arglist>(const std::string &amp;fields)</arglist>
    </member>
    <member kind="function">
      <type>Query&lt; Result, BindStrategy &gt; &amp;</type>
      <name>having</name>
      <anchorfile>classWt_1_1Dbo_1_1Query.html</anchorfile>
      <anchor>afde0ef25484aa76695594d8441378510</anchor>
      <arglist>(const std::string &amp;fields)</arglist>
    </member>
    <member kind="function">
      <type>Query&lt; Result, BindStrategy &gt; &amp;</type>
      <name>offset</name>
      <anchorfile>classWt_1_1Dbo_1_1Query.html</anchorfile>
      <anchor>a9a915f095284c3da0d9703c03fdfad5c</anchor>
      <arglist>(int count)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>offset</name>
      <anchorfile>classWt_1_1Dbo_1_1Query.html</anchorfile>
      <anchor>a78e8fea586c495dbe55cc6efad34b90c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Query&lt; Result, BindStrategy &gt; &amp;</type>
      <name>limit</name>
      <anchorfile>classWt_1_1Dbo_1_1Query.html</anchorfile>
      <anchor>a5b2ffcb044f91bddca154f1135051db9</anchor>
      <arglist>(int count)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>limit</name>
      <anchorfile>classWt_1_1Dbo_1_1Query.html</anchorfile>
      <anchor>ac3494aad3b7725e8061957bef34e917f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Query&lt; Result, BindStrategy &gt; &amp;</type>
      <name>join</name>
      <anchorfile>classWt_1_1Dbo_1_1Query.html</anchorfile>
      <anchor>ac98660276507802cc43c5f97a3929428</anchor>
      <arglist>(const std::string &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Query&lt; Result, BindStrategy &gt; &amp;</type>
      <name>leftJoin</name>
      <anchorfile>classWt_1_1Dbo_1_1Query.html</anchorfile>
      <anchor>afa11c8511c2016b5b5949b9c70cde8a7</anchor>
      <arglist>(const std::string &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Query&lt; Result, BindStrategy &gt; &amp;</type>
      <name>rightJoin</name>
      <anchorfile>classWt_1_1Dbo_1_1Query.html</anchorfile>
      <anchor>af38e2d74f398ff85dd1b3d61c9c3919c</anchor>
      <arglist>(const std::string &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Query&lt; Result, BindStrategy &gt; &amp;</type>
      <name>where</name>
      <anchorfile>classWt_1_1Dbo_1_1Query.html</anchorfile>
      <anchor>abd0c72e24559e53b253370e1e23ac790</anchor>
      <arglist>(const std::string &amp;condition)</arglist>
    </member>
    <member kind="function">
      <type>Query&lt; Result, BindStrategy &gt; &amp;</type>
      <name>orWhere</name>
      <anchorfile>classWt_1_1Dbo_1_1Query.html</anchorfile>
      <anchor>a0d7f16e7ca0799ad6b337c3fd395dd3d</anchor>
      <arglist>(const std::string &amp;condition)</arglist>
    </member>
    <member kind="function">
      <type>Query&lt; Result, BindStrategy &gt; &amp;</type>
      <name>orderBy</name>
      <anchorfile>classWt_1_1Dbo_1_1Query.html</anchorfile>
      <anchor>aeec5c473ddeedc33ddb0053a96ff2411</anchor>
      <arglist>(const std::string &amp;fieldName)</arglist>
    </member>
    <member kind="function">
      <type>Query&lt; Result, BindStrategy &gt; &amp;</type>
      <name>groupBy</name>
      <anchorfile>classWt_1_1Dbo_1_1Query.html</anchorfile>
      <anchor>a42b2081c58cd8a290cf91d0fdfe24730</anchor>
      <arglist>(const std::string &amp;fields)</arglist>
    </member>
    <member kind="function">
      <type>Query&lt; Result, BindStrategy &gt; &amp;</type>
      <name>having</name>
      <anchorfile>classWt_1_1Dbo_1_1Query.html</anchorfile>
      <anchor>afde0ef25484aa76695594d8441378510</anchor>
      <arglist>(const std::string &amp;fields)</arglist>
    </member>
    <member kind="function">
      <type>Query&lt; Result, BindStrategy &gt; &amp;</type>
      <name>offset</name>
      <anchorfile>classWt_1_1Dbo_1_1Query.html</anchorfile>
      <anchor>a9a915f095284c3da0d9703c03fdfad5c</anchor>
      <arglist>(int count)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>offset</name>
      <anchorfile>classWt_1_1Dbo_1_1Query.html</anchorfile>
      <anchor>a78e8fea586c495dbe55cc6efad34b90c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Query&lt; Result, BindStrategy &gt; &amp;</type>
      <name>limit</name>
      <anchorfile>classWt_1_1Dbo_1_1Query.html</anchorfile>
      <anchor>a5b2ffcb044f91bddca154f1135051db9</anchor>
      <arglist>(int count)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>limit</name>
      <anchorfile>classWt_1_1Dbo_1_1Query.html</anchorfile>
      <anchor>ac3494aad3b7725e8061957bef34e917f</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Dbo::query_result_traits</name>
    <filename>structWt_1_1Dbo_1_1query__result__traits.html</filename>
    <templarg></templarg>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>getFields</name>
      <anchorfile>structWt_1_1Dbo_1_1query__result__traits.html</anchorfile>
      <anchor>a15021d5b70cb03ee08b39f0c45b02572</anchor>
      <arglist>(Session &amp;session, std::vector&lt; std::string &gt; *aliases, std::vector&lt; FieldInfo &gt; &amp;result)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Result</type>
      <name>load</name>
      <anchorfile>structWt_1_1Dbo_1_1query__result__traits.html</anchorfile>
      <anchor>a24228c4fbd6fd851a44c7aaf3416d0b3</anchor>
      <arglist>(Session &amp;session, SqlStatement &amp;statement, int &amp;column)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>getValues</name>
      <anchorfile>structWt_1_1Dbo_1_1query__result__traits.html</anchorfile>
      <anchor>a9e28304a061c7ad52cb34e34fc410759</anchor>
      <arglist>(const Result &amp;result, std::vector&lt; cpp17::any &gt; &amp;values)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setValue</name>
      <anchorfile>structWt_1_1Dbo_1_1query__result__traits.html</anchorfile>
      <anchor>afd928ae3f5216574125647063135cc3a</anchor>
      <arglist>(Result &amp;result, int &amp;index, const cpp17::any &amp;value)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Result</type>
      <name>create</name>
      <anchorfile>structWt_1_1Dbo_1_1query__result__traits.html</anchorfile>
      <anchor>ad5ff66197006a5daef3ce806ad29ddf7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>add</name>
      <anchorfile>structWt_1_1Dbo_1_1query__result__traits.html</anchorfile>
      <anchor>af54fbd95d2319077cacbb718d6f33f1b</anchor>
      <arglist>(Session &amp;session, Result &amp;result)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>remove</name>
      <anchorfile>structWt_1_1Dbo_1_1query__result__traits.html</anchorfile>
      <anchor>ae60de38f7bbffad41f60bd80df2ad8ca</anchor>
      <arglist>(Result &amp;result)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static long long</type>
      <name>id</name>
      <anchorfile>structWt_1_1Dbo_1_1query__result__traits.html</anchorfile>
      <anchor>a23408463cc4a22d49fc8cc6328391fae</anchor>
      <arglist>(const Result &amp;result)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Result</type>
      <name>findById</name>
      <anchorfile>structWt_1_1Dbo_1_1query__result__traits.html</anchorfile>
      <anchor>a45cf741a8090502f234fadfbad05819e</anchor>
      <arglist>(Session &amp;session, long long id)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Dbo::QueryModel</name>
    <filename>classWt_1_1Dbo_1_1QueryModel.html</filename>
    <templarg></templarg>
    <base>Wt::WAbstractTableModel</base>
    <member kind="function">
      <type></type>
      <name>QueryModel</name>
      <anchorfile>classWt_1_1Dbo_1_1QueryModel.html</anchorfile>
      <anchor>a0d72641c8a3ce28662a9e231a2a6171a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setQuery</name>
      <anchorfile>classWt_1_1Dbo_1_1QueryModel.html</anchorfile>
      <anchor>a9453700573e37d02a69a77ac6f57dfa5</anchor>
      <arglist>(const Query&lt; Result &gt; &amp;query, bool keepColumns=false)</arglist>
    </member>
    <member kind="function">
      <type>Query&lt; Result &gt;</type>
      <name>query</name>
      <anchorfile>classWt_1_1Dbo_1_1QueryModel.html</anchorfile>
      <anchor>a6b53b9460e09c4208c9b0d737e390164</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>addColumn</name>
      <anchorfile>classWt_1_1Dbo_1_1QueryModel.html</anchorfile>
      <anchor>a41e5e15eebba8157890b1372c4c41312</anchor>
      <arglist>(const std::string &amp;field, const WString &amp;header, WFlags&lt; ItemFlag &gt; flags=ItemFlag::Selectable)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>addColumn</name>
      <anchorfile>classWt_1_1Dbo_1_1QueryModel.html</anchorfile>
      <anchor>aba33e9979267a1a1150718523c02bfc3</anchor>
      <arglist>(const std::string &amp;field, WFlags&lt; ItemFlag &gt; flags=ItemFlag::Selectable)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setColumnFlags</name>
      <anchorfile>classWt_1_1Dbo_1_1QueryModel.html</anchorfile>
      <anchor>a6448c762a7e8e28051d21d58b600e5ca</anchor>
      <arglist>(int column, WFlags&lt; ItemFlag &gt; flags)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; ItemFlag &gt;</type>
      <name>columnFlags</name>
      <anchorfile>classWt_1_1Dbo_1_1QueryModel.html</anchorfile>
      <anchor>a3821cecfc2662476aee02c0c5a853c46</anchor>
      <arglist>(int column) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addAllFieldsAsColumns</name>
      <anchorfile>classWt_1_1Dbo_1_1QueryModel.html</anchorfile>
      <anchor>afa1bbf12d2b58ae91481f6d09c1dd8db</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Result</type>
      <name>stableResultRow</name>
      <anchorfile>classWt_1_1Dbo_1_1QueryModel.html</anchorfile>
      <anchor>ade86cb8bbcf23e2532b91687f1e685e0</anchor>
      <arglist>(int row) const</arglist>
    </member>
    <member kind="function">
      <type>const Result &amp;</type>
      <name>resultRow</name>
      <anchorfile>classWt_1_1Dbo_1_1QueryModel.html</anchorfile>
      <anchor>afaec30850c8094e9e23395de7de49f3d</anchor>
      <arglist>(int row) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Result &amp;</type>
      <name>resultRow</name>
      <anchorfile>classWt_1_1Dbo_1_1QueryModel.html</anchorfile>
      <anchor>a08c73dc6b9e382a46e7bda2ffe01376a</anchor>
      <arglist>(int row)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>indexOf</name>
      <anchorfile>classWt_1_1Dbo_1_1QueryModel.html</anchorfile>
      <anchor>a717e6040c21f964fd34e9c18c6afaf54</anchor>
      <arglist>(const Result &amp;row) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reload</name>
      <anchorfile>classWt_1_1Dbo_1_1QueryModel.html</anchorfile>
      <anchor>ade0f8644e13de16e326b7d679f87add1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBatchSize</name>
      <anchorfile>classWt_1_1Dbo_1_1QueryModel.html</anchorfile>
      <anchor>a6871c2e7be184bfd2339320812387f81</anchor>
      <arglist>(int count)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>batchSize</name>
      <anchorfile>classWt_1_1Dbo_1_1QueryModel.html</anchorfile>
      <anchor>ade6d4f3be01c5c6470c3b215e4387025</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; FieldInfo &gt; &amp;</type>
      <name>fields</name>
      <anchorfile>classWt_1_1Dbo_1_1QueryModel.html</anchorfile>
      <anchor>a70882eeace9adfc71e80680057324b28</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const FieldInfo &amp;</type>
      <name>fieldInfo</name>
      <anchorfile>classWt_1_1Dbo_1_1QueryModel.html</anchorfile>
      <anchor>a46cd33a2db37226ce0f46ac95bae3d14</anchor>
      <arglist>(int column) const</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>fieldName</name>
      <anchorfile>classWt_1_1Dbo_1_1QueryModel.html</anchorfile>
      <anchor>a17444723d099ba74a3d8e7d274bb28c1</anchor>
      <arglist>(int column) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>columnCount</name>
      <anchorfile>classWt_1_1Dbo_1_1QueryModel.html</anchorfile>
      <anchor>a29437ef2d5883e0f8a3e492b86c38456</anchor>
      <arglist>(const WModelIndex &amp;parent=WModelIndex()) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>rowCount</name>
      <anchorfile>classWt_1_1Dbo_1_1QueryModel.html</anchorfile>
      <anchor>abad12ccb058ef3ecd3c0db9d5f56783b</anchor>
      <arglist>(const WModelIndex &amp;parent=WModelIndex()) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WFlags&lt; ItemFlag &gt;</type>
      <name>flags</name>
      <anchorfile>classWt_1_1Dbo_1_1QueryModel.html</anchorfile>
      <anchor>ad3d740e4e4192a1fced556f3ab1f8da7</anchor>
      <arglist>(const WModelIndex &amp;index) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual cpp17::any</type>
      <name>data</name>
      <anchorfile>classWt_1_1Dbo_1_1QueryModel.html</anchorfile>
      <anchor>ab51eb60e26b58aa538964bf1a5a4bcd8</anchor>
      <arglist>(const WModelIndex &amp;index, ItemDataRole role=ItemDataRole::Display) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>setData</name>
      <anchorfile>classWt_1_1Dbo_1_1QueryModel.html</anchorfile>
      <anchor>ae1575222c8b1da8ea910d19190290a4c</anchor>
      <arglist>(const WModelIndex &amp;index, const cpp17::any &amp;value, ItemDataRole role=ItemDataRole::Edit) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>sort</name>
      <anchorfile>classWt_1_1Dbo_1_1QueryModel.html</anchorfile>
      <anchor>aea2518aea6f73ce38366baf545d65290</anchor>
      <arglist>(int column, SortOrder order=SortOrder::Ascending) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>createOrderBy</name>
      <anchorfile>classWt_1_1Dbo_1_1QueryModel.html</anchorfile>
      <anchor>adbb35efc5a4c46f9eef934bca0927068</anchor>
      <arglist>(int column, SortOrder order)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>insertRows</name>
      <anchorfile>classWt_1_1Dbo_1_1QueryModel.html</anchorfile>
      <anchor>a8a3b084964b3e20e3d83a938e3ba5024</anchor>
      <arglist>(int row, int count, const WModelIndex &amp;parent=WModelIndex()) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>removeRows</name>
      <anchorfile>classWt_1_1Dbo_1_1QueryModel.html</anchorfile>
      <anchor>a8a868c84e6637e744e2dd976f65e94d6</anchor>
      <arglist>(int row, int count, const WModelIndex &amp;parent=WModelIndex()) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>setHeaderData</name>
      <anchorfile>classWt_1_1Dbo_1_1QueryModel.html</anchorfile>
      <anchor>a5c6b5753338158eb9b245f1f6a0d3aa8</anchor>
      <arglist>(int column, Orientation orientation, const cpp17::any &amp;value, ItemDataRole role=ItemDataRole::Edit) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual cpp17::any</type>
      <name>headerData</name>
      <anchorfile>classWt_1_1Dbo_1_1QueryModel.html</anchorfile>
      <anchor>ab75f1e62214463001b2d15f6b428224d</anchor>
      <arglist>(int section, Orientation orientation=Orientation::Horizontal, ItemDataRole role=ItemDataRole::Display) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void *</type>
      <name>toRawIndex</name>
      <anchorfile>classWt_1_1Dbo_1_1QueryModel.html</anchorfile>
      <anchor>a8962a6f30f6039adf75bac99d07420d7</anchor>
      <arglist>(const WModelIndex &amp;index) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WModelIndex</type>
      <name>fromRawIndex</name>
      <anchorfile>classWt_1_1Dbo_1_1QueryModel.html</anchorfile>
      <anchor>ab37663d60be859adf5d8aceaffc0b430</anchor>
      <arglist>(void *rawIndex) const override</arglist>
    </member>
    <member kind="function">
      <type>virtual cpp17::any</type>
      <name>data</name>
      <anchorfile>classWt_1_1Dbo_1_1QueryModel.html</anchorfile>
      <anchor>a837660e348a3c61c3919c238bf11eb29</anchor>
      <arglist>(const WModelIndex &amp;index, ItemDataRole role=ItemDataRole::Display) const=0</arglist>
    </member>
    <member kind="function">
      <type>cpp17::any</type>
      <name>data</name>
      <anchorfile>classWt_1_1Dbo_1_1QueryModel.html</anchorfile>
      <anchor>a5fc67e5fbb584cd1c6e6108ad07ff484</anchor>
      <arglist>(int row, int column, ItemDataRole role=ItemDataRole::Display, const WModelIndex &amp;parent=WModelIndex()) const</arglist>
    </member>
    <member kind="function">
      <type>virtual bool</type>
      <name>setData</name>
      <anchorfile>classWt_1_1Dbo_1_1QueryModel.html</anchorfile>
      <anchor>abe2d5b91abf57ff6dbc26d0e66a77572</anchor>
      <arglist>(const WModelIndex &amp;index, const cpp17::any &amp;value, ItemDataRole role=ItemDataRole::Edit)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setData</name>
      <anchorfile>classWt_1_1Dbo_1_1QueryModel.html</anchorfile>
      <anchor>aae463d7040f364ffcc008997f8e387a2</anchor>
      <arglist>(int row, int column, const cpp17::any &amp;value, ItemDataRole role=ItemDataRole::Edit, const WModelIndex &amp;parent=WModelIndex())</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual Result</type>
      <name>createRow</name>
      <anchorfile>classWt_1_1Dbo_1_1QueryModel.html</anchorfile>
      <anchor>a122165a0eaad6573172181d5eeefcbe0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>addRow</name>
      <anchorfile>classWt_1_1Dbo_1_1QueryModel.html</anchorfile>
      <anchor>a76080f5f01a7404d525259b352e7829b</anchor>
      <arglist>(Result &amp;result)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>deleteRow</name>
      <anchorfile>classWt_1_1Dbo_1_1QueryModel.html</anchorfile>
      <anchor>a4a6c45d5b17f382f2e0927490107208b</anchor>
      <arglist>(Result &amp;result)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual long long</type>
      <name>resultId</name>
      <anchorfile>classWt_1_1Dbo_1_1QueryModel.html</anchorfile>
      <anchor>a50e3ac385ea4a3f9508229fe2306a8d7</anchor>
      <arglist>(const Result &amp;result) const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual Result</type>
      <name>resultById</name>
      <anchorfile>classWt_1_1Dbo_1_1QueryModel.html</anchorfile>
      <anchor>a7ddede1b7bf921e9a9fa8865b01cc147</anchor>
      <arglist>(long long id) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Mail::Message::Recipient</name>
    <filename>structWt_1_1Mail_1_1Message_1_1Recipient.html</filename>
    <member kind="variable">
      <type>RecipientType</type>
      <name>type</name>
      <anchorfile>structWt_1_1Mail_1_1Message_1_1Recipient.html</anchorfile>
      <anchor>abd07ac095dcda7145f8b2613bdfcb9b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Mailbox</type>
      <name>mailbox</name>
      <anchorfile>structWt_1_1Mail_1_1Message_1_1Recipient.html</anchorfile>
      <anchor>ad62cd90d10a41be57556ad84c28fdfa5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Auth::RegistrationModel</name>
    <filename>classWt_1_1Auth_1_1RegistrationModel.html</filename>
    <base>Wt::Auth::FormBaseModel</base>
    <member kind="function">
      <type></type>
      <name>RegistrationModel</name>
      <anchorfile>classWt_1_1Auth_1_1RegistrationModel.html</anchorfile>
      <anchor>ad36a32900fc223f197ba03bbf50a42c8</anchor>
      <arglist>(const AuthService &amp;baseAuth, AbstractUserDatabase &amp;users, Login &amp;login)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>reset</name>
      <anchorfile>classWt_1_1Auth_1_1RegistrationModel.html</anchorfile>
      <anchor>a028f05fb9bbb1dc5ce4f315670362f3f</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>Login &amp;</type>
      <name>login</name>
      <anchorfile>classWt_1_1Auth_1_1RegistrationModel.html</anchorfile>
      <anchor>a99bfd95211b3d072d44cd56f9e7a409c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMinLoginNameLength</name>
      <anchorfile>classWt_1_1Auth_1_1RegistrationModel.html</anchorfile>
      <anchor>a594097839ba087e8dbab4eaee6900bdd</anchor>
      <arglist>(int chars)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>minLoginNameLength</name>
      <anchorfile>classWt_1_1Auth_1_1RegistrationModel.html</anchorfile>
      <anchor>aa4029a778230e9acea63be8e4c6103a7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setEmailPolicy</name>
      <anchorfile>classWt_1_1Auth_1_1RegistrationModel.html</anchorfile>
      <anchor>ad880d6c99a03b1521edc6f49e516ac6a</anchor>
      <arglist>(EmailPolicy policy)</arglist>
    </member>
    <member kind="function">
      <type>EmailPolicy</type>
      <name>emailPolicy</name>
      <anchorfile>classWt_1_1Auth_1_1RegistrationModel.html</anchorfile>
      <anchor>adc5b810d0e870b8c7760621658b2a492</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>registerIdentified</name>
      <anchorfile>classWt_1_1Auth_1_1RegistrationModel.html</anchorfile>
      <anchor>ab8f9d671af20b15d4adc1953a306f2f2</anchor>
      <arglist>(const Identity &amp;identity)</arglist>
    </member>
    <member kind="function">
      <type>User</type>
      <name>existingUser</name>
      <anchorfile>classWt_1_1Auth_1_1RegistrationModel.html</anchorfile>
      <anchor>af9901c56a062bbed3aec0367a94e1c5e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IdentityConfirmationMethod</type>
      <name>confirmIsExistingUser</name>
      <anchorfile>classWt_1_1Auth_1_1RegistrationModel.html</anchorfile>
      <anchor>a3840e1ef7a4d67104a27e1c722d45b0c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>existingUserConfirmed</name>
      <anchorfile>classWt_1_1Auth_1_1RegistrationModel.html</anchorfile>
      <anchor>abc0dea3c2a3d5a5e02501e6486aac110</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WString</type>
      <name>validateLoginName</name>
      <anchorfile>classWt_1_1Auth_1_1RegistrationModel.html</anchorfile>
      <anchor>a8f6b790631269824938c3e2184077c45</anchor>
      <arglist>(const WString &amp;userName) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>checkUserExists</name>
      <anchorfile>classWt_1_1Auth_1_1RegistrationModel.html</anchorfile>
      <anchor>a29cbbf6d959c08bcf07ca2a7121c138e</anchor>
      <arglist>(const WString &amp;userName)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual User</type>
      <name>doRegister</name>
      <anchorfile>classWt_1_1Auth_1_1RegistrationModel.html</anchorfile>
      <anchor>a2b6ad0412e0e259c1700e3759028e87e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isVisible</name>
      <anchorfile>classWt_1_1Auth_1_1RegistrationModel.html</anchorfile>
      <anchor>ad2e6273ce5eec5f5e0643ba4659c7b55</anchor>
      <arglist>(Field field) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isReadOnly</name>
      <anchorfile>classWt_1_1Auth_1_1RegistrationModel.html</anchorfile>
      <anchor>a1e7ddae751f9aced622b74d63b6eff20</anchor>
      <arglist>(Field field) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>validateField</name>
      <anchorfile>classWt_1_1Auth_1_1RegistrationModel.html</anchorfile>
      <anchor>a4783c1f04daea94465cd1de361a42555</anchor>
      <arglist>(Field field) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isConfirmUserButtonVisible</name>
      <anchorfile>classWt_1_1Auth_1_1RegistrationModel.html</anchorfile>
      <anchor>a04520f273b21fb424994543888bd0328</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isFederatedLoginVisible</name>
      <anchorfile>classWt_1_1Auth_1_1RegistrationModel.html</anchorfile>
      <anchor>ab3a999ac0fe72cfd9ebe0f91d4d62de2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const Field</type>
      <name>ChoosePasswordField</name>
      <anchorfile>classWt_1_1Auth_1_1RegistrationModel.html</anchorfile>
      <anchor>a6242bfffa5a738d1fe066d90157fce87</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const Field</type>
      <name>RepeatPasswordField</name>
      <anchorfile>classWt_1_1Auth_1_1RegistrationModel.html</anchorfile>
      <anchor>a3f7b892cb00e99d84e884ba950c18f3f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const Field</type>
      <name>EmailField</name>
      <anchorfile>classWt_1_1Auth_1_1RegistrationModel.html</anchorfile>
      <anchor>a3efaf66042493d53a84ecb095ad73d5c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Auth::RegistrationWidget</name>
    <filename>classWt_1_1Auth_1_1RegistrationWidget.html</filename>
    <base>Wt::WTemplateFormView</base>
    <member kind="function">
      <type></type>
      <name>RegistrationWidget</name>
      <anchorfile>classWt_1_1Auth_1_1RegistrationWidget.html</anchorfile>
      <anchor>a7f267ff0912bd35db91b512c4a9e4b4e</anchor>
      <arglist>(AuthWidget *authWidget=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setModel</name>
      <anchorfile>classWt_1_1Auth_1_1RegistrationWidget.html</anchorfile>
      <anchor>a62d079143db11ccf252dbcecfdb32dbc</anchor>
      <arglist>(std::unique_ptr&lt; RegistrationModel &gt; model)</arglist>
    </member>
    <member kind="function">
      <type>RegistrationModel *</type>
      <name>model</name>
      <anchorfile>classWt_1_1Auth_1_1RegistrationWidget.html</anchorfile>
      <anchor>a69f647c7dd2d9b35fb85825a04d19d11</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>update</name>
      <anchorfile>classWt_1_1Auth_1_1RegistrationWidget.html</anchorfile>
      <anchor>a3b822bbbe027f3f4ab2c6106f3c66761</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>validate</name>
      <anchorfile>classWt_1_1Auth_1_1RegistrationWidget.html</anchorfile>
      <anchor>a4a76e5f1fd9721edd503a2d33c9c7371</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doRegister</name>
      <anchorfile>classWt_1_1Auth_1_1RegistrationWidget.html</anchorfile>
      <anchor>ae04b18aeb42b46c80a182427d19f15f0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>close</name>
      <anchorfile>classWt_1_1Auth_1_1RegistrationWidget.html</anchorfile>
      <anchor>a1d80e249b928ce2007b80e3ccfc2513c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>registerUserDetails</name>
      <anchorfile>classWt_1_1Auth_1_1RegistrationWidget.html</anchorfile>
      <anchor>a867f317e75a8b14c002333f33717a6fe</anchor>
      <arglist>(User &amp;user)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>render</name>
      <anchorfile>classWt_1_1Auth_1_1RegistrationWidget.html</anchorfile>
      <anchor>a66f87816a09081820acb209216375bcb</anchor>
      <arglist>(WFlags&lt; RenderFlag &gt; flags) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WGLWidget::Renderbuffer</name>
    <filename>classWt_1_1WGLWidget_1_1Renderbuffer.html</filename>
    <base>Wt::WGLWidget::GlObject</base>
  </compound>
  <compound kind="class">
    <name>Wt::Http::Request</name>
    <filename>classWt_1_1Http_1_1Request.html</filename>
    <class kind="class">Wt::Http::Request::ByteRange</class>
    <class kind="class">Wt::Http::Request::ByteRangeSpecifier</class>
    <member kind="typedef">
      <type>std::map&lt; std::string, std::string &gt;</type>
      <name>CookieMap</name>
      <anchorfile>classWt_1_1Http_1_1Request.html</anchorfile>
      <anchor>af227a7cda2c6bc96554cbd3554c3004c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>const ParameterMap &amp;</type>
      <name>getParameterMap</name>
      <anchorfile>classWt_1_1Http_1_1Request.html</anchorfile>
      <anchor>a87afdb7b0ded9dd3fa1b8e7685616857</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const UploadedFileMap &amp;</type>
      <name>uploadedFiles</name>
      <anchorfile>classWt_1_1Http_1_1Request.html</anchorfile>
      <anchor>ac09e96865c5dc1cde36263f8972557e3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const ParameterValues &amp;</type>
      <name>getParameterValues</name>
      <anchorfile>classWt_1_1Http_1_1Request.html</anchorfile>
      <anchor>acec8863895cad4ebdcd9b568c9809138</anchor>
      <arglist>(const std::string &amp;name) const</arglist>
    </member>
    <member kind="function">
      <type>const std::string *</type>
      <name>getParameter</name>
      <anchorfile>classWt_1_1Http_1_1Request.html</anchorfile>
      <anchor>aff2380a10489777b0c503ac90f00d6b2</anchor>
      <arglist>(const std::string &amp;name) const</arglist>
    </member>
    <member kind="function">
      <type>const UploadedFile *</type>
      <name>getUploadedFile</name>
      <anchorfile>classWt_1_1Http_1_1Request.html</anchorfile>
      <anchor>af76bd6caed6d4c16f36ea0f6094ed9a0</anchor>
      <arglist>(const std::string &amp;name) const</arglist>
    </member>
    <member kind="function">
      <type>::int64_t</type>
      <name>tooLarge</name>
      <anchorfile>classWt_1_1Http_1_1Request.html</anchorfile>
      <anchor>a891f0e7e9af8a338dd46e0edaa32b6f2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ResponseContinuation *</type>
      <name>continuation</name>
      <anchorfile>classWt_1_1Http_1_1Request.html</anchorfile>
      <anchor>a9fe40c73e6d2bd3b4fec6f2476d71265</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>serverName</name>
      <anchorfile>classWt_1_1Http_1_1Request.html</anchorfile>
      <anchor>a66122e46066a0c5f428021b42b7467f7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>serverPort</name>
      <anchorfile>classWt_1_1Http_1_1Request.html</anchorfile>
      <anchor>afcf1fcbb2cd82d6d55489f0208ec37d1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>path</name>
      <anchorfile>classWt_1_1Http_1_1Request.html</anchorfile>
      <anchor>a991ba557992ea494565fe1854885b1b9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>pathInfo</name>
      <anchorfile>classWt_1_1Http_1_1Request.html</anchorfile>
      <anchor>ac1fb1a90df0fc656567c169f116abe22</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>queryString</name>
      <anchorfile>classWt_1_1Http_1_1Request.html</anchorfile>
      <anchor>a5fc1ed14d4f894768f79c64e4046d293</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>urlScheme</name>
      <anchorfile>classWt_1_1Http_1_1Request.html</anchorfile>
      <anchor>a970b7d266c6bead893ec6334520807bf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::istream &amp;</type>
      <name>in</name>
      <anchorfile>classWt_1_1Http_1_1Request.html</anchorfile>
      <anchor>a783cd74b1b1a047f751d50182802de02</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>contentType</name>
      <anchorfile>classWt_1_1Http_1_1Request.html</anchorfile>
      <anchor>a9149056d8f404948c4763e9703a69d1c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>contentLength</name>
      <anchorfile>classWt_1_1Http_1_1Request.html</anchorfile>
      <anchor>a42b2cff1df874dc86c20eef046231113</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>userAgent</name>
      <anchorfile>classWt_1_1Http_1_1Request.html</anchorfile>
      <anchor>a1051d981d70081d26f04b81f9dfdb4d0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>clientAddress</name>
      <anchorfile>classWt_1_1Http_1_1Request.html</anchorfile>
      <anchor>a5f18be4100482713c257bea43a3c913b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const CookieMap &amp;</type>
      <name>cookies</name>
      <anchorfile>classWt_1_1Http_1_1Request.html</anchorfile>
      <anchor>ada0f476fa2c988c06dcdb0932bd379b3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::string *</type>
      <name>getCookieValue</name>
      <anchorfile>classWt_1_1Http_1_1Request.html</anchorfile>
      <anchor>ad71c7a09c1d191f31b834ba49cdfbf59</anchor>
      <arglist>(const std::string &amp;cookieName) const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>headerValue</name>
      <anchorfile>classWt_1_1Http_1_1Request.html</anchorfile>
      <anchor>a061c82381338a0997899bc74c10986fb</anchor>
      <arglist>(const std::string &amp;field) const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Message::Header &gt;</type>
      <name>headers</name>
      <anchorfile>classWt_1_1Http_1_1Request.html</anchorfile>
      <anchor>a210b96a488d092133d895f0b99307e9c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getCgiValue</name>
      <anchorfile>classWt_1_1Http_1_1Request.html</anchorfile>
      <anchor>afe0483237ad683f1d1958f84f4f5357f</anchor>
      <arglist>(const std::string &amp;varName) const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>method</name>
      <anchorfile>classWt_1_1Http_1_1Request.html</anchorfile>
      <anchor>a1f2aa595d8c94fe9ec0f0586851bdcea</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ByteRangeSpecifier</type>
      <name>getRanges</name>
      <anchorfile>classWt_1_1Http_1_1Request.html</anchorfile>
      <anchor>a9272ad3643b687d61a3adb166cfa284b</anchor>
      <arglist>(::int64_t filesize) const</arglist>
    </member>
    <member kind="function">
      <type>WSslInfo *</type>
      <name>sslInfo</name>
      <anchorfile>classWt_1_1Http_1_1Request.html</anchorfile>
      <anchor>a28a7e02da92792d050cc5c2580c0bf2d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>urlParam</name>
      <anchorfile>classWt_1_1Http_1_1Request.html</anchorfile>
      <anchor>a56f41f5df0dc8cc160c313fea44d1c1c</anchor>
      <arglist>(const std::string &amp;param) const</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; std::pair&lt; std::string, std::string &gt; &gt; &amp;</type>
      <name>urlParams</name>
      <anchorfile>classWt_1_1Http_1_1Request.html</anchorfile>
      <anchor>ac45a643f2a3b4253dc38e051d5bbb819</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>linb::any::requires_allocation</name>
    <filename>structlinb_1_1any_1_1requires__allocation.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Wt::Http::Response</name>
    <filename>classWt_1_1Http_1_1Response.html</filename>
    <member kind="function">
      <type>void</type>
      <name>setStatus</name>
      <anchorfile>classWt_1_1Http_1_1Response.html</anchorfile>
      <anchor>a7c14ba3ab34ff14461df3a4369118443</anchor>
      <arglist>(int status)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setContentLength</name>
      <anchorfile>classWt_1_1Http_1_1Response.html</anchorfile>
      <anchor>aea93d6918a90e8c9b0010499771a1c87</anchor>
      <arglist>(::uint64_t length)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMimeType</name>
      <anchorfile>classWt_1_1Http_1_1Response.html</anchorfile>
      <anchor>a20dd49d512ffc0cf407f9dd39db30341</anchor>
      <arglist>(const std::string &amp;mimeType)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addHeader</name>
      <anchorfile>classWt_1_1Http_1_1Response.html</anchorfile>
      <anchor>a5827dd04629251d0c7ff3cc9062afb7d</anchor>
      <arglist>(const std::string &amp;name, const std::string &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>ResponseContinuation *</type>
      <name>createContinuation</name>
      <anchorfile>classWt_1_1Http_1_1Response.html</anchorfile>
      <anchor>a5cb0800718188328fec17d3b84c85aab</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ResponseContinuation *</type>
      <name>continuation</name>
      <anchorfile>classWt_1_1Http_1_1Response.html</anchorfile>
      <anchor>a8eb21565a44d21fa5c489986fa2155fd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>out</name>
      <anchorfile>classWt_1_1Http_1_1Response.html</anchorfile>
      <anchor>ae74ee0009e9ec4aa3d3f35e680a745de</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Http::ResponseContinuation</name>
    <filename>classWt_1_1Http_1_1ResponseContinuation.html</filename>
    <member kind="function">
      <type>void</type>
      <name>setData</name>
      <anchorfile>classWt_1_1Http_1_1ResponseContinuation.html</anchorfile>
      <anchor>a018939ff7a622576f072b94de59d2b6e</anchor>
      <arglist>(const cpp17::any &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>cpp17::any</type>
      <name>data</name>
      <anchorfile>classWt_1_1Http_1_1ResponseContinuation.html</anchorfile>
      <anchor>a20bd93d7429d8de5af200daab0cf22c8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>WResource *</type>
      <name>resource</name>
      <anchorfile>classWt_1_1Http_1_1ResponseContinuation.html</anchorfile>
      <anchor>a2cbea7f0fbec85eb135e4c93eb86b39f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>waitForMoreData</name>
      <anchorfile>classWt_1_1Http_1_1ResponseContinuation.html</anchorfile>
      <anchor>a3b441e3fa71a68b9dfb7091464e07433</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>haveMoreData</name>
      <anchorfile>classWt_1_1Http_1_1ResponseContinuation.html</anchorfile>
      <anchor>a08c2bc59b253f255c4cea87326373479</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isWaitingForMoreData</name>
      <anchorfile>classWt_1_1Http_1_1ResponseContinuation.html</anchorfile>
      <anchor>af408995597ad736a41fb9f3af60b872f</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Payment::Result</name>
    <filename>classWt_1_1Payment_1_1Result.html</filename>
    <member kind="function">
      <type></type>
      <name>Result</name>
      <anchorfile>classWt_1_1Payment_1_1Result.html</anchorfile>
      <anchor>a261f3807dc0f5997ebfca8b359ad95dc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Result</name>
      <anchorfile>classWt_1_1Payment_1_1Result.html</anchorfile>
      <anchor>ac50e1bd60c6b261ad1e891946d313691</anchor>
      <arglist>(const WString &amp;errorMessage)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>error</name>
      <anchorfile>classWt_1_1Payment_1_1Result.html</anchorfile>
      <anchor>aceadb6ddd35c866c68ba4cf81e769e25</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WString</type>
      <name>errorMessage</name>
      <anchorfile>classWt_1_1Payment_1_1Result.html</anchorfile>
      <anchor>a93b7d7a3ab8e94eecadffad7896f137e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRequestMessage</name>
      <anchorfile>classWt_1_1Payment_1_1Result.html</anchorfile>
      <anchor>a063d96edb669ad9389581d399c4c3e76</anchor>
      <arglist>(const std::map&lt; std::string, std::string &gt; &amp;msg)</arglist>
    </member>
    <member kind="function">
      <type>std::map&lt; std::string, std::string &gt;</type>
      <name>requestMessage</name>
      <anchorfile>classWt_1_1Payment_1_1Result.html</anchorfile>
      <anchor>a1406e9bc8c9a1ff07170c0f5c2152503</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setResponseMessage</name>
      <anchorfile>classWt_1_1Payment_1_1Result.html</anchorfile>
      <anchor>a7c37f883313502ddae4497d3f9e93099</anchor>
      <arglist>(const std::map&lt; std::string, std::string &gt; &amp;msg)</arglist>
    </member>
    <member kind="function">
      <type>std::map&lt; std::string, std::string &gt;</type>
      <name>responseMessage</name>
      <anchorfile>classWt_1_1Payment_1_1Result.html</anchorfile>
      <anchor>aeba2cc4869a8ac5ebc5dd8ac248d36b5</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WValidator::Result</name>
    <filename>classWt_1_1WValidator_1_1Result.html</filename>
    <member kind="function">
      <type></type>
      <name>Result</name>
      <anchorfile>classWt_1_1WValidator_1_1Result.html</anchorfile>
      <anchor>a81c93b525b2b8872387be3e4cb0b5e6d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Result</name>
      <anchorfile>classWt_1_1WValidator_1_1Result.html</anchorfile>
      <anchor>a62b580c000d2ff5014d3681163d830d3</anchor>
      <arglist>(ValidationState state, const WString &amp;message)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Result</name>
      <anchorfile>classWt_1_1WValidator_1_1Result.html</anchorfile>
      <anchor>ad35f4a4c76b45adf4884ce3f38bea30b</anchor>
      <arglist>(ValidationState state)</arglist>
    </member>
    <member kind="function">
      <type>ValidationState</type>
      <name>state</name>
      <anchorfile>classWt_1_1WValidator_1_1Result.html</anchorfile>
      <anchor>abb3107c34ee4378ad03bb171a600aa2f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const WString &amp;</type>
      <name>message</name>
      <anchorfile>classWt_1_1WValidator_1_1Result.html</anchorfile>
      <anchor>a753985eff2fabc752446be935229dfea</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WPainterPath::Segment</name>
    <filename>classWt_1_1WPainterPath_1_1Segment.html</filename>
    <member kind="function">
      <type>double</type>
      <name>x</name>
      <anchorfile>classWt_1_1WPainterPath_1_1Segment.html</anchorfile>
      <anchor>aedce87ca62e1ea99592c7de983d89dca</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>y</name>
      <anchorfile>classWt_1_1WPainterPath_1_1Segment.html</anchorfile>
      <anchor>af29587c2666bba7509cdb64704be1616</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>SegmentType</type>
      <name>type</name>
      <anchorfile>classWt_1_1WPainterPath_1_1Segment.html</anchorfile>
      <anchor>ac6547656d28e725d6f09caf618eeeea3</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Wt::WLogger::Sep</name>
    <filename>structWt_1_1WLogger_1_1Sep.html</filename>
  </compound>
  <compound kind="class">
    <name>Wt::Chart::SeriesIterator</name>
    <filename>classWt_1_1Chart_1_1SeriesIterator.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SeriesIterator</name>
      <anchorfile>classWt_1_1Chart_1_1SeriesIterator.html</anchorfile>
      <anchor>ac4ad700f8ef3b9b7423cd51aa4e753e5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>startSegment</name>
      <anchorfile>classWt_1_1Chart_1_1SeriesIterator.html</anchorfile>
      <anchor>a3770ca1184657ea89fe0ef8d3e5a63e2</anchor>
      <arglist>(int currentXSegment, int currentYSegment, const WRectF &amp;currentSegmentArea)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>endSegment</name>
      <anchorfile>classWt_1_1Chart_1_1SeriesIterator.html</anchorfile>
      <anchor>a5846a9aba05403f3d699f983be268ef4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>startSeries</name>
      <anchorfile>classWt_1_1Chart_1_1SeriesIterator.html</anchorfile>
      <anchor>a3d5181f724905decd4055001968c73bd</anchor>
      <arglist>(const WDataSeries &amp;series, double groupWidth, int numBarGroups, int currentBarGroup)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>endSeries</name>
      <anchorfile>classWt_1_1Chart_1_1SeriesIterator.html</anchorfile>
      <anchor>ab0f753351dbcde0fb4ad88f34efc5a5f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>newValue</name>
      <anchorfile>classWt_1_1Chart_1_1SeriesIterator.html</anchorfile>
      <anchor>a350ccf60ce4a0cc31e40467bdd882ae4</anchor>
      <arglist>(const WDataSeries &amp;series, double x, double y, double stackY, int xRow, int xColumn, int yRow, int yColumn)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>currentXSegment</name>
      <anchorfile>classWt_1_1Chart_1_1SeriesIterator.html</anchorfile>
      <anchor>ad0c695448bfe6fa659168cfb490d868c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>currentYSegment</name>
      <anchorfile>classWt_1_1Chart_1_1SeriesIterator.html</anchorfile>
      <anchor>a4761b7b34587a7958cd72fec69390b44</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Dbo::Session</name>
    <filename>classWt_1_1Dbo_1_1Session.html</filename>
    <member kind="function">
      <type></type>
      <name>Session</name>
      <anchorfile>classWt_1_1Dbo_1_1Session.html</anchorfile>
      <anchor>a55c41a33e862729b80837347da199b20</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Session</name>
      <anchorfile>classWt_1_1Dbo_1_1Session.html</anchorfile>
      <anchor>aac2f9332076fff93cde45ba1c8d15fa3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setConnection</name>
      <anchorfile>classWt_1_1Dbo_1_1Session.html</anchorfile>
      <anchor>acfd45189db138506e6e7c202e39878f9</anchor>
      <arglist>(std::unique_ptr&lt; SqlConnection &gt; connection)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setConnectionPool</name>
      <anchorfile>classWt_1_1Dbo_1_1Session.html</anchorfile>
      <anchor>a63ab17e16c9b721c94e6e9f67c5c255d</anchor>
      <arglist>(SqlConnectionPool &amp;pool)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>mapClass</name>
      <anchorfile>classWt_1_1Dbo_1_1Session.html</anchorfile>
      <anchor>a22b4750b2665de1381b1fedec7020c75</anchor>
      <arglist>(const char *tableName)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>tableName</name>
      <anchorfile>classWt_1_1Dbo_1_1Session.html</anchorfile>
      <anchor>af058582055c6fb7bbf4738fde3238b0b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::string</type>
      <name>tableNameQuoted</name>
      <anchorfile>classWt_1_1Dbo_1_1Session.html</anchorfile>
      <anchor>a015315a5b22718eb39662c23dc4c1cd8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ptr&lt; C &gt;</type>
      <name>add</name>
      <anchorfile>classWt_1_1Dbo_1_1Session.html</anchorfile>
      <anchor>abfbd5bea3a6b964e833c893434e38c8f</anchor>
      <arglist>(ptr&lt; C &gt; &amp;ptr)</arglist>
    </member>
    <member kind="function">
      <type>ptr&lt; C &gt;</type>
      <name>add</name>
      <anchorfile>classWt_1_1Dbo_1_1Session.html</anchorfile>
      <anchor>a85db24c3baa136c0233f30285b8db6ec</anchor>
      <arglist>(std::unique_ptr&lt; C &gt; obj)</arglist>
    </member>
    <member kind="function">
      <type>ptr&lt; T &gt;</type>
      <name>addNew</name>
      <anchorfile>classWt_1_1Dbo_1_1Session.html</anchorfile>
      <anchor>a672cb6a493abe71d72d4d1ecf1e6b37d</anchor>
      <arglist>(Args &amp;&amp;...args)</arglist>
    </member>
    <member kind="function">
      <type>ptr&lt; C &gt;</type>
      <name>load</name>
      <anchorfile>classWt_1_1Dbo_1_1Session.html</anchorfile>
      <anchor>acb4b7f2191237c16f14a3689915e164b</anchor>
      <arglist>(const typename dbo_traits&lt; C &gt;::IdType &amp;id, bool forceReread=false)</arglist>
    </member>
    <member kind="function">
      <type>ptr&lt; C &gt;</type>
      <name>loadLazy</name>
      <anchorfile>classWt_1_1Dbo_1_1Session.html</anchorfile>
      <anchor>a6b8ece442e5273dfee9b990e519b3545</anchor>
      <arglist>(const typename dbo_traits&lt; C &gt;::IdType &amp;id)</arglist>
    </member>
    <member kind="function">
      <type>Query&lt; ptr&lt; C &gt;, BindStrategy &gt;</type>
      <name>find</name>
      <anchorfile>classWt_1_1Dbo_1_1Session.html</anchorfile>
      <anchor>a1a9aff98561cd85ee82a11a57e1e7a74</anchor>
      <arglist>(const std::string &amp;condition=std::string())</arglist>
    </member>
    <member kind="function">
      <type>Query&lt; Result, BindStrategy &gt;</type>
      <name>query</name>
      <anchorfile>classWt_1_1Dbo_1_1Session.html</anchorfile>
      <anchor>a8cad70bef9cffd6613107d5cd3aeb16a</anchor>
      <arglist>(const std::string &amp;sql)</arglist>
    </member>
    <member kind="function">
      <type>Call</type>
      <name>execute</name>
      <anchorfile>classWt_1_1Dbo_1_1Session.html</anchorfile>
      <anchor>a42b1d61b66e996eff474d677a10d5b8f</anchor>
      <arglist>(const std::string &amp;sql)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>createTables</name>
      <anchorfile>classWt_1_1Dbo_1_1Session.html</anchorfile>
      <anchor>aba79d84c7c91faae06f954e6d3d390ab</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>tableCreationSql</name>
      <anchorfile>classWt_1_1Dbo_1_1Session.html</anchorfile>
      <anchor>a89c36de3c02f83e621dda5d149dd7b9b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dropTables</name>
      <anchorfile>classWt_1_1Dbo_1_1Session.html</anchorfile>
      <anchor>a4c1fedb21e4e1cc44b182a34e8ebb4ef</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>flush</name>
      <anchorfile>classWt_1_1Dbo_1_1Session.html</anchorfile>
      <anchor>ab896d119f1e0fb79adffe2282b92ef17</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>rereadAll</name>
      <anchorfile>classWt_1_1Dbo_1_1Session.html</anchorfile>
      <anchor>add5f4d579b9841072d5e777925acd92c</anchor>
      <arglist>(const char *tableName=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>discardUnflushed</name>
      <anchorfile>classWt_1_1Dbo_1_1Session.html</anchorfile>
      <anchor>a1c75a1701de8ae978e58f2d1e9cad39b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>FlushMode</type>
      <name>flushMode</name>
      <anchorfile>classWt_1_1Dbo_1_1Session.html</anchorfile>
      <anchor>aebc34f3a9a0b364024128cb7a8ea3587</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFlushMode</name>
      <anchorfile>classWt_1_1Dbo_1_1Session.html</anchorfile>
      <anchor>a3074ef6656f9c74409d2e8cade36d4ab</anchor>
      <arglist>(FlushMode mode)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WServer::SessionInfo</name>
    <filename>structWt_1_1WServer_1_1SessionInfo.html</filename>
    <member kind="variable">
      <type>int64_t</type>
      <name>processId</name>
      <anchorfile>structWt_1_1WServer_1_1SessionInfo.html</anchorfile>
      <anchor>a940a00ef93e94e28a58e13fe71132b04</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>sessionId</name>
      <anchorfile>structWt_1_1WServer_1_1SessionInfo.html</anchorfile>
      <anchor>ae13316db2688838c83f9c17a4d36edc6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Auth::SHA1HashFunction</name>
    <filename>classWt_1_1Auth_1_1SHA1HashFunction.html</filename>
    <base>Wt::Auth::HashFunction</base>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>name</name>
      <anchorfile>classWt_1_1Auth_1_1SHA1HashFunction.html</anchorfile>
      <anchor>aa10d8b2c41fc2d49c58d1dc4260b2509</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>compute</name>
      <anchorfile>classWt_1_1Auth_1_1SHA1HashFunction.html</anchorfile>
      <anchor>a791dc2c53747d77c613b8bd0f6f883a7</anchor>
      <arglist>(const std::string &amp;msg, const std::string &amp;salt) const override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WGLWidget::Shader</name>
    <filename>classWt_1_1WGLWidget_1_1Shader.html</filename>
    <base>Wt::WGLWidget::GlObject</base>
  </compound>
  <compound kind="class">
    <name>Wt::Signal</name>
    <filename>classWt_1_1Signal.html</filename>
    <templarg>A</templarg>
    <base>Wt::SignalBase</base>
    <member kind="function">
      <type></type>
      <name>Signal</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a4d4b01ba7cbf0035bad06430e459cc4d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>aa43a3b3569b31617cbd43087b0f32de5</anchor>
      <arglist>(WObject *target, WObject::Method method) override</arglist>
    </member>
    <member kind="function">
      <type>Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>aed69704ae147dbb551c3074c8214940c</anchor>
      <arglist>(F function)</arglist>
    </member>
    <member kind="function">
      <type>Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a0ca84eed045315294f4c8b2458454611</anchor>
      <arglist>(T *target, void(V::*method)(B...))</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>emit</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a609cf05d598f4a9bc108defac5540615</anchor>
      <arglist>(A... args) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a5d37c0c7f34e439097c4c380c1ee7268</anchor>
      <arglist>(A... args) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isConnected</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a827b191b5d299911e731e18a91b20e9e</anchor>
      <arglist>() const override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Signal&lt; ::int64_t &gt;</name>
    <filename>classWt_1_1Signal.html</filename>
    <base>Wt::SignalBase</base>
    <member kind="function">
      <type></type>
      <name>Signal</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a4d4b01ba7cbf0035bad06430e459cc4d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>aa43a3b3569b31617cbd43087b0f32de5</anchor>
      <arglist>(WObject *target, WObject::Method method) override</arglist>
    </member>
    <member kind="function">
      <type>Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>aed69704ae147dbb551c3074c8214940c</anchor>
      <arglist>(F function)</arglist>
    </member>
    <member kind="function">
      <type>Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a0ca84eed045315294f4c8b2458454611</anchor>
      <arglist>(T *target, void(V::*method)(B...))</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>emit</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a609cf05d598f4a9bc108defac5540615</anchor>
      <arglist>(A... args) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a5d37c0c7f34e439097c4c380c1ee7268</anchor>
      <arglist>(A... args) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isConnected</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a827b191b5d299911e731e18a91b20e9e</anchor>
      <arglist>() const override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Signal&lt; ::uint64_t &gt;</name>
    <filename>classWt_1_1Signal.html</filename>
    <base>Wt::SignalBase</base>
    <member kind="function">
      <type></type>
      <name>Signal</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a4d4b01ba7cbf0035bad06430e459cc4d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>aa43a3b3569b31617cbd43087b0f32de5</anchor>
      <arglist>(WObject *target, WObject::Method method) override</arglist>
    </member>
    <member kind="function">
      <type>Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>aed69704ae147dbb551c3074c8214940c</anchor>
      <arglist>(F function)</arglist>
    </member>
    <member kind="function">
      <type>Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a0ca84eed045315294f4c8b2458454611</anchor>
      <arglist>(T *target, void(V::*method)(B...))</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>emit</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a609cf05d598f4a9bc108defac5540615</anchor>
      <arglist>(A... args) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a5d37c0c7f34e439097c4c380c1ee7268</anchor>
      <arglist>(A... args) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isConnected</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a827b191b5d299911e731e18a91b20e9e</anchor>
      <arglist>() const override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Signal&lt; ::uint64_t, ::uint64_t &gt;</name>
    <filename>classWt_1_1Signal.html</filename>
    <base>Wt::SignalBase</base>
    <member kind="function">
      <type></type>
      <name>Signal</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a4d4b01ba7cbf0035bad06430e459cc4d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>aa43a3b3569b31617cbd43087b0f32de5</anchor>
      <arglist>(WObject *target, WObject::Method method) override</arglist>
    </member>
    <member kind="function">
      <type>Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>aed69704ae147dbb551c3074c8214940c</anchor>
      <arglist>(F function)</arglist>
    </member>
    <member kind="function">
      <type>Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a0ca84eed045315294f4c8b2458454611</anchor>
      <arglist>(T *target, void(V::*method)(B...))</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>emit</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a609cf05d598f4a9bc108defac5540615</anchor>
      <arglist>(A... args) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a5d37c0c7f34e439097c4c380c1ee7268</anchor>
      <arglist>(A... args) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isConnected</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a827b191b5d299911e731e18a91b20e9e</anchor>
      <arglist>() const override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Signal&lt; AsioWrapper::error_code, Wt::Http::Message &gt;</name>
    <filename>classWt_1_1Signal.html</filename>
    <base>Wt::SignalBase</base>
    <member kind="function">
      <type></type>
      <name>Signal</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a4d4b01ba7cbf0035bad06430e459cc4d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>aa43a3b3569b31617cbd43087b0f32de5</anchor>
      <arglist>(WObject *target, WObject::Method method) override</arglist>
    </member>
    <member kind="function">
      <type>Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>aed69704ae147dbb551c3074c8214940c</anchor>
      <arglist>(F function)</arglist>
    </member>
    <member kind="function">
      <type>Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a0ca84eed045315294f4c8b2458454611</anchor>
      <arglist>(T *target, void(V::*method)(B...))</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>emit</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a609cf05d598f4a9bc108defac5540615</anchor>
      <arglist>(A... args) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a5d37c0c7f34e439097c4c380c1ee7268</anchor>
      <arglist>(A... args) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isConnected</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a827b191b5d299911e731e18a91b20e9e</anchor>
      <arglist>() const override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Signal&lt; bool &gt;</name>
    <filename>classWt_1_1Signal.html</filename>
    <base>Wt::SignalBase</base>
    <member kind="function">
      <type></type>
      <name>Signal</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a4d4b01ba7cbf0035bad06430e459cc4d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>aa43a3b3569b31617cbd43087b0f32de5</anchor>
      <arglist>(WObject *target, WObject::Method method) override</arglist>
    </member>
    <member kind="function">
      <type>Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>aed69704ae147dbb551c3074c8214940c</anchor>
      <arglist>(F function)</arglist>
    </member>
    <member kind="function">
      <type>Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a0ca84eed045315294f4c8b2458454611</anchor>
      <arglist>(T *target, void(V::*method)(B...))</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>emit</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a609cf05d598f4a9bc108defac5540615</anchor>
      <arglist>(A... args) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a5d37c0c7f34e439097c4c380c1ee7268</anchor>
      <arglist>(A... args) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isConnected</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a827b191b5d299911e731e18a91b20e9e</anchor>
      <arglist>() const override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Signal&lt; const Wt::Chart::WDataSeries *, Wt::WPointF &gt;</name>
    <filename>classWt_1_1Signal.html</filename>
    <base>Wt::SignalBase</base>
    <member kind="function">
      <type></type>
      <name>Signal</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a4d4b01ba7cbf0035bad06430e459cc4d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>aa43a3b3569b31617cbd43087b0f32de5</anchor>
      <arglist>(WObject *target, WObject::Method method) override</arglist>
    </member>
    <member kind="function">
      <type>Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>aed69704ae147dbb551c3074c8214940c</anchor>
      <arglist>(F function)</arglist>
    </member>
    <member kind="function">
      <type>Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a0ca84eed045315294f4c8b2458454611</anchor>
      <arglist>(T *target, void(V::*method)(B...))</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>emit</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a609cf05d598f4a9bc108defac5540615</anchor>
      <arglist>(A... args) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a5d37c0c7f34e439097c4c380c1ee7268</anchor>
      <arglist>(A... args) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isConnected</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a827b191b5d299911e731e18a91b20e9e</anchor>
      <arglist>() const override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Signal&lt; DialogCode &gt;</name>
    <filename>classWt_1_1Signal.html</filename>
    <base>Wt::SignalBase</base>
    <member kind="function">
      <type></type>
      <name>Signal</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a4d4b01ba7cbf0035bad06430e459cc4d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>aa43a3b3569b31617cbd43087b0f32de5</anchor>
      <arglist>(WObject *target, WObject::Method method) override</arglist>
    </member>
    <member kind="function">
      <type>Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>aed69704ae147dbb551c3074c8214940c</anchor>
      <arglist>(F function)</arglist>
    </member>
    <member kind="function">
      <type>Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a0ca84eed045315294f4c8b2458454611</anchor>
      <arglist>(T *target, void(V::*method)(B...))</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>emit</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a609cf05d598f4a9bc108defac5540615</anchor>
      <arglist>(A... args) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a5d37c0c7f34e439097c4c380c1ee7268</anchor>
      <arglist>(A... args) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isConnected</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a827b191b5d299911e731e18a91b20e9e</anchor>
      <arglist>() const override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Signal&lt; double &gt;</name>
    <filename>classWt_1_1Signal.html</filename>
    <base>Wt::SignalBase</base>
    <member kind="function">
      <type></type>
      <name>Signal</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a4d4b01ba7cbf0035bad06430e459cc4d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>aa43a3b3569b31617cbd43087b0f32de5</anchor>
      <arglist>(WObject *target, WObject::Method method) override</arglist>
    </member>
    <member kind="function">
      <type>Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>aed69704ae147dbb551c3074c8214940c</anchor>
      <arglist>(F function)</arglist>
    </member>
    <member kind="function">
      <type>Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a0ca84eed045315294f4c8b2458454611</anchor>
      <arglist>(T *target, void(V::*method)(B...))</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>emit</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a609cf05d598f4a9bc108defac5540615</anchor>
      <arglist>(A... args) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a5d37c0c7f34e439097c4c380c1ee7268</anchor>
      <arglist>(A... args) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isConnected</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a827b191b5d299911e731e18a91b20e9e</anchor>
      <arglist>() const override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Signal&lt; double, double &gt;</name>
    <filename>classWt_1_1Signal.html</filename>
    <base>Wt::SignalBase</base>
    <member kind="function">
      <type></type>
      <name>Signal</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a4d4b01ba7cbf0035bad06430e459cc4d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>aa43a3b3569b31617cbd43087b0f32de5</anchor>
      <arglist>(WObject *target, WObject::Method method) override</arglist>
    </member>
    <member kind="function">
      <type>Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>aed69704ae147dbb551c3074c8214940c</anchor>
      <arglist>(F function)</arglist>
    </member>
    <member kind="function">
      <type>Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a0ca84eed045315294f4c8b2458454611</anchor>
      <arglist>(T *target, void(V::*method)(B...))</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>emit</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a609cf05d598f4a9bc108defac5540615</anchor>
      <arglist>(A... args) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a5d37c0c7f34e439097c4c380c1ee7268</anchor>
      <arglist>(A... args) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isConnected</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a827b191b5d299911e731e18a91b20e9e</anchor>
      <arglist>() const override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Signal&lt; int &gt;</name>
    <filename>classWt_1_1Signal.html</filename>
    <base>Wt::SignalBase</base>
    <member kind="function">
      <type></type>
      <name>Signal</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a4d4b01ba7cbf0035bad06430e459cc4d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>aa43a3b3569b31617cbd43087b0f32de5</anchor>
      <arglist>(WObject *target, WObject::Method method) override</arglist>
    </member>
    <member kind="function">
      <type>Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>aed69704ae147dbb551c3074c8214940c</anchor>
      <arglist>(F function)</arglist>
    </member>
    <member kind="function">
      <type>Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a0ca84eed045315294f4c8b2458454611</anchor>
      <arglist>(T *target, void(V::*method)(B...))</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>emit</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a609cf05d598f4a9bc108defac5540615</anchor>
      <arglist>(A... args) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a5d37c0c7f34e439097c4c380c1ee7268</anchor>
      <arglist>(A... args) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isConnected</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a827b191b5d299911e731e18a91b20e9e</anchor>
      <arglist>() const override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Signal&lt; int, int &gt;</name>
    <filename>classWt_1_1Signal.html</filename>
    <base>Wt::SignalBase</base>
    <member kind="function">
      <type></type>
      <name>Signal</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a4d4b01ba7cbf0035bad06430e459cc4d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>aa43a3b3569b31617cbd43087b0f32de5</anchor>
      <arglist>(WObject *target, WObject::Method method) override</arglist>
    </member>
    <member kind="function">
      <type>Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>aed69704ae147dbb551c3074c8214940c</anchor>
      <arglist>(F function)</arglist>
    </member>
    <member kind="function">
      <type>Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a0ca84eed045315294f4c8b2458454611</anchor>
      <arglist>(T *target, void(V::*method)(B...))</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>emit</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a609cf05d598f4a9bc108defac5540615</anchor>
      <arglist>(A... args) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a5d37c0c7f34e439097c4c380c1ee7268</anchor>
      <arglist>(A... args) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isConnected</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a827b191b5d299911e731e18a91b20e9e</anchor>
      <arglist>() const override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Signal&lt; int, Wt::WFormWidget * &gt;</name>
    <filename>classWt_1_1Signal.html</filename>
    <base>Wt::SignalBase</base>
    <member kind="function">
      <type></type>
      <name>Signal</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a4d4b01ba7cbf0035bad06430e459cc4d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>aa43a3b3569b31617cbd43087b0f32de5</anchor>
      <arglist>(WObject *target, WObject::Method method) override</arglist>
    </member>
    <member kind="function">
      <type>Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>aed69704ae147dbb551c3074c8214940c</anchor>
      <arglist>(F function)</arglist>
    </member>
    <member kind="function">
      <type>Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a0ca84eed045315294f4c8b2458454611</anchor>
      <arglist>(T *target, void(V::*method)(B...))</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>emit</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a609cf05d598f4a9bc108defac5540615</anchor>
      <arglist>(A... args) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a5d37c0c7f34e439097c4c380c1ee7268</anchor>
      <arglist>(A... args) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isConnected</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a827b191b5d299911e731e18a91b20e9e</anchor>
      <arglist>() const override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Signal&lt; int, Wt::WLength &gt;</name>
    <filename>classWt_1_1Signal.html</filename>
    <base>Wt::SignalBase</base>
    <member kind="function">
      <type></type>
      <name>Signal</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a4d4b01ba7cbf0035bad06430e459cc4d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>aa43a3b3569b31617cbd43087b0f32de5</anchor>
      <arglist>(WObject *target, WObject::Method method) override</arglist>
    </member>
    <member kind="function">
      <type>Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>aed69704ae147dbb551c3074c8214940c</anchor>
      <arglist>(F function)</arglist>
    </member>
    <member kind="function">
      <type>Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a0ca84eed045315294f4c8b2458454611</anchor>
      <arglist>(T *target, void(V::*method)(B...))</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>emit</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a609cf05d598f4a9bc108defac5540615</anchor>
      <arglist>(A... args) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a5d37c0c7f34e439097c4c380c1ee7268</anchor>
      <arglist>(A... args) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isConnected</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a827b191b5d299911e731e18a91b20e9e</anchor>
      <arglist>() const override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Signal&lt; int, Wt::WMouseEvent &gt;</name>
    <filename>classWt_1_1Signal.html</filename>
    <base>Wt::SignalBase</base>
    <member kind="function">
      <type></type>
      <name>Signal</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a4d4b01ba7cbf0035bad06430e459cc4d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>aa43a3b3569b31617cbd43087b0f32de5</anchor>
      <arglist>(WObject *target, WObject::Method method) override</arglist>
    </member>
    <member kind="function">
      <type>Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>aed69704ae147dbb551c3074c8214940c</anchor>
      <arglist>(F function)</arglist>
    </member>
    <member kind="function">
      <type>Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a0ca84eed045315294f4c8b2458454611</anchor>
      <arglist>(T *target, void(V::*method)(B...))</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>emit</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a609cf05d598f4a9bc108defac5540615</anchor>
      <arglist>(A... args) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a5d37c0c7f34e439097c4c380c1ee7268</anchor>
      <arglist>(A... args) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isConnected</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a827b191b5d299911e731e18a91b20e9e</anchor>
      <arglist>() const override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Signal&lt; int64_t, int64_t &gt;</name>
    <filename>classWt_1_1Signal.html</filename>
    <base>Wt::SignalBase</base>
    <member kind="function">
      <type></type>
      <name>Signal</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a4d4b01ba7cbf0035bad06430e459cc4d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>aa43a3b3569b31617cbd43087b0f32de5</anchor>
      <arglist>(WObject *target, WObject::Method method) override</arglist>
    </member>
    <member kind="function">
      <type>Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>aed69704ae147dbb551c3074c8214940c</anchor>
      <arglist>(F function)</arglist>
    </member>
    <member kind="function">
      <type>Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a0ca84eed045315294f4c8b2458454611</anchor>
      <arglist>(T *target, void(V::*method)(B...))</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>emit</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a609cf05d598f4a9bc108defac5540615</anchor>
      <arglist>(A... args) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a5d37c0c7f34e439097c4c380c1ee7268</anchor>
      <arglist>(A... args) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isConnected</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a827b191b5d299911e731e18a91b20e9e</anchor>
      <arglist>() const override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Signal&lt; Orientation, int, int &gt;</name>
    <filename>classWt_1_1Signal.html</filename>
    <base>Wt::SignalBase</base>
    <member kind="function">
      <type></type>
      <name>Signal</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a4d4b01ba7cbf0035bad06430e459cc4d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>aa43a3b3569b31617cbd43087b0f32de5</anchor>
      <arglist>(WObject *target, WObject::Method method) override</arglist>
    </member>
    <member kind="function">
      <type>Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>aed69704ae147dbb551c3074c8214940c</anchor>
      <arglist>(F function)</arglist>
    </member>
    <member kind="function">
      <type>Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a0ca84eed045315294f4c8b2458454611</anchor>
      <arglist>(T *target, void(V::*method)(B...))</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>emit</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a609cf05d598f4a9bc108defac5540615</anchor>
      <arglist>(A... args) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a5d37c0c7f34e439097c4c380c1ee7268</anchor>
      <arglist>(A... args) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isConnected</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a827b191b5d299911e731e18a91b20e9e</anchor>
      <arglist>() const override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Signal&lt; StandardButton &gt;</name>
    <filename>classWt_1_1Signal.html</filename>
    <base>Wt::SignalBase</base>
    <member kind="function">
      <type></type>
      <name>Signal</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a4d4b01ba7cbf0035bad06430e459cc4d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>aa43a3b3569b31617cbd43087b0f32de5</anchor>
      <arglist>(WObject *target, WObject::Method method) override</arglist>
    </member>
    <member kind="function">
      <type>Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>aed69704ae147dbb551c3074c8214940c</anchor>
      <arglist>(F function)</arglist>
    </member>
    <member kind="function">
      <type>Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a0ca84eed045315294f4c8b2458454611</anchor>
      <arglist>(T *target, void(V::*method)(B...))</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>emit</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a609cf05d598f4a9bc108defac5540615</anchor>
      <arglist>(A... args) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a5d37c0c7f34e439097c4c380c1ee7268</anchor>
      <arglist>(A... args) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isConnected</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a827b191b5d299911e731e18a91b20e9e</anchor>
      <arglist>() const override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Signal&lt; std::string &gt;</name>
    <filename>classWt_1_1Signal.html</filename>
    <base>Wt::SignalBase</base>
    <member kind="function">
      <type></type>
      <name>Signal</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a4d4b01ba7cbf0035bad06430e459cc4d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>aa43a3b3569b31617cbd43087b0f32de5</anchor>
      <arglist>(WObject *target, WObject::Method method) override</arglist>
    </member>
    <member kind="function">
      <type>Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>aed69704ae147dbb551c3074c8214940c</anchor>
      <arglist>(F function)</arglist>
    </member>
    <member kind="function">
      <type>Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a0ca84eed045315294f4c8b2458454611</anchor>
      <arglist>(T *target, void(V::*method)(B...))</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>emit</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a609cf05d598f4a9bc108defac5540615</anchor>
      <arglist>(A... args) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a5d37c0c7f34e439097c4c380c1ee7268</anchor>
      <arglist>(A... args) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isConnected</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a827b191b5d299911e731e18a91b20e9e</anchor>
      <arglist>() const override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Signal&lt; std::vector&lt; Wt::WFileDropWidget::File * &gt; &gt;</name>
    <filename>classWt_1_1Signal.html</filename>
    <base>Wt::SignalBase</base>
    <member kind="function">
      <type></type>
      <name>Signal</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a4d4b01ba7cbf0035bad06430e459cc4d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>aa43a3b3569b31617cbd43087b0f32de5</anchor>
      <arglist>(WObject *target, WObject::Method method) override</arglist>
    </member>
    <member kind="function">
      <type>Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>aed69704ae147dbb551c3074c8214940c</anchor>
      <arglist>(F function)</arglist>
    </member>
    <member kind="function">
      <type>Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a0ca84eed045315294f4c8b2458454611</anchor>
      <arglist>(T *target, void(V::*method)(B...))</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>emit</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a609cf05d598f4a9bc108defac5540615</anchor>
      <arglist>(A... args) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a5d37c0c7f34e439097c4c380c1ee7268</anchor>
      <arglist>(A... args) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isConnected</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a827b191b5d299911e731e18a91b20e9e</anchor>
      <arglist>() const override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Signal&lt; std::vector&lt; Wt::WModelIndex &gt;, Wt::WTouchEvent &gt;</name>
    <filename>classWt_1_1Signal.html</filename>
    <base>Wt::SignalBase</base>
    <member kind="function">
      <type></type>
      <name>Signal</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a4d4b01ba7cbf0035bad06430e459cc4d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>aa43a3b3569b31617cbd43087b0f32de5</anchor>
      <arglist>(WObject *target, WObject::Method method) override</arglist>
    </member>
    <member kind="function">
      <type>Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>aed69704ae147dbb551c3074c8214940c</anchor>
      <arglist>(F function)</arglist>
    </member>
    <member kind="function">
      <type>Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a0ca84eed045315294f4c8b2458454611</anchor>
      <arglist>(T *target, void(V::*method)(B...))</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>emit</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a609cf05d598f4a9bc108defac5540615</anchor>
      <arglist>(A... args) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a5d37c0c7f34e439097c4c380c1ee7268</anchor>
      <arglist>(A... args) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isConnected</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a827b191b5d299911e731e18a91b20e9e</anchor>
      <arglist>() const override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Signal&lt; Wt::AsioWrapper::error_code, Wt::Http::Message &gt;</name>
    <filename>classWt_1_1Signal.html</filename>
    <base>Wt::SignalBase</base>
    <member kind="function">
      <type></type>
      <name>Signal</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a4d4b01ba7cbf0035bad06430e459cc4d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>aa43a3b3569b31617cbd43087b0f32de5</anchor>
      <arglist>(WObject *target, WObject::Method method) override</arglist>
    </member>
    <member kind="function">
      <type>Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>aed69704ae147dbb551c3074c8214940c</anchor>
      <arglist>(F function)</arglist>
    </member>
    <member kind="function">
      <type>Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a0ca84eed045315294f4c8b2458454611</anchor>
      <arglist>(T *target, void(V::*method)(B...))</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>emit</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a609cf05d598f4a9bc108defac5540615</anchor>
      <arglist>(A... args) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a5d37c0c7f34e439097c4c380c1ee7268</anchor>
      <arglist>(A... args) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isConnected</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a827b191b5d299911e731e18a91b20e9e</anchor>
      <arglist>() const override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Signal&lt; Wt::Auth::Identity &gt;</name>
    <filename>classWt_1_1Signal.html</filename>
    <base>Wt::SignalBase</base>
    <member kind="function">
      <type></type>
      <name>Signal</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a4d4b01ba7cbf0035bad06430e459cc4d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>aa43a3b3569b31617cbd43087b0f32de5</anchor>
      <arglist>(WObject *target, WObject::Method method) override</arglist>
    </member>
    <member kind="function">
      <type>Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>aed69704ae147dbb551c3074c8214940c</anchor>
      <arglist>(F function)</arglist>
    </member>
    <member kind="function">
      <type>Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a0ca84eed045315294f4c8b2458454611</anchor>
      <arglist>(T *target, void(V::*method)(B...))</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>emit</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a609cf05d598f4a9bc108defac5540615</anchor>
      <arglist>(A... args) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a5d37c0c7f34e439097c4c380c1ee7268</anchor>
      <arglist>(A... args) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isConnected</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a827b191b5d299911e731e18a91b20e9e</anchor>
      <arglist>() const override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Signal&lt; Wt::Auth::OAuthAccessToken &gt;</name>
    <filename>classWt_1_1Signal.html</filename>
    <base>Wt::SignalBase</base>
    <member kind="function">
      <type></type>
      <name>Signal</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a4d4b01ba7cbf0035bad06430e459cc4d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>aa43a3b3569b31617cbd43087b0f32de5</anchor>
      <arglist>(WObject *target, WObject::Method method) override</arglist>
    </member>
    <member kind="function">
      <type>Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>aed69704ae147dbb551c3074c8214940c</anchor>
      <arglist>(F function)</arglist>
    </member>
    <member kind="function">
      <type>Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a0ca84eed045315294f4c8b2458454611</anchor>
      <arglist>(T *target, void(V::*method)(B...))</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>emit</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a609cf05d598f4a9bc108defac5540615</anchor>
      <arglist>(A... args) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a5d37c0c7f34e439097c4c380c1ee7268</anchor>
      <arglist>(A... args) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isConnected</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a827b191b5d299911e731e18a91b20e9e</anchor>
      <arglist>() const override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Signal&lt; Wt::Auth::OAuthProcess *, Wt::Auth::Identity &gt;</name>
    <filename>classWt_1_1Signal.html</filename>
    <base>Wt::SignalBase</base>
    <member kind="function">
      <type></type>
      <name>Signal</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a4d4b01ba7cbf0035bad06430e459cc4d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>aa43a3b3569b31617cbd43087b0f32de5</anchor>
      <arglist>(WObject *target, WObject::Method method) override</arglist>
    </member>
    <member kind="function">
      <type>Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>aed69704ae147dbb551c3074c8214940c</anchor>
      <arglist>(F function)</arglist>
    </member>
    <member kind="function">
      <type>Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a0ca84eed045315294f4c8b2458454611</anchor>
      <arglist>(T *target, void(V::*method)(B...))</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>emit</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a609cf05d598f4a9bc108defac5540615</anchor>
      <arglist>(A... args) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a5d37c0c7f34e439097c4c380c1ee7268</anchor>
      <arglist>(A... args) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isConnected</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a827b191b5d299911e731e18a91b20e9e</anchor>
      <arglist>() const override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Signal&lt; Wt::Http::Message &gt;</name>
    <filename>classWt_1_1Signal.html</filename>
    <base>Wt::SignalBase</base>
    <member kind="function">
      <type></type>
      <name>Signal</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a4d4b01ba7cbf0035bad06430e459cc4d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>aa43a3b3569b31617cbd43087b0f32de5</anchor>
      <arglist>(WObject *target, WObject::Method method) override</arglist>
    </member>
    <member kind="function">
      <type>Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>aed69704ae147dbb551c3074c8214940c</anchor>
      <arglist>(F function)</arglist>
    </member>
    <member kind="function">
      <type>Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a0ca84eed045315294f4c8b2458454611</anchor>
      <arglist>(T *target, void(V::*method)(B...))</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>emit</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a609cf05d598f4a9bc108defac5540615</anchor>
      <arglist>(A... args) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a5d37c0c7f34e439097c4c380c1ee7268</anchor>
      <arglist>(A... args) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isConnected</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a827b191b5d299911e731e18a91b20e9e</anchor>
      <arglist>() const override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Signal&lt; Wt::Payment::Approval &gt;</name>
    <filename>classWt_1_1Signal.html</filename>
    <base>Wt::SignalBase</base>
    <member kind="function">
      <type></type>
      <name>Signal</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a4d4b01ba7cbf0035bad06430e459cc4d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>aa43a3b3569b31617cbd43087b0f32de5</anchor>
      <arglist>(WObject *target, WObject::Method method) override</arglist>
    </member>
    <member kind="function">
      <type>Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>aed69704ae147dbb551c3074c8214940c</anchor>
      <arglist>(F function)</arglist>
    </member>
    <member kind="function">
      <type>Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a0ca84eed045315294f4c8b2458454611</anchor>
      <arglist>(T *target, void(V::*method)(B...))</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>emit</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a609cf05d598f4a9bc108defac5540615</anchor>
      <arglist>(A... args) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a5d37c0c7f34e439097c4c380c1ee7268</anchor>
      <arglist>(A... args) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isConnected</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a827b191b5d299911e731e18a91b20e9e</anchor>
      <arglist>() const override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Signal&lt; Wt::Payment::Result &gt;</name>
    <filename>classWt_1_1Signal.html</filename>
    <base>Wt::SignalBase</base>
    <member kind="function">
      <type></type>
      <name>Signal</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a4d4b01ba7cbf0035bad06430e459cc4d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>aa43a3b3569b31617cbd43087b0f32de5</anchor>
      <arglist>(WObject *target, WObject::Method method) override</arglist>
    </member>
    <member kind="function">
      <type>Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>aed69704ae147dbb551c3074c8214940c</anchor>
      <arglist>(F function)</arglist>
    </member>
    <member kind="function">
      <type>Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a0ca84eed045315294f4c8b2458454611</anchor>
      <arglist>(T *target, void(V::*method)(B...))</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>emit</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a609cf05d598f4a9bc108defac5540615</anchor>
      <arglist>(A... args) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a5d37c0c7f34e439097c4c380c1ee7268</anchor>
      <arglist>(A... args) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isConnected</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a827b191b5d299911e731e18a91b20e9e</anchor>
      <arglist>() const override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Signal&lt; Wt::WDate &gt;</name>
    <filename>classWt_1_1Signal.html</filename>
    <base>Wt::SignalBase</base>
    <member kind="function">
      <type></type>
      <name>Signal</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a4d4b01ba7cbf0035bad06430e459cc4d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>aa43a3b3569b31617cbd43087b0f32de5</anchor>
      <arglist>(WObject *target, WObject::Method method) override</arglist>
    </member>
    <member kind="function">
      <type>Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>aed69704ae147dbb551c3074c8214940c</anchor>
      <arglist>(F function)</arglist>
    </member>
    <member kind="function">
      <type>Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a0ca84eed045315294f4c8b2458454611</anchor>
      <arglist>(T *target, void(V::*method)(B...))</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>emit</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a609cf05d598f4a9bc108defac5540615</anchor>
      <arglist>(A... args) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a5d37c0c7f34e439097c4c380c1ee7268</anchor>
      <arglist>(A... args) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isConnected</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a827b191b5d299911e731e18a91b20e9e</anchor>
      <arglist>() const override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Signal&lt; Wt::WDialog * &gt;</name>
    <filename>classWt_1_1Signal.html</filename>
    <base>Wt::SignalBase</base>
    <member kind="function">
      <type></type>
      <name>Signal</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a4d4b01ba7cbf0035bad06430e459cc4d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>aa43a3b3569b31617cbd43087b0f32de5</anchor>
      <arglist>(WObject *target, WObject::Method method) override</arglist>
    </member>
    <member kind="function">
      <type>Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>aed69704ae147dbb551c3074c8214940c</anchor>
      <arglist>(F function)</arglist>
    </member>
    <member kind="function">
      <type>Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a0ca84eed045315294f4c8b2458454611</anchor>
      <arglist>(T *target, void(V::*method)(B...))</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>emit</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a609cf05d598f4a9bc108defac5540615</anchor>
      <arglist>(A... args) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a5d37c0c7f34e439097c4c380c1ee7268</anchor>
      <arglist>(A... args) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isConnected</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a827b191b5d299911e731e18a91b20e9e</anchor>
      <arglist>() const override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Signal&lt; Wt::WFileDropWidget::File * &gt;</name>
    <filename>classWt_1_1Signal.html</filename>
    <base>Wt::SignalBase</base>
    <member kind="function">
      <type></type>
      <name>Signal</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a4d4b01ba7cbf0035bad06430e459cc4d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>aa43a3b3569b31617cbd43087b0f32de5</anchor>
      <arglist>(WObject *target, WObject::Method method) override</arglist>
    </member>
    <member kind="function">
      <type>Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>aed69704ae147dbb551c3074c8214940c</anchor>
      <arglist>(F function)</arglist>
    </member>
    <member kind="function">
      <type>Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a0ca84eed045315294f4c8b2458454611</anchor>
      <arglist>(T *target, void(V::*method)(B...))</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>emit</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a609cf05d598f4a9bc108defac5540615</anchor>
      <arglist>(A... args) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a5d37c0c7f34e439097c4c380c1ee7268</anchor>
      <arglist>(A... args) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isConnected</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a827b191b5d299911e731e18a91b20e9e</anchor>
      <arglist>() const override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Signal&lt; Wt::WFileDropWidget::File *, ::uint64_t &gt;</name>
    <filename>classWt_1_1Signal.html</filename>
    <base>Wt::SignalBase</base>
    <member kind="function">
      <type></type>
      <name>Signal</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a4d4b01ba7cbf0035bad06430e459cc4d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>aa43a3b3569b31617cbd43087b0f32de5</anchor>
      <arglist>(WObject *target, WObject::Method method) override</arglist>
    </member>
    <member kind="function">
      <type>Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>aed69704ae147dbb551c3074c8214940c</anchor>
      <arglist>(F function)</arglist>
    </member>
    <member kind="function">
      <type>Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a0ca84eed045315294f4c8b2458454611</anchor>
      <arglist>(T *target, void(V::*method)(B...))</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>emit</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a609cf05d598f4a9bc108defac5540615</anchor>
      <arglist>(A... args) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a5d37c0c7f34e439097c4c380c1ee7268</anchor>
      <arglist>(A... args) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isConnected</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a827b191b5d299911e731e18a91b20e9e</anchor>
      <arglist>() const override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Signal&lt; Wt::WMenuItem * &gt;</name>
    <filename>classWt_1_1Signal.html</filename>
    <base>Wt::SignalBase</base>
    <member kind="function">
      <type></type>
      <name>Signal</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a4d4b01ba7cbf0035bad06430e459cc4d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>aa43a3b3569b31617cbd43087b0f32de5</anchor>
      <arglist>(WObject *target, WObject::Method method) override</arglist>
    </member>
    <member kind="function">
      <type>Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>aed69704ae147dbb551c3074c8214940c</anchor>
      <arglist>(F function)</arglist>
    </member>
    <member kind="function">
      <type>Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a0ca84eed045315294f4c8b2458454611</anchor>
      <arglist>(T *target, void(V::*method)(B...))</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>emit</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a609cf05d598f4a9bc108defac5540615</anchor>
      <arglist>(A... args) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a5d37c0c7f34e439097c4c380c1ee7268</anchor>
      <arglist>(A... args) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isConnected</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a827b191b5d299911e731e18a91b20e9e</anchor>
      <arglist>() const override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Signal&lt; Wt::WModelIndex &gt;</name>
    <filename>classWt_1_1Signal.html</filename>
    <base>Wt::SignalBase</base>
    <member kind="function">
      <type></type>
      <name>Signal</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a4d4b01ba7cbf0035bad06430e459cc4d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>aa43a3b3569b31617cbd43087b0f32de5</anchor>
      <arglist>(WObject *target, WObject::Method method) override</arglist>
    </member>
    <member kind="function">
      <type>Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>aed69704ae147dbb551c3074c8214940c</anchor>
      <arglist>(F function)</arglist>
    </member>
    <member kind="function">
      <type>Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a0ca84eed045315294f4c8b2458454611</anchor>
      <arglist>(T *target, void(V::*method)(B...))</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>emit</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a609cf05d598f4a9bc108defac5540615</anchor>
      <arglist>(A... args) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a5d37c0c7f34e439097c4c380c1ee7268</anchor>
      <arglist>(A... args) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isConnected</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a827b191b5d299911e731e18a91b20e9e</anchor>
      <arglist>() const override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Signal&lt; Wt::WModelIndex, int, int &gt;</name>
    <filename>classWt_1_1Signal.html</filename>
    <base>Wt::SignalBase</base>
    <member kind="function">
      <type></type>
      <name>Signal</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a4d4b01ba7cbf0035bad06430e459cc4d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>aa43a3b3569b31617cbd43087b0f32de5</anchor>
      <arglist>(WObject *target, WObject::Method method) override</arglist>
    </member>
    <member kind="function">
      <type>Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>aed69704ae147dbb551c3074c8214940c</anchor>
      <arglist>(F function)</arglist>
    </member>
    <member kind="function">
      <type>Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a0ca84eed045315294f4c8b2458454611</anchor>
      <arglist>(T *target, void(V::*method)(B...))</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>emit</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a609cf05d598f4a9bc108defac5540615</anchor>
      <arglist>(A... args) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a5d37c0c7f34e439097c4c380c1ee7268</anchor>
      <arglist>(A... args) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isConnected</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a827b191b5d299911e731e18a91b20e9e</anchor>
      <arglist>() const override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Signal&lt; Wt::WModelIndex, Wt::WModelIndex &gt;</name>
    <filename>classWt_1_1Signal.html</filename>
    <base>Wt::SignalBase</base>
    <member kind="function">
      <type></type>
      <name>Signal</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a4d4b01ba7cbf0035bad06430e459cc4d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>aa43a3b3569b31617cbd43087b0f32de5</anchor>
      <arglist>(WObject *target, WObject::Method method) override</arglist>
    </member>
    <member kind="function">
      <type>Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>aed69704ae147dbb551c3074c8214940c</anchor>
      <arglist>(F function)</arglist>
    </member>
    <member kind="function">
      <type>Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a0ca84eed045315294f4c8b2458454611</anchor>
      <arglist>(T *target, void(V::*method)(B...))</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>emit</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a609cf05d598f4a9bc108defac5540615</anchor>
      <arglist>(A... args) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a5d37c0c7f34e439097c4c380c1ee7268</anchor>
      <arglist>(A... args) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isConnected</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a827b191b5d299911e731e18a91b20e9e</anchor>
      <arglist>() const override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Signal&lt; Wt::WModelIndex, Wt::WMouseEvent &gt;</name>
    <filename>classWt_1_1Signal.html</filename>
    <base>Wt::SignalBase</base>
    <member kind="function">
      <type></type>
      <name>Signal</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a4d4b01ba7cbf0035bad06430e459cc4d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>aa43a3b3569b31617cbd43087b0f32de5</anchor>
      <arglist>(WObject *target, WObject::Method method) override</arglist>
    </member>
    <member kind="function">
      <type>Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>aed69704ae147dbb551c3074c8214940c</anchor>
      <arglist>(F function)</arglist>
    </member>
    <member kind="function">
      <type>Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a0ca84eed045315294f4c8b2458454611</anchor>
      <arglist>(T *target, void(V::*method)(B...))</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>emit</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a609cf05d598f4a9bc108defac5540615</anchor>
      <arglist>(A... args) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a5d37c0c7f34e439097c4c380c1ee7268</anchor>
      <arglist>(A... args) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isConnected</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a827b191b5d299911e731e18a91b20e9e</anchor>
      <arglist>() const override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Signal&lt; Wt::WModelIndex, Wt::WTouchEvent &gt;</name>
    <filename>classWt_1_1Signal.html</filename>
    <base>Wt::SignalBase</base>
    <member kind="function">
      <type></type>
      <name>Signal</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a4d4b01ba7cbf0035bad06430e459cc4d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>aa43a3b3569b31617cbd43087b0f32de5</anchor>
      <arglist>(WObject *target, WObject::Method method) override</arglist>
    </member>
    <member kind="function">
      <type>Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>aed69704ae147dbb551c3074c8214940c</anchor>
      <arglist>(F function)</arglist>
    </member>
    <member kind="function">
      <type>Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a0ca84eed045315294f4c8b2458454611</anchor>
      <arglist>(T *target, void(V::*method)(B...))</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>emit</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a609cf05d598f4a9bc108defac5540615</anchor>
      <arglist>(A... args) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a5d37c0c7f34e439097c4c380c1ee7268</anchor>
      <arglist>(A... args) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isConnected</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a827b191b5d299911e731e18a91b20e9e</anchor>
      <arglist>() const override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Signal&lt; Wt::WPopupMenu * &gt;</name>
    <filename>classWt_1_1Signal.html</filename>
    <base>Wt::SignalBase</base>
    <member kind="function">
      <type></type>
      <name>Signal</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a4d4b01ba7cbf0035bad06430e459cc4d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>aa43a3b3569b31617cbd43087b0f32de5</anchor>
      <arglist>(WObject *target, WObject::Method method) override</arglist>
    </member>
    <member kind="function">
      <type>Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>aed69704ae147dbb551c3074c8214940c</anchor>
      <arglist>(F function)</arglist>
    </member>
    <member kind="function">
      <type>Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a0ca84eed045315294f4c8b2458454611</anchor>
      <arglist>(T *target, void(V::*method)(B...))</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>emit</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a609cf05d598f4a9bc108defac5540615</anchor>
      <arglist>(A... args) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a5d37c0c7f34e439097c4c380c1ee7268</anchor>
      <arglist>(A... args) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isConnected</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a827b191b5d299911e731e18a91b20e9e</anchor>
      <arglist>() const override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Signal&lt; Wt::WRadioButton * &gt;</name>
    <filename>classWt_1_1Signal.html</filename>
    <base>Wt::SignalBase</base>
    <member kind="function">
      <type></type>
      <name>Signal</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a4d4b01ba7cbf0035bad06430e459cc4d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>aa43a3b3569b31617cbd43087b0f32de5</anchor>
      <arglist>(WObject *target, WObject::Method method) override</arglist>
    </member>
    <member kind="function">
      <type>Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>aed69704ae147dbb551c3074c8214940c</anchor>
      <arglist>(F function)</arglist>
    </member>
    <member kind="function">
      <type>Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a0ca84eed045315294f4c8b2458454611</anchor>
      <arglist>(T *target, void(V::*method)(B...))</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>emit</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a609cf05d598f4a9bc108defac5540615</anchor>
      <arglist>(A... args) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a5d37c0c7f34e439097c4c380c1ee7268</anchor>
      <arglist>(A... args) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isConnected</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a827b191b5d299911e731e18a91b20e9e</anchor>
      <arglist>() const override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Signal&lt; Wt::WStandardItem * &gt;</name>
    <filename>classWt_1_1Signal.html</filename>
    <base>Wt::SignalBase</base>
    <member kind="function">
      <type></type>
      <name>Signal</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a4d4b01ba7cbf0035bad06430e459cc4d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>aa43a3b3569b31617cbd43087b0f32de5</anchor>
      <arglist>(WObject *target, WObject::Method method) override</arglist>
    </member>
    <member kind="function">
      <type>Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>aed69704ae147dbb551c3074c8214940c</anchor>
      <arglist>(F function)</arglist>
    </member>
    <member kind="function">
      <type>Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a0ca84eed045315294f4c8b2458454611</anchor>
      <arglist>(T *target, void(V::*method)(B...))</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>emit</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a609cf05d598f4a9bc108defac5540615</anchor>
      <arglist>(A... args) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a5d37c0c7f34e439097c4c380c1ee7268</anchor>
      <arglist>(A... args) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isConnected</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a827b191b5d299911e731e18a91b20e9e</anchor>
      <arglist>() const override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Signal&lt; Wt::WString &gt;</name>
    <filename>classWt_1_1Signal.html</filename>
    <base>Wt::SignalBase</base>
    <member kind="function">
      <type></type>
      <name>Signal</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a4d4b01ba7cbf0035bad06430e459cc4d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>aa43a3b3569b31617cbd43087b0f32de5</anchor>
      <arglist>(WObject *target, WObject::Method method) override</arglist>
    </member>
    <member kind="function">
      <type>Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>aed69704ae147dbb551c3074c8214940c</anchor>
      <arglist>(F function)</arglist>
    </member>
    <member kind="function">
      <type>Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a0ca84eed045315294f4c8b2458454611</anchor>
      <arglist>(T *target, void(V::*method)(B...))</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>emit</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a609cf05d598f4a9bc108defac5540615</anchor>
      <arglist>(A... args) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a5d37c0c7f34e439097c4c380c1ee7268</anchor>
      <arglist>(A... args) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isConnected</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a827b191b5d299911e731e18a91b20e9e</anchor>
      <arglist>() const override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Signal&lt; Wt::WValidator::Result &gt;</name>
    <filename>classWt_1_1Signal.html</filename>
    <base>Wt::SignalBase</base>
    <member kind="function">
      <type></type>
      <name>Signal</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a4d4b01ba7cbf0035bad06430e459cc4d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>aa43a3b3569b31617cbd43087b0f32de5</anchor>
      <arglist>(WObject *target, WObject::Method method) override</arglist>
    </member>
    <member kind="function">
      <type>Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>aed69704ae147dbb551c3074c8214940c</anchor>
      <arglist>(F function)</arglist>
    </member>
    <member kind="function">
      <type>Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a0ca84eed045315294f4c8b2458454611</anchor>
      <arglist>(T *target, void(V::*method)(B...))</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>emit</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a609cf05d598f4a9bc108defac5540615</anchor>
      <arglist>(A... args) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a5d37c0c7f34e439097c4c380c1ee7268</anchor>
      <arglist>(A... args) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isConnected</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a827b191b5d299911e731e18a91b20e9e</anchor>
      <arglist>() const override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Signal&lt; Wt::WWidget *, bool &gt;</name>
    <filename>classWt_1_1Signal.html</filename>
    <base>Wt::SignalBase</base>
    <member kind="function">
      <type></type>
      <name>Signal</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a4d4b01ba7cbf0035bad06430e459cc4d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>aa43a3b3569b31617cbd43087b0f32de5</anchor>
      <arglist>(WObject *target, WObject::Method method) override</arglist>
    </member>
    <member kind="function">
      <type>Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>aed69704ae147dbb551c3074c8214940c</anchor>
      <arglist>(F function)</arglist>
    </member>
    <member kind="function">
      <type>Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a0ca84eed045315294f4c8b2458454611</anchor>
      <arglist>(T *target, void(V::*method)(B...))</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>emit</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a609cf05d598f4a9bc108defac5540615</anchor>
      <arglist>(A... args) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a5d37c0c7f34e439097c4c380c1ee7268</anchor>
      <arglist>(A... args) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isConnected</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a827b191b5d299911e731e18a91b20e9e</anchor>
      <arglist>() const override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::SignalBase</name>
    <filename>classWt_1_1SignalBase.html</filename>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isConnected</name>
      <anchorfile>classWt_1_1SignalBase.html</anchorfile>
      <anchor>a13a3106be8949b273edc74aa61be14ce</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1SignalBase.html</anchorfile>
      <anchor>ae43b51490db269a8a3b2356b218222d6</anchor>
      <arglist>(WObject *target, WObject::Method method)=0</arglist>
    </member>
    <member kind="function">
      <type>Wt::Signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1SignalBase.html</anchorfile>
      <anchor>a1f4178f19a827a31454d948e503848ad</anchor>
      <arglist>(T *target, void(V::*method)())</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Dbo::sql_value_traits</name>
    <filename>structWt_1_1Dbo_1_1sql__value__traits.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="function" static="yes">
      <type>static const char *</type>
      <name>type</name>
      <anchorfile>structWt_1_1Dbo_1_1sql__value__traits.html</anchorfile>
      <anchor>a938ffa7506a84bf46fa6e9a4d3c69253</anchor>
      <arglist>(SqlConnection *connection, int size)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>bind</name>
      <anchorfile>structWt_1_1Dbo_1_1sql__value__traits.html</anchorfile>
      <anchor>aeed1a933f3d83555b5d39ac76b929170</anchor>
      <arglist>(const V &amp;v, SqlStatement *statement, int index, int size)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>read</name>
      <anchorfile>structWt_1_1Dbo_1_1sql__value__traits.html</anchorfile>
      <anchor>ab3c8e4555b710451a3793059734fc751</anchor>
      <arglist>(V &amp;v, SqlStatement *statement, int column, int size)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>sql_value_traits&lt; int &gt;</name>
    <filename>structWt_1_1Dbo_1_1sql__value__traits.html</filename>
    <member kind="function" static="yes">
      <type>static const char *</type>
      <name>type</name>
      <anchorfile>structWt_1_1Dbo_1_1sql__value__traits.html</anchorfile>
      <anchor>a938ffa7506a84bf46fa6e9a4d3c69253</anchor>
      <arglist>(SqlConnection *connection, int size)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>bind</name>
      <anchorfile>structWt_1_1Dbo_1_1sql__value__traits.html</anchorfile>
      <anchor>aeed1a933f3d83555b5d39ac76b929170</anchor>
      <arglist>(const int &amp;v, SqlStatement *statement, int index, int size)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>read</name>
      <anchorfile>structWt_1_1Dbo_1_1sql__value__traits.html</anchorfile>
      <anchor>ab3c8e4555b710451a3793059734fc751</anchor>
      <arglist>(int &amp;v, SqlStatement *statement, int column, int size)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Dbo::SqlConnection</name>
    <filename>classWt_1_1Dbo_1_1SqlConnection.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SqlConnection</name>
      <anchorfile>classWt_1_1Dbo_1_1SqlConnection.html</anchorfile>
      <anchor>a23fffafcf577071d2db5c2d98ecfe60c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::unique_ptr&lt; SqlConnection &gt;</type>
      <name>clone</name>
      <anchorfile>classWt_1_1Dbo_1_1SqlConnection.html</anchorfile>
      <anchor>a71270c0d9258bc6f9f7177799db49083</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>executeSql</name>
      <anchorfile>classWt_1_1Dbo_1_1SqlConnection.html</anchorfile>
      <anchor>a2c45628057f538e8a706eff6d4d9f559</anchor>
      <arglist>(const std::string &amp;sql)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>executeSqlStateful</name>
      <anchorfile>classWt_1_1Dbo_1_1SqlConnection.html</anchorfile>
      <anchor>a7ac824e554074898f10cf75b70a4a6b1</anchor>
      <arglist>(const std::string &amp;sql)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>startTransaction</name>
      <anchorfile>classWt_1_1Dbo_1_1SqlConnection.html</anchorfile>
      <anchor>abcddbb27f50192113d14c66a5ca10731</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>commitTransaction</name>
      <anchorfile>classWt_1_1Dbo_1_1SqlConnection.html</anchorfile>
      <anchor>a38ed9ab4831a0bfd8694f250813803bf</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>rollbackTransaction</name>
      <anchorfile>classWt_1_1Dbo_1_1SqlConnection.html</anchorfile>
      <anchor>aee5a42b2f3b452d32360a1c31f59f22d</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual SqlStatement *</type>
      <name>getStatement</name>
      <anchorfile>classWt_1_1Dbo_1_1SqlConnection.html</anchorfile>
      <anchor>aa2632ea250a4aeb6b8f6f9783a34cd4e</anchor>
      <arglist>(const std::string &amp;id)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>saveStatement</name>
      <anchorfile>classWt_1_1Dbo_1_1SqlConnection.html</anchorfile>
      <anchor>a633556713118cd536126ed469d9e4cb2</anchor>
      <arglist>(const std::string &amp;id, std::unique_ptr&lt; SqlStatement &gt; statement)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::unique_ptr&lt; SqlStatement &gt;</type>
      <name>prepareStatement</name>
      <anchorfile>classWt_1_1Dbo_1_1SqlConnection.html</anchorfile>
      <anchor>a4990470cf601ed8b523d97a7f8849210</anchor>
      <arglist>(const std::string &amp;sql)=0</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProperty</name>
      <anchorfile>classWt_1_1Dbo_1_1SqlConnection.html</anchorfile>
      <anchor>a7c2b5415d52fa69321d031b65980209d</anchor>
      <arglist>(const std::string &amp;name, const std::string &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>property</name>
      <anchorfile>classWt_1_1Dbo_1_1SqlConnection.html</anchorfile>
      <anchor>acf50360225561d4d2f213698fbf1a0bb</anchor>
      <arglist>(const std::string &amp;name) const</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>autoincrementSql</name>
      <anchorfile>classWt_1_1Dbo_1_1SqlConnection.html</anchorfile>
      <anchor>a8c00fd64eb82999880cc813ef3866f5d</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::vector&lt; std::string &gt;</type>
      <name>autoincrementCreateSequenceSql</name>
      <anchorfile>classWt_1_1Dbo_1_1SqlConnection.html</anchorfile>
      <anchor>a7922dac3fd8a808dbbeef97a5a772e3f</anchor>
      <arglist>(const std::string &amp;table, const std::string &amp;id) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::vector&lt; std::string &gt;</type>
      <name>autoincrementDropSequenceSql</name>
      <anchorfile>classWt_1_1Dbo_1_1SqlConnection.html</anchorfile>
      <anchor>a188acc931dd1d3dbd3a21e28783f7bd2</anchor>
      <arglist>(const std::string &amp;table, const std::string &amp;id) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>autoincrementType</name>
      <anchorfile>classWt_1_1Dbo_1_1SqlConnection.html</anchorfile>
      <anchor>aff293ff5ad586e15143729eb38300ad6</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>autoincrementInsertInfix</name>
      <anchorfile>classWt_1_1Dbo_1_1SqlConnection.html</anchorfile>
      <anchor>a438d5a15f0bed4825672232a7a017cb7</anchor>
      <arglist>(const std::string &amp;id) const</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>autoincrementInsertSuffix</name>
      <anchorfile>classWt_1_1Dbo_1_1SqlConnection.html</anchorfile>
      <anchor>abda2502e05a08d4728ff8f026663321f</anchor>
      <arglist>(const std::string &amp;id) const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>prepareForDropTables</name>
      <anchorfile>classWt_1_1Dbo_1_1SqlConnection.html</anchorfile>
      <anchor>a16913d73967d28ac86476688a59b057a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const char *</type>
      <name>dateTimeType</name>
      <anchorfile>classWt_1_1Dbo_1_1SqlConnection.html</anchorfile>
      <anchor>af1f3290a984288175c6d82d088d0636c</anchor>
      <arglist>(SqlDateTimeType type) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const char *</type>
      <name>blobType</name>
      <anchorfile>classWt_1_1Dbo_1_1SqlConnection.html</anchorfile>
      <anchor>a68a272eaafeef5e04912914f0662da39</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>textType</name>
      <anchorfile>classWt_1_1Dbo_1_1SqlConnection.html</anchorfile>
      <anchor>ae09275dbc0c83a311f6365e37a1c0e38</anchor>
      <arglist>(int size) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>longLongType</name>
      <anchorfile>classWt_1_1Dbo_1_1SqlConnection.html</anchorfile>
      <anchor>aed7cfa2e203d76e9e6fb879c2a626aa0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>booleanType</name>
      <anchorfile>classWt_1_1Dbo_1_1SqlConnection.html</anchorfile>
      <anchor>a741609ff98913e58e9d0853df7160107</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>supportUpdateCascade</name>
      <anchorfile>classWt_1_1Dbo_1_1SqlConnection.html</anchorfile>
      <anchor>a265c0a76fea544aa7486704f5a267092</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>requireSubqueryAlias</name>
      <anchorfile>classWt_1_1Dbo_1_1SqlConnection.html</anchorfile>
      <anchor>aa4074b5a6707f632b8d1084bb5d7dc9b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>usesRowsFromTo</name>
      <anchorfile>classWt_1_1Dbo_1_1SqlConnection.html</anchorfile>
      <anchor>a1d0af34956eb84f3b1bd0ec7c2dda2d9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>supportAlterTable</name>
      <anchorfile>classWt_1_1Dbo_1_1SqlConnection.html</anchorfile>
      <anchor>a72bccdbdd04519503108247acbc4cb1a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>supportDeferrableFKConstraint</name>
      <anchorfile>classWt_1_1Dbo_1_1SqlConnection.html</anchorfile>
      <anchor>a03c5f44e82c2067d68a96758f4803f57</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>alterTableConstraintString</name>
      <anchorfile>classWt_1_1Dbo_1_1SqlConnection.html</anchorfile>
      <anchor>a6c923a9203aec31007891f2e2304b0f5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>autoincrementSql</name>
      <anchorfile>classWt_1_1Dbo_1_1SqlConnection.html</anchorfile>
      <anchor>a8c00fd64eb82999880cc813ef3866f5d</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::vector&lt; std::string &gt;</type>
      <name>autoincrementCreateSequenceSql</name>
      <anchorfile>classWt_1_1Dbo_1_1SqlConnection.html</anchorfile>
      <anchor>a7922dac3fd8a808dbbeef97a5a772e3f</anchor>
      <arglist>(const std::string &amp;table, const std::string &amp;id) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::vector&lt; std::string &gt;</type>
      <name>autoincrementDropSequenceSql</name>
      <anchorfile>classWt_1_1Dbo_1_1SqlConnection.html</anchorfile>
      <anchor>a188acc931dd1d3dbd3a21e28783f7bd2</anchor>
      <arglist>(const std::string &amp;table, const std::string &amp;id) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>autoincrementType</name>
      <anchorfile>classWt_1_1Dbo_1_1SqlConnection.html</anchorfile>
      <anchor>aff293ff5ad586e15143729eb38300ad6</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>autoincrementInsertInfix</name>
      <anchorfile>classWt_1_1Dbo_1_1SqlConnection.html</anchorfile>
      <anchor>a438d5a15f0bed4825672232a7a017cb7</anchor>
      <arglist>(const std::string &amp;id) const</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>autoincrementInsertSuffix</name>
      <anchorfile>classWt_1_1Dbo_1_1SqlConnection.html</anchorfile>
      <anchor>abda2502e05a08d4728ff8f026663321f</anchor>
      <arglist>(const std::string &amp;id) const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>prepareForDropTables</name>
      <anchorfile>classWt_1_1Dbo_1_1SqlConnection.html</anchorfile>
      <anchor>a16913d73967d28ac86476688a59b057a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const char *</type>
      <name>dateTimeType</name>
      <anchorfile>classWt_1_1Dbo_1_1SqlConnection.html</anchorfile>
      <anchor>af1f3290a984288175c6d82d088d0636c</anchor>
      <arglist>(SqlDateTimeType type) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const char *</type>
      <name>blobType</name>
      <anchorfile>classWt_1_1Dbo_1_1SqlConnection.html</anchorfile>
      <anchor>a68a272eaafeef5e04912914f0662da39</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>textType</name>
      <anchorfile>classWt_1_1Dbo_1_1SqlConnection.html</anchorfile>
      <anchor>ae09275dbc0c83a311f6365e37a1c0e38</anchor>
      <arglist>(int size) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>longLongType</name>
      <anchorfile>classWt_1_1Dbo_1_1SqlConnection.html</anchorfile>
      <anchor>aed7cfa2e203d76e9e6fb879c2a626aa0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>booleanType</name>
      <anchorfile>classWt_1_1Dbo_1_1SqlConnection.html</anchorfile>
      <anchor>a741609ff98913e58e9d0853df7160107</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>supportUpdateCascade</name>
      <anchorfile>classWt_1_1Dbo_1_1SqlConnection.html</anchorfile>
      <anchor>a265c0a76fea544aa7486704f5a267092</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>requireSubqueryAlias</name>
      <anchorfile>classWt_1_1Dbo_1_1SqlConnection.html</anchorfile>
      <anchor>aa4074b5a6707f632b8d1084bb5d7dc9b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>usesRowsFromTo</name>
      <anchorfile>classWt_1_1Dbo_1_1SqlConnection.html</anchorfile>
      <anchor>a1d0af34956eb84f3b1bd0ec7c2dda2d9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>supportAlterTable</name>
      <anchorfile>classWt_1_1Dbo_1_1SqlConnection.html</anchorfile>
      <anchor>a72bccdbdd04519503108247acbc4cb1a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>supportDeferrableFKConstraint</name>
      <anchorfile>classWt_1_1Dbo_1_1SqlConnection.html</anchorfile>
      <anchor>a03c5f44e82c2067d68a96758f4803f57</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>alterTableConstraintString</name>
      <anchorfile>classWt_1_1Dbo_1_1SqlConnection.html</anchorfile>
      <anchor>a6c923a9203aec31007891f2e2304b0f5</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Dbo::SqlConnectionPool</name>
    <filename>classWt_1_1Dbo_1_1SqlConnectionPool.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SqlConnectionPool</name>
      <anchorfile>classWt_1_1Dbo_1_1SqlConnectionPool.html</anchorfile>
      <anchor>aa47e9da173d8235c5ede15d88ef21307</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::unique_ptr&lt; SqlConnection &gt;</type>
      <name>getConnection</name>
      <anchorfile>classWt_1_1Dbo_1_1SqlConnectionPool.html</anchorfile>
      <anchor>ad25b4ed62a99c13de8e51629821f7c40</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>returnConnection</name>
      <anchorfile>classWt_1_1Dbo_1_1SqlConnectionPool.html</anchorfile>
      <anchor>a3cae08aa19a3f09c18353dd61d1d3781</anchor>
      <arglist>(std::unique_ptr&lt; SqlConnection &gt;)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>prepareForDropTables</name>
      <anchorfile>classWt_1_1Dbo_1_1SqlConnectionPool.html</anchorfile>
      <anchor>a24950949738300efec28e5d90fe17822</anchor>
      <arglist>() const =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Dbo::backend::Sqlite3</name>
    <filename>classWt_1_1Dbo_1_1backend_1_1Sqlite3.html</filename>
    <base>Wt::Dbo::SqlConnection</base>
    <member kind="function">
      <type></type>
      <name>Sqlite3</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1Sqlite3.html</anchorfile>
      <anchor>ad392317a2278c700364f6096fcf12e67</anchor>
      <arglist>(const std::string &amp;db)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Sqlite3</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1Sqlite3.html</anchorfile>
      <anchor>a292580940953e8fea523144db1087766</anchor>
      <arglist>(const Sqlite3 &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Sqlite3</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1Sqlite3.html</anchorfile>
      <anchor>a8cdca9bc5d744a76663d14d1255af483</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::unique_ptr&lt; SqlConnection &gt;</type>
      <name>clone</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1Sqlite3.html</anchorfile>
      <anchor>a95f1c660d396b7740adb0cae065f9336</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>sqlite3 *</type>
      <name>connection</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1Sqlite3.html</anchorfile>
      <anchor>a89c9fd929b5e051d187dabfb2f238ffc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>connectionString</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1Sqlite3.html</anchorfile>
      <anchor>a720823b4e4e9bfba9f732988bcd9a465</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDateTimeStorage</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1Sqlite3.html</anchorfile>
      <anchor>a571f4019950aafc2b855d46d4e7072d5</anchor>
      <arglist>(SqlDateTimeType type, DateTimeStorage format)</arglist>
    </member>
    <member kind="function">
      <type>DateTimeStorage</type>
      <name>dateTimeStorage</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1Sqlite3.html</anchorfile>
      <anchor>af5389671d6e3648d919234a778eb7859</anchor>
      <arglist>(SqlDateTimeType type) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>startTransaction</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1Sqlite3.html</anchorfile>
      <anchor>a0d2250ed55238e42ba3fd4d9fb3c5450</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>commitTransaction</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1Sqlite3.html</anchorfile>
      <anchor>a273b17791c64c3266b5e9ee1921d716b</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>rollbackTransaction</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1Sqlite3.html</anchorfile>
      <anchor>ad22008f853e18ad4b0f49bb1a84deaa1</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::unique_ptr&lt; SqlStatement &gt;</type>
      <name>prepareStatement</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1Sqlite3.html</anchorfile>
      <anchor>a726f0254eaf6cf26662304935e8a89cd</anchor>
      <arglist>(const std::string &amp;sql) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>autoincrementSql</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1Sqlite3.html</anchorfile>
      <anchor>abc5e001fa07a70feeaf5d4c3fe50d0d5</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::vector&lt; std::string &gt;</type>
      <name>autoincrementCreateSequenceSql</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1Sqlite3.html</anchorfile>
      <anchor>a33b7e87ccb12dd6d3946d51783f89bf0</anchor>
      <arglist>(const std::string &amp;table, const std::string &amp;id) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::vector&lt; std::string &gt;</type>
      <name>autoincrementDropSequenceSql</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1Sqlite3.html</anchorfile>
      <anchor>a6f81295fbc9198a98a7c8b9c63ef6748</anchor>
      <arglist>(const std::string &amp;table, const std::string &amp;id) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>autoincrementType</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1Sqlite3.html</anchorfile>
      <anchor>a967db5d270cc20aed7d45aead310ee10</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>autoincrementInsertSuffix</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1Sqlite3.html</anchorfile>
      <anchor>af3a7d4e23d7d2f64ef12c022b59f8bdf</anchor>
      <arglist>(const std::string &amp;id) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>dateTimeType</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1Sqlite3.html</anchorfile>
      <anchor>a79e6b02c23616aa994d2a6c8c18e7670</anchor>
      <arglist>(SqlDateTimeType type) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>blobType</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1Sqlite3.html</anchorfile>
      <anchor>a597955ab538d88e9b23ea126b5c5381f</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>supportDeferrableFKConstraint</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1Sqlite3.html</anchorfile>
      <anchor>ae593bfe81a86ccb2ec47cbdb8c6a16f5</anchor>
      <arglist>() const override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Dbo::SqlStatement</name>
    <filename>classWt_1_1Dbo_1_1SqlStatement.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SqlStatement</name>
      <anchorfile>classWt_1_1Dbo_1_1SqlStatement.html</anchorfile>
      <anchor>a15969dbb9c24b0901c3a784ea4807273</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>use</name>
      <anchorfile>classWt_1_1Dbo_1_1SqlStatement.html</anchorfile>
      <anchor>a9b894eddd589cb481b21217b7ecad462</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>done</name>
      <anchorfile>classWt_1_1Dbo_1_1SqlStatement.html</anchorfile>
      <anchor>a98e67c18e7a5c3da2aa9a1c02f6ba3be</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>reset</name>
      <anchorfile>classWt_1_1Dbo_1_1SqlStatement.html</anchorfile>
      <anchor>aa373b68969bcfa8e5c41113576b823fd</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>bind</name>
      <anchorfile>classWt_1_1Dbo_1_1SqlStatement.html</anchorfile>
      <anchor>ad8b53ca87bdef11ceceb96ab05c260b9</anchor>
      <arglist>(int column, const std::string &amp;value)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>bind</name>
      <anchorfile>classWt_1_1Dbo_1_1SqlStatement.html</anchorfile>
      <anchor>ae05c21f97335e6ff3a8c59bf5e0727ed</anchor>
      <arglist>(int column, short value)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>bind</name>
      <anchorfile>classWt_1_1Dbo_1_1SqlStatement.html</anchorfile>
      <anchor>aa6b3c0525a43d0016116f8e7adad9d50</anchor>
      <arglist>(int column, int value)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>bind</name>
      <anchorfile>classWt_1_1Dbo_1_1SqlStatement.html</anchorfile>
      <anchor>aaf3c0b71e7af23dddac2aaae7d698f26</anchor>
      <arglist>(int column, long long value)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>bind</name>
      <anchorfile>classWt_1_1Dbo_1_1SqlStatement.html</anchorfile>
      <anchor>a44b457f74cea0f4685af49022cb53d60</anchor>
      <arglist>(int column, float value)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>bind</name>
      <anchorfile>classWt_1_1Dbo_1_1SqlStatement.html</anchorfile>
      <anchor>afe5d6c654dc5f35fb5bd743d801c8cbd</anchor>
      <arglist>(int column, double value)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>bind</name>
      <anchorfile>classWt_1_1Dbo_1_1SqlStatement.html</anchorfile>
      <anchor>afbe4698684c7b9b355748a199e0b0558</anchor>
      <arglist>(int column, const std::chrono::system_clock::time_point &amp;value, SqlDateTimeType type)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>bind</name>
      <anchorfile>classWt_1_1Dbo_1_1SqlStatement.html</anchorfile>
      <anchor>a41aebebd47fa107ee6de26f3b091125f</anchor>
      <arglist>(int column, const std::chrono::duration&lt; int, std::milli &gt; &amp;value)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>bind</name>
      <anchorfile>classWt_1_1Dbo_1_1SqlStatement.html</anchorfile>
      <anchor>ae2bbddef8fd8c11687d23187920dc4da</anchor>
      <arglist>(int column, const std::vector&lt; unsigned char &gt; &amp;value)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>bindNull</name>
      <anchorfile>classWt_1_1Dbo_1_1SqlStatement.html</anchorfile>
      <anchor>affff3fa371c416b6c984082d8f5dc050</anchor>
      <arglist>(int column)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>execute</name>
      <anchorfile>classWt_1_1Dbo_1_1SqlStatement.html</anchorfile>
      <anchor>ab8b5af1a2f9cd87e8c2aac883a3d805f</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual long long</type>
      <name>insertedId</name>
      <anchorfile>classWt_1_1Dbo_1_1SqlStatement.html</anchorfile>
      <anchor>a88ab03b6ac501ce5b424746d42b2b882</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>affectedRowCount</name>
      <anchorfile>classWt_1_1Dbo_1_1SqlStatement.html</anchorfile>
      <anchor>a4a0eedff10a29eb511ebf66762b13e72</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>nextRow</name>
      <anchorfile>classWt_1_1Dbo_1_1SqlStatement.html</anchorfile>
      <anchor>a5da3f872f0dfb742dd4c1608ad1dd550</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>columnCount</name>
      <anchorfile>classWt_1_1Dbo_1_1SqlStatement.html</anchorfile>
      <anchor>a4868a3639566171ac3d58e15e3bf77f3</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>getResult</name>
      <anchorfile>classWt_1_1Dbo_1_1SqlStatement.html</anchorfile>
      <anchor>afca829eb43f0977b2af6ea7e0b66aad1</anchor>
      <arglist>(int column, std::string *value, int size)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>getResult</name>
      <anchorfile>classWt_1_1Dbo_1_1SqlStatement.html</anchorfile>
      <anchor>ab531e2336cac4d92abf4af926dffbe36</anchor>
      <arglist>(int column, short *value)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>getResult</name>
      <anchorfile>classWt_1_1Dbo_1_1SqlStatement.html</anchorfile>
      <anchor>a8512932928f07c81917c67ec86551685</anchor>
      <arglist>(int column, int *value)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>getResult</name>
      <anchorfile>classWt_1_1Dbo_1_1SqlStatement.html</anchorfile>
      <anchor>a2d286430babae4a15f7a64ffb8b7f463</anchor>
      <arglist>(int column, long long *value)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>getResult</name>
      <anchorfile>classWt_1_1Dbo_1_1SqlStatement.html</anchorfile>
      <anchor>af22bf78fd30fb12b502a2c49251c3808</anchor>
      <arglist>(int column, float *value)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>getResult</name>
      <anchorfile>classWt_1_1Dbo_1_1SqlStatement.html</anchorfile>
      <anchor>af55759bcb42119292bf2e05308a50db8</anchor>
      <arglist>(int column, double *value)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>getResult</name>
      <anchorfile>classWt_1_1Dbo_1_1SqlStatement.html</anchorfile>
      <anchor>ad5a4e0587a4300cab459fd2c66c00998</anchor>
      <arglist>(int column, std::chrono::system_clock::time_point *value, SqlDateTimeType type)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>getResult</name>
      <anchorfile>classWt_1_1Dbo_1_1SqlStatement.html</anchorfile>
      <anchor>a4dea8cf8fdc26995abd657d2e332821a</anchor>
      <arglist>(int column, std::chrono::duration&lt; int, std::milli &gt; *value)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>getResult</name>
      <anchorfile>classWt_1_1Dbo_1_1SqlStatement.html</anchorfile>
      <anchor>afa7b64d1c949c39e1cddd16f8e343b42</anchor>
      <arglist>(int column, std::vector&lt; unsigned char &gt; *value, int size)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>sql</name>
      <anchorfile>classWt_1_1Dbo_1_1SqlStatement.html</anchorfile>
      <anchor>ac1a8b9037b9f106135150a547626b826</anchor>
      <arglist>() const =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Dbo::StaleObjectException</name>
    <filename>classWt_1_1Dbo_1_1StaleObjectException.html</filename>
    <base>Wt::Dbo::Exception</base>
    <member kind="function">
      <type></type>
      <name>StaleObjectException</name>
      <anchorfile>classWt_1_1Dbo_1_1StaleObjectException.html</anchorfile>
      <anchor>a8e229dcb3abd3e234ffd87c92884686e</anchor>
      <arglist>(const std::string &amp;id, const char *table, int version)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Auth::AbstractPasswordService::StrengthValidatorResult</name>
    <filename>classWt_1_1Auth_1_1AbstractPasswordService_1_1StrengthValidatorResult.html</filename>
    <member kind="function">
      <type></type>
      <name>StrengthValidatorResult</name>
      <anchorfile>classWt_1_1Auth_1_1AbstractPasswordService_1_1StrengthValidatorResult.html</anchorfile>
      <anchor>a2d9a6fbe4d27380a3cc869e0a9105f90</anchor>
      <arglist>(bool valid, const WString &amp;message, int strength)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isValid</name>
      <anchorfile>classWt_1_1Auth_1_1AbstractPasswordService_1_1StrengthValidatorResult.html</anchorfile>
      <anchor>a2e7b2d63aed243a8267937ad5fd9cfcd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>WString</type>
      <name>message</name>
      <anchorfile>classWt_1_1Auth_1_1AbstractPasswordService_1_1StrengthValidatorResult.html</anchorfile>
      <anchor>a3e6ee9548087fc622af071b5327ec8db</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>strength</name>
      <anchorfile>classWt_1_1Auth_1_1AbstractPasswordService_1_1StrengthValidatorResult.html</anchorfile>
      <anchor>a6a608c4fe3eae48c2d9c0d445da26e3a</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WGLWidget::Texture</name>
    <filename>classWt_1_1WGLWidget_1_1Texture.html</filename>
    <base>Wt::WGLWidget::GlObject</base>
  </compound>
  <compound kind="struct">
    <name>Wt::Chart::WAxis::TickLabel</name>
    <filename>structWt_1_1Chart_1_1WAxis_1_1TickLabel.html</filename>
    <member kind="function">
      <type></type>
      <name>TickLabel</name>
      <anchorfile>structWt_1_1Chart_1_1WAxis_1_1TickLabel.html</anchorfile>
      <anchor>a0de1006c051962c5efa14f0e8b1a605f</anchor>
      <arglist>(double v, TickLength length, const WString &amp;l=WString())</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>u</name>
      <anchorfile>structWt_1_1Chart_1_1WAxis_1_1TickLabel.html</anchorfile>
      <anchor>abe9d5f8418bee0c5474ba502109a51f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>TickLength</type>
      <name>tickLength</name>
      <anchorfile>structWt_1_1Chart_1_1WAxis_1_1TickLabel.html</anchorfile>
      <anchor>a17d0d5885c135e6a6666bbb0ec3342f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>WString</type>
      <name>label</name>
      <anchorfile>structWt_1_1Chart_1_1WAxis_1_1TickLabel.html</anchorfile>
      <anchor>a4ad9a1c065c49b93f77e6e6460a81e55</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Wt::DomElement::TimeoutEvent</name>
    <filename>structWt_1_1DomElement_1_1TimeoutEvent.html</filename>
  </compound>
  <compound kind="struct">
    <name>Wt::WLogger::TimeStamp</name>
    <filename>structWt_1_1WLogger_1_1TimeStamp.html</filename>
  </compound>
  <compound kind="class">
    <name>Wt::Auth::Token</name>
    <filename>classWt_1_1Auth_1_1Token.html</filename>
    <member kind="function">
      <type></type>
      <name>Token</name>
      <anchorfile>classWt_1_1Auth_1_1Token.html</anchorfile>
      <anchor>af17a97cf7ce495042af69ac2c6a4b778</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Token</name>
      <anchorfile>classWt_1_1Auth_1_1Token.html</anchorfile>
      <anchor>a89856e32202e47f3263c372eb41d871c</anchor>
      <arglist>(const std::string &amp;hash, const WDateTime &amp;expirationTime, const std::string &amp;purpose, const std::string &amp;scope, const std::string &amp;redirectUri)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>empty</name>
      <anchorfile>classWt_1_1Auth_1_1Token.html</anchorfile>
      <anchor>a1303edcf79304de3791118e5862be465</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>hash</name>
      <anchorfile>classWt_1_1Auth_1_1Token.html</anchorfile>
      <anchor>a08e4395d3679c238bc488edba4c5b068</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const WDateTime &amp;</type>
      <name>expirationTime</name>
      <anchorfile>classWt_1_1Auth_1_1Token.html</anchorfile>
      <anchor>affd550dea77a49c89e8b8052746390b7</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Auth::OAuthProcess::TokenError</name>
    <filename>classWt_1_1Auth_1_1OAuthProcess_1_1TokenError.html</filename>
    <member kind="function">
      <type></type>
      <name>TokenError</name>
      <anchorfile>classWt_1_1Auth_1_1OAuthProcess_1_1TokenError.html</anchorfile>
      <anchor>af61dd1026ea18446ed78d8d5bd73e72b</anchor>
      <arglist>(const WString &amp;error)</arglist>
    </member>
    <member kind="function">
      <type>WString</type>
      <name>error</name>
      <anchorfile>classWt_1_1Auth_1_1OAuthProcess_1_1TokenError.html</anchorfile>
      <anchor>a6fa96b8c3f0ca3d058cd21b12f7bed31</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Touch</name>
    <filename>classWt_1_1Touch.html</filename>
    <member kind="function">
      <type></type>
      <name>Touch</name>
      <anchorfile>classWt_1_1Touch.html</anchorfile>
      <anchor>af820bfc15d11271cbf74d200cb5da554</anchor>
      <arglist>(long long identifier, int clientX, int clientY, int documentX, int documentY, int screenX, int screenY, int widgetX, int widgetY)</arglist>
    </member>
    <member kind="function">
      <type>Coordinates</type>
      <name>document</name>
      <anchorfile>classWt_1_1Touch.html</anchorfile>
      <anchor>af6e67e65e2c36e2cd872381d13ce7944</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Coordinates</type>
      <name>window</name>
      <anchorfile>classWt_1_1Touch.html</anchorfile>
      <anchor>a24edae16ea7a7c633d8808bda63c55a5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Coordinates</type>
      <name>screen</name>
      <anchorfile>classWt_1_1Touch.html</anchorfile>
      <anchor>ae7624f4c1d86900c0d103d53f9f0d51c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Coordinates</type>
      <name>widget</name>
      <anchorfile>classWt_1_1Touch.html</anchorfile>
      <anchor>af1f155233c8ac4b92c13326e083ffcb8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>long long</type>
      <name>identifier</name>
      <anchorfile>classWt_1_1Touch.html</anchorfile>
      <anchor>a1c92bc9f53a6bb0c45a65eefbd76db0c</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Dbo::Transaction</name>
    <filename>classWt_1_1Dbo_1_1Transaction.html</filename>
    <member kind="function">
      <type></type>
      <name>Transaction</name>
      <anchorfile>classWt_1_1Dbo_1_1Transaction.html</anchorfile>
      <anchor>ae6c6f85af41e6e114d329f1d6d156b29</anchor>
      <arglist>(Session &amp;session)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Transaction</name>
      <anchorfile>classWt_1_1Dbo_1_1Transaction.html</anchorfile>
      <anchor>ac7bcdc204aa762ea4d041af7b9a71c7e</anchor>
      <arglist>() noexcept(false)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isActive</name>
      <anchorfile>classWt_1_1Dbo_1_1Transaction.html</anchorfile>
      <anchor>af61fe760905cf6018083b8a7a90b3add</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>commit</name>
      <anchorfile>classWt_1_1Dbo_1_1Transaction.html</anchorfile>
      <anchor>a7388031cba0416d48e03e3f7acd5ca6a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>rollback</name>
      <anchorfile>classWt_1_1Dbo_1_1Transaction.html</anchorfile>
      <anchor>a000e4f0882139eb8470f7472ca14a24e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Session &amp;</type>
      <name>session</name>
      <anchorfile>classWt_1_1Dbo_1_1Transaction.html</anchorfile>
      <anchor>abfb1b35c924d104fdbc9c2e5652b0f84</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>SqlConnection *</type>
      <name>connection</name>
      <anchorfile>classWt_1_1Dbo_1_1Transaction.html</anchorfile>
      <anchor>aea83478a3cb09bdba489f4b43d2b5404</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Auth::AbstractUserDatabase::Transaction</name>
    <filename>classWt_1_1Auth_1_1AbstractUserDatabase_1_1Transaction.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Transaction</name>
      <anchorfile>classWt_1_1Auth_1_1AbstractUserDatabase_1_1Transaction.html</anchorfile>
      <anchor>a00a8460719378ee9a60510ec32de4f87</anchor>
      <arglist>() noexcept(false)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>commit</name>
      <anchorfile>classWt_1_1Auth_1_1AbstractUserDatabase_1_1Transaction.html</anchorfile>
      <anchor>ae42ecbf160772ffbf3c4f54a5ba76ddf</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>rollback</name>
      <anchorfile>classWt_1_1Auth_1_1AbstractUserDatabase_1_1Transaction.html</anchorfile>
      <anchor>a43089da95c09844cb6615e8477bd7186</anchor>
      <arglist>()=0</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Wt::WTransform::TRSRDecomposition</name>
    <filename>structWt_1_1WTransform_1_1TRSRDecomposition.html</filename>
    <member kind="variable">
      <type>double</type>
      <name>dx</name>
      <anchorfile>structWt_1_1WTransform_1_1TRSRDecomposition.html</anchorfile>
      <anchor>ab8439c2aa98232a58a31e629c3a6bfda</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>dy</name>
      <anchorfile>structWt_1_1WTransform_1_1TRSRDecomposition.html</anchorfile>
      <anchor>a7a7838a113ae6d9d503d61ec1e834b9e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>alpha1</name>
      <anchorfile>structWt_1_1WTransform_1_1TRSRDecomposition.html</anchorfile>
      <anchor>a32b755359b0bc486b377ab23e914b499</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>sx</name>
      <anchorfile>structWt_1_1WTransform_1_1TRSRDecomposition.html</anchorfile>
      <anchor>a1dd3fcd36e7fa13b599688a2367fb5b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>sy</name>
      <anchorfile>structWt_1_1WTransform_1_1TRSRDecomposition.html</anchorfile>
      <anchor>a28cbe0f83bd66609d8f446bdc6d6a32d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>alpha2</name>
      <anchorfile>structWt_1_1WTransform_1_1TRSRDecomposition.html</anchorfile>
      <anchor>ab351fba1317a61465b9b3833b59b90c5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Wt::WTransform::TRSSDecomposition</name>
    <filename>structWt_1_1WTransform_1_1TRSSDecomposition.html</filename>
    <member kind="variable">
      <type>double</type>
      <name>dx</name>
      <anchorfile>structWt_1_1WTransform_1_1TRSSDecomposition.html</anchorfile>
      <anchor>a3a83987c2214adab86987689db699285</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>dy</name>
      <anchorfile>structWt_1_1WTransform_1_1TRSSDecomposition.html</anchorfile>
      <anchor>a12d16f1a19223c83ee0715759d2dbc65</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>alpha</name>
      <anchorfile>structWt_1_1WTransform_1_1TRSSDecomposition.html</anchorfile>
      <anchor>a7719633bfa269511de91fe323d08b471</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>sx</name>
      <anchorfile>structWt_1_1WTransform_1_1TRSSDecomposition.html</anchorfile>
      <anchor>a465c59998f6c07d80f67faa9aac566cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>sy</name>
      <anchorfile>structWt_1_1WTransform_1_1TRSSDecomposition.html</anchorfile>
      <anchor>a4be597e68e03aa5d613203ad9830028a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>sh</name>
      <anchorfile>structWt_1_1WTransform_1_1TRSSDecomposition.html</anchorfile>
      <anchor>a3482d6a7b3a711eb6e1d516690b07a12</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Json::TypeException</name>
    <filename>classWt_1_1Json_1_1TypeException.html</filename>
    <base>Wt::WException</base>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>name</name>
      <anchorfile>classWt_1_1Json_1_1TypeException.html</anchorfile>
      <anchor>aa5b9c3671d58002a388a69012af2f7d6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Type</type>
      <name>actualType</name>
      <anchorfile>classWt_1_1Json_1_1TypeException.html</anchorfile>
      <anchor>a6803775b955aad2566bc2cd6c17ba491</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Type</type>
      <name>expectedType</name>
      <anchorfile>classWt_1_1Json_1_1TypeException.html</anchorfile>
      <anchor>a7c800fb13ddbe816ad1d8ed5ee2a1e6c</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WGLWidget::Uint8Array</name>
    <filename>classWt_1_1WGLWidget_1_1Uint8Array.html</filename>
    <base>Wt::WGLWidget::GlObject</base>
  </compound>
  <compound kind="class">
    <name>Wt::WGLWidget::UniformLocation</name>
    <filename>classWt_1_1WGLWidget_1_1UniformLocation.html</filename>
    <base>Wt::WGLWidget::GlObject</base>
  </compound>
  <compound kind="class">
    <name>Wt::WApplication::UpdateLock</name>
    <filename>classWt_1_1WApplication_1_1UpdateLock.html</filename>
    <member kind="function">
      <type></type>
      <name>UpdateLock</name>
      <anchorfile>classWt_1_1WApplication_1_1UpdateLock.html</anchorfile>
      <anchor>a117c05cee4d0e9c825155d0e77ca0c16</anchor>
      <arglist>(WApplication *app)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator bool</name>
      <anchorfile>classWt_1_1WApplication_1_1UpdateLock.html</anchorfile>
      <anchor>a09011389bb0b9319acbcd32800852918</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~UpdateLock</name>
      <anchorfile>classWt_1_1WApplication_1_1UpdateLock.html</anchorfile>
      <anchor>a7d9898c9d19bd54675c7d178746659c0</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Auth::UpdatePasswordWidget</name>
    <filename>classWt_1_1Auth_1_1UpdatePasswordWidget.html</filename>
    <base>Wt::WTemplateFormView</base>
    <member kind="function">
      <type></type>
      <name>UpdatePasswordWidget</name>
      <anchorfile>classWt_1_1Auth_1_1UpdatePasswordWidget.html</anchorfile>
      <anchor>aa7eb0581432757458f3555be28ae030f</anchor>
      <arglist>(const User &amp;user, std::unique_ptr&lt; RegistrationModel &gt; registrationModel, const std::shared_ptr&lt; AuthModel &gt; &amp;authModel)</arglist>
    </member>
    <member kind="function">
      <type>Signal &amp;</type>
      <name>updated</name>
      <anchorfile>classWt_1_1Auth_1_1UpdatePasswordWidget.html</anchorfile>
      <anchor>a6c6bedf0628488cbb09d44c6df441004</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Signal &amp;</type>
      <name>canceled</name>
      <anchorfile>classWt_1_1Auth_1_1UpdatePasswordWidget.html</anchorfile>
      <anchor>a640d20893579fcc2642ac62f0a550b6a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual std::unique_ptr&lt; WWidget &gt;</type>
      <name>createFormWidget</name>
      <anchorfile>classWt_1_1Auth_1_1UpdatePasswordWidget.html</anchorfile>
      <anchor>aca34eeefaadf846a53e7eb4df6774688</anchor>
      <arglist>(WFormModel::Field field) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Http::UploadedFile</name>
    <filename>classWt_1_1Http_1_1UploadedFile.html</filename>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>spoolFileName</name>
      <anchorfile>classWt_1_1Http_1_1UploadedFile.html</anchorfile>
      <anchor>a5c8b9c185298d084a46bd6b464917ae2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>clientFileName</name>
      <anchorfile>classWt_1_1Http_1_1UploadedFile.html</anchorfile>
      <anchor>a65d825333c4549e48384ecce40b448ce</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>contentType</name>
      <anchorfile>classWt_1_1Http_1_1UploadedFile.html</anchorfile>
      <anchor>aeac23fc52767b517fee14838ac0eec20</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stealSpoolFile</name>
      <anchorfile>classWt_1_1Http_1_1UploadedFile.html</anchorfile>
      <anchor>a7351e345154910a57a925fecb4524dfd</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Wt::Http::Client::URL</name>
    <filename>structWt_1_1Http_1_1Client_1_1URL.html</filename>
    <member kind="variable">
      <type>std::string</type>
      <name>protocol</name>
      <anchorfile>structWt_1_1Http_1_1Client_1_1URL.html</anchorfile>
      <anchor>afc84b91d4b2b8d438f8a922f966d541e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>auth</name>
      <anchorfile>structWt_1_1Http_1_1Client_1_1URL.html</anchorfile>
      <anchor>ac10f474d569ee58171a9a6db7389f01e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>host</name>
      <anchorfile>structWt_1_1Http_1_1Client_1_1URL.html</anchorfile>
      <anchor>a5abe971812861a7c0869fea2917b6d0c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>port</name>
      <anchorfile>structWt_1_1Http_1_1Client_1_1URL.html</anchorfile>
      <anchor>a81978f6fc41e9fb3e48c7e1b57b6cd78</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>path</name>
      <anchorfile>structWt_1_1Http_1_1Client_1_1URL.html</anchorfile>
      <anchor>a6813b67a612512436e1da2936b107247</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Auth::User</name>
    <filename>classWt_1_1Auth_1_1User.html</filename>
    <member kind="typedef">
      <type>AccountStatus</type>
      <name>Status</name>
      <anchorfile>classWt_1_1Auth_1_1User.html</anchorfile>
      <anchor>a77dc7cb67ec8e41f656a5f7b989f7a0f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>User</name>
      <anchorfile>classWt_1_1Auth_1_1User.html</anchorfile>
      <anchor>a2319756742238e5f4809d754e2fc735b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>User</name>
      <anchorfile>classWt_1_1Auth_1_1User.html</anchorfile>
      <anchor>a2bd7e605d6bac3210076a260fab24d4d</anchor>
      <arglist>(const std::string &amp;id, const AbstractUserDatabase &amp;database)</arglist>
    </member>
    <member kind="function">
      <type>AbstractUserDatabase *</type>
      <name>database</name>
      <anchorfile>classWt_1_1Auth_1_1User.html</anchorfile>
      <anchor>a2d68b82840f0495b959e4be53dfe8a68</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classWt_1_1Auth_1_1User.html</anchorfile>
      <anchor>a1c12ea7bbc34fee6efa62421ab3ef769</anchor>
      <arglist>(const User &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classWt_1_1Auth_1_1User.html</anchorfile>
      <anchor>ae172385fbc77f8032ccb0d4d08fb62c0</anchor>
      <arglist>(const User &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isValid</name>
      <anchorfile>classWt_1_1Auth_1_1User.html</anchorfile>
      <anchor>ac96b4f1ee0da7579b5a52eefdf9d4d7f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>id</name>
      <anchorfile>classWt_1_1Auth_1_1User.html</anchorfile>
      <anchor>a4fa00bdcedec23a00f653bd92c144dee</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WString</type>
      <name>identity</name>
      <anchorfile>classWt_1_1Auth_1_1User.html</anchorfile>
      <anchor>af9890e20188e509b6fdd2f000ad365e0</anchor>
      <arglist>(const std::string &amp;provider) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addIdentity</name>
      <anchorfile>classWt_1_1Auth_1_1User.html</anchorfile>
      <anchor>a373651abdd3454d64dc634bbae53ceec</anchor>
      <arglist>(const std::string &amp;provider, const WString &amp;identity)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setIdentity</name>
      <anchorfile>classWt_1_1Auth_1_1User.html</anchorfile>
      <anchor>a083dca8537868069a49ae2501b4ee73a</anchor>
      <arglist>(const std::string &amp;provider, const WString &amp;identity)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeIdentity</name>
      <anchorfile>classWt_1_1Auth_1_1User.html</anchorfile>
      <anchor>ac65b7e7277df1d8cd4805e0b4d13b29d</anchor>
      <arglist>(const std::string &amp;provider)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPassword</name>
      <anchorfile>classWt_1_1Auth_1_1User.html</anchorfile>
      <anchor>a7ba540783ef86d9f756d812939138e25</anchor>
      <arglist>(const PasswordHash &amp;password) const</arglist>
    </member>
    <member kind="function">
      <type>PasswordHash</type>
      <name>password</name>
      <anchorfile>classWt_1_1Auth_1_1User.html</anchorfile>
      <anchor>abb2c92583ecb580a944b415e796e3b02</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setEmail</name>
      <anchorfile>classWt_1_1Auth_1_1User.html</anchorfile>
      <anchor>aa1ebd0d9a840c9d3ad8db85a494a8241</anchor>
      <arglist>(const std::string &amp;address) const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>email</name>
      <anchorfile>classWt_1_1Auth_1_1User.html</anchorfile>
      <anchor>a6bbf470e76769af70baa81cb15453ebb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setUnverifiedEmail</name>
      <anchorfile>classWt_1_1Auth_1_1User.html</anchorfile>
      <anchor>a077c93690ba3ea0be45f81dd19be21e4</anchor>
      <arglist>(const std::string &amp;address) const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>unverifiedEmail</name>
      <anchorfile>classWt_1_1Auth_1_1User.html</anchorfile>
      <anchor>a577e77e63a458be2d203dacff7bacc47</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>AccountStatus</type>
      <name>status</name>
      <anchorfile>classWt_1_1Auth_1_1User.html</anchorfile>
      <anchor>a6f0e7c1aa39d3f9754e3e210c4f43206</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setStatus</name>
      <anchorfile>classWt_1_1Auth_1_1User.html</anchorfile>
      <anchor>a4b12dc82b526b268b3cf0c26d458081d</anchor>
      <arglist>(AccountStatus status)</arglist>
    </member>
    <member kind="function">
      <type>Token</type>
      <name>emailToken</name>
      <anchorfile>classWt_1_1Auth_1_1User.html</anchorfile>
      <anchor>ab0e30229987963cffc667190ce8baa6d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>EmailTokenRole</type>
      <name>emailTokenRole</name>
      <anchorfile>classWt_1_1Auth_1_1User.html</anchorfile>
      <anchor>a1d7a05799d421e38bcf8a980d587cb09</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setEmailToken</name>
      <anchorfile>classWt_1_1Auth_1_1User.html</anchorfile>
      <anchor>a05514b34296051941d47dabfea21592c</anchor>
      <arglist>(const Token &amp;token, EmailTokenRole role) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearEmailToken</name>
      <anchorfile>classWt_1_1Auth_1_1User.html</anchorfile>
      <anchor>ae692304b1026ba5477515f2621ce9e1b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addAuthToken</name>
      <anchorfile>classWt_1_1Auth_1_1User.html</anchorfile>
      <anchor>aa576bdc3a8be09b36e5016a627ee7128</anchor>
      <arglist>(const Token &amp;token) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeAuthToken</name>
      <anchorfile>classWt_1_1Auth_1_1User.html</anchorfile>
      <anchor>a160988fee0937f8f62e876a4f835c497</anchor>
      <arglist>(const std::string &amp;hash) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>updateAuthToken</name>
      <anchorfile>classWt_1_1Auth_1_1User.html</anchorfile>
      <anchor>a87253f00137f49e0d5a46a1eec3e48a8</anchor>
      <arglist>(const std::string &amp;hash, const std::string &amp;newHash) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAuthenticated</name>
      <anchorfile>classWt_1_1Auth_1_1User.html</anchorfile>
      <anchor>ac0756b61b47fc378a7da92ad9c9ba380</anchor>
      <arglist>(bool success) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>failedLoginAttempts</name>
      <anchorfile>classWt_1_1Auth_1_1User.html</anchorfile>
      <anchor>a26c6cff6e984d9733accfe65dc2a962f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WDateTime</type>
      <name>lastLoginAttempt</name>
      <anchorfile>classWt_1_1Auth_1_1User.html</anchorfile>
      <anchor>aeaf051caea3f1bd662fea0d2ef24a1f0</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Auth::Dbo::UserDatabase</name>
    <filename>classWt_1_1Auth_1_1Dbo_1_1UserDatabase.html</filename>
    <templarg></templarg>
    <base>Wt::Auth::AbstractUserDatabase</base>
    <member kind="function">
      <type></type>
      <name>UserDatabase</name>
      <anchorfile>classWt_1_1Auth_1_1Dbo_1_1UserDatabase.html</anchorfile>
      <anchor>ac9e4b943a7543b2f7f707c3b12339f23</anchor>
      <arglist>(Wt::Dbo::Session &amp;session, const AuthService *authService=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNewUserStatus</name>
      <anchorfile>classWt_1_1Auth_1_1Dbo_1_1UserDatabase.html</anchorfile>
      <anchor>ada021f98054b5f81323ac5f45991c2f8</anchor>
      <arglist>(AccountStatus status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Transaction *</type>
      <name>startTransaction</name>
      <anchorfile>classWt_1_1Auth_1_1Dbo_1_1UserDatabase.html</anchorfile>
      <anchor>a7fb294733cf95dfc75e939df92b95b05</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>Wt::Dbo::ptr&lt; DboType &gt;</type>
      <name>find</name>
      <anchorfile>classWt_1_1Auth_1_1Dbo_1_1UserDatabase.html</anchorfile>
      <anchor>a79ed5585c4e182b1e2865b91abb6e1bc</anchor>
      <arglist>(const User &amp;user) const</arglist>
    </member>
    <member kind="function">
      <type>User</type>
      <name>find</name>
      <anchorfile>classWt_1_1Auth_1_1Dbo_1_1UserDatabase.html</anchorfile>
      <anchor>a419bf479f30aa45d3ccd5fc1c194cd62</anchor>
      <arglist>(const Wt::Dbo::ptr&lt; DboType &gt; user) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual User</type>
      <name>findWithId</name>
      <anchorfile>classWt_1_1Auth_1_1Dbo_1_1UserDatabase.html</anchorfile>
      <anchor>adb82ec180e4453fe7eaf0da359c52054</anchor>
      <arglist>(const std::string &amp;id) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual User</type>
      <name>findWithIdentity</name>
      <anchorfile>classWt_1_1Auth_1_1Dbo_1_1UserDatabase.html</anchorfile>
      <anchor>a1bc0c38a3c270ef0fb574431478eb8d2</anchor>
      <arglist>(const std::string &amp;provider, const WString &amp;identity) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WString</type>
      <name>identity</name>
      <anchorfile>classWt_1_1Auth_1_1Dbo_1_1UserDatabase.html</anchorfile>
      <anchor>a9d2767d4d7582e4088a98a02f6ed9569</anchor>
      <arglist>(const User &amp;user, const std::string &amp;provider) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>removeIdentity</name>
      <anchorfile>classWt_1_1Auth_1_1Dbo_1_1UserDatabase.html</anchorfile>
      <anchor>a925bfd622fc6beacaab613338574daff</anchor>
      <arglist>(const User &amp;user, const std::string &amp;provider) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual User</type>
      <name>registerNew</name>
      <anchorfile>classWt_1_1Auth_1_1Dbo_1_1UserDatabase.html</anchorfile>
      <anchor>a2a35576e876a57f9c841b31fec3c5905</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>deleteUser</name>
      <anchorfile>classWt_1_1Auth_1_1Dbo_1_1UserDatabase.html</anchorfile>
      <anchor>a958d51f9185206367cfdd70e9b8cc095</anchor>
      <arglist>(const User &amp;user) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual AccountStatus</type>
      <name>status</name>
      <anchorfile>classWt_1_1Auth_1_1Dbo_1_1UserDatabase.html</anchorfile>
      <anchor>a51a74ecf3fdfd396190865032e731a3b</anchor>
      <arglist>(const User &amp;user) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setStatus</name>
      <anchorfile>classWt_1_1Auth_1_1Dbo_1_1UserDatabase.html</anchorfile>
      <anchor>ae338cd99945018f2865aad2e81921b35</anchor>
      <arglist>(const User &amp;user, AccountStatus status) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setPassword</name>
      <anchorfile>classWt_1_1Auth_1_1Dbo_1_1UserDatabase.html</anchorfile>
      <anchor>ae320a9d160420d51c29ed68c212c1281</anchor>
      <arglist>(const User &amp;user, const PasswordHash &amp;password) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual PasswordHash</type>
      <name>password</name>
      <anchorfile>classWt_1_1Auth_1_1Dbo_1_1UserDatabase.html</anchorfile>
      <anchor>a0d04fb5547e5b75120e2f78dbb50f030</anchor>
      <arglist>(const User &amp;user) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>addIdentity</name>
      <anchorfile>classWt_1_1Auth_1_1Dbo_1_1UserDatabase.html</anchorfile>
      <anchor>ab49b1623afdde69f212ef7bcd4f7dc28</anchor>
      <arglist>(const User &amp;user, const std::string &amp;provider, const WString &amp;identity) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setIdentity</name>
      <anchorfile>classWt_1_1Auth_1_1Dbo_1_1UserDatabase.html</anchorfile>
      <anchor>a1aee9b00b2aa80cf5d9a9fa251a2ba29</anchor>
      <arglist>(const User &amp;user, const std::string &amp;provider, const WString &amp;identity) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>setEmail</name>
      <anchorfile>classWt_1_1Auth_1_1Dbo_1_1UserDatabase.html</anchorfile>
      <anchor>a8f619bdbc1105f3f82e45289c79692ca</anchor>
      <arglist>(const User &amp;user, const std::string &amp;address) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>email</name>
      <anchorfile>classWt_1_1Auth_1_1Dbo_1_1UserDatabase.html</anchorfile>
      <anchor>a3257b202a6e2025a2e6a33be810a47ac</anchor>
      <arglist>(const User &amp;user) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setUnverifiedEmail</name>
      <anchorfile>classWt_1_1Auth_1_1Dbo_1_1UserDatabase.html</anchorfile>
      <anchor>a1d4e03fc24dc08f415d1194bf143dcba</anchor>
      <arglist>(const User &amp;user, const std::string &amp;address) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>unverifiedEmail</name>
      <anchorfile>classWt_1_1Auth_1_1Dbo_1_1UserDatabase.html</anchorfile>
      <anchor>ae40eae45eb362c513c0db725e2051721</anchor>
      <arglist>(const User &amp;user) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual User</type>
      <name>findWithEmail</name>
      <anchorfile>classWt_1_1Auth_1_1Dbo_1_1UserDatabase.html</anchorfile>
      <anchor>ac85e15703313216eeaca5cabcb020758</anchor>
      <arglist>(const std::string &amp;address) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setEmailToken</name>
      <anchorfile>classWt_1_1Auth_1_1Dbo_1_1UserDatabase.html</anchorfile>
      <anchor>a2af01633b4d092b72f33fd4c9b5d6d4b</anchor>
      <arglist>(const User &amp;user, const Token &amp;token, EmailTokenRole role) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Token</type>
      <name>emailToken</name>
      <anchorfile>classWt_1_1Auth_1_1Dbo_1_1UserDatabase.html</anchorfile>
      <anchor>a4fdb7cf0ba0648321da80c8b91e48d87</anchor>
      <arglist>(const User &amp;user) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual EmailTokenRole</type>
      <name>emailTokenRole</name>
      <anchorfile>classWt_1_1Auth_1_1Dbo_1_1UserDatabase.html</anchorfile>
      <anchor>a63a8211fec604c0073b3105c8fc97f10</anchor>
      <arglist>(const User &amp;user) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual User</type>
      <name>findWithEmailToken</name>
      <anchorfile>classWt_1_1Auth_1_1Dbo_1_1UserDatabase.html</anchorfile>
      <anchor>a08b4678adb8a8040c9b5256ceed332be</anchor>
      <arglist>(const std::string &amp;hash) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>addAuthToken</name>
      <anchorfile>classWt_1_1Auth_1_1Dbo_1_1UserDatabase.html</anchorfile>
      <anchor>abcf3530c09451863b9bef31d5c027b21</anchor>
      <arglist>(const User &amp;user, const Token &amp;token) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>removeAuthToken</name>
      <anchorfile>classWt_1_1Auth_1_1Dbo_1_1UserDatabase.html</anchorfile>
      <anchor>a2ad29a29dd3129809757112810096af8</anchor>
      <arglist>(const User &amp;user, const std::string &amp;hash) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>updateAuthToken</name>
      <anchorfile>classWt_1_1Auth_1_1Dbo_1_1UserDatabase.html</anchorfile>
      <anchor>af21c1c29e5fcfb9733a88532d5cafe34</anchor>
      <arglist>(const User &amp;user, const std::string &amp;hash, const std::string &amp;newHash) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual User</type>
      <name>findWithAuthToken</name>
      <anchorfile>classWt_1_1Auth_1_1Dbo_1_1UserDatabase.html</anchorfile>
      <anchor>ab08c726d1feb17529aa423b4d374d4a0</anchor>
      <arglist>(const std::string &amp;hash) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setFailedLoginAttempts</name>
      <anchorfile>classWt_1_1Auth_1_1Dbo_1_1UserDatabase.html</anchorfile>
      <anchor>a35381548862c470f2be5fd00a2739572</anchor>
      <arglist>(const User &amp;user, int count) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>failedLoginAttempts</name>
      <anchorfile>classWt_1_1Auth_1_1Dbo_1_1UserDatabase.html</anchorfile>
      <anchor>a45f8638766b638810b8535c839e171ac</anchor>
      <arglist>(const User &amp;user) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setLastLoginAttempt</name>
      <anchorfile>classWt_1_1Auth_1_1Dbo_1_1UserDatabase.html</anchorfile>
      <anchor>af58463b64381c707aa3d6f857e3e423a</anchor>
      <arglist>(const User &amp;user, const WDateTime &amp;t) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WDateTime</type>
      <name>lastLoginAttempt</name>
      <anchorfile>classWt_1_1Auth_1_1Dbo_1_1UserDatabase.html</anchorfile>
      <anchor>a7c861b960da89cf87f36174765e7c644</anchor>
      <arglist>(const User &amp;user) const override</arglist>
    </member>
    <member kind="function">
      <type>unsigned</type>
      <name>maxAuthTokensPerUser</name>
      <anchorfile>classWt_1_1Auth_1_1Dbo_1_1UserDatabase.html</anchorfile>
      <anchor>ada6a1e880184bbf719ad4735c969cb0f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMaxAuthTokensPerUser</name>
      <anchorfile>classWt_1_1Auth_1_1Dbo_1_1UserDatabase.html</anchorfile>
      <anchor>a34cc61d1dec830c6db684c89afcae79c</anchor>
      <arglist>(unsigned maxAuthTokensPerUser)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Json::Value</name>
    <filename>classWt_1_1Json_1_1Value.html</filename>
    <member kind="function">
      <type></type>
      <name>Value</name>
      <anchorfile>classWt_1_1Json_1_1Value.html</anchorfile>
      <anchor>a1ea91a9cfd1554265851233642514e0b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Value</name>
      <anchorfile>classWt_1_1Json_1_1Value.html</anchorfile>
      <anchor>a741475c334e1093ae3c527755916f237</anchor>
      <arglist>(const WString &amp;value)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Value</name>
      <anchorfile>classWt_1_1Json_1_1Value.html</anchorfile>
      <anchor>aaa8b454badd129411bd3696c8402e383</anchor>
      <arglist>(WString &amp;&amp;value)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Value</name>
      <anchorfile>classWt_1_1Json_1_1Value.html</anchorfile>
      <anchor>a996653ddbb69709c1113eae3f59c64a0</anchor>
      <arglist>(bool value)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Value</name>
      <anchorfile>classWt_1_1Json_1_1Value.html</anchorfile>
      <anchor>ab5c48de7bfc49ab35ae981488116693e</anchor>
      <arglist>(int value)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Value</name>
      <anchorfile>classWt_1_1Json_1_1Value.html</anchorfile>
      <anchor>adb3bb3c6ece89ab3f4533a85168cce8d</anchor>
      <arglist>(long long value)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Value</name>
      <anchorfile>classWt_1_1Json_1_1Value.html</anchorfile>
      <anchor>af021b78409713b1cc0646db00f62fa16</anchor>
      <arglist>(double value)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Value</name>
      <anchorfile>classWt_1_1Json_1_1Value.html</anchorfile>
      <anchor>a2b4ba76d9944411e32aa042c07c2f0cf</anchor>
      <arglist>(const char *value)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Value</name>
      <anchorfile>classWt_1_1Json_1_1Value.html</anchorfile>
      <anchor>a92398ebf20ebbe18218e63c9cc0e3231</anchor>
      <arglist>(const Array &amp;value)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Value</name>
      <anchorfile>classWt_1_1Json_1_1Value.html</anchorfile>
      <anchor>a3c19cc0f591da9ad5166ee146f78f0f2</anchor>
      <arglist>(Array &amp;&amp;value)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Value</name>
      <anchorfile>classWt_1_1Json_1_1Value.html</anchorfile>
      <anchor>a229b2fc29f07cb7404c5e07f55b27982</anchor>
      <arglist>(const Object &amp;value)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Value</name>
      <anchorfile>classWt_1_1Json_1_1Value.html</anchorfile>
      <anchor>afa3bc687dcde47b66257a8304f722d07</anchor>
      <arglist>(Object &amp;&amp;value)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Value</name>
      <anchorfile>classWt_1_1Json_1_1Value.html</anchorfile>
      <anchor>a25010126790a59bf3c55f24d1d2e3628</anchor>
      <arglist>(Type type)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Value</name>
      <anchorfile>classWt_1_1Json_1_1Value.html</anchorfile>
      <anchor>a0105097e8e033edc7377980f242154a3</anchor>
      <arglist>(const Value &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Value</name>
      <anchorfile>classWt_1_1Json_1_1Value.html</anchorfile>
      <anchor>ae816a693ad0a2d958066c753762c7bc3</anchor>
      <arglist>(Value &amp;&amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Value &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1Json_1_1Value.html</anchorfile>
      <anchor>a5491fdbb3afe87330584504e0c66a04f</anchor>
      <arglist>(const Value &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Value &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1Json_1_1Value.html</anchorfile>
      <anchor>a9d4920c1a834b8266439ce2ce822fe77</anchor>
      <arglist>(Value &amp;&amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Value &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1Json_1_1Value.html</anchorfile>
      <anchor>a793a9475f52536a3abded125bedbdf2c</anchor>
      <arglist>(Object &amp;&amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Value &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1Json_1_1Value.html</anchorfile>
      <anchor>a64def5f428d618807a2bd721e1761970</anchor>
      <arglist>(Array &amp;&amp;other)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classWt_1_1Json_1_1Value.html</anchorfile>
      <anchor>a174eb2b40809a006636c67dde33b2ec6</anchor>
      <arglist>(const Value &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classWt_1_1Json_1_1Value.html</anchorfile>
      <anchor>ac17dcc72929b11ebcfa35867f7893089</anchor>
      <arglist>(const Value &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>Type</type>
      <name>type</name>
      <anchorfile>classWt_1_1Json_1_1Value.html</anchorfile>
      <anchor>a60f2c6e45a16a9c51971c56beaabde5b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isNull</name>
      <anchorfile>classWt_1_1Json_1_1Value.html</anchorfile>
      <anchor>aec7270d9e402a9b45fd046ac85683a08</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasType</name>
      <anchorfile>classWt_1_1Json_1_1Value.html</anchorfile>
      <anchor>a746504148e29857301ff0749c6c2cdea</anchor>
      <arglist>(const std::type_info &amp;type) const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator const WString &amp;</name>
      <anchorfile>classWt_1_1Json_1_1Value.html</anchorfile>
      <anchor>a605590c50401ed6276dd3c9b52bd8f5c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator std::string</name>
      <anchorfile>classWt_1_1Json_1_1Value.html</anchorfile>
      <anchor>a79598a01acb896527512aa294ecf5926</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator bool</name>
      <anchorfile>classWt_1_1Json_1_1Value.html</anchorfile>
      <anchor>af6e22492a027af1728372ba79062865f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator int</name>
      <anchorfile>classWt_1_1Json_1_1Value.html</anchorfile>
      <anchor>a62bcf3b548a06bd7815e6308ebcc8765</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator long long</name>
      <anchorfile>classWt_1_1Json_1_1Value.html</anchorfile>
      <anchor>a775fe94b132591d083b46ca1b81075bd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator double</name>
      <anchorfile>classWt_1_1Json_1_1Value.html</anchorfile>
      <anchor>a91d768f7a9b1f282a10079d63fc002a9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator const Array &amp;</name>
      <anchorfile>classWt_1_1Json_1_1Value.html</anchorfile>
      <anchor>a96a1ab85e54fb9de7db6aae96357f16e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator const Object &amp;</name>
      <anchorfile>classWt_1_1Json_1_1Value.html</anchorfile>
      <anchor>a2953230b8c3a6cb761c5376f61e22e0a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator Array &amp;</name>
      <anchorfile>classWt_1_1Json_1_1Value.html</anchorfile>
      <anchor>ab0aa6e7b5b5b35056e4238ccd4a0e5e8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator Object &amp;</name>
      <anchorfile>classWt_1_1Json_1_1Value.html</anchorfile>
      <anchor>a95408a6c1c59ba1696657d9ac2b538d0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const WString &amp;</type>
      <name>orIfNull</name>
      <anchorfile>classWt_1_1Json_1_1Value.html</anchorfile>
      <anchor>afed5b5a6a44d556238c4d7de08b3e880</anchor>
      <arglist>(const WString &amp;v) const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>orIfNull</name>
      <anchorfile>classWt_1_1Json_1_1Value.html</anchorfile>
      <anchor>a507d3dbfefa5fb60319ee94e88ae30d0</anchor>
      <arglist>(const char *v) const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>orIfNull</name>
      <anchorfile>classWt_1_1Json_1_1Value.html</anchorfile>
      <anchor>ae8bcf71b2f6bb5a589306f459f386141</anchor>
      <arglist>(const std::string &amp;v) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>orIfNull</name>
      <anchorfile>classWt_1_1Json_1_1Value.html</anchorfile>
      <anchor>a3c7df87e5ee275d9a00ff6b0ca54a054</anchor>
      <arglist>(bool v) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>orIfNull</name>
      <anchorfile>classWt_1_1Json_1_1Value.html</anchorfile>
      <anchor>a7bd5782492f7530e38436c0b0d4538c7</anchor>
      <arglist>(int v) const</arglist>
    </member>
    <member kind="function">
      <type>long long</type>
      <name>orIfNull</name>
      <anchorfile>classWt_1_1Json_1_1Value.html</anchorfile>
      <anchor>ae75fecf58f9c7920101411a0edd2d452</anchor>
      <arglist>(long long v) const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>orIfNull</name>
      <anchorfile>classWt_1_1Json_1_1Value.html</anchorfile>
      <anchor>a2201a931e5d5a80a1e5e0dd048d22e61</anchor>
      <arglist>(double v) const</arglist>
    </member>
    <member kind="function">
      <type>const Array &amp;</type>
      <name>orIfNull</name>
      <anchorfile>classWt_1_1Json_1_1Value.html</anchorfile>
      <anchor>aac3e1d27eb0caf3b894e477855e0634b</anchor>
      <arglist>(const Array &amp;v) const</arglist>
    </member>
    <member kind="function">
      <type>const Object &amp;</type>
      <name>orIfNull</name>
      <anchorfile>classWt_1_1Json_1_1Value.html</anchorfile>
      <anchor>ad4f013c25e96f8b0315050f629e41727</anchor>
      <arglist>(const Object &amp;v) const</arglist>
    </member>
    <member kind="function">
      <type>Value</type>
      <name>toString</name>
      <anchorfile>classWt_1_1Json_1_1Value.html</anchorfile>
      <anchor>a6ea8c29de646cd9fab0260608827e6fd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Value</type>
      <name>toBool</name>
      <anchorfile>classWt_1_1Json_1_1Value.html</anchorfile>
      <anchor>a69ffc8ca27a14e9872f7b0b2c027f675</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Value</type>
      <name>toNumber</name>
      <anchorfile>classWt_1_1Json_1_1Value.html</anchorfile>
      <anchor>a1a34929b5ebd5d932914ddf26f365fc1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Type</type>
      <name>typeOf</name>
      <anchorfile>classWt_1_1Json_1_1Value.html</anchorfile>
      <anchor>afaaad5b35b6a335625f3ffd1864b26f9</anchor>
      <arglist>(const std::type_info &amp;type)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const Value</type>
      <name>Null</name>
      <anchorfile>classWt_1_1Json_1_1Value.html</anchorfile>
      <anchor>a344e20a378d9e91effbf91772b409942</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const Value</type>
      <name>True</name>
      <anchorfile>classWt_1_1Json_1_1Value.html</anchorfile>
      <anchor>a0b472f97bcb1908d148aab05a675d611</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const Value</type>
      <name>False</name>
      <anchorfile>classWt_1_1Json_1_1Value.html</anchorfile>
      <anchor>af1ed0e8d1b099f4cbc30001d65928f8e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>linb::any::vtable_dynamic</name>
    <filename>structlinb_1_1any_1_1vtable__dynamic.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>linb::any::vtable_stack</name>
    <filename>structlinb_1_1any_1_1vtable__stack.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>linb::any::vtable_type</name>
    <filename>structlinb_1_1any_1_1vtable__type.html</filename>
    <member kind="variable">
      <type>const std::type_info &amp;(*</type>
      <name>type</name>
      <anchorfile>structlinb_1_1any_1_1vtable__type.html</anchorfile>
      <anchor>a30ece2c0cf9832527aaf50ef8bb6fdc1</anchor>
      <arglist>)() noexcept</arglist>
    </member>
    <member kind="variable">
      <type>void(*</type>
      <name>destroy</name>
      <anchorfile>structlinb_1_1any_1_1vtable__type.html</anchorfile>
      <anchor>af938d9c1bd6d8f608daf58aa1ddc635a</anchor>
      <arglist>)(storage_union &amp;) noexcept</arglist>
    </member>
    <member kind="variable">
      <type>void(*</type>
      <name>copy</name>
      <anchorfile>structlinb_1_1any_1_1vtable__type.html</anchorfile>
      <anchor>a30a6d14d0a8652e6364e1b3195e30133</anchor>
      <arglist>)(const storage_union &amp;src, storage_union &amp;dest)</arglist>
    </member>
    <member kind="variable">
      <type>void(*</type>
      <name>move</name>
      <anchorfile>structlinb_1_1any_1_1vtable__type.html</anchorfile>
      <anchor>aa539551c552458e9d08951abb7055630</anchor>
      <arglist>)(storage_union &amp;src, storage_union &amp;dest) noexcept</arglist>
    </member>
    <member kind="variable">
      <type>void(*</type>
      <name>swap</name>
      <anchorfile>structlinb_1_1any_1_1vtable__type.html</anchorfile>
      <anchor>a1079c06f487353b51e5d4371e3aa3e81</anchor>
      <arglist>)(storage_union &amp;lhs, storage_union &amp;rhs) noexcept</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WAbstractArea</name>
    <filename>classWt_1_1WAbstractArea.html</filename>
    <base>Wt::WObject</base>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~WAbstractArea</name>
      <anchorfile>classWt_1_1WAbstractArea.html</anchorfile>
      <anchor>a2ca3fe7cc0229dffe137d2cd4edf7c50</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setHole</name>
      <anchorfile>classWt_1_1WAbstractArea.html</anchorfile>
      <anchor>af3c8461b36ec142326d0204e16c9bb34</anchor>
      <arglist>(bool hole)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isHole</name>
      <anchorfile>classWt_1_1WAbstractArea.html</anchorfile>
      <anchor>adbda5ee4064cfc627e9427726fdcca9d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLink</name>
      <anchorfile>classWt_1_1WAbstractArea.html</anchorfile>
      <anchor>a3a442feaa8191203d8d1858d98f5711a</anchor>
      <arglist>(const WLink &amp;link)</arglist>
    </member>
    <member kind="function">
      <type>WLink</type>
      <name>link</name>
      <anchorfile>classWt_1_1WAbstractArea.html</anchorfile>
      <anchor>ab11718948e75650a4d1d1327b1b57e4b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAlternateText</name>
      <anchorfile>classWt_1_1WAbstractArea.html</anchorfile>
      <anchor>a0119bf73439f81f83b754906785746bf</anchor>
      <arglist>(const WString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>const WString</type>
      <name>alternateText</name>
      <anchorfile>classWt_1_1WAbstractArea.html</anchorfile>
      <anchor>afe79f09eb0670331d718a485dc81eedb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setToolTip</name>
      <anchorfile>classWt_1_1WAbstractArea.html</anchorfile>
      <anchor>a310e8e1d6360d22bf8bf0e484a52b8f9</anchor>
      <arglist>(const WString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>WString</type>
      <name>toolTip</name>
      <anchorfile>classWt_1_1WAbstractArea.html</anchorfile>
      <anchor>ae2d00e81c1d7e253b0e210bccae60cb8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setStyleClass</name>
      <anchorfile>classWt_1_1WAbstractArea.html</anchorfile>
      <anchor>a93454d8fbd260de0319ac6e81e025a82</anchor>
      <arglist>(const WString &amp;styleClass)</arglist>
    </member>
    <member kind="function">
      <type>WString</type>
      <name>styleClass</name>
      <anchorfile>classWt_1_1WAbstractArea.html</anchorfile>
      <anchor>a4ff12cc904eecaac48ad380599b5813f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addStyleClass</name>
      <anchorfile>classWt_1_1WAbstractArea.html</anchorfile>
      <anchor>a21e4667870ca5d036d4f284407c5bd1c</anchor>
      <arglist>(const WString &amp;styleClass, bool force=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeStyleClass</name>
      <anchorfile>classWt_1_1WAbstractArea.html</anchorfile>
      <anchor>a3042ae12df27fa37b4371c61e63feb52</anchor>
      <arglist>(const WString &amp;styleClass, bool force=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCursor</name>
      <anchorfile>classWt_1_1WAbstractArea.html</anchorfile>
      <anchor>a818e8fae698db20d7cc6e5788891c04c</anchor>
      <arglist>(Cursor cursor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCursor</name>
      <anchorfile>classWt_1_1WAbstractArea.html</anchorfile>
      <anchor>a692bfe38ae36fd433633840a160ed765</anchor>
      <arglist>(std::string cursorImage, Cursor fallback=Cursor::Arrow)</arglist>
    </member>
    <member kind="function">
      <type>Cursor</type>
      <name>cursor</name>
      <anchorfile>classWt_1_1WAbstractArea.html</anchorfile>
      <anchor>a5cfcb3eff5554d1befe6c11137b7a74d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>EventSignal&lt; WKeyEvent &gt; &amp;</type>
      <name>keyWentDown</name>
      <anchorfile>classWt_1_1WAbstractArea.html</anchorfile>
      <anchor>a36ccd6ca70e5ae98f6257034d294ba7e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EventSignal&lt; WKeyEvent &gt; &amp;</type>
      <name>keyPressed</name>
      <anchorfile>classWt_1_1WAbstractArea.html</anchorfile>
      <anchor>ae4053ad9c11e54135c43f2b667aeb859</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EventSignal&lt; WKeyEvent &gt; &amp;</type>
      <name>keyWentUp</name>
      <anchorfile>classWt_1_1WAbstractArea.html</anchorfile>
      <anchor>a42b2613337cec7ea05d3c9f0cb679ee3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EventSignal &amp;</type>
      <name>enterPressed</name>
      <anchorfile>classWt_1_1WAbstractArea.html</anchorfile>
      <anchor>a3fc50b2d0632bc6b02fd3c1c350042fd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EventSignal &amp;</type>
      <name>escapePressed</name>
      <anchorfile>classWt_1_1WAbstractArea.html</anchorfile>
      <anchor>a0527bbfdfdee7bdf24e6860a22ff3dff</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EventSignal&lt; WMouseEvent &gt; &amp;</type>
      <name>clicked</name>
      <anchorfile>classWt_1_1WAbstractArea.html</anchorfile>
      <anchor>acc47a02510ddcc77db551fa51e1479bf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EventSignal&lt; WMouseEvent &gt; &amp;</type>
      <name>doubleClicked</name>
      <anchorfile>classWt_1_1WAbstractArea.html</anchorfile>
      <anchor>a82ece2a2dcb5b292c997a4c2f2a5b5b9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EventSignal&lt; WMouseEvent &gt; &amp;</type>
      <name>mouseWentDown</name>
      <anchorfile>classWt_1_1WAbstractArea.html</anchorfile>
      <anchor>ae37e2b91aee383e8a19ce6b507f2a98d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EventSignal&lt; WMouseEvent &gt; &amp;</type>
      <name>mouseWentUp</name>
      <anchorfile>classWt_1_1WAbstractArea.html</anchorfile>
      <anchor>a5b4531eae4eaa76257809b229d0aea4d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EventSignal&lt; WMouseEvent &gt; &amp;</type>
      <name>mouseWentOut</name>
      <anchorfile>classWt_1_1WAbstractArea.html</anchorfile>
      <anchor>acdfc86cb6fbbc48686a8157ae5d164cd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EventSignal&lt; WMouseEvent &gt; &amp;</type>
      <name>mouseWentOver</name>
      <anchorfile>classWt_1_1WAbstractArea.html</anchorfile>
      <anchor>a24aeff45daab0cea72d38fdaf35019aa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EventSignal&lt; WMouseEvent &gt; &amp;</type>
      <name>mouseMoved</name>
      <anchorfile>classWt_1_1WAbstractArea.html</anchorfile>
      <anchor>a574e2e0de96f0fc4a31a4fb5a21e2262</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EventSignal&lt; WMouseEvent &gt; &amp;</type>
      <name>mouseDragged</name>
      <anchorfile>classWt_1_1WAbstractArea.html</anchorfile>
      <anchor>a79496c197ea3f3c35c853eaab18bf432</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EventSignal&lt; WMouseEvent &gt; &amp;</type>
      <name>mouseWheel</name>
      <anchorfile>classWt_1_1WAbstractArea.html</anchorfile>
      <anchor>a3dbe39c26769a63e4bf63020e31e9f22</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Chart::WAbstractChart</name>
    <filename>classWt_1_1Chart_1_1WAbstractChart.html</filename>
    <base>Wt::WPaintedWidget</base>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~WAbstractChart</name>
      <anchorfile>classWt_1_1Chart_1_1WAbstractChart.html</anchorfile>
      <anchor>a7301de2a5328282d736070f2304a7e90</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setModel</name>
      <anchorfile>classWt_1_1Chart_1_1WAbstractChart.html</anchorfile>
      <anchor>a2243e89c5ee56f48da4b1ca49e854c0f</anchor>
      <arglist>(const std::shared_ptr&lt; WAbstractItemModel &gt; &amp;model)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setModel</name>
      <anchorfile>classWt_1_1Chart_1_1WAbstractChart.html</anchorfile>
      <anchor>aa343129287941e7ff0d33b7f3ac14db2</anchor>
      <arglist>(const std::shared_ptr&lt; WAbstractChartModel &gt; &amp;model)</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; WAbstractChartModel &gt;</type>
      <name>model</name>
      <anchorfile>classWt_1_1Chart_1_1WAbstractChart.html</anchorfile>
      <anchor>a0a870daf504dcab3cd64a826fd603a13</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; WAbstractItemModel &gt;</type>
      <name>itemModel</name>
      <anchorfile>classWt_1_1Chart_1_1WAbstractChart.html</anchorfile>
      <anchor>a47ed201cc612ee0f160e26dd0d9d3d8e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBackground</name>
      <anchorfile>classWt_1_1Chart_1_1WAbstractChart.html</anchorfile>
      <anchor>ab306a6cfecf32fd9af3785fed75bd3ab</anchor>
      <arglist>(const WBrush &amp;background)</arglist>
    </member>
    <member kind="function">
      <type>const WBrush &amp;</type>
      <name>background</name>
      <anchorfile>classWt_1_1Chart_1_1WAbstractChart.html</anchorfile>
      <anchor>abf96605cb3fad1248baf8ca48c38d2a8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPalette</name>
      <anchorfile>classWt_1_1Chart_1_1WAbstractChart.html</anchorfile>
      <anchor>abcd30c2fe0da8f20b9de289bab7a99fd</anchor>
      <arglist>(const std::shared_ptr&lt; WChartPalette &gt; &amp;palette)</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; WChartPalette &gt;</type>
      <name>palette</name>
      <anchorfile>classWt_1_1Chart_1_1WAbstractChart.html</anchorfile>
      <anchor>a80931ff76b51d452eff6ef77dcf2bcd3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPlotAreaPadding</name>
      <anchorfile>classWt_1_1Chart_1_1WAbstractChart.html</anchorfile>
      <anchor>a53819c3e834a27c2b47bd79f69363c04</anchor>
      <arglist>(int padding, WFlags&lt; Side &gt; sides=AllSides)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>plotAreaPadding</name>
      <anchorfile>classWt_1_1Chart_1_1WAbstractChart.html</anchorfile>
      <anchor>a80d304ac0125c3eba68d3c5cec3fda4c</anchor>
      <arglist>(Side side) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAutoLayoutEnabled</name>
      <anchorfile>classWt_1_1Chart_1_1WAbstractChart.html</anchorfile>
      <anchor>ac895fb1d1437f51629b49246eda66e3d</anchor>
      <arglist>(bool enabled=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isAutoLayoutEnabled</name>
      <anchorfile>classWt_1_1Chart_1_1WAbstractChart.html</anchorfile>
      <anchor>a7fde8d8f51ec0f2420197d894aa6f1b1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTitle</name>
      <anchorfile>classWt_1_1Chart_1_1WAbstractChart.html</anchorfile>
      <anchor>a9ec4aba5d7c57110b7dddad8720e3aa0</anchor>
      <arglist>(const WString &amp;title)</arglist>
    </member>
    <member kind="function">
      <type>const WString &amp;</type>
      <name>title</name>
      <anchorfile>classWt_1_1Chart_1_1WAbstractChart.html</anchorfile>
      <anchor>a938c8d70139a85d85020f3acc8a73228</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTitleFont</name>
      <anchorfile>classWt_1_1Chart_1_1WAbstractChart.html</anchorfile>
      <anchor>a908247e8c84092cd74ae50af33745f95</anchor>
      <arglist>(const WFont &amp;titleFont)</arglist>
    </member>
    <member kind="function">
      <type>const WFont &amp;</type>
      <name>titleFont</name>
      <anchorfile>classWt_1_1Chart_1_1WAbstractChart.html</anchorfile>
      <anchor>a3d33101fec077de9115bf47ea775b870</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>paint</name>
      <anchorfile>classWt_1_1Chart_1_1WAbstractChart.html</anchorfile>
      <anchor>af642c65474e95ec0969906d8d31e2862</anchor>
      <arglist>(WPainter &amp;painter, const WRectF &amp;rectangle=WRectF()) const =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Chart::WAbstractChartModel</name>
    <filename>classWt_1_1Chart_1_1WAbstractChartModel.html</filename>
    <base>Wt::WObject</base>
    <member kind="function">
      <type></type>
      <name>WAbstractChartModel</name>
      <anchorfile>classWt_1_1Chart_1_1WAbstractChartModel.html</anchorfile>
      <anchor>a9337f4d0aae85b15ff40b68f01a3bd07</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>data</name>
      <anchorfile>classWt_1_1Chart_1_1WAbstractChartModel.html</anchorfile>
      <anchor>a765c5b7e5caa6a17b772dfceac996c1f</anchor>
      <arglist>(int row, int column) const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WString</type>
      <name>displayData</name>
      <anchorfile>classWt_1_1Chart_1_1WAbstractChartModel.html</anchorfile>
      <anchor>a48d401262237e0ab0edb50a747987314</anchor>
      <arglist>(int row, int column) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WString</type>
      <name>headerData</name>
      <anchorfile>classWt_1_1Chart_1_1WAbstractChartModel.html</anchorfile>
      <anchor>a8abb147f7d5619c915c5c78fbe4ebd98</anchor>
      <arglist>(int column) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WString</type>
      <name>toolTip</name>
      <anchorfile>classWt_1_1Chart_1_1WAbstractChartModel.html</anchorfile>
      <anchor>a5a10a74b4d0cfcfe12dcd37d1bd1c85d</anchor>
      <arglist>(int row, int column) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WFlags&lt; ItemFlag &gt;</type>
      <name>flags</name>
      <anchorfile>classWt_1_1Chart_1_1WAbstractChartModel.html</anchorfile>
      <anchor>a928f5309f7f274c595190561e1419f87</anchor>
      <arglist>(int row, int column) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WLink *</type>
      <name>link</name>
      <anchorfile>classWt_1_1Chart_1_1WAbstractChartModel.html</anchorfile>
      <anchor>a78660f77546e4f132f9f4237bfb59fc0</anchor>
      <arglist>(int row, int column) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const WColor *</type>
      <name>markerPenColor</name>
      <anchorfile>classWt_1_1Chart_1_1WAbstractChartModel.html</anchorfile>
      <anchor>ab28e78402d3063b02b5ca485ec1e9edf</anchor>
      <arglist>(int row, int column) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const WColor *</type>
      <name>markerBrushColor</name>
      <anchorfile>classWt_1_1Chart_1_1WAbstractChartModel.html</anchorfile>
      <anchor>a5faefe31ea91ac343d5bc2519151077c</anchor>
      <arglist>(int row, int column) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const MarkerType *</type>
      <name>markerType</name>
      <anchorfile>classWt_1_1Chart_1_1WAbstractChartModel.html</anchorfile>
      <anchor>a40eef37e1e09290faee6a5da5fce72ce</anchor>
      <arglist>(int row, int column) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const WColor *</type>
      <name>barPenColor</name>
      <anchorfile>classWt_1_1Chart_1_1WAbstractChartModel.html</anchorfile>
      <anchor>a5c612c4397efbda09a947c8a87e2f845</anchor>
      <arglist>(int row, int column) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const WColor *</type>
      <name>barBrushColor</name>
      <anchorfile>classWt_1_1Chart_1_1WAbstractChartModel.html</anchorfile>
      <anchor>a78d7eb8d816614403b3a2495b4b5fb83</anchor>
      <arglist>(int row, int column) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const double *</type>
      <name>markerScaleFactor</name>
      <anchorfile>classWt_1_1Chart_1_1WAbstractChartModel.html</anchorfile>
      <anchor>ac674e1521438c272bf49de7a9ea433f9</anchor>
      <arglist>(int row, int column) const</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>columnCount</name>
      <anchorfile>classWt_1_1Chart_1_1WAbstractChartModel.html</anchorfile>
      <anchor>a203174cbae9fa803b78ccbe947aec700</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>rowCount</name>
      <anchorfile>classWt_1_1Chart_1_1WAbstractChartModel.html</anchorfile>
      <anchor>ab32b64665f203fb2f739f72eacef6941</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Signal &amp;</type>
      <name>changed</name>
      <anchorfile>classWt_1_1Chart_1_1WAbstractChartModel.html</anchorfile>
      <anchor>a8514b7e6fd279e57e3812cf1a364a3aa</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Chart::WAbstractColorMap</name>
    <filename>classWt_1_1Chart_1_1WAbstractColorMap.html</filename>
    <base>Wt::WObject</base>
    <member kind="function">
      <type></type>
      <name>WAbstractColorMap</name>
      <anchorfile>classWt_1_1Chart_1_1WAbstractColorMap.html</anchorfile>
      <anchor>af482b7c6097cae4c36ba07dd31323e3d</anchor>
      <arglist>(double min, double max)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual WColor</type>
      <name>toColor</name>
      <anchorfile>classWt_1_1Chart_1_1WAbstractColorMap.html</anchorfile>
      <anchor>a03f852160999c66c87862782e40b76be</anchor>
      <arglist>(double value) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>createStrip</name>
      <anchorfile>classWt_1_1Chart_1_1WAbstractColorMap.html</anchorfile>
      <anchor>a67a26a302d735efeb310a9e4f7eb32ae</anchor>
      <arglist>(WPainter *painter, const WRectF &amp;area=WRectF()) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>paintLegend</name>
      <anchorfile>classWt_1_1Chart_1_1WAbstractColorMap.html</anchorfile>
      <anchor>a227ff91954cbe8caaa1f8c6f026af6a6</anchor>
      <arglist>(WPainter *painter, const WRectF &amp;area=WRectF()) const =0</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>minimum</name>
      <anchorfile>classWt_1_1Chart_1_1WAbstractColorMap.html</anchorfile>
      <anchor>a06ac67e0f81c466c427edc4723059d6e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>maximum</name>
      <anchorfile>classWt_1_1Chart_1_1WAbstractColorMap.html</anchorfile>
      <anchor>a7788cd3360f0ee6c5d26fbea087a11db</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTickSpacing</name>
      <anchorfile>classWt_1_1Chart_1_1WAbstractColorMap.html</anchorfile>
      <anchor>a73fd72a38644e08cf322bb5bd7123d12</anchor>
      <arglist>(int spacing)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>tickSpacing</name>
      <anchorfile>classWt_1_1Chart_1_1WAbstractColorMap.html</anchorfile>
      <anchor>adf30de87975c2b6b14a6a57f416e376c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFormatString</name>
      <anchorfile>classWt_1_1Chart_1_1WAbstractColorMap.html</anchorfile>
      <anchor>aa07ac0cd56150e40baa41f842402d357</anchor>
      <arglist>(const WString &amp;format)</arglist>
    </member>
    <member kind="function">
      <type>const WString &amp;</type>
      <name>formatString</name>
      <anchorfile>classWt_1_1Chart_1_1WAbstractColorMap.html</anchorfile>
      <anchor>a83a514b2f37b5f60f2b63a51934cd2f4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLabelFont</name>
      <anchorfile>classWt_1_1Chart_1_1WAbstractColorMap.html</anchorfile>
      <anchor>a21b6e7edc9867c4f3e5baaffc4092ff5</anchor>
      <arglist>(const WFont &amp;font)</arglist>
    </member>
    <member kind="function">
      <type>const WFont &amp;</type>
      <name>labelFont</name>
      <anchorfile>classWt_1_1Chart_1_1WAbstractColorMap.html</anchorfile>
      <anchor>addb90ef7020094d73688e18a0d7eefee</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Chart::WAbstractDataSeries3D</name>
    <filename>classWt_1_1Chart_1_1WAbstractDataSeries3D.html</filename>
    <base>Wt::WObject</base>
    <member kind="function">
      <type></type>
      <name>WAbstractDataSeries3D</name>
      <anchorfile>classWt_1_1Chart_1_1WAbstractDataSeries3D.html</anchorfile>
      <anchor>a575f62e309026182aa4336b4e3105444</anchor>
      <arglist>(std::shared_ptr&lt; WAbstractItemModel &gt; model)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTitle</name>
      <anchorfile>classWt_1_1Chart_1_1WAbstractDataSeries3D.html</anchorfile>
      <anchor>a6fa90e2168b69fea205f55bd6d5ae05c</anchor>
      <arglist>(const WString &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>const WString &amp;</type>
      <name>title</name>
      <anchorfile>classWt_1_1Chart_1_1WAbstractDataSeries3D.html</anchorfile>
      <anchor>af38182b82b508643cc8749d6f845f946</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setModel</name>
      <anchorfile>classWt_1_1Chart_1_1WAbstractDataSeries3D.html</anchorfile>
      <anchor>a1b7fe4d6ae21b20546d020168dd53f63</anchor>
      <arglist>(const std::shared_ptr&lt; WAbstractItemModel &gt; &amp;model)</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; WAbstractItemModel &gt;</type>
      <name>model</name>
      <anchorfile>classWt_1_1Chart_1_1WAbstractDataSeries3D.html</anchorfile>
      <anchor>a39179ec22819e7c95689bd878beffc33</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>minimum</name>
      <anchorfile>classWt_1_1Chart_1_1WAbstractDataSeries3D.html</anchorfile>
      <anchor>a69a9cdb0827605fbe4dd8472cac24668</anchor>
      <arglist>(Axis axis) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>maximum</name>
      <anchorfile>classWt_1_1Chart_1_1WAbstractDataSeries3D.html</anchorfile>
      <anchor>aa7bf2d8e3bd86b80e96f86ac0c1750a1</anchor>
      <arglist>(Axis axis) const =0</arglist>
    </member>
    <member kind="function">
      <type>const WCartesian3DChart *</type>
      <name>chart</name>
      <anchorfile>classWt_1_1Chart_1_1WAbstractDataSeries3D.html</anchorfile>
      <anchor>a139e202dbb24243b0ac1aa2ddcb70180</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPointSize</name>
      <anchorfile>classWt_1_1Chart_1_1WAbstractDataSeries3D.html</anchorfile>
      <anchor>af6046a048fc03ddcc453dd98e4dd398a</anchor>
      <arglist>(double size)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>pointSize</name>
      <anchorfile>classWt_1_1Chart_1_1WAbstractDataSeries3D.html</anchorfile>
      <anchor>a19428c82734b0f37e2fa121a22e69c60</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPointSprite</name>
      <anchorfile>classWt_1_1Chart_1_1WAbstractDataSeries3D.html</anchorfile>
      <anchor>a0ac582c98fe58f36e0d60f11b5627656</anchor>
      <arglist>(const std::string &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>pointSprite</name>
      <anchorfile>classWt_1_1Chart_1_1WAbstractDataSeries3D.html</anchorfile>
      <anchor>a80ee5e730c4004f05d41054be3898652</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setColorMap</name>
      <anchorfile>classWt_1_1Chart_1_1WAbstractDataSeries3D.html</anchorfile>
      <anchor>a05a0b75a253302bfcfc288dbf913351b</anchor>
      <arglist>(const std::shared_ptr&lt; WAbstractColorMap &gt; &amp;colormap)</arglist>
    </member>
    <member kind="function">
      <type>const WAbstractColorMap *</type>
      <name>colorMap</name>
      <anchorfile>classWt_1_1Chart_1_1WAbstractDataSeries3D.html</anchorfile>
      <anchor>ab620542a33ff5ace4c7adbc9e06c6141</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setColorMapVisible</name>
      <anchorfile>classWt_1_1Chart_1_1WAbstractDataSeries3D.html</anchorfile>
      <anchor>a4d2d42400ab765e08ca57d007eeb2595</anchor>
      <arglist>(bool enabled=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>colorMapVisible</name>
      <anchorfile>classWt_1_1Chart_1_1WAbstractDataSeries3D.html</anchorfile>
      <anchor>a38c14e0ff819b7310525464d2cd37b52</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setColorMapSide</name>
      <anchorfile>classWt_1_1Chart_1_1WAbstractDataSeries3D.html</anchorfile>
      <anchor>a886ff2084f2be4f0b061bd2579c0a8d2</anchor>
      <arglist>(Side side)</arglist>
    </member>
    <member kind="function">
      <type>Side</type>
      <name>colorMapSide</name>
      <anchorfile>classWt_1_1Chart_1_1WAbstractDataSeries3D.html</anchorfile>
      <anchor>a7353231a6cb23369cb917b0191d48327</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLegendEnabled</name>
      <anchorfile>classWt_1_1Chart_1_1WAbstractDataSeries3D.html</anchorfile>
      <anchor>adb73f255379210b04f1ff3ad3c51cd1d</anchor>
      <arglist>(bool enabled=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isLegendEnabled</name>
      <anchorfile>classWt_1_1Chart_1_1WAbstractDataSeries3D.html</anchorfile>
      <anchor>a68ac82fc2c57c83be87a47e07032e7ee</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setHidden</name>
      <anchorfile>classWt_1_1Chart_1_1WAbstractDataSeries3D.html</anchorfile>
      <anchor>afb0b01644644af1d5e2c68160442d574</anchor>
      <arglist>(bool enabled=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isHidden</name>
      <anchorfile>classWt_1_1Chart_1_1WAbstractDataSeries3D.html</anchorfile>
      <anchor>a2f8dcb0c792ff08f675ff5913d5194f0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>initializeGL</name>
      <anchorfile>classWt_1_1Chart_1_1WAbstractDataSeries3D.html</anchorfile>
      <anchor>a09f88c47c2fd01d83860dab188cad9b7</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>paintGL</name>
      <anchorfile>classWt_1_1Chart_1_1WAbstractDataSeries3D.html</anchorfile>
      <anchor>ab2965d965dbc6049756033bc40f80025</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>updateGL</name>
      <anchorfile>classWt_1_1Chart_1_1WAbstractDataSeries3D.html</anchorfile>
      <anchor>ab97b255bfc1c4af25da3828c82a8a8c7</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>resizeGL</name>
      <anchorfile>classWt_1_1Chart_1_1WAbstractDataSeries3D.html</anchorfile>
      <anchor>a77b0cad018156361205753ae16cebfcd</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>deleteAllGLResources</name>
      <anchorfile>classWt_1_1Chart_1_1WAbstractDataSeries3D.html</anchorfile>
      <anchor>a49434192a0398755cec3bd1760450d46</anchor>
      <arglist>()=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Chart::WAbstractGridData</name>
    <filename>classWt_1_1Chart_1_1WAbstractGridData.html</filename>
    <base>Wt::Chart::WAbstractDataSeries3D</base>
    <member kind="function">
      <type></type>
      <name>WAbstractGridData</name>
      <anchorfile>classWt_1_1Chart_1_1WAbstractGridData.html</anchorfile>
      <anchor>a89ca69c761b35a37c93ed42a695a5f48</anchor>
      <arglist>(std::shared_ptr&lt; WAbstractItemModel &gt; model)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>minimum</name>
      <anchorfile>classWt_1_1Chart_1_1WAbstractGridData.html</anchorfile>
      <anchor>a0679d73b58f8b9f42d52d04b9127211a</anchor>
      <arglist>(Axis axis) const override=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>maximum</name>
      <anchorfile>classWt_1_1Chart_1_1WAbstractGridData.html</anchorfile>
      <anchor>a8e761cb3a19340ccd5690bb6d254f196</anchor>
      <arglist>(Axis axis) const override=0</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setType</name>
      <anchorfile>classWt_1_1Chart_1_1WAbstractGridData.html</anchorfile>
      <anchor>aaa3399a1aed5a7b88b69f52d66f63be6</anchor>
      <arglist>(Series3DType type)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Series3DType</type>
      <name>type</name>
      <anchorfile>classWt_1_1Chart_1_1WAbstractGridData.html</anchorfile>
      <anchor>a6f55053a2a5d9d1b935717979ae4b3da</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSurfaceMeshEnabled</name>
      <anchorfile>classWt_1_1Chart_1_1WAbstractGridData.html</anchorfile>
      <anchor>a0ac10568c6c4366be0618b485bd5a034</anchor>
      <arglist>(bool enabled=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSurfaceMeshEnabled</name>
      <anchorfile>classWt_1_1Chart_1_1WAbstractGridData.html</anchorfile>
      <anchor>a90fa00ddeac8c6dd505ee6def9d848ea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBarWidth</name>
      <anchorfile>classWt_1_1Chart_1_1WAbstractGridData.html</anchorfile>
      <anchor>a79fdcfbba4c44ab656ee7a01b5235914</anchor>
      <arglist>(double xWidth, double yWidth)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>barWidthX</name>
      <anchorfile>classWt_1_1Chart_1_1WAbstractGridData.html</anchorfile>
      <anchor>a60da491b5b72cfbf1256061e2352a866</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>barWidthY</name>
      <anchorfile>classWt_1_1Chart_1_1WAbstractGridData.html</anchorfile>
      <anchor>a9debe09245778851b11827f9f63b2b4e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPen</name>
      <anchorfile>classWt_1_1Chart_1_1WAbstractGridData.html</anchorfile>
      <anchor>a31d7fe38ac318b5ca6891d609648a2b3</anchor>
      <arglist>(const WPen &amp;pen)</arglist>
    </member>
    <member kind="function">
      <type>WPen</type>
      <name>pen</name>
      <anchorfile>classWt_1_1Chart_1_1WAbstractGridData.html</anchorfile>
      <anchor>a8ffa35b4fa40716d136852184b50aed0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; WSurfaceSelection &gt;</type>
      <name>pickSurface</name>
      <anchorfile>classWt_1_1Chart_1_1WAbstractGridData.html</anchorfile>
      <anchor>a8681b787a53de0dd6234d885036b5021</anchor>
      <arglist>(int x, int y) const</arglist>
    </member>
    <member kind="function">
      <type>WBarSelection</type>
      <name>pickBar</name>
      <anchorfile>classWt_1_1Chart_1_1WAbstractGridData.html</anchorfile>
      <anchor>a156da52a0c9d9b3340c21e14db05ad73</anchor>
      <arglist>(int x, int y) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setIsoLevels</name>
      <anchorfile>classWt_1_1Chart_1_1WAbstractGridData.html</anchorfile>
      <anchor>a09c065c802ff9b21d3c2a543e48f58b2</anchor>
      <arglist>(const std::vector&lt; double &gt; &amp;isoLevels)</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; double &gt; &amp;</type>
      <name>isoLevels</name>
      <anchorfile>classWt_1_1Chart_1_1WAbstractGridData.html</anchorfile>
      <anchor>a2a3881cb3fccdff51d5f877393148ca9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setIsoColorMap</name>
      <anchorfile>classWt_1_1Chart_1_1WAbstractGridData.html</anchorfile>
      <anchor>ad81635441f90ea60212addd04b9c5bfb</anchor>
      <arglist>(const std::shared_ptr&lt; WAbstractColorMap &gt; &amp;colormap)</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; WAbstractColorMap &gt;</type>
      <name>isoColorMap</name>
      <anchorfile>classWt_1_1Chart_1_1WAbstractGridData.html</anchorfile>
      <anchor>a3e5350a902b9d62cf07638806a56b45e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setClippingMin</name>
      <anchorfile>classWt_1_1Chart_1_1WAbstractGridData.html</anchorfile>
      <anchor>a3b26ea3095e5be0017a9b1fe2ea3742a</anchor>
      <arglist>(Axis axis, float v)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>clippingMin</name>
      <anchorfile>classWt_1_1Chart_1_1WAbstractGridData.html</anchorfile>
      <anchor>a1b463f203a17153e3770d93a01a4a803</anchor>
      <arglist>(Axis axis) const</arglist>
    </member>
    <member kind="function">
      <type>JSlot &amp;</type>
      <name>changeClippingMin</name>
      <anchorfile>classWt_1_1Chart_1_1WAbstractGridData.html</anchorfile>
      <anchor>a4c24a4ef04094e77ffee62c7164af1b4</anchor>
      <arglist>(Axis axis)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setClippingMax</name>
      <anchorfile>classWt_1_1Chart_1_1WAbstractGridData.html</anchorfile>
      <anchor>a9eec119892b92e3e2dcfd5e8009dc9f8</anchor>
      <arglist>(Axis axis, float v)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>clippingMax</name>
      <anchorfile>classWt_1_1Chart_1_1WAbstractGridData.html</anchorfile>
      <anchor>a516694f610ce6e422cc6f55c184b60d1</anchor>
      <arglist>(Axis axis) const</arglist>
    </member>
    <member kind="function">
      <type>JSlot &amp;</type>
      <name>changeClippingMax</name>
      <anchorfile>classWt_1_1Chart_1_1WAbstractGridData.html</anchorfile>
      <anchor>a04cffd5521c56865ea511a74f99bded9</anchor>
      <arglist>(Axis axis)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setClippingLinesEnabled</name>
      <anchorfile>classWt_1_1Chart_1_1WAbstractGridData.html</anchorfile>
      <anchor>ad74945761f9bfcc2ced42487468c5480</anchor>
      <arglist>(bool clippingLinesEnabled)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>clippingLinesEnabled</name>
      <anchorfile>classWt_1_1Chart_1_1WAbstractGridData.html</anchorfile>
      <anchor>a3f7773f2d10c35f62013ab8780e64254</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setClippingLinesColor</name>
      <anchorfile>classWt_1_1Chart_1_1WAbstractGridData.html</anchorfile>
      <anchor>a2837a58e40805502740fa29b6b73beb5</anchor>
      <arglist>(WColor color)</arglist>
    </member>
    <member kind="function">
      <type>WColor</type>
      <name>clippingLinesColor</name>
      <anchorfile>classWt_1_1Chart_1_1WAbstractGridData.html</anchorfile>
      <anchor>a4278ae4155b312cd2e219c739d1cfd8c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>initializeGL</name>
      <anchorfile>classWt_1_1Chart_1_1WAbstractGridData.html</anchorfile>
      <anchor>a4a1fbf9d39e2afafa2f34ffe7e8d577a</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>paintGL</name>
      <anchorfile>classWt_1_1Chart_1_1WAbstractGridData.html</anchorfile>
      <anchor>a64a2ae6b324fb6f48eb07579fddcdcd0</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>updateGL</name>
      <anchorfile>classWt_1_1Chart_1_1WAbstractGridData.html</anchorfile>
      <anchor>a2b61a4f307dff98d6073841ce2a78f81</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>resizeGL</name>
      <anchorfile>classWt_1_1Chart_1_1WAbstractGridData.html</anchorfile>
      <anchor>a72fd3bf12e7e95c674a5f184cc219e35</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>deleteAllGLResources</name>
      <anchorfile>classWt_1_1Chart_1_1WAbstractGridData.html</anchorfile>
      <anchor>a530448efc97124728a93daa1d5948b31</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WAbstractItemDelegate</name>
    <filename>classWt_1_1WAbstractItemDelegate.html</filename>
    <base>Wt::WObject</base>
    <member kind="function">
      <type></type>
      <name>WAbstractItemDelegate</name>
      <anchorfile>classWt_1_1WAbstractItemDelegate.html</anchorfile>
      <anchor>ab10f19d10402f5d3a7a598429eb76dbc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~WAbstractItemDelegate</name>
      <anchorfile>classWt_1_1WAbstractItemDelegate.html</anchorfile>
      <anchor>a1503db9b186ba0f21bde4852f1bcbf8a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::unique_ptr&lt; WWidget &gt;</type>
      <name>update</name>
      <anchorfile>classWt_1_1WAbstractItemDelegate.html</anchorfile>
      <anchor>a3d1735427e5dac683a19d156536db12d</anchor>
      <arglist>(WWidget *widget, const WModelIndex &amp;index, WFlags&lt; ViewItemRenderFlag &gt; flags)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>updateModelIndex</name>
      <anchorfile>classWt_1_1WAbstractItemDelegate.html</anchorfile>
      <anchor>ac5aefa0246f0fed2dcbf9493a98205c5</anchor>
      <arglist>(WWidget *widget, const WModelIndex &amp;index)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual cpp17::any</type>
      <name>editState</name>
      <anchorfile>classWt_1_1WAbstractItemDelegate.html</anchorfile>
      <anchor>a5c11da7746e3191400b03fcb77278ff2</anchor>
      <arglist>(WWidget *widget, const WModelIndex &amp;index) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setEditState</name>
      <anchorfile>classWt_1_1WAbstractItemDelegate.html</anchorfile>
      <anchor>ac33fc9a69f04a4b4a4fb07737815f4db</anchor>
      <arglist>(WWidget *widget, const WModelIndex &amp;index, const cpp17::any &amp;value) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ValidationState</type>
      <name>validate</name>
      <anchorfile>classWt_1_1WAbstractItemDelegate.html</anchorfile>
      <anchor>a413ebb6b5fbee4ee51d63a3ae7ded9fa</anchor>
      <arglist>(const WModelIndex &amp;index, const cpp17::any &amp;editState) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setModelData</name>
      <anchorfile>classWt_1_1WAbstractItemDelegate.html</anchorfile>
      <anchor>ad468f58187cf617ba5d52218815e8382</anchor>
      <arglist>(const cpp17::any &amp;editState, WAbstractItemModel *model, const WModelIndex &amp;index) const</arglist>
    </member>
    <member kind="function">
      <type>Signal&lt; WWidget *, bool &gt; &amp;</type>
      <name>closeEditor</name>
      <anchorfile>classWt_1_1WAbstractItemDelegate.html</anchorfile>
      <anchor>a02e957cf6c1f1e9a98c6de7dbe33ff07</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Signal&lt; WWidget *, bool &gt; &amp;</type>
      <name>closeEditor</name>
      <anchorfile>classWt_1_1WAbstractItemDelegate.html</anchorfile>
      <anchor>a5fa68f5e5ec80ca33c4c9ae1c4d25ec1</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WAbstractItemModel</name>
    <filename>classWt_1_1WAbstractItemModel.html</filename>
    <base>Wt::WObject</base>
    <member kind="typedef">
      <type>std::map&lt; ItemDataRole, cpp17::any &gt;</type>
      <name>DataMap</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>a1f5858f68611d651fc15e35f64171911</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WAbstractItemModel</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>a834feffd1eab95577689b01af4098326</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>columnCount</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>abcf7912a95a0a60f8e9b1c37d30b8383</anchor>
      <arglist>(const WModelIndex &amp;parent=WModelIndex()) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>rowCount</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>ab0709a8f71fd5df882f29bb29fd055f0</anchor>
      <arglist>(const WModelIndex &amp;parent=WModelIndex()) const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WFlags&lt; ItemFlag &gt;</type>
      <name>flags</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>a7cbb55e15331bcd5d19d7335070d13a4</anchor>
      <arglist>(const WModelIndex &amp;index) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WFlags&lt; HeaderFlag &gt;</type>
      <name>headerFlags</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>a22cc18cd9cc4a5d05dc21e0170edab78</anchor>
      <arglist>(int section, Orientation orientation=Orientation::Horizontal) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>hasChildren</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>ae658cae0fc0f633794ba164b24d6d5c0</anchor>
      <arglist>(const WModelIndex &amp;index) const</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual WModelIndex</type>
      <name>parent</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>ada454d45706ca0c1a0921dedd351c48c</anchor>
      <arglist>(const WModelIndex &amp;index) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual cpp17::any</type>
      <name>data</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>af77f707dd2340652717e7122cd7f4ffd</anchor>
      <arglist>(const WModelIndex &amp;index, ItemDataRole role=ItemDataRole::Display) const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DataMap</type>
      <name>itemData</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>ad851bc50c82e41b5402e24c822d11ed6</anchor>
      <arglist>(const WModelIndex &amp;index) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual cpp17::any</type>
      <name>headerData</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>a0c25fb37279022e643c2054a405bbc68</anchor>
      <arglist>(int section, Orientation orientation=Orientation::Horizontal, ItemDataRole role=ItemDataRole::Display) const</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual WModelIndex</type>
      <name>index</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>a83f37bf04b8574b328c139b02523b8cb</anchor>
      <arglist>(int row, int column, const WModelIndex &amp;parent=WModelIndex()) const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WModelIndexList</type>
      <name>match</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>a477fccd4e47cf6d48334fd8bc90b4e1d</anchor>
      <arglist>(const WModelIndex &amp;start, ItemDataRole role, const cpp17::any &amp;value, int hits=-1, WFlags&lt; MatchFlag &gt; flags=WFlags&lt; MatchFlag &gt;(MatchFlag::StartsWith|MatchFlag::Wrap)) const</arglist>
    </member>
    <member kind="function">
      <type>cpp17::any</type>
      <name>data</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>a5fc67e5fbb584cd1c6e6108ad07ff484</anchor>
      <arglist>(int row, int column, ItemDataRole role=ItemDataRole::Display, const WModelIndex &amp;parent=WModelIndex()) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>hasIndex</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>a01c8e7264f9c599f585314acfb03ba9a</anchor>
      <arglist>(int row, int column, const WModelIndex &amp;parent=WModelIndex()) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>insertColumns</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>a1eded9eb68b9247ae2ff371f74a5e5f2</anchor>
      <arglist>(int column, int count, const WModelIndex &amp;parent=WModelIndex())</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>insertRows</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>abcafc38dc24fd9edf70eafe834ca411d</anchor>
      <arglist>(int row, int count, const WModelIndex &amp;parent=WModelIndex())</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>removeColumns</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>a27428d1a02830336ec9db69c6d0b0762</anchor>
      <arglist>(int column, int count, const WModelIndex &amp;parent=WModelIndex())</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>removeRows</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>a29cf3003ee8f97b2b5de9c52af27361a</anchor>
      <arglist>(int row, int count, const WModelIndex &amp;parent=WModelIndex())</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>setData</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>abe2d5b91abf57ff6dbc26d0e66a77572</anchor>
      <arglist>(const WModelIndex &amp;index, const cpp17::any &amp;value, ItemDataRole role=ItemDataRole::Edit)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>setItemData</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>ac60d1042bf1bcea9c262d3de30c520fd</anchor>
      <arglist>(const WModelIndex &amp;index, const DataMap &amp;values)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>setHeaderData</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>abd4f1baf6088c2cc4847d3b384cddbd2</anchor>
      <arglist>(int section, Orientation orientation, const cpp17::any &amp;value, ItemDataRole role=ItemDataRole::Edit)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setHeaderData</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>a0bccbb4373b4c1e8bce85573b933d53d</anchor>
      <arglist>(int section, const cpp17::any &amp;value)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>sort</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>a659c39ce6489f53b865941a2555dc32f</anchor>
      <arglist>(int column, SortOrder order=SortOrder::Ascending)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>expandColumn</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>ad7da483e201a6a0d717438049ce1f1d1</anchor>
      <arglist>(int column)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>collapseColumn</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>accd1f651c0b01ae897a52b9ad4b0f553</anchor>
      <arglist>(int column)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void *</type>
      <name>toRawIndex</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>a13fb3432ff1c7c3a1f5f7732f1829fbb</anchor>
      <arglist>(const WModelIndex &amp;index) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WModelIndex</type>
      <name>fromRawIndex</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>a1cb1233a46a6e15964c074e21dfbd838</anchor>
      <arglist>(void *rawIndex) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>mimeType</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>a05492b3cbe4a5b53afce87247e54b313</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::vector&lt; std::string &gt;</type>
      <name>acceptDropMimeTypes</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>a5b870a9aaab7812050ebe8683379d538</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>dropEvent</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>af9142a0328922a1b6872f0186164b066</anchor>
      <arglist>(const WDropEvent &amp;e, DropAction action, int row, int column, const WModelIndex &amp;parent)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>insertColumn</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>ad0e634e9fb1276703e41438e8aa50cca</anchor>
      <arglist>(int column, const WModelIndex &amp;parent=WModelIndex())</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>insertRow</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>af4a389e8544fc887a24099c506c8bd7b</anchor>
      <arglist>(int row, const WModelIndex &amp;parent=WModelIndex())</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>removeColumn</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>a7b46c63a32eb9ca9838a1a7cd5853552</anchor>
      <arglist>(int column, const WModelIndex &amp;parent=WModelIndex())</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>removeRow</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>ada64c5f4d4eba6cecab2c1e443372cb3</anchor>
      <arglist>(int row, const WModelIndex &amp;parent=WModelIndex())</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setData</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>aae463d7040f364ffcc008997f8e387a2</anchor>
      <arglist>(int row, int column, const cpp17::any &amp;value, ItemDataRole role=ItemDataRole::Edit, const WModelIndex &amp;parent=WModelIndex())</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Signal&lt; WModelIndex, int, int &gt; &amp;</type>
      <name>columnsAboutToBeInserted</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>a750a7bcd42edf3475de6dc5bf7f1ef03</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Signal&lt; WModelIndex, int, int &gt; &amp;</type>
      <name>columnsAboutToBeRemoved</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>ab7c59263c680974b9b226cacb612b107</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Signal&lt; WModelIndex, int, int &gt; &amp;</type>
      <name>columnsInserted</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>ac56221d07f5ef246f10dccc93756cb3c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Signal&lt; WModelIndex, int, int &gt; &amp;</type>
      <name>columnsRemoved</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>a2aecbfc4363903aed6d3ce4d176c82d0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Signal&lt; WModelIndex, int, int &gt; &amp;</type>
      <name>rowsAboutToBeInserted</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>a8c0a94560a23519cac3e7cfb983af525</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Signal&lt; WModelIndex, int, int &gt; &amp;</type>
      <name>rowsAboutToBeRemoved</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>a530ab7bb31240fafe0a3c88c9f4efc4f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Signal&lt; WModelIndex, int, int &gt; &amp;</type>
      <name>rowsInserted</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>a54c971088bb9b424f97fe31c17f8f12f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Signal&lt; WModelIndex, int, int &gt; &amp;</type>
      <name>rowsRemoved</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>a0f73bbfb08f2739ac12881f62a61bc7f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Signal&lt; WModelIndex, WModelIndex &gt; &amp;</type>
      <name>dataChanged</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>aa074e5bc55394252a609ef17d071b563</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Signal&lt; Orientation, int, int &gt; &amp;</type>
      <name>headerDataChanged</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>ade8f3edbd36f170c6e1199222802de0d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Signal &amp;</type>
      <name>layoutAboutToBeChanged</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>ab377ac2fcb9de9d191bd1353665d1389</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Signal &amp;</type>
      <name>layoutChanged</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>afe7cb1d5186881f83aa8f0e452aaef66</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Signal &amp;</type>
      <name>modelReset</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>ae28a4ba2ce1dd93e7479dfa152a65efc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>ae5ef6b96132d87e8310dcb22deedcd48</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>WModelIndex</type>
      <name>createIndex</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>af9b04fdec198dfbc1c9297ead93c8930</anchor>
      <arglist>(int row, int column, void *ptr) const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>WModelIndex</type>
      <name>createIndex</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>ac0a27f162222b0230af0be0c7098882b</anchor>
      <arglist>(int row, int column, ::uint64_t id) const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>beginInsertColumns</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>a1b0c2b404763032e48637a2a3615b2b6</anchor>
      <arglist>(const WModelIndex &amp;parent, int first, int last)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>beginInsertRows</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>a91e52898a805996aee496877cd090eb4</anchor>
      <arglist>(const WModelIndex &amp;parent, int first, int last)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>beginRemoveColumns</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>a8dbef6f3633812d2df7289cb7cfb192b</anchor>
      <arglist>(const WModelIndex &amp;parent, int first, int last)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>beginRemoveRows</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>a5286cc70219c8d8d720abc255b0183f5</anchor>
      <arglist>(const WModelIndex &amp;parent, int first, int last)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>endInsertColumns</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>a2422779ff8af9d19c6bfd3e169c84422</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>endInsertRows</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>ace03c0bc5b0b57b6add882aaf444b62f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>endRemoveColumns</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>a840b32221ade669cb4e987f86203d1d3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>endRemoveRows</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>afceaf639f2a5088f45c00f03d550f262</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WAbstractItemView</name>
    <filename>classWt_1_1WAbstractItemView.html</filename>
    <base>Wt::WCompositeWidget</base>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setModel</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>acba04b4647ccb03c49da1cf7e0cb47a3</anchor>
      <arglist>(const std::shared_ptr&lt; WAbstractItemModel &gt; &amp;model)</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; WAbstractItemModel &gt;</type>
      <name>model</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>ad48bce9c903a4d98c4dcf889377c7ab6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRootIndex</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>a3f8ecef3dac343faa00efc801e4e4c1f</anchor>
      <arglist>(const WModelIndex &amp;rootIndex)</arglist>
    </member>
    <member kind="function">
      <type>const WModelIndex &amp;</type>
      <name>rootIndex</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>aa9613b547e360cad7df75e4bb7919491</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setItemDelegate</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>a2d6df9088345b9026bf5853a7194d1d9</anchor>
      <arglist>(const std::shared_ptr&lt; WAbstractItemDelegate &gt; &amp;delegate)</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; WAbstractItemDelegate &gt;</type>
      <name>itemDelegate</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>a11310e2002e539b1c77f7496175b2e7b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setItemDelegateForColumn</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>a044f062bbc48a046fa7de64e557f805a</anchor>
      <arglist>(int column, const std::shared_ptr&lt; WAbstractItemDelegate &gt; &amp;delegate)</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; WAbstractItemDelegate &gt;</type>
      <name>itemDelegateForColumn</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>ae9cd1cd208f2b0ba653133e5f31d00e4</anchor>
      <arglist>(int column) const</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; WAbstractItemDelegate &gt;</type>
      <name>itemDelegate</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>a1d061fb4fb7cf0d20da41aea43becab8</anchor>
      <arglist>(const WModelIndex &amp;index) const</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; WAbstractItemDelegate &gt;</type>
      <name>itemDelegate</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>aeacbda45226b121607ab457c60580ff6</anchor>
      <arglist>(int column) const</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual WWidget *</type>
      <name>itemWidget</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>a5b7d40b94b5254b52417f5cf2200ec30</anchor>
      <arglist>(const WModelIndex &amp;index) const =0</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setHeaderItemDelegate</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>a71b802a256f24905bf9222d0f108e4e6</anchor>
      <arglist>(const std::shared_ptr&lt; WAbstractItemDelegate &gt; &amp;delegate)</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; WAbstractItemDelegate &gt;</type>
      <name>headerItemDelegate</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>a62735a569d41ba51fb3d15e55ab55408</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setColumnAlignment</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>aafd2a6edd366b620c71d9b3a89ed6590</anchor>
      <arglist>(int column, AlignmentFlag alignment)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual AlignmentFlag</type>
      <name>columnAlignment</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>a58ec0bde0d905ee7f50bae7460d672e0</anchor>
      <arglist>(int column) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setHeaderAlignment</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>a036e6a392c5e38470326d71157140d1a</anchor>
      <arglist>(int column, WFlags&lt; AlignmentFlag &gt; alignment)</arglist>
    </member>
    <member kind="function">
      <type>AlignmentFlag</type>
      <name>horizontalHeaderAlignment</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>ac73ec259dfe8e3680a66778fd417457f</anchor>
      <arglist>(int column) const</arglist>
    </member>
    <member kind="function">
      <type>AlignmentFlag</type>
      <name>verticalHeaderAlignment</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>a57b84260f8419f961f4993f8914b0325</anchor>
      <arglist>(int column) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setHeaderWordWrap</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>a4c419a50fec4caa97b21f09b6087da85</anchor>
      <arglist>(int column, bool enabled)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAlternatingRowColors</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>a9d22f8c92ddf7259f32496f55d9d50ec</anchor>
      <arglist>(bool enable)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>alternatingRowColors</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>a9c499a2fb1d224a310ce2ececd22b828</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sortByColumn</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>af782069e7307d3a4ce2395336f338c4e</anchor>
      <arglist>(int column, SortOrder order)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sortColumn</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>a79ed20fcab31771d6a79b1da5fc4ae8d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>SortOrder</type>
      <name>sortOrder</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>ab33272b95c9e173aba5b041b464aa7e7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSortingEnabled</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>ae1c86a0f37f97f63aed3b00fd8ffad7c</anchor>
      <arglist>(bool enabled)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSortingEnabled</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>a62b873ab83a8ab64dd873c368daad387</anchor>
      <arglist>(int column, bool enabled)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSortingEnabled</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>a957be86835bcae777ffc3fe655390683</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSortingEnabled</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>a336afd787ee42e84a920018489946467</anchor>
      <arglist>(int column) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setColumnResizeEnabled</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>a4fe24c3ed80cc59f6bed2ed7795bc127</anchor>
      <arglist>(bool enabled)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isColumnResizeEnabled</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>ab1170db72e468ad2b0e0158b58849d19</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSelectionBehavior</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>ad59b47cf9a1c5a65c5adc3e1900ceb5c</anchor>
      <arglist>(SelectionBehavior behavior)</arglist>
    </member>
    <member kind="function">
      <type>SelectionBehavior</type>
      <name>selectionBehavior</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>a0a40b31df1fe69a00cc50e7a56c3f3c7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSelectionMode</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>af6fcd9761e2f7a3b497d3563c849d320</anchor>
      <arglist>(SelectionMode mode)</arglist>
    </member>
    <member kind="function">
      <type>SelectionMode</type>
      <name>selectionMode</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>ac62e2c13b6d096d41d07312c79879778</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WItemSelectionModel *</type>
      <name>selectionModel</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>a099490b76f55f6a8a9abb009b95944c3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSelectedIndexes</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>a67c4b49e04db1f19a7788c4580dfc25b</anchor>
      <arglist>(const WModelIndexSet &amp;indexes)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearSelection</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>a009d7b319a65a0cae561543a6ca99e33</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>select</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>acbcee6896e4d30748f12c9019daa172e</anchor>
      <arglist>(const WModelIndex &amp;index, SelectionFlag option=SelectionFlag::Select)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSelected</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>a6d3a9ca7245f9d61bc79297585bdb5ad</anchor>
      <arglist>(const WModelIndex &amp;index) const</arglist>
    </member>
    <member kind="function">
      <type>WModelIndexSet</type>
      <name>selectedIndexes</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>a02fbf609206a85f220782b6ee279c87c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDragEnabled</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>a0ca99b835708d990b90000917045738e</anchor>
      <arglist>(bool enable)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDropsEnabled</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>a1eda46c8e9a21af7f6281e7096af8fbe</anchor>
      <arglist>(bool enable)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setRowHeight</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>a7ffe86a3f0b58272125abc2a20b997ad</anchor>
      <arglist>(const WLength &amp;rowHeight)</arglist>
    </member>
    <member kind="function">
      <type>const WLength &amp;</type>
      <name>rowHeight</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>a6c1c12ec77937064ac91e13c534f1ed4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setColumnWidth</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>aa80794ca5438e2b9971e8f85919353fd</anchor>
      <arglist>(int column, const WLength &amp;width)=0</arglist>
    </member>
    <member kind="function">
      <type>WLength</type>
      <name>columnWidth</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>ab2a7684bae805dec16e0a68f7d7f3fb0</anchor>
      <arglist>(int column) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setColumnHidden</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>a120156dc59eaf3608916b679d937c5b8</anchor>
      <arglist>(int column, bool hide)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isColumnHidden</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>a6bfefdba90116140771260c3a016c25d</anchor>
      <arglist>(int column) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>hideColumn</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>af3755e7f96e969dc608c6cfd3325c09e</anchor>
      <arglist>(int column)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>showColumn</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>a2cbbe932d872baf103d88c6186e9b52a</anchor>
      <arglist>(int column)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setHeaderHeight</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>a0ab90f396e9cdb563e45a9a35f7dfc8a</anchor>
      <arglist>(const WLength &amp;height)</arglist>
    </member>
    <member kind="function">
      <type>const WLength &amp;</type>
      <name>headerHeight</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>aa61dc8036c54cfa5576051f3ace00c14</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>pageCount</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>a370beb06a2e6c82659756ba63a516b14</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>pageSize</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>a2cc5d8f54c95a4d8d45c86ea85b428e9</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>currentPage</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>a66b3bd22b9d57d9c466280a2f96b44c3</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setCurrentPage</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>a71585006c31128c3d606cc976b865008</anchor>
      <arglist>(int page)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>scrollTo</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>afa8888e527008787aae1d3d68554afeb</anchor>
      <arglist>(const WModelIndex &amp;index, ScrollHint hint=ScrollHint::EnsureVisible)=0</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setEditTriggers</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>a93d2efc8642a6b9c55b35b7665a13da5</anchor>
      <arglist>(WFlags&lt; EditTrigger &gt; editTriggers)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; EditTrigger &gt;</type>
      <name>editTriggers</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>aa263b5b5943aba27a250e183e843b188</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setEditOptions</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>a9a5506e031a514696c4050ccc1521b6c</anchor>
      <arglist>(WFlags&lt; EditOption &gt; options)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; EditOption &gt;</type>
      <name>editOptions</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>ace8b83a893e408d2890649a4b380c5ad</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>edit</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>a0793bef9c9d7d3d3b0b3f6d2585d5647</anchor>
      <arglist>(const WModelIndex &amp;index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>closeEditor</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>a51c80c5c2d505c987047a489c960205b</anchor>
      <arglist>(const WModelIndex &amp;index, bool saveData=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>closeEditors</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>a81aaaff9476d331f82c7875c0b46d6a4</anchor>
      <arglist>(bool saveData=true)</arglist>
    </member>
    <member kind="function">
      <type>ValidationState</type>
      <name>validateEditor</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>a7b638aa08afd214b1a385383d4a61489</anchor>
      <arglist>(const WModelIndex &amp;index)</arglist>
    </member>
    <member kind="function">
      <type>ValidationState</type>
      <name>validateEditors</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>a4e0b6f968f9b74c73795efdc80a94953</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEditing</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>ac1a65e57541ac3d10a0fa720096a7b02</anchor>
      <arglist>(const WModelIndex &amp;index) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isValid</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>a22f7a1bac7bb67d9887ae76a6a852fa9</anchor>
      <arglist>(const WModelIndex &amp;index) const</arglist>
    </member>
    <member kind="function">
      <type>Signal&lt; WModelIndex, WMouseEvent &gt; &amp;</type>
      <name>clicked</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>a3b72d5f8e5b0afdea83e224354d3e91b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Signal&lt; WModelIndex, WMouseEvent &gt; &amp;</type>
      <name>doubleClicked</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>a14ac099f58621d66834aa5674ea8ecb5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Signal&lt; WModelIndex, WMouseEvent &gt; &amp;</type>
      <name>mouseWentDown</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>a633d617978adc32d93c427c9f27000db</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Signal&lt; WModelIndex, WMouseEvent &gt; &amp;</type>
      <name>mouseWentUp</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>a0231396a3e026781c600645c24fff616</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Signal&lt; WModelIndex, WTouchEvent &gt; &amp;</type>
      <name>touchStart</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>a93686fdab9f40f104a6914a37181c1cd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Signal&lt; std::vector&lt; WModelIndex &gt;, WTouchEvent &gt; &amp;</type>
      <name>touchStarted</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>acd980e6a9eb110400f334e341f8386a4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Signal&lt; std::vector&lt; WModelIndex &gt;, WTouchEvent &gt; &amp;</type>
      <name>touchMoved</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>aaf371c95c294c952be0eaac5b3f56af7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Signal&lt; std::vector&lt; WModelIndex &gt;, WTouchEvent &gt; &amp;</type>
      <name>touchEnded</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>a9f3bd68d6d5ca982b2a22bcd100ea271</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Signal &amp;</type>
      <name>selectionChanged</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>ada37ffbe2d470dd227c8714645f150f0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Signal &amp;</type>
      <name>pageChanged</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>a419257bb553d44423d4d4d5325d61ec7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Signal&lt; int, WLength &gt; &amp;</type>
      <name>columnResized</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>ad5ca828bca252012794ae85f580e96d1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>sortEnabled</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>a3691a20e1092fc144af16744804df0ec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setHeaderClickSortEnabled</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>af55156060cf30211c204a898e73f2279</anchor>
      <arglist>(bool enabled)</arglist>
    </member>
    <member kind="function">
      <type>Signal&lt; int, WMouseEvent &gt; &amp;</type>
      <name>headerClicked</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>ad762bd48613940c0bd2c113d4748e7f4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Signal&lt; int, WMouseEvent &gt; &amp;</type>
      <name>headerDoubleClicked</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>ae833f8378be06a6bda18c7bff24a3ef2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Signal&lt; int, WMouseEvent &gt; &amp;</type>
      <name>headerMouseWentDown</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>ac1ad04bcf1d9230915c3909420ec59d4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Signal&lt; int, WMouseEvent &gt; &amp;</type>
      <name>headerMouseWentUp</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>a171da4b7cf09c07afc7c04ba73657774</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual EventSignal&lt; WScrollEvent &gt; &amp;</type>
      <name>scrolled</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>a1a9343a886e6131a225171173cec1d5f</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setRowHeaderCount</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>adf338c1002ce189de836de6f5d445cc4</anchor>
      <arglist>(int count)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>rowHeaderCount</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>abda4b5485b6829baf2961b6a38ed642f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>EventSignal&lt; WKeyEvent &gt; &amp;</type>
      <name>keyWentDown</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>a2f7a978c5fab48ca83289160c9587808</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EventSignal&lt; WKeyEvent &gt; &amp;</type>
      <name>keyPressed</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>a258fae75dbedbe30ea336bf33c2738fd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EventSignal&lt; WKeyEvent &gt; &amp;</type>
      <name>keyWentUp</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>a39b85dd962bc17bbfe1f93f8d9920930</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>WAbstractItemView</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>a6dea04d11213357b0b36b9022a4e641a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>dropEvent</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>ae80a4371f19e9c0c14f1cc961da17b87</anchor>
      <arglist>(const WDropEvent &amp;event, const WModelIndex &amp;target)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual std::unique_ptr&lt; WWidget &gt;</type>
      <name>createExtraHeaderWidget</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>a14e5af277b9338f6e3fa19ca51d8ad34</anchor>
      <arglist>(int column)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>WWidget *</type>
      <name>extraHeaderWidget</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>a5ec3d106602a4364caf924756a504df2</anchor>
      <arglist>(int column)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual std::unique_ptr&lt; WWidget &gt;</type>
      <name>createPageNavigationBar</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>a1c23df85848abce1b6ad5ad364716e74</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>handleClick</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>a53ea7da602c5ee44d4f2edf75b982dbc</anchor>
      <arglist>(const WModelIndex &amp;index, const WMouseEvent &amp;event)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>handleDoubleClick</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>aca5dac071dbd67cd998a1a7c242e2eb1</anchor>
      <arglist>(const WModelIndex &amp;index, const WMouseEvent &amp;event)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>handleMouseDown</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>a1e437f95e860cfa73807b03f5f6dd964</anchor>
      <arglist>(const WModelIndex &amp;index, const WMouseEvent &amp;event)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>handleMouseUp</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>a006b0338d8b1a9ae06fd7ef719d95197</anchor>
      <arglist>(const WModelIndex &amp;index, const WMouseEvent &amp;event)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>handleTouchSelect</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>acdfd251ede07a368d4f5bfcfaf26f2cb</anchor>
      <arglist>(const std::vector&lt; WModelIndex &gt; &amp;indices, const WTouchEvent &amp;event)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>handleTouchStart</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>af7316583344914bd42bd457157a3187c</anchor>
      <arglist>(const std::vector&lt; WModelIndex &gt; &amp;indices, const WTouchEvent &amp;event)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>handleTouchMove</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>afd33a4f156d7f57404b41c3826a666b2</anchor>
      <arglist>(const std::vector&lt; WModelIndex &gt; &amp;indices, const WTouchEvent &amp;event)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>handleTouchEnd</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>ac51d4a39c7be6ed21684b2b9faba8505</anchor>
      <arglist>(const std::vector&lt; WModelIndex &gt; &amp;indices, const WTouchEvent &amp;event)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>enableAjax</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>a39a45e47d81ab2fc13fdd38ea56d5ad5</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>virtual void</type>
      <name>dropEvent</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>ac436c4b99710b9199a9df3a8b4151a69</anchor>
      <arglist>(WDropEvent dropEvent)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WAbstractListModel</name>
    <filename>classWt_1_1WAbstractListModel.html</filename>
    <base>Wt::WAbstractItemModel</base>
    <member kind="function">
      <type></type>
      <name>WAbstractListModel</name>
      <anchorfile>classWt_1_1WAbstractListModel.html</anchorfile>
      <anchor>a94ed5cf2c064a29832946254fde5cd5f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WAbstractListModel</name>
      <anchorfile>classWt_1_1WAbstractListModel.html</anchorfile>
      <anchor>a1476c92cf08ce4548a08858f45007746</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WModelIndex</type>
      <name>parent</name>
      <anchorfile>classWt_1_1WAbstractListModel.html</anchorfile>
      <anchor>a6a12149f820b6544ede247c61ac2f3ad</anchor>
      <arglist>(const WModelIndex &amp;index) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WModelIndex</type>
      <name>index</name>
      <anchorfile>classWt_1_1WAbstractListModel.html</anchorfile>
      <anchor>afdedd9779d8b77f6ca3b7c0684d29101</anchor>
      <arglist>(int row, int column=0, const WModelIndex &amp;parent=WModelIndex()) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>columnCount</name>
      <anchorfile>classWt_1_1WAbstractListModel.html</anchorfile>
      <anchor>aa73947a8b67290681958fe2e7150f48d</anchor>
      <arglist>(const WModelIndex &amp;parent=WModelIndex()) const override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WAbstractMedia</name>
    <filename>classWt_1_1WAbstractMedia.html</filename>
    <base>Wt::WInteractWidget</base>
    <member kind="typedef">
      <type>PlayerOption</type>
      <name>Option</name>
      <anchorfile>classWt_1_1WAbstractMedia.html</anchorfile>
      <anchor>a91ed54134f2f7af6d5410b41d698b03f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MediaPreloadMode</type>
      <name>PreloadMode</name>
      <anchorfile>classWt_1_1WAbstractMedia.html</anchorfile>
      <anchor>a0b8649f5f175b0595c2837ef418e785b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MediaReadyState</type>
      <name>ReadyState</name>
      <anchorfile>classWt_1_1WAbstractMedia.html</anchorfile>
      <anchor>a5d73b1139c5bb13ce7559186deab81a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WAbstractMedia</name>
      <anchorfile>classWt_1_1WAbstractMedia.html</anchorfile>
      <anchor>a0ec27a41a51cee5f8cced69be04b1b22</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setOptions</name>
      <anchorfile>classWt_1_1WAbstractMedia.html</anchorfile>
      <anchor>a52798814f04b8988d0a765d1cb78268a</anchor>
      <arglist>(const WFlags&lt; PlayerOption &gt; &amp;flags)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; PlayerOption &gt;</type>
      <name>getOptions</name>
      <anchorfile>classWt_1_1WAbstractMedia.html</anchorfile>
      <anchor>a8b2e13874d0f0559dc908b47bf9b0470</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPreloadMode</name>
      <anchorfile>classWt_1_1WAbstractMedia.html</anchorfile>
      <anchor>a6289bffd69a61683dfe9aac98b31bdf0</anchor>
      <arglist>(MediaPreloadMode mode)</arglist>
    </member>
    <member kind="function">
      <type>MediaPreloadMode</type>
      <name>preloadMode</name>
      <anchorfile>classWt_1_1WAbstractMedia.html</anchorfile>
      <anchor>a6a5019802b01508181c0d54c4584f45c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearSources</name>
      <anchorfile>classWt_1_1WAbstractMedia.html</anchorfile>
      <anchor>ac70b946b707a8596d2f0bbcb3ae8f807</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addSource</name>
      <anchorfile>classWt_1_1WAbstractMedia.html</anchorfile>
      <anchor>ae0bdedcd0136a29c05218ecab25dfa82</anchor>
      <arglist>(const WLink &amp;source, const std::string &amp;type=&quot;&quot;, const std::string &amp;media=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAlternativeContent</name>
      <anchorfile>classWt_1_1WAbstractMedia.html</anchorfile>
      <anchor>a6b61a07838fad9bbd26900668454c705</anchor>
      <arglist>(std::unique_ptr&lt; WWidget &gt; alternative)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>play</name>
      <anchorfile>classWt_1_1WAbstractMedia.html</anchorfile>
      <anchor>a1b9bd122b3dd4bda181ca5aae920aa85</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pause</name>
      <anchorfile>classWt_1_1WAbstractMedia.html</anchorfile>
      <anchor>a17d403bce830fde764c3bbcb7809bdbf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>playing</name>
      <anchorfile>classWt_1_1WAbstractMedia.html</anchorfile>
      <anchor>acce438acd39add71da40c5685480286a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>MediaReadyState</type>
      <name>readyState</name>
      <anchorfile>classWt_1_1WAbstractMedia.html</anchorfile>
      <anchor>a0a9b1a43343a610d74c558253eb995e8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>EventSignal &amp;</type>
      <name>playbackStarted</name>
      <anchorfile>classWt_1_1WAbstractMedia.html</anchorfile>
      <anchor>ac1177ed0336641472462320aa13d666e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EventSignal &amp;</type>
      <name>playbackPaused</name>
      <anchorfile>classWt_1_1WAbstractMedia.html</anchorfile>
      <anchor>a21e8a3dad1da8ba9b7172a50107e9ce4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EventSignal &amp;</type>
      <name>ended</name>
      <anchorfile>classWt_1_1WAbstractMedia.html</anchorfile>
      <anchor>acbb224f37fd97cfd03213de9cde3e01a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EventSignal &amp;</type>
      <name>timeUpdated</name>
      <anchorfile>classWt_1_1WAbstractMedia.html</anchorfile>
      <anchor>a3d78112ce9482a6f0aa6dd7f78080159</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EventSignal &amp;</type>
      <name>volumeChanged</name>
      <anchorfile>classWt_1_1WAbstractMedia.html</anchorfile>
      <anchor>a22eb198a6088a92d1371d16f862244f5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>jsMediaRef</name>
      <anchorfile>classWt_1_1WAbstractMedia.html</anchorfile>
      <anchor>a67af2e82f6af95a27e1b457d41aadcf2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>enableAjax</name>
      <anchorfile>classWt_1_1WAbstractMedia.html</anchorfile>
      <anchor>adabbfaca7efe6659db56b0e5e2851446</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WAbstractProxyModel</name>
    <filename>classWt_1_1WAbstractProxyModel.html</filename>
    <base>Wt::WAbstractItemModel</base>
    <class kind="struct">Wt::WAbstractProxyModel::BaseItem</class>
    <member kind="function">
      <type></type>
      <name>WAbstractProxyModel</name>
      <anchorfile>classWt_1_1WAbstractProxyModel.html</anchorfile>
      <anchor>a5cfb6fc7ee9f67b17c68316b304e1f2e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual WModelIndex</type>
      <name>mapFromSource</name>
      <anchorfile>classWt_1_1WAbstractProxyModel.html</anchorfile>
      <anchor>a856d190cc66edcf05462e2476f43b01d</anchor>
      <arglist>(const WModelIndex &amp;sourceIndex) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual WModelIndex</type>
      <name>mapToSource</name>
      <anchorfile>classWt_1_1WAbstractProxyModel.html</anchorfile>
      <anchor>ac36b0ee3110073578da8b999d1882bf7</anchor>
      <arglist>(const WModelIndex &amp;proxyIndex) const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setSourceModel</name>
      <anchorfile>classWt_1_1WAbstractProxyModel.html</anchorfile>
      <anchor>a213dfe399091f8134657436de86efca7</anchor>
      <arglist>(const std::shared_ptr&lt; WAbstractItemModel &gt; &amp;sourceModel)</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; WAbstractItemModel &gt;</type>
      <name>sourceModel</name>
      <anchorfile>classWt_1_1WAbstractProxyModel.html</anchorfile>
      <anchor>a7e92d9d2b91f852286b7d49d08a88d5e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual cpp17::any</type>
      <name>data</name>
      <anchorfile>classWt_1_1WAbstractProxyModel.html</anchorfile>
      <anchor>a8e938b2a268c99bf17f0529cfffc322e</anchor>
      <arglist>(const WModelIndex &amp;index, ItemDataRole role=ItemDataRole::Display) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual cpp17::any</type>
      <name>headerData</name>
      <anchorfile>classWt_1_1WAbstractProxyModel.html</anchorfile>
      <anchor>aa1d16a5336bd1a75023b1b20f63708a2</anchor>
      <arglist>(int section, Orientation orientation=Orientation::Horizontal, ItemDataRole role=ItemDataRole::Display) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>setData</name>
      <anchorfile>classWt_1_1WAbstractProxyModel.html</anchorfile>
      <anchor>ae3048edb65f43f893331edee48ca0a57</anchor>
      <arglist>(const WModelIndex &amp;index, const cpp17::any &amp;value, ItemDataRole role=ItemDataRole::Edit) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>setItemData</name>
      <anchorfile>classWt_1_1WAbstractProxyModel.html</anchorfile>
      <anchor>af93b802821e236481bf3705e38311a43</anchor>
      <arglist>(const WModelIndex &amp;index, const DataMap &amp;values) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WFlags&lt; ItemFlag &gt;</type>
      <name>flags</name>
      <anchorfile>classWt_1_1WAbstractProxyModel.html</anchorfile>
      <anchor>a49f6f19f4e31826df9b528e1fbece53b</anchor>
      <arglist>(const WModelIndex &amp;index) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WFlags&lt; HeaderFlag &gt;</type>
      <name>headerFlags</name>
      <anchorfile>classWt_1_1WAbstractProxyModel.html</anchorfile>
      <anchor>a89eb0b330b49faf718f10fc8e5081ccd</anchor>
      <arglist>(int section, Orientation orientation=Orientation::Horizontal) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>insertColumns</name>
      <anchorfile>classWt_1_1WAbstractProxyModel.html</anchorfile>
      <anchor>aaebad5ac17bf55e04dced5b70be325c7</anchor>
      <arglist>(int column, int count, const WModelIndex &amp;parent=WModelIndex()) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>removeColumns</name>
      <anchorfile>classWt_1_1WAbstractProxyModel.html</anchorfile>
      <anchor>aa23f7c2609618c4d3f7bd08d73ab8088</anchor>
      <arglist>(int column, int count, const WModelIndex &amp;parent=WModelIndex()) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>mimeType</name>
      <anchorfile>classWt_1_1WAbstractProxyModel.html</anchorfile>
      <anchor>a092ac114dfaf5c35892c4c0f8b2d38f8</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::vector&lt; std::string &gt;</type>
      <name>acceptDropMimeTypes</name>
      <anchorfile>classWt_1_1WAbstractProxyModel.html</anchorfile>
      <anchor>ab868d9804e158e61fd07dce52bdb7c67</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>dropEvent</name>
      <anchorfile>classWt_1_1WAbstractProxyModel.html</anchorfile>
      <anchor>a9305c3624e67fa2485c6809b1c0cd791</anchor>
      <arglist>(const WDropEvent &amp;e, DropAction action, int row, int column, const WModelIndex &amp;parent) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void *</type>
      <name>toRawIndex</name>
      <anchorfile>classWt_1_1WAbstractProxyModel.html</anchorfile>
      <anchor>a1c3ce0e52c454c5e1467d730dc9b2ddb</anchor>
      <arglist>(const WModelIndex &amp;index) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WModelIndex</type>
      <name>fromRawIndex</name>
      <anchorfile>classWt_1_1WAbstractProxyModel.html</anchorfile>
      <anchor>a1e8aa750990f41ade53c55efe3f869c6</anchor>
      <arglist>(void *rawIndex) const override</arglist>
    </member>
    <member kind="function">
      <type>virtual bool</type>
      <name>setData</name>
      <anchorfile>classWt_1_1WAbstractProxyModel.html</anchorfile>
      <anchor>abe2d5b91abf57ff6dbc26d0e66a77572</anchor>
      <arglist>(const WModelIndex &amp;index, const cpp17::any &amp;value, ItemDataRole role=ItemDataRole::Edit)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setData</name>
      <anchorfile>classWt_1_1WAbstractProxyModel.html</anchorfile>
      <anchor>aae463d7040f364ffcc008997f8e387a2</anchor>
      <arglist>(int row, int column, const cpp17::any &amp;value, ItemDataRole role=ItemDataRole::Edit, const WModelIndex &amp;parent=WModelIndex())</arglist>
    </member>
    <member kind="function">
      <type>virtual cpp17::any</type>
      <name>data</name>
      <anchorfile>classWt_1_1WAbstractProxyModel.html</anchorfile>
      <anchor>a837660e348a3c61c3919c238bf11eb29</anchor>
      <arglist>(const WModelIndex &amp;index, ItemDataRole role=ItemDataRole::Display) const=0</arglist>
    </member>
    <member kind="function">
      <type>cpp17::any</type>
      <name>data</name>
      <anchorfile>classWt_1_1WAbstractProxyModel.html</anchorfile>
      <anchor>a5fc67e5fbb584cd1c6e6108ad07ff484</anchor>
      <arglist>(int row, int column, ItemDataRole role=ItemDataRole::Display, const WModelIndex &amp;parent=WModelIndex()) const</arglist>
    </member>
    <member kind="function">
      <type>virtual bool</type>
      <name>setHeaderData</name>
      <anchorfile>classWt_1_1WAbstractProxyModel.html</anchorfile>
      <anchor>abd4f1baf6088c2cc4847d3b384cddbd2</anchor>
      <arglist>(int section, Orientation orientation, const cpp17::any &amp;value, ItemDataRole role=ItemDataRole::Edit)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setHeaderData</name>
      <anchorfile>classWt_1_1WAbstractProxyModel.html</anchorfile>
      <anchor>a0bccbb4373b4c1e8bce85573b933d53d</anchor>
      <arglist>(int section, const cpp17::any &amp;value)</arglist>
    </member>
    <member kind="typedef" protection="protected">
      <type>std::map&lt; WModelIndex, BaseItem * &gt;</type>
      <name>ItemMap</name>
      <anchorfile>classWt_1_1WAbstractProxyModel.html</anchorfile>
      <anchor>a272b9667c732a6d2e11e1b6d5d211697</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>WModelIndex</type>
      <name>createSourceIndex</name>
      <anchorfile>classWt_1_1WAbstractProxyModel.html</anchorfile>
      <anchor>a6a70fc2564c87020a2fcaeed322eeced</anchor>
      <arglist>(int row, int column, void *ptr) const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>startShiftModelIndexes</name>
      <anchorfile>classWt_1_1WAbstractProxyModel.html</anchorfile>
      <anchor>ac750f83af402be675b2bbed26f532093</anchor>
      <arglist>(const WModelIndex &amp;sourceParent, int start, int count, ItemMap &amp;items)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WAbstractSpinBox</name>
    <filename>classWt_1_1WAbstractSpinBox.html</filename>
    <base>Wt::WLineEdit</base>
    <member kind="function">
      <type>void</type>
      <name>setNativeControl</name>
      <anchorfile>classWt_1_1WAbstractSpinBox.html</anchorfile>
      <anchor>aba960889850819ba1a2243c4b233cb81</anchor>
      <arglist>(bool nativeControl)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>nativeControl</name>
      <anchorfile>classWt_1_1WAbstractSpinBox.html</anchorfile>
      <anchor>af7e28f45a69ef9813d771676670fc512</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPrefix</name>
      <anchorfile>classWt_1_1WAbstractSpinBox.html</anchorfile>
      <anchor>a739bb38a5d58cd6f18cff812361a2f14</anchor>
      <arglist>(const WString &amp;prefix)</arglist>
    </member>
    <member kind="function">
      <type>const WString &amp;</type>
      <name>prefix</name>
      <anchorfile>classWt_1_1WAbstractSpinBox.html</anchorfile>
      <anchor>a1a9ac3b08bd24c9c0c08dc0c188b9c95</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSuffix</name>
      <anchorfile>classWt_1_1WAbstractSpinBox.html</anchorfile>
      <anchor>abef19149e48afdadbb1bdb660d3dc04d</anchor>
      <arglist>(const WString &amp;suffix)</arglist>
    </member>
    <member kind="function">
      <type>const WString &amp;</type>
      <name>suffix</name>
      <anchorfile>classWt_1_1WAbstractSpinBox.html</anchorfile>
      <anchor>af7d9ad6023cd59b095777c0ea8631127</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setText</name>
      <anchorfile>classWt_1_1WAbstractSpinBox.html</anchorfile>
      <anchor>abedfac2028cfd1da8a32b2bf30287aa3</anchor>
      <arglist>(const WString &amp;text) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ValidationState</type>
      <name>validate</name>
      <anchorfile>classWt_1_1WAbstractSpinBox.html</anchorfile>
      <anchor>a61ab1bbfd802a029135aa872a6b84058</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>refresh</name>
      <anchorfile>classWt_1_1WAbstractSpinBox.html</anchorfile>
      <anchor>ae344045208536aa86dcaf54bd3c76fc7</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>WAbstractSpinBox</name>
      <anchorfile>classWt_1_1WAbstractSpinBox.html</anchorfile>
      <anchor>a3efbee5b0c03ab5e678ace4055d75815</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>render</name>
      <anchorfile>classWt_1_1WAbstractSpinBox.html</anchorfile>
      <anchor>a7e8b01745e93f938127fce9ba0a760cd</anchor>
      <arglist>(WFlags&lt; RenderFlag &gt; flags) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual int</type>
      <name>boxPadding</name>
      <anchorfile>classWt_1_1WAbstractSpinBox.html</anchorfile>
      <anchor>a3dfa9d0e5151e14575666cc50ea3e1fb</anchor>
      <arglist>(Orientation orientation) const override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WAbstractTableModel</name>
    <filename>classWt_1_1WAbstractTableModel.html</filename>
    <base>Wt::WAbstractItemModel</base>
    <member kind="function">
      <type></type>
      <name>WAbstractTableModel</name>
      <anchorfile>classWt_1_1WAbstractTableModel.html</anchorfile>
      <anchor>acf58cfee782e3e800fff0f964218f80e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WAbstractTableModel</name>
      <anchorfile>classWt_1_1WAbstractTableModel.html</anchorfile>
      <anchor>a64cd2524d094f0f47222c40ccf1c4adf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WModelIndex</type>
      <name>parent</name>
      <anchorfile>classWt_1_1WAbstractTableModel.html</anchorfile>
      <anchor>a3b69e28344f76324d60291f6c1e7bba1</anchor>
      <arglist>(const WModelIndex &amp;index) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WModelIndex</type>
      <name>index</name>
      <anchorfile>classWt_1_1WAbstractTableModel.html</anchorfile>
      <anchor>aece7785ffeee597c38eea93447c528b8</anchor>
      <arglist>(int row, int column, const WModelIndex &amp;parent=WModelIndex()) const override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WAbstractToggleButton</name>
    <filename>classWt_1_1WAbstractToggleButton.html</filename>
    <base>Wt::WFormWidget</base>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~WAbstractToggleButton</name>
      <anchorfile>classWt_1_1WAbstractToggleButton.html</anchorfile>
      <anchor>a24f8ea0ae98c36503202140f24d23a72</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setText</name>
      <anchorfile>classWt_1_1WAbstractToggleButton.html</anchorfile>
      <anchor>a7a75e3b2585124eefdea57c9bf9a7696</anchor>
      <arglist>(const WString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>const WString</type>
      <name>text</name>
      <anchorfile>classWt_1_1WAbstractToggleButton.html</anchorfile>
      <anchor>accaccfb1066b8a7d69cd608354718b3f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setTextFormat</name>
      <anchorfile>classWt_1_1WAbstractToggleButton.html</anchorfile>
      <anchor>a3aeefe0ac381cef88e5541c565f9cff4</anchor>
      <arglist>(TextFormat format)</arglist>
    </member>
    <member kind="function">
      <type>TextFormat</type>
      <name>textFormat</name>
      <anchorfile>classWt_1_1WAbstractToggleButton.html</anchorfile>
      <anchor>ad00423601657fccc76a0cde561c82be4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isChecked</name>
      <anchorfile>classWt_1_1WAbstractToggleButton.html</anchorfile>
      <anchor>a59099827039002a45133d4c7bad5310f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setChecked</name>
      <anchorfile>classWt_1_1WAbstractToggleButton.html</anchorfile>
      <anchor>a6838c9a37f3e9e3c466e9f48bde55e62</anchor>
      <arglist>(bool checked)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setChecked</name>
      <anchorfile>classWt_1_1WAbstractToggleButton.html</anchorfile>
      <anchor>a2b4ab0746beb381276ff7fcf0bde93c8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setUnChecked</name>
      <anchorfile>classWt_1_1WAbstractToggleButton.html</anchorfile>
      <anchor>ab772a43209d2b042f5ac74ae078f1045</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WString</type>
      <name>valueText</name>
      <anchorfile>classWt_1_1WAbstractToggleButton.html</anchorfile>
      <anchor>abeba3fc54afda3ea2615261017e5c348</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setValueText</name>
      <anchorfile>classWt_1_1WAbstractToggleButton.html</anchorfile>
      <anchor>a3f0becf959fd3531ca1814b097f287c7</anchor>
      <arglist>(const WString &amp;text) override</arglist>
    </member>
    <member kind="function">
      <type>EventSignal &amp;</type>
      <name>checked</name>
      <anchorfile>classWt_1_1WAbstractToggleButton.html</anchorfile>
      <anchor>ae80ceb3226d548d66a58bb26d258ec79</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EventSignal &amp;</type>
      <name>unChecked</name>
      <anchorfile>classWt_1_1WAbstractToggleButton.html</anchorfile>
      <anchor>ae203379ba84c01935f68cd293f2a3eeb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>refresh</name>
      <anchorfile>classWt_1_1WAbstractToggleButton.html</anchorfile>
      <anchor>aa80fa8748b4d6ff54fd88bd1808121f4</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setWordWrap</name>
      <anchorfile>classWt_1_1WAbstractToggleButton.html</anchorfile>
      <anchor>a3df614960e4e6e443a8f20c6f825c941</anchor>
      <arglist>(bool wordWrap)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>wordWrap</name>
      <anchorfile>classWt_1_1WAbstractToggleButton.html</anchorfile>
      <anchor>affe31c5dcb27eacd89f067ec7f90afae</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>WAbstractToggleButton</name>
      <anchorfile>classWt_1_1WAbstractToggleButton.html</anchorfile>
      <anchor>af686cd4341973327834710a215644f93</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>WAbstractToggleButton</name>
      <anchorfile>classWt_1_1WAbstractToggleButton.html</anchorfile>
      <anchor>a31900d961de86c4f76a4194847fb22ef</anchor>
      <arglist>(const WString &amp;text)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual WStatelessSlot *</type>
      <name>getStateless</name>
      <anchorfile>classWt_1_1WAbstractToggleButton.html</anchorfile>
      <anchor>a312e79922e2ebbe2274b7e70578f23ef</anchor>
      <arglist>(Method method) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WAggregateProxyModel</name>
    <filename>classWt_1_1WAggregateProxyModel.html</filename>
    <base>Wt::WAbstractProxyModel</base>
    <member kind="function">
      <type></type>
      <name>WAggregateProxyModel</name>
      <anchorfile>classWt_1_1WAggregateProxyModel.html</anchorfile>
      <anchor>af57b9cf5338bf2f90e96c46842b7cd49</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~WAggregateProxyModel</name>
      <anchorfile>classWt_1_1WAggregateProxyModel.html</anchorfile>
      <anchor>acecfb768c8cd2fbb0ba7c2aeb90418d0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addAggregate</name>
      <anchorfile>classWt_1_1WAggregateProxyModel.html</anchorfile>
      <anchor>add590f7e0789812c73874ab2bd4161bf</anchor>
      <arglist>(int parentColumn, int firstColumn, int lastColumn)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WModelIndex</type>
      <name>mapFromSource</name>
      <anchorfile>classWt_1_1WAggregateProxyModel.html</anchorfile>
      <anchor>a33605436fdc2871ccf4deef2c669d7a1</anchor>
      <arglist>(const WModelIndex &amp;sourceIndex) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WModelIndex</type>
      <name>mapToSource</name>
      <anchorfile>classWt_1_1WAggregateProxyModel.html</anchorfile>
      <anchor>a951e83158f67c10537cf1e52523a54f2</anchor>
      <arglist>(const WModelIndex &amp;proxyIndex) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setSourceModel</name>
      <anchorfile>classWt_1_1WAggregateProxyModel.html</anchorfile>
      <anchor>ab38a50718529c0c98e750f7ab44b7407</anchor>
      <arglist>(const std::shared_ptr&lt; WAbstractItemModel &gt; &amp;sourceModel) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>expandColumn</name>
      <anchorfile>classWt_1_1WAggregateProxyModel.html</anchorfile>
      <anchor>a6d8aae7d06c3d19e6ccc6fa6e2c2df96</anchor>
      <arglist>(int column) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>collapseColumn</name>
      <anchorfile>classWt_1_1WAggregateProxyModel.html</anchorfile>
      <anchor>a0ebf62250ae7ec0101de8436b664b799</anchor>
      <arglist>(int column) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>columnCount</name>
      <anchorfile>classWt_1_1WAggregateProxyModel.html</anchorfile>
      <anchor>ae1912995a194fa624276bacbdf3e8688</anchor>
      <arglist>(const WModelIndex &amp;parent=WModelIndex()) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>rowCount</name>
      <anchorfile>classWt_1_1WAggregateProxyModel.html</anchorfile>
      <anchor>a7da3834f14055c45d30454e39fd4c3a5</anchor>
      <arglist>(const WModelIndex &amp;parent=WModelIndex()) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WFlags&lt; HeaderFlag &gt;</type>
      <name>headerFlags</name>
      <anchorfile>classWt_1_1WAggregateProxyModel.html</anchorfile>
      <anchor>aeb45be410dbab853a00bf1f15cf7ae2c</anchor>
      <arglist>(int section, Orientation orientation=Orientation::Horizontal) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>setHeaderData</name>
      <anchorfile>classWt_1_1WAggregateProxyModel.html</anchorfile>
      <anchor>a11eff382136784ab95adc1ae30562e9b</anchor>
      <arglist>(int section, Orientation orientation, const cpp17::any &amp;value, ItemDataRole role=ItemDataRole::Edit) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual cpp17::any</type>
      <name>headerData</name>
      <anchorfile>classWt_1_1WAggregateProxyModel.html</anchorfile>
      <anchor>ae5c70665bc3f6f0b9b8a71372211c1af</anchor>
      <arglist>(int section, Orientation orientation=Orientation::Horizontal, ItemDataRole role=ItemDataRole::Display) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WModelIndex</type>
      <name>parent</name>
      <anchorfile>classWt_1_1WAggregateProxyModel.html</anchorfile>
      <anchor>aa72079e49a89c3b8107b3057d0cb43c3</anchor>
      <arglist>(const WModelIndex &amp;index) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WModelIndex</type>
      <name>index</name>
      <anchorfile>classWt_1_1WAggregateProxyModel.html</anchorfile>
      <anchor>a071a58941e3c46581bc9e7b728cefe48</anchor>
      <arglist>(int row, int column, const WModelIndex &amp;parent=WModelIndex()) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>sort</name>
      <anchorfile>classWt_1_1WAggregateProxyModel.html</anchorfile>
      <anchor>a6140301feb4a3f143ae0dd86e12e0e18</anchor>
      <arglist>(int column, SortOrder order=SortOrder::Ascending) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WAnchor</name>
    <filename>classWt_1_1WAnchor.html</filename>
    <base>Wt::WContainerWidget</base>
    <member kind="function">
      <type></type>
      <name>WAnchor</name>
      <anchorfile>classWt_1_1WAnchor.html</anchorfile>
      <anchor>afadde4aff9cb060a1cb67f37e22d9687</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WAnchor</name>
      <anchorfile>classWt_1_1WAnchor.html</anchorfile>
      <anchor>ac448814adad91f7760d71e9698717c4e</anchor>
      <arglist>(const WLink &amp;link)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WAnchor</name>
      <anchorfile>classWt_1_1WAnchor.html</anchorfile>
      <anchor>a5470656e5394e0b3d1a625a807929caa</anchor>
      <arglist>(const WLink &amp;link, const WString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WAnchor</name>
      <anchorfile>classWt_1_1WAnchor.html</anchorfile>
      <anchor>ad7fb11774df2660b89f30ab2128f5b4a</anchor>
      <arglist>(const WLink &amp;link, std::unique_ptr&lt; WImage &gt; image)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLink</name>
      <anchorfile>classWt_1_1WAnchor.html</anchorfile>
      <anchor>a90d1aa41c061bdc9e61fa42eb36b27d8</anchor>
      <arglist>(const WLink &amp;link)</arglist>
    </member>
    <member kind="function">
      <type>const WLink &amp;</type>
      <name>link</name>
      <anchorfile>classWt_1_1WAnchor.html</anchorfile>
      <anchor>a2be0b6115f4e4efc1023ff9e00600abf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setText</name>
      <anchorfile>classWt_1_1WAnchor.html</anchorfile>
      <anchor>a8379cfef23023ac070d2b7dcedacdac8</anchor>
      <arglist>(const WString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>const WString &amp;</type>
      <name>text</name>
      <anchorfile>classWt_1_1WAnchor.html</anchorfile>
      <anchor>a3e437833e71c53ec3093db859722b0e4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setWordWrap</name>
      <anchorfile>classWt_1_1WAnchor.html</anchorfile>
      <anchor>abe96ca40734d6af4a901d5fb2a9c8c59</anchor>
      <arglist>(bool wordWrap)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTextFormat</name>
      <anchorfile>classWt_1_1WAnchor.html</anchorfile>
      <anchor>a3a1e81695c7e7ddbb982e551d8305281</anchor>
      <arglist>(TextFormat format)</arglist>
    </member>
    <member kind="function">
      <type>TextFormat</type>
      <name>textFormat</name>
      <anchorfile>classWt_1_1WAnchor.html</anchorfile>
      <anchor>ac61985702fe11ed343ed242fa4112fb4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>wordWrap</name>
      <anchorfile>classWt_1_1WAnchor.html</anchorfile>
      <anchor>a7aa89f71cd8c858f1f76d87de8eb8e33</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setImage</name>
      <anchorfile>classWt_1_1WAnchor.html</anchorfile>
      <anchor>ad116482e5a89c44097f286d7c8b486ca</anchor>
      <arglist>(std::unique_ptr&lt; WImage &gt; image)</arglist>
    </member>
    <member kind="function">
      <type>WImage *</type>
      <name>image</name>
      <anchorfile>classWt_1_1WAnchor.html</anchorfile>
      <anchor>a1a1292f221477de85abdf3eade890d5f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>canReceiveFocus</name>
      <anchorfile>classWt_1_1WAnchor.html</anchorfile>
      <anchor>ad3886bcb74c5bbd71dd3515e877760a7</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>tabIndex</name>
      <anchorfile>classWt_1_1WAnchor.html</anchorfile>
      <anchor>ac758e0230fcc04877fcefb4d335c88f3</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>setFirstFocus</name>
      <anchorfile>classWt_1_1WAnchor.html</anchorfile>
      <anchor>a80edbee8f09d651cf185c56b2b4c2f11</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>propagateSetEnabled</name>
      <anchorfile>classWt_1_1WAnchor.html</anchorfile>
      <anchor>aee29b5a61344f1edaf812acd36c6b09f</anchor>
      <arglist>(bool enabled) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>enableAjax</name>
      <anchorfile>classWt_1_1WAnchor.html</anchorfile>
      <anchor>a1a010523cd94dcbee1ddddf47897bf95</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WAnimation</name>
    <filename>classWt_1_1WAnimation.html</filename>
    <member kind="typedef">
      <type>AnimationEffect</type>
      <name>Effect</name>
      <anchorfile>classWt_1_1WAnimation.html</anchorfile>
      <anchor>a9afb4c1bf454be552cf0e0ad27861060</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WAnimation</name>
      <anchorfile>classWt_1_1WAnimation.html</anchorfile>
      <anchor>abf999394ccbd0ad57721efd4faa67fc5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WAnimation</name>
      <anchorfile>classWt_1_1WAnimation.html</anchorfile>
      <anchor>acdf22464dac85713fee39dc9b18c534e</anchor>
      <arglist>(WFlags&lt; AnimationEffect &gt; effects, TimingFunction timing=TimingFunction::Linear, int duration=250)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setEffects</name>
      <anchorfile>classWt_1_1WAnimation.html</anchorfile>
      <anchor>a7779fc3eee60bf7ffcddb9e7a1028a04</anchor>
      <arglist>(WFlags&lt; AnimationEffect &gt; effects)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; AnimationEffect &gt;</type>
      <name>effects</name>
      <anchorfile>classWt_1_1WAnimation.html</anchorfile>
      <anchor>a888a25c2d49f804e30ceb582d3a03f39</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classWt_1_1WAnimation.html</anchorfile>
      <anchor>a28bd090dd694b5197dfd5dbbf1b92877</anchor>
      <arglist>(const WAnimation &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classWt_1_1WAnimation.html</anchorfile>
      <anchor>a8e830ad06f28dc732d99758d6ea9986e</anchor>
      <arglist>(const WAnimation &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDuration</name>
      <anchorfile>classWt_1_1WAnimation.html</anchorfile>
      <anchor>a7d2efb3661ce2fdfe5b2c8f2118f4b5b</anchor>
      <arglist>(int msecs)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>duration</name>
      <anchorfile>classWt_1_1WAnimation.html</anchorfile>
      <anchor>af1a188ae5854ab0659f028dc9867b50e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTimingFunction</name>
      <anchorfile>classWt_1_1WAnimation.html</anchorfile>
      <anchor>a2e50be502a0c73ec52a52d2140c2ec43</anchor>
      <arglist>(TimingFunction function)</arglist>
    </member>
    <member kind="function">
      <type>TimingFunction</type>
      <name>timingFunction</name>
      <anchorfile>classWt_1_1WAnimation.html</anchorfile>
      <anchor>a34723894a7f8a598786041e1e2c8fa24</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>empty</name>
      <anchorfile>classWt_1_1WAnimation.html</anchorfile>
      <anchor>a43e911b76a2312fd90f9651e8606be06</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WApplication</name>
    <filename>classWt_1_1WApplication.html</filename>
    <base>Wt::WObject</base>
    <class kind="class">Wt::WApplication::UpdateLock</class>
    <member kind="typedef">
      <type>Wt::ApplicationCreator</type>
      <name>ApplicationCreator</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>a28b5dd3d1272f46fbacbfb21a0846d07</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WApplication</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>ae29a843f4d50159b17abfa9503c389db</anchor>
      <arglist>(const WEnvironment &amp;environment)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WApplication</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>ad0d9408ddc0fda917235d8416da3777f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const WEnvironment &amp;</type>
      <name>environment</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>ab8f2ac0a3b45209405bb8a41531c5e03</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WContainerWidget *</type>
      <name>root</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>a485af3ad2b758931edbde77fcf529981</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WWidget *</type>
      <name>findWidget</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>a0363c673fdb4e3f2be6068c5c1139b69</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTitle</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>a71a3f7da5abb9a76df94fab69ba61670</anchor>
      <arglist>(const WString &amp;title)</arglist>
    </member>
    <member kind="function">
      <type>const WString &amp;</type>
      <name>title</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>a4d49477a640488e64f8ff8d10b121423</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const WString &amp;</type>
      <name>closeMessage</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>ab8ab92e86d5239c70c6077d014f9b216</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; WLocalizedStrings &gt;</type>
      <name>localizedStrings</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>a2dfa8401ddf42df727edbfc1c34278e9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLocalizedStrings</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>a3392f7263ed7a2cf22286834c0b2e1ab</anchor>
      <arglist>(const std::shared_ptr&lt; WLocalizedStrings &gt; &amp;stringResolver)</arglist>
    </member>
    <member kind="function">
      <type>WMessageResourceBundle &amp;</type>
      <name>messageResourceBundle</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>a4f304244f6bc75be6cd5f41798ea5e2e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLocale</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>ac0af7e0131c926c77b207595c8c6e283</anchor>
      <arglist>(const WLocale &amp;locale)</arglist>
    </member>
    <member kind="function">
      <type>const WLocale &amp;</type>
      <name>locale</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>a151728696e737a3af0256920a2463211</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>refresh</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>a02b9d8aa1b6c2d0dc9edc1b9c63f86dc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bindWidget</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>abf3104dc9f6d7b491d8ef5194332525d</anchor>
      <arglist>(std::unique_ptr&lt; WWidget &gt; widget, const std::string &amp;domId)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>docRoot</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>a48eff4829124d8739e118e83dc4a0d7f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setConnectionMonitor</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>a8a64df3211f82bfb8677d689a268b440</anchor>
      <arglist>(const std::string &amp;jsObject)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>sessionId</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>a314a5461dc410f4713ab1b1258fd8ced</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>changeSessionId</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>a4b0bc73bab1132f17c13f5e731068446</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>processEvents</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>a48ceb7972ef7ec0e557adf441f660f2f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>waitForEvent</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>a47c68a803635eba1fee1750ed0d194f1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>initialize</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>a42fc7f65116073d4032573f1e42c1173</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>finalize</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>a10317a8a50dc95db9b27ad54409ab39f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTwoPhaseRenderingThreshold</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>a63d991e268c9af8898329217a1242563</anchor>
      <arglist>(int size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCookie</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>a5d10106d4131611aa98e20e6a82b3c40</anchor>
      <arglist>(const std::string &amp;name, const std::string &amp;value, int maxAge, const std::string &amp;domain=&quot;&quot;, const std::string &amp;path=&quot;&quot;, bool secure=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeCookie</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>a250fcc8a0959f2fe159ea10d22b552f9</anchor>
      <arglist>(const std::string &amp;name, const std::string &amp;domain=&quot;&quot;, const std::string &amp;path=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addMetaLink</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>a976f8a7f160fefc9d3f24a2b482f5c9a</anchor>
      <arglist>(const std::string &amp;href, const std::string &amp;rel, const std::string &amp;media, const std::string &amp;hreflang, const std::string &amp;type, const std::string &amp;sizes, bool disabled)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeMetaLink</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>a1febcb091c5f02602fac121741ee063e</anchor>
      <arglist>(const std::string &amp;href)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addMetaHeader</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>abb9103bc749dac6942649ea693dc9a3d</anchor>
      <arglist>(const std::string &amp;name, const WString &amp;content, const std::string &amp;lang=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addMetaHeader</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>a149412d829d104621c445bc10604be53</anchor>
      <arglist>(MetaHeaderType type, const std::string &amp;name, const WString &amp;content, const std::string &amp;lang=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>WString</type>
      <name>metaHeader</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>a509e2004a409b8c165bbb286c1a9537f</anchor>
      <arglist>(MetaHeaderType type, const std::string &amp;name) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeMetaHeader</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>a14fd608fd7d4079355f65b315e66a63f</anchor>
      <arglist>(MetaHeaderType type, const std::string &amp;name=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>WLogEntry</type>
      <name>log</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>aa806c98262a4d5c4d4d0537da59cdf1d</anchor>
      <arglist>(const std::string &amp;type) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLoadingIndicator</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>ab31ce845ad428af3cb7fd927ad8a0efb</anchor>
      <arglist>(std::unique_ptr&lt; WLoadingIndicator &gt; indicator)</arglist>
    </member>
    <member kind="function">
      <type>WLoadingIndicator *</type>
      <name>loadingIndicator</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>ad63fec8332790690965bbfb83bc882eb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>quit</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>a5231d54ed34982f4366058eb6440c8f7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>quit</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>a1f953732c8c55d702f5fe378b3cc97de</anchor>
      <arglist>(const WString &amp;restartMessage)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasQuit</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>aa361706ee828f93be3e1cdbd62518bae</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>::int64_t</type>
      <name>maximumRequestSize</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>ad11883b2a0ec8e58b05747aef0338af6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Signal&lt; ::int64_t &gt; &amp;</type>
      <name>requestTooLarge</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>aaa3a28a32244dd8383fb760906e2ee77</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setConfirmCloseMessage</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>a506978cfb884af4bc6ffd5a5bc8476d6</anchor>
      <arglist>(const WString &amp;message)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deferRendering</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>af6a25f56ab9d309d799012faf8823f48</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resumeRendering</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>a62dfa943a37a250ec781e9019ccd7434</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>encodeUntrustedUrl</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>a32dac299188eb612bdfd49051445b1fb</anchor>
      <arglist>(const std::string &amp;url) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pushExposedConstraint</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>a3f87e1ea12b9d7f3bab5d5bc39847bfa</anchor>
      <arglist>(WWidget *w)</arglist>
    </member>
    <member kind="function">
      <type>WCssStyleSheet &amp;</type>
      <name>styleSheet</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>a6a9a20d65ce9e7c2f62b27387c94e10d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>useStyleSheet</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>a8dcc025cd58968e087de8e90e6a4f547</anchor>
      <arglist>(const WLink &amp;link, const std::string &amp;media=&quot;all&quot;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>useStyleSheet</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>a6e7d270d5fcc82e306f2214605eae6a1</anchor>
      <arglist>(const WLink &amp;link, const std::string &amp;condition, const std::string &amp;media)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>useStyleSheet</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>af6d4152c4194f98400539e82f5abad86</anchor>
      <arglist>(const WLinkedCssStyleSheet &amp;styleSheet, const std::string &amp;condition=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeStyleSheet</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>ae1b8393391c6725d2373315c07ff37a2</anchor>
      <arglist>(const WLink &amp;link)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTheme</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>a70d17661dfc5a1fdc0af44da2d9edaee</anchor>
      <arglist>(const std::shared_ptr&lt; WTheme &gt; &amp;theme)</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; WTheme &gt;</type>
      <name>theme</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>a2c709baac7b63dc41879a0ccbb6ecb28</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCssTheme</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>a1d8462456e7d70aa991bd05dd8b646f4</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLayoutDirection</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>a44c5f0398b5539269be3961b26e95b08</anchor>
      <arglist>(LayoutDirection direction)</arglist>
    </member>
    <member kind="function">
      <type>LayoutDirection</type>
      <name>layoutDirection</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>ab926550d1f4ddc8e554fa457e4be27d5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBodyClass</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>aa8fe83406981a556da61a843bb691674</anchor>
      <arglist>(const std::string &amp;styleClass)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>bodyClass</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>a3fb83761e20849be1cc2b52b33ff955d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setHtmlClass</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>a28867ea48711f9290de496c2ed42fdbf</anchor>
      <arglist>(const std::string &amp;styleClass)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>htmlClass</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>aee9d09baf9f906378ee857ffda4ae525</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>url</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>ab7da09e55b1bc96de571871e7ffd5211</anchor>
      <arglist>(const std::string &amp;internalPath=std::string()) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>makeAbsoluteUrl</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>a5f622d89dcf3926b33c1a9527511730a</anchor>
      <arglist>(const std::string &amp;url) const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>resolveRelativeUrl</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>afce515807f006666d82703777831bd35</anchor>
      <arglist>(const std::string &amp;url) const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>bookmarkUrl</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>a24cee04e69695ce7f046d20b2473600a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>bookmarkUrl</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>a89c5e161559fdcff3a66db5c97d3df07</anchor>
      <arglist>(const std::string &amp;internalPath) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInternalPath</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>a2c1a10aadc0d7ed877b5715b42ca4911</anchor>
      <arglist>(const std::string &amp;path, bool emitChange=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInternalPathDefaultValid</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>ae641c0e2d82d21b0a4722129eea9ee76</anchor>
      <arglist>(bool valid)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>internalPathDefaultValid</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>af710889f66ebc69c553ac44b66b624d2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInternalPathValid</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>abd51dc659a0c68f51ed99eca1341ccb6</anchor>
      <arglist>(bool valid)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>internalPathValid</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>a8440990388b8ac12b0ac9feefce7ce89</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>internalPath</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>a43a0ed694ea2279e6cb33a8de4bc7536</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>internalPathNextPart</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>a6c0662ba2f66ddfed660e83a01266ba0</anchor>
      <arglist>(const std::string &amp;path) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>internalPathMatches</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>a76ed161db067e41823ae735437f9a4d1</anchor>
      <arglist>(const std::string &amp;path) const</arglist>
    </member>
    <member kind="function">
      <type>Signal&lt; std::string &gt; &amp;</type>
      <name>internalPathChanged</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>a674fd6a2522d66d07908e8f3d82424a9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Signal&lt; std::string &gt; &amp;</type>
      <name>internalPathInvalid</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>a490247b9593a6d989ba9cceb0eebe56b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>redirect</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>a4dcbf69c8b09c301577b5b6aa8a4da18</anchor>
      <arglist>(const std::string &amp;url)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>enableUpdates</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>ad9631ca64e68d30d40cb49c90e55223d</anchor>
      <arglist>(bool enabled=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>updatesEnabled</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>a8cb8d92cb6d384e6249045e017d11070</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>triggerUpdate</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>a51f50e0641a6d702a7c6ab7f8dd5946a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>attachThread</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>a015a4c7613755699c393fb5dd0769038</anchor>
      <arglist>(bool attach=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doJavaScript</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>a2a92457b9212cef4057cb54e56183967</anchor>
      <arglist>(const std::string &amp;javascript, bool afterLoaded=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addAutoJavaScript</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>a412bcf9c269b097e7c372515e27b88ba</anchor>
      <arglist>(const std::string &amp;javascript)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>declareJavaScriptFunction</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>a3456e2bd2eec561abb90ae19ae42be02</anchor>
      <arglist>(const std::string &amp;name, const std::string &amp;function)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>require</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>ae88546224ed32cade783da188b145138</anchor>
      <arglist>(const std::string &amp;url, const std::string &amp;symbol=std::string())</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>requireJQuery</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>aa2add60804ff75b3798fc270050654c5</anchor>
      <arglist>(const std::string &amp;url)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>customJQuery</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>a34e6b1ed8c974fe32c5b56a8a740ca45</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setJavaScriptClass</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>a800b4f49366fad5ed0db6c00ee3500b1</anchor>
      <arglist>(const std::string &amp;className)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>javaScriptClass</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>a6e0963307eb9367a3a4a3f4e35ae3abe</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EventSignal&lt; WKeyEvent &gt; &amp;</type>
      <name>globalKeyWentDown</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>a0a9652fc0d0cbebca7966f98454b078a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EventSignal&lt; WKeyEvent &gt; &amp;</type>
      <name>globalKeyPressed</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>a7d8f807eee7191ae6b7f6f7fe2ab2fae</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EventSignal&lt; WKeyEvent &gt; &amp;</type>
      <name>globalKeyWentUp</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>aa2a569eabc35162f4b2a72c36a24cd80</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EventSignal &amp;</type>
      <name>globalEnterPressed</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>a60c1defb57949f6f78c6c1373a18e74e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EventSignal &amp;</type>
      <name>globalEscapePressed</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>ab4d42f698c48bf84fcc807cb597a0509</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static WApplication *</type>
      <name>instance</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>a38d922da0a0d83395519f3eaab85d0f6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>resourcesUrl</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>ac0fa2857a600cc34b3443a04d9ed5c5c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>relativeResourcesUrl</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>ad50cc339348331fa542a48dd6d6ef516</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>appRoot</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>a88b082dadadd3fb7dbe10887e7d89c91</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>readConfigurationProperty</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>ac0f5599ed35eb159fa6912aa0ff3c75c</anchor>
      <arglist>(const std::string &amp;name, std::string &amp;value)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>notify</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>a4a6f167bea94aefa8ba24f914c2fbee5</anchor>
      <arglist>(const WEvent &amp;e)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>isExposed</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>a4b0ac372b01efbf2ffa79c5d779389bd</anchor>
      <arglist>(WWidget *w) const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>enableAjax</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>a78016406c4746c56b2c2ffce7c5e181f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>unload</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>a9a4048e01b69a536e35f47eb2a59a69b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>idleTimeout</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>a4e8020fca24d09661ee4bf13400354d9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>handleJavaScriptError</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>a384a9a7b8992637a292757a391e136e8</anchor>
      <arglist>(const std::string &amp;errorText)</arglist>
    </member>
    <member kind="typedef">
      <type>std::function&lt; std::unique_ptr&lt; WApplication &gt;const WEnvironment &amp;)&gt;</type>
      <name>ApplicationCreator</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>a66dc5c014c0e60ac92e0dbfea1e11e0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>WCssStyleSheet &amp;</type>
      <name>styleSheet</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>a6a9a20d65ce9e7c2f62b27387c94e10d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>useStyleSheet</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>a8dcc025cd58968e087de8e90e6a4f547</anchor>
      <arglist>(const WLink &amp;link, const std::string &amp;media=&quot;all&quot;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>useStyleSheet</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>a6e7d270d5fcc82e306f2214605eae6a1</anchor>
      <arglist>(const WLink &amp;link, const std::string &amp;condition, const std::string &amp;media)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>useStyleSheet</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>af6d4152c4194f98400539e82f5abad86</anchor>
      <arglist>(const WLinkedCssStyleSheet &amp;styleSheet, const std::string &amp;condition=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeStyleSheet</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>ae1b8393391c6725d2373315c07ff37a2</anchor>
      <arglist>(const WLink &amp;link)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTheme</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>a70d17661dfc5a1fdc0af44da2d9edaee</anchor>
      <arglist>(const std::shared_ptr&lt; WTheme &gt; &amp;theme)</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; WTheme &gt;</type>
      <name>theme</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>a2c709baac7b63dc41879a0ccbb6ecb28</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCssTheme</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>a1d8462456e7d70aa991bd05dd8b646f4</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLayoutDirection</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>a44c5f0398b5539269be3961b26e95b08</anchor>
      <arglist>(LayoutDirection direction)</arglist>
    </member>
    <member kind="function">
      <type>LayoutDirection</type>
      <name>layoutDirection</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>ab926550d1f4ddc8e554fa457e4be27d5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBodyClass</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>aa8fe83406981a556da61a843bb691674</anchor>
      <arglist>(const std::string &amp;styleClass)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>bodyClass</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>a3fb83761e20849be1cc2b52b33ff955d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setHtmlClass</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>a28867ea48711f9290de496c2ed42fdbf</anchor>
      <arglist>(const std::string &amp;styleClass)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>htmlClass</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>aee9d09baf9f906378ee857ffda4ae525</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>url</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>ab7da09e55b1bc96de571871e7ffd5211</anchor>
      <arglist>(const std::string &amp;internalPath=std::string()) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>makeAbsoluteUrl</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>a5f622d89dcf3926b33c1a9527511730a</anchor>
      <arglist>(const std::string &amp;url) const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>resolveRelativeUrl</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>afce515807f006666d82703777831bd35</anchor>
      <arglist>(const std::string &amp;url) const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>bookmarkUrl</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>a24cee04e69695ce7f046d20b2473600a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>bookmarkUrl</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>a89c5e161559fdcff3a66db5c97d3df07</anchor>
      <arglist>(const std::string &amp;internalPath) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInternalPath</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>a2c1a10aadc0d7ed877b5715b42ca4911</anchor>
      <arglist>(const std::string &amp;path, bool emitChange=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInternalPathDefaultValid</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>ae641c0e2d82d21b0a4722129eea9ee76</anchor>
      <arglist>(bool valid)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>internalPathDefaultValid</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>af710889f66ebc69c553ac44b66b624d2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInternalPathValid</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>abd51dc659a0c68f51ed99eca1341ccb6</anchor>
      <arglist>(bool valid)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>internalPathValid</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>a8440990388b8ac12b0ac9feefce7ce89</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>internalPath</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>a43a0ed694ea2279e6cb33a8de4bc7536</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>internalPathNextPart</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>a6c0662ba2f66ddfed660e83a01266ba0</anchor>
      <arglist>(const std::string &amp;path) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>internalPathMatches</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>a76ed161db067e41823ae735437f9a4d1</anchor>
      <arglist>(const std::string &amp;path) const</arglist>
    </member>
    <member kind="function">
      <type>Signal&lt; std::string &gt; &amp;</type>
      <name>internalPathChanged</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>a674fd6a2522d66d07908e8f3d82424a9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Signal&lt; std::string &gt; &amp;</type>
      <name>internalPathInvalid</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>a490247b9593a6d989ba9cceb0eebe56b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>redirect</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>a4dcbf69c8b09c301577b5b6aa8a4da18</anchor>
      <arglist>(const std::string &amp;url)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>enableUpdates</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>ad9631ca64e68d30d40cb49c90e55223d</anchor>
      <arglist>(bool enabled=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>updatesEnabled</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>a8cb8d92cb6d384e6249045e017d11070</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>triggerUpdate</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>a51f50e0641a6d702a7c6ab7f8dd5946a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>attachThread</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>a015a4c7613755699c393fb5dd0769038</anchor>
      <arglist>(bool attach=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doJavaScript</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>a2a92457b9212cef4057cb54e56183967</anchor>
      <arglist>(const std::string &amp;javascript, bool afterLoaded=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addAutoJavaScript</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>a412bcf9c269b097e7c372515e27b88ba</anchor>
      <arglist>(const std::string &amp;javascript)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>declareJavaScriptFunction</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>a3456e2bd2eec561abb90ae19ae42be02</anchor>
      <arglist>(const std::string &amp;name, const std::string &amp;function)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>require</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>ae88546224ed32cade783da188b145138</anchor>
      <arglist>(const std::string &amp;url, const std::string &amp;symbol=std::string())</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>requireJQuery</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>aa2add60804ff75b3798fc270050654c5</anchor>
      <arglist>(const std::string &amp;url)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>customJQuery</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>a34e6b1ed8c974fe32c5b56a8a740ca45</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setJavaScriptClass</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>a800b4f49366fad5ed0db6c00ee3500b1</anchor>
      <arglist>(const std::string &amp;className)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>javaScriptClass</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>a6e0963307eb9367a3a4a3f4e35ae3abe</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EventSignal&lt; WKeyEvent &gt; &amp;</type>
      <name>globalKeyWentDown</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>a0a9652fc0d0cbebca7966f98454b078a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EventSignal&lt; WKeyEvent &gt; &amp;</type>
      <name>globalKeyPressed</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>a7d8f807eee7191ae6b7f6f7fe2ab2fae</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EventSignal&lt; WKeyEvent &gt; &amp;</type>
      <name>globalKeyWentUp</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>aa2a569eabc35162f4b2a72c36a24cd80</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EventSignal &amp;</type>
      <name>globalEnterPressed</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>a60c1defb57949f6f78c6c1373a18e74e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EventSignal &amp;</type>
      <name>globalEscapePressed</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>ab4d42f698c48bf84fcc807cb597a0509</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WAudio</name>
    <filename>classWt_1_1WAudio.html</filename>
    <base>Wt::WAbstractMedia</base>
    <member kind="function">
      <type></type>
      <name>WAudio</name>
      <anchorfile>classWt_1_1WAudio.html</anchorfile>
      <anchor>a378ee98fcb54e34569b1f08ae3e52cb6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>jsAudioRef</name>
      <anchorfile>classWt_1_1WAudio.html</anchorfile>
      <anchor>a328d3855010cabbc909924b66f7acf65</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Chart::WAxis</name>
    <filename>classWt_1_1Chart_1_1WAxis.html</filename>
    <class kind="struct">Wt::Chart::WAxis::TickLabel</class>
    <member kind="typedef">
      <type>std::function&lt; double(double)&gt;</type>
      <name>LabelTransform</name>
      <anchorfile>classWt_1_1Chart_1_1WAxis.html</anchorfile>
      <anchor>a7b5884981063a827701c610c2322fa34</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WAxis</name>
      <anchorfile>classWt_1_1Chart_1_1WAxis.html</anchorfile>
      <anchor>a0ca5a582e1a1050e242e0117f6ccdd07</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~WAxis</name>
      <anchorfile>classWt_1_1Chart_1_1WAxis.html</anchorfile>
      <anchor>a30f68d9858c6e801a18bd6fd22969e8e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Axis</type>
      <name>id</name>
      <anchorfile>classWt_1_1Chart_1_1WAxis.html</anchorfile>
      <anchor>a3cd1146e8ebffe7eac9ea725f56fa4c0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>xAxisId</name>
      <anchorfile>classWt_1_1Chart_1_1WAxis.html</anchorfile>
      <anchor>abea578c283b1fb09d8588cc3eeaeb480</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>yAxisId</name>
      <anchorfile>classWt_1_1Chart_1_1WAxis.html</anchorfile>
      <anchor>a15a4c674c07f2985f2e3006b1492dae2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVisible</name>
      <anchorfile>classWt_1_1Chart_1_1WAxis.html</anchorfile>
      <anchor>a59fd4c6a79f6e3ea75f21aa44c4acfa8</anchor>
      <arglist>(bool visible)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isVisible</name>
      <anchorfile>classWt_1_1Chart_1_1WAxis.html</anchorfile>
      <anchor>a8b84efcd18d293ad8557775225c02c8d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLocation</name>
      <anchorfile>classWt_1_1Chart_1_1WAxis.html</anchorfile>
      <anchor>a6dab2f46117b85a4a6f439e4f194ee82</anchor>
      <arglist>(AxisValue value)</arglist>
    </member>
    <member kind="function">
      <type>AxisValue</type>
      <name>location</name>
      <anchorfile>classWt_1_1Chart_1_1WAxis.html</anchorfile>
      <anchor>ada8fdf77721fac957b708d62ccc55782</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setScale</name>
      <anchorfile>classWt_1_1Chart_1_1WAxis.html</anchorfile>
      <anchor>ab067037b83d1d663535250968a1776d8</anchor>
      <arglist>(AxisScale scale)</arglist>
    </member>
    <member kind="function">
      <type>AxisScale</type>
      <name>scale</name>
      <anchorfile>classWt_1_1Chart_1_1WAxis.html</anchorfile>
      <anchor>a9961d16fab1e27bfaa31ff5462dd6848</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMinimum</name>
      <anchorfile>classWt_1_1Chart_1_1WAxis.html</anchorfile>
      <anchor>a878e20a87f7f6c5b4693bb81699c9f5b</anchor>
      <arglist>(double minimum)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>minimum</name>
      <anchorfile>classWt_1_1Chart_1_1WAxis.html</anchorfile>
      <anchor>ac55ee5817fb30b0bc59c78594ef435d4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMaximum</name>
      <anchorfile>classWt_1_1Chart_1_1WAxis.html</anchorfile>
      <anchor>a64152da3f00fdeb6824d6a06e33ab346</anchor>
      <arglist>(double maximum)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>maximum</name>
      <anchorfile>classWt_1_1Chart_1_1WAxis.html</anchorfile>
      <anchor>a08717c323e62c03619b3c55a33e16ada</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRange</name>
      <anchorfile>classWt_1_1Chart_1_1WAxis.html</anchorfile>
      <anchor>aae563fd94b81a03cfe2662dbde2ae548</anchor>
      <arglist>(double minimum, double maximum)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setResolution</name>
      <anchorfile>classWt_1_1Chart_1_1WAxis.html</anchorfile>
      <anchor>ab36cb584a0aa8bdcc1c3212a9304e6cd</anchor>
      <arglist>(double resolution)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>resolution</name>
      <anchorfile>classWt_1_1Chart_1_1WAxis.html</anchorfile>
      <anchor>aec3c5315f9a76eef613feaa16f80a2d5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAutoLimits</name>
      <anchorfile>classWt_1_1Chart_1_1WAxis.html</anchorfile>
      <anchor>a26b0b1b9a61fa3355a0ec224a7ff1caa</anchor>
      <arglist>(WFlags&lt; AxisValue &gt; locations)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; AxisValue &gt;</type>
      <name>autoLimits</name>
      <anchorfile>classWt_1_1Chart_1_1WAxis.html</anchorfile>
      <anchor>a204adce011a114c2be7b8f819d7a3a2e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRoundLimits</name>
      <anchorfile>classWt_1_1Chart_1_1WAxis.html</anchorfile>
      <anchor>a07be968a06695f6fd37007ea5008295d</anchor>
      <arglist>(WFlags&lt; AxisValue &gt; locations)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; AxisValue &gt;</type>
      <name>roundLimits</name>
      <anchorfile>classWt_1_1Chart_1_1WAxis.html</anchorfile>
      <anchor>ab8bb0e9762c614bdf93a9d35a7aa5ca4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBreak</name>
      <anchorfile>classWt_1_1Chart_1_1WAxis.html</anchorfile>
      <anchor>a159f74342b4800e5c5be11eb1b2a351b</anchor>
      <arglist>(double minimum, double maximum)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLabelInterval</name>
      <anchorfile>classWt_1_1Chart_1_1WAxis.html</anchorfile>
      <anchor>a68b1f798fd0d9a713fac29f9d761e2a8</anchor>
      <arglist>(double labelInterval)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>labelInterval</name>
      <anchorfile>classWt_1_1Chart_1_1WAxis.html</anchorfile>
      <anchor>afe2f9f85ada388092692772ad7df0042</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLabelBasePoint</name>
      <anchorfile>classWt_1_1Chart_1_1WAxis.html</anchorfile>
      <anchor>a6a75b78e746b235bab553f53ddc3e33b</anchor>
      <arglist>(double point)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>labelBasePoint</name>
      <anchorfile>classWt_1_1Chart_1_1WAxis.html</anchorfile>
      <anchor>aa4003413e7792719c9282ca1426adb2e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLabelFormat</name>
      <anchorfile>classWt_1_1Chart_1_1WAxis.html</anchorfile>
      <anchor>a7c37c241825af404b36916dcae9ae87b</anchor>
      <arglist>(const WString &amp;format)</arglist>
    </member>
    <member kind="function">
      <type>WString</type>
      <name>labelFormat</name>
      <anchorfile>classWt_1_1Chart_1_1WAxis.html</anchorfile>
      <anchor>a5f2c20aeaaa81a28ff9dba8af348141b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLabelAngle</name>
      <anchorfile>classWt_1_1Chart_1_1WAxis.html</anchorfile>
      <anchor>afd850eefc2beb7dffa5a637987cb1c6c</anchor>
      <arglist>(double angle)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>labelAngle</name>
      <anchorfile>classWt_1_1Chart_1_1WAxis.html</anchorfile>
      <anchor>af53567dbc374c064127fe76845f4fcac</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTitleOrientation</name>
      <anchorfile>classWt_1_1Chart_1_1WAxis.html</anchorfile>
      <anchor>adb8fa80e48d26bc84bbca164eb2e2eed</anchor>
      <arglist>(const Orientation &amp;orientation)</arglist>
    </member>
    <member kind="function">
      <type>const Orientation &amp;</type>
      <name>titleOrientation</name>
      <anchorfile>classWt_1_1Chart_1_1WAxis.html</anchorfile>
      <anchor>acc40e5ad8f6ab3998a39d91fb054829c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setGridLinesEnabled</name>
      <anchorfile>classWt_1_1Chart_1_1WAxis.html</anchorfile>
      <anchor>a79d70190d984c7f956e44b79de0af527</anchor>
      <arglist>(bool enabled)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isGridLinesEnabled</name>
      <anchorfile>classWt_1_1Chart_1_1WAxis.html</anchorfile>
      <anchor>ae236a9caab0dfc35e3078374eaaec6c1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPen</name>
      <anchorfile>classWt_1_1Chart_1_1WAxis.html</anchorfile>
      <anchor>ab1b9dcb9e23e01ec18994712fa5e11d1</anchor>
      <arglist>(const WPen &amp;pen)</arglist>
    </member>
    <member kind="function">
      <type>const WPen &amp;</type>
      <name>pen</name>
      <anchorfile>classWt_1_1Chart_1_1WAxis.html</anchorfile>
      <anchor>acab3b65e3acda4b0dfadbbc3af2be8ed</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTextPen</name>
      <anchorfile>classWt_1_1Chart_1_1WAxis.html</anchorfile>
      <anchor>a8425fd89520a88fd788fcb0d1be125a0</anchor>
      <arglist>(const WPen &amp;pen)</arglist>
    </member>
    <member kind="function">
      <type>const WPen &amp;</type>
      <name>textPen</name>
      <anchorfile>classWt_1_1Chart_1_1WAxis.html</anchorfile>
      <anchor>af462ef4239c9b4c050b289a454b493b2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setGridLinesPen</name>
      <anchorfile>classWt_1_1Chart_1_1WAxis.html</anchorfile>
      <anchor>aa97db5c1f1bff788382ef48b8a6d1cc2</anchor>
      <arglist>(const WPen &amp;pen)</arglist>
    </member>
    <member kind="function">
      <type>const WPen &amp;</type>
      <name>gridLinesPen</name>
      <anchorfile>classWt_1_1Chart_1_1WAxis.html</anchorfile>
      <anchor>aa8ba493d968ac8931c0a39d6755d878a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMargin</name>
      <anchorfile>classWt_1_1Chart_1_1WAxis.html</anchorfile>
      <anchor>a61a297a8d3c99e74b07e9def9ebe88a5</anchor>
      <arglist>(int pixels)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>margin</name>
      <anchorfile>classWt_1_1Chart_1_1WAxis.html</anchorfile>
      <anchor>a3aaa1382bba3b0af6374871e4b8216b5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTitle</name>
      <anchorfile>classWt_1_1Chart_1_1WAxis.html</anchorfile>
      <anchor>ae85436297049bd4c60a75a9cc5313e4a</anchor>
      <arglist>(const WString &amp;title)</arglist>
    </member>
    <member kind="function">
      <type>const WString &amp;</type>
      <name>title</name>
      <anchorfile>classWt_1_1Chart_1_1WAxis.html</anchorfile>
      <anchor>a62aab15e5587879432f5d94c89773453</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTitleFont</name>
      <anchorfile>classWt_1_1Chart_1_1WAxis.html</anchorfile>
      <anchor>ad977d82494e5922ccf6882f1378c4db6</anchor>
      <arglist>(const WFont &amp;titleFont)</arglist>
    </member>
    <member kind="function">
      <type>const WFont &amp;</type>
      <name>titleFont</name>
      <anchorfile>classWt_1_1Chart_1_1WAxis.html</anchorfile>
      <anchor>afcb7c573660911813755a7342669bd21</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTitleOffset</name>
      <anchorfile>classWt_1_1Chart_1_1WAxis.html</anchorfile>
      <anchor>ac1fa38a42df526aab88637929f624710</anchor>
      <arglist>(double offset)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>titleOffset</name>
      <anchorfile>classWt_1_1Chart_1_1WAxis.html</anchorfile>
      <anchor>a8876b547a7ae48276649567c270639c4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLabelFont</name>
      <anchorfile>classWt_1_1Chart_1_1WAxis.html</anchorfile>
      <anchor>ae9f02413691b40e95e6b7284d41dfba3</anchor>
      <arglist>(const WFont &amp;labelFont)</arglist>
    </member>
    <member kind="function">
      <type>const WFont &amp;</type>
      <name>labelFont</name>
      <anchorfile>classWt_1_1Chart_1_1WAxis.html</anchorfile>
      <anchor>aba4eaf482ea260eab009fbc2dde11941</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WString</type>
      <name>label</name>
      <anchorfile>classWt_1_1Chart_1_1WAxis.html</anchorfile>
      <anchor>ac166942a838e26fd93b080a5fa81cf84</anchor>
      <arglist>(double u) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setZoomRange</name>
      <anchorfile>classWt_1_1Chart_1_1WAxis.html</anchorfile>
      <anchor>a0be187399e7cb4877f2c5e3837eba6ea</anchor>
      <arglist>(double minimum, double maximum)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>zoomMinimum</name>
      <anchorfile>classWt_1_1Chart_1_1WAxis.html</anchorfile>
      <anchor>ad16bf59f1fbb8c9cabc51e8ee8d82bbc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>zoomMaximum</name>
      <anchorfile>classWt_1_1Chart_1_1WAxis.html</anchorfile>
      <anchor>a10a6b8727799a2f20807f04880d04600</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Signal&lt; double, double &gt; &amp;</type>
      <name>zoomRangeChanged</name>
      <anchorfile>classWt_1_1Chart_1_1WAxis.html</anchorfile>
      <anchor>a7e432917f0f23f18db3a043397a81904</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setZoom</name>
      <anchorfile>classWt_1_1Chart_1_1WAxis.html</anchorfile>
      <anchor>a16d188d56c2b62b7b3f2ddb6fa96d7cc</anchor>
      <arglist>(double zoom)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>zoom</name>
      <anchorfile>classWt_1_1Chart_1_1WAxis.html</anchorfile>
      <anchor>a4f1debe792c846d23d931fee4887ebf2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMaxZoom</name>
      <anchorfile>classWt_1_1Chart_1_1WAxis.html</anchorfile>
      <anchor>a6f5776dc9e8d6fd3cfebfc00d3cd2ad2</anchor>
      <arglist>(double maxZoom)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>maxZoom</name>
      <anchorfile>classWt_1_1Chart_1_1WAxis.html</anchorfile>
      <anchor>a87bb72b58a57c3f89492c21654b52acb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMinimumZoomRange</name>
      <anchorfile>classWt_1_1Chart_1_1WAxis.html</anchorfile>
      <anchor>a4558ed53e30fa3d8dfa71b20717af9e4</anchor>
      <arglist>(double size)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>minimumZoomRange</name>
      <anchorfile>classWt_1_1Chart_1_1WAxis.html</anchorfile>
      <anchor>aa14b5e6a8543de02fd800c455aade230</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMaximumZoomRange</name>
      <anchorfile>classWt_1_1Chart_1_1WAxis.html</anchorfile>
      <anchor>ada743ccf44212cfb1f4a6fa83b79e581</anchor>
      <arglist>(double size)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>maximumZoomRange</name>
      <anchorfile>classWt_1_1Chart_1_1WAxis.html</anchorfile>
      <anchor>a04d3d2424d4c76b5fbab9c607cbf4917</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMinZoom</name>
      <anchorfile>classWt_1_1Chart_1_1WAxis.html</anchorfile>
      <anchor>a13d7f38a677d502e3b5dd0d9550e6d33</anchor>
      <arglist>(double minZoom)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>minZoom</name>
      <anchorfile>classWt_1_1Chart_1_1WAxis.html</anchorfile>
      <anchor>a4ed1120c3529fb8c8fe563152508d44f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPan</name>
      <anchorfile>classWt_1_1Chart_1_1WAxis.html</anchorfile>
      <anchor>a2f6a11d9d47036f8806c5a8412dfd24c</anchor>
      <arglist>(double pan)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>pan</name>
      <anchorfile>classWt_1_1Chart_1_1WAxis.html</anchorfile>
      <anchor>a98f22863b5afa622087b648aaf4d9515</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPadding</name>
      <anchorfile>classWt_1_1Chart_1_1WAxis.html</anchorfile>
      <anchor>a23f464974348b4e4301d2f07345b0a06</anchor>
      <arglist>(int padding)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>padding</name>
      <anchorfile>classWt_1_1Chart_1_1WAxis.html</anchorfile>
      <anchor>a4271fae25a7dca58b9a69c687aac8d51</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTickDirection</name>
      <anchorfile>classWt_1_1Chart_1_1WAxis.html</anchorfile>
      <anchor>ab16cfe889a24fbeb08b3d313a8d5cab0</anchor>
      <arglist>(TickDirection direction)</arglist>
    </member>
    <member kind="function">
      <type>TickDirection</type>
      <name>tickDirection</name>
      <anchorfile>classWt_1_1Chart_1_1WAxis.html</anchorfile>
      <anchor>af9a518ede2f0f40d55198498b2d42582</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSoftLabelClipping</name>
      <anchorfile>classWt_1_1Chart_1_1WAxis.html</anchorfile>
      <anchor>a4897cedc1f8cf704f723c031026181ed</anchor>
      <arglist>(bool enabled)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>softLabelClipping</name>
      <anchorfile>classWt_1_1Chart_1_1WAxis.html</anchorfile>
      <anchor>aa934edc8f5d5b8e078668128211150a3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInverted</name>
      <anchorfile>classWt_1_1Chart_1_1WAxis.html</anchorfile>
      <anchor>a2bb7c8ec67ed2ff0b57953ea40cd87ef</anchor>
      <arglist>(bool inverted=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>inverted</name>
      <anchorfile>classWt_1_1Chart_1_1WAxis.html</anchorfile>
      <anchor>a0e7e2fcb5b8e1cb6f25b087d811234e7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLabelTransform</name>
      <anchorfile>classWt_1_1Chart_1_1WAxis.html</anchorfile>
      <anchor>a71928aabf753854274d753e266aabfc2</anchor>
      <arglist>(const LabelTransform &amp;transform, AxisValue side)</arglist>
    </member>
    <member kind="function">
      <type>LabelTransform</type>
      <name>labelTransform</name>
      <anchorfile>classWt_1_1Chart_1_1WAxis.html</anchorfile>
      <anchor>ad37b3fc3eac4d7d5a1022d4728b829cf</anchor>
      <arglist>(AxisValue side) const</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const double</type>
      <name>AUTO_MINIMUM</name>
      <anchorfile>classWt_1_1Chart_1_1WAxis.html</anchorfile>
      <anchor>ad0c60f190b30ddfec321e750248c6579</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const double</type>
      <name>AUTO_MAXIMUM</name>
      <anchorfile>classWt_1_1Chart_1_1WAxis.html</anchorfile>
      <anchor>af506429983c72703d8fadbc03a1e67d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>getLabelTicks</name>
      <anchorfile>classWt_1_1Chart_1_1WAxis.html</anchorfile>
      <anchor>a7a6e079a7a0b136f77dad65b2c1abcc1</anchor>
      <arglist>(std::vector&lt; TickLabel &gt; &amp;ticks, int segment, AxisConfig config) const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual WString</type>
      <name>autoDateFormat</name>
      <anchorfile>classWt_1_1Chart_1_1WAxis.html</anchorfile>
      <anchor>a2fc7cb8f3a0a101e2a7d249ff8a37c35</anchor>
      <arglist>(const WDateTime &amp;dt, DateTimeUnit unit, bool atTick) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Chart::WAxisSliderWidget</name>
    <filename>classWt_1_1Chart_1_1WAxisSliderWidget.html</filename>
    <base>Wt::WPaintedWidget</base>
    <member kind="function">
      <type></type>
      <name>WAxisSliderWidget</name>
      <anchorfile>classWt_1_1Chart_1_1WAxisSliderWidget.html</anchorfile>
      <anchor>a6bf7761ca90d81246e68f60863af4521</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WAxisSliderWidget</name>
      <anchorfile>classWt_1_1Chart_1_1WAxisSliderWidget.html</anchorfile>
      <anchor>af1498b20fb53fb31867c31cd579e59e8</anchor>
      <arglist>(WDataSeries *series)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~WAxisSliderWidget</name>
      <anchorfile>classWt_1_1Chart_1_1WAxisSliderWidget.html</anchorfile>
      <anchor>a3f45440c4ad49770aed96fff6476a6ed</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSeriesPen</name>
      <anchorfile>classWt_1_1Chart_1_1WAxisSliderWidget.html</anchorfile>
      <anchor>ab35f18fa78e031311ff2cfb0783eb13c</anchor>
      <arglist>(const WPen &amp;pen)</arglist>
    </member>
    <member kind="function">
      <type>const WPen &amp;</type>
      <name>seriesPen</name>
      <anchorfile>classWt_1_1Chart_1_1WAxisSliderWidget.html</anchorfile>
      <anchor>a69e8560913ab1b019283b80ffd22220c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSelectedSeriesPen</name>
      <anchorfile>classWt_1_1Chart_1_1WAxisSliderWidget.html</anchorfile>
      <anchor>a29302145d6bf5911b3d7caffb8bc9980</anchor>
      <arglist>(const WPen &amp;pen)</arglist>
    </member>
    <member kind="function">
      <type>WPen</type>
      <name>selectedSeriesPen</name>
      <anchorfile>classWt_1_1Chart_1_1WAxisSliderWidget.html</anchorfile>
      <anchor>a1222ae5eae69990b4cd3ab48a53799ec</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setHandleBrush</name>
      <anchorfile>classWt_1_1Chart_1_1WAxisSliderWidget.html</anchorfile>
      <anchor>af1bcb443b779f556814bfbd223bb28a2</anchor>
      <arglist>(const WBrush &amp;brush)</arglist>
    </member>
    <member kind="function">
      <type>const WBrush &amp;</type>
      <name>handleBrush</name>
      <anchorfile>classWt_1_1Chart_1_1WAxisSliderWidget.html</anchorfile>
      <anchor>a9712f2244a909c846591443d60df1d50</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBackground</name>
      <anchorfile>classWt_1_1Chart_1_1WAxisSliderWidget.html</anchorfile>
      <anchor>a9360e69cdc0a4e513621249112d3bbd7</anchor>
      <arglist>(const WBrush &amp;background)</arglist>
    </member>
    <member kind="function">
      <type>const WBrush &amp;</type>
      <name>background</name>
      <anchorfile>classWt_1_1Chart_1_1WAxisSliderWidget.html</anchorfile>
      <anchor>a4a6b3821c765845fc3c4f0ed8f122c93</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSelectedAreaBrush</name>
      <anchorfile>classWt_1_1Chart_1_1WAxisSliderWidget.html</anchorfile>
      <anchor>ad30d9a1778b0fc857864969c22236483</anchor>
      <arglist>(const WBrush &amp;brush)</arglist>
    </member>
    <member kind="function">
      <type>const WBrush &amp;</type>
      <name>selectedAreaBrush</name>
      <anchorfile>classWt_1_1Chart_1_1WAxisSliderWidget.html</anchorfile>
      <anchor>a6e5492667c894e247cf31e0b81ec35fb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSelectionAreaPadding</name>
      <anchorfile>classWt_1_1Chart_1_1WAxisSliderWidget.html</anchorfile>
      <anchor>abc547d8bd4ae94a6f2cd5a83b2f7d7f4</anchor>
      <arglist>(int padding, WFlags&lt; Side &gt; sides=AllSides)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>selectionAreaPadding</name>
      <anchorfile>classWt_1_1Chart_1_1WAxisSliderWidget.html</anchorfile>
      <anchor>aa01c2349df2b46404515ff064338b9f8</anchor>
      <arglist>(Side side) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAutoLayoutEnabled</name>
      <anchorfile>classWt_1_1Chart_1_1WAxisSliderWidget.html</anchorfile>
      <anchor>a32d4ed16f9c5b1c309efbaa6791b8425</anchor>
      <arglist>(bool enabled=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isAutoLayoutEnabled</name>
      <anchorfile>classWt_1_1Chart_1_1WAxisSliderWidget.html</anchorfile>
      <anchor>aa61e32eab2001f43c391aa9889c5d55b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLabelsEnabled</name>
      <anchorfile>classWt_1_1Chart_1_1WAxisSliderWidget.html</anchorfile>
      <anchor>ab44a812adf99b1f1a08298136edef851</anchor>
      <arglist>(bool enabled=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isLabelsEnabled</name>
      <anchorfile>classWt_1_1Chart_1_1WAxisSliderWidget.html</anchorfile>
      <anchor>a63343d2a7b8998847179781a199b4da5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setYAxisZoomEnabled</name>
      <anchorfile>classWt_1_1Chart_1_1WAxisSliderWidget.html</anchorfile>
      <anchor>a989c5f6c5d78bfc8bae08f9b615e7fb1</anchor>
      <arglist>(bool enabled=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isYAxisZoomEnabled</name>
      <anchorfile>classWt_1_1Chart_1_1WAxisSliderWidget.html</anchorfile>
      <anchor>a79e27b38d2ef8ae28752fa31fb4a52c6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>render</name>
      <anchorfile>classWt_1_1Chart_1_1WAxisSliderWidget.html</anchorfile>
      <anchor>ad3346fbea05557953dd936ec19d72b55</anchor>
      <arglist>(WFlags&lt; RenderFlag &gt; flags) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>paintEvent</name>
      <anchorfile>classWt_1_1Chart_1_1WAxisSliderWidget.html</anchorfile>
      <anchor>ae5ecdfdcc4baab1e85efe0126024da78</anchor>
      <arglist>(WPaintDevice *paintDevice) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Chart::WBarSelection</name>
    <filename>classWt_1_1Chart_1_1WBarSelection.html</filename>
    <base>Wt::Chart::WSelection</base>
    <member kind="variable">
      <type>WModelIndex</type>
      <name>index</name>
      <anchorfile>classWt_1_1Chart_1_1WBarSelection.html</anchorfile>
      <anchor>a8a3cd2ae361d3692dc8a4a12a25b0370</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WBatchEditProxyModel</name>
    <filename>classWt_1_1WBatchEditProxyModel.html</filename>
    <base>Wt::WAbstractProxyModel</base>
    <member kind="function">
      <type></type>
      <name>WBatchEditProxyModel</name>
      <anchorfile>classWt_1_1WBatchEditProxyModel.html</anchorfile>
      <anchor>a0877a5b1d68438f536e51138c1243d22</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~WBatchEditProxyModel</name>
      <anchorfile>classWt_1_1WBatchEditProxyModel.html</anchorfile>
      <anchor>a9cc01e5215c752842bb8eaa7c03449f3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isDirty</name>
      <anchorfile>classWt_1_1WBatchEditProxyModel.html</anchorfile>
      <anchor>a4405c67065e8175010b21051240df4c2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>commitAll</name>
      <anchorfile>classWt_1_1WBatchEditProxyModel.html</anchorfile>
      <anchor>a54c22faab062ba9fed79409f4cacdbe9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>revertAll</name>
      <anchorfile>classWt_1_1WBatchEditProxyModel.html</anchorfile>
      <anchor>a0ec1198073cb711cce9505c9fe4b3a3f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNewRowData</name>
      <anchorfile>classWt_1_1WBatchEditProxyModel.html</anchorfile>
      <anchor>a4244ecdf05fc753ac8d0a0ef5c8d9e6a</anchor>
      <arglist>(int column, const cpp17::any &amp;data, ItemDataRole role=ItemDataRole::Display)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNewRowFlags</name>
      <anchorfile>classWt_1_1WBatchEditProxyModel.html</anchorfile>
      <anchor>a8dd7cfe1c12f4dc8f61106d63e9fe0e7</anchor>
      <arglist>(int column, WFlags&lt; ItemFlag &gt; flags)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDirtyIndication</name>
      <anchorfile>classWt_1_1WBatchEditProxyModel.html</anchorfile>
      <anchor>aed1e35dea8fe90acfb46f3b8cae69daf</anchor>
      <arglist>(ItemDataRole role, const cpp17::any &amp;data)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WModelIndex</type>
      <name>mapFromSource</name>
      <anchorfile>classWt_1_1WBatchEditProxyModel.html</anchorfile>
      <anchor>a9b2b720761a8d32751b33e806adecd96</anchor>
      <arglist>(const WModelIndex &amp;sourceIndex) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WModelIndex</type>
      <name>mapToSource</name>
      <anchorfile>classWt_1_1WBatchEditProxyModel.html</anchorfile>
      <anchor>a37e1b4076e36e4dec8ed49b4542aa986</anchor>
      <arglist>(const WModelIndex &amp;proxyIndex) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setSourceModel</name>
      <anchorfile>classWt_1_1WBatchEditProxyModel.html</anchorfile>
      <anchor>af58009c60a997690b3b18f0a32b46f08</anchor>
      <arglist>(const std::shared_ptr&lt; WAbstractItemModel &gt; &amp;sourceModel) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>columnCount</name>
      <anchorfile>classWt_1_1WBatchEditProxyModel.html</anchorfile>
      <anchor>a68a434a52273941125d3650e1158b21d</anchor>
      <arglist>(const WModelIndex &amp;parent=WModelIndex()) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>rowCount</name>
      <anchorfile>classWt_1_1WBatchEditProxyModel.html</anchorfile>
      <anchor>ace82cf95fa0554dbba9a9edafea41452</anchor>
      <arglist>(const WModelIndex &amp;parent=WModelIndex()) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WModelIndex</type>
      <name>parent</name>
      <anchorfile>classWt_1_1WBatchEditProxyModel.html</anchorfile>
      <anchor>a7f1abd848eacd74e83eb7201d3275d20</anchor>
      <arglist>(const WModelIndex &amp;index) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WModelIndex</type>
      <name>index</name>
      <anchorfile>classWt_1_1WBatchEditProxyModel.html</anchorfile>
      <anchor>a4d3318a08f2ae8f0b2dd3a23761709a9</anchor>
      <arglist>(int row, int column, const WModelIndex &amp;parent=WModelIndex()) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual cpp17::any</type>
      <name>data</name>
      <anchorfile>classWt_1_1WBatchEditProxyModel.html</anchorfile>
      <anchor>aca069ad66f8f9b39a641a4a5ac3c783e</anchor>
      <arglist>(const WModelIndex &amp;index, ItemDataRole role=ItemDataRole::Display) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>setData</name>
      <anchorfile>classWt_1_1WBatchEditProxyModel.html</anchorfile>
      <anchor>a1cd995b2313b882c9984ca153bf45aa9</anchor>
      <arglist>(const WModelIndex &amp;index, const cpp17::any &amp;value, ItemDataRole role=ItemDataRole::Edit) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WFlags&lt; ItemFlag &gt;</type>
      <name>flags</name>
      <anchorfile>classWt_1_1WBatchEditProxyModel.html</anchorfile>
      <anchor>aabc7b4c1d4600838c187ad6e34e22fa0</anchor>
      <arglist>(const WModelIndex &amp;index) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual cpp17::any</type>
      <name>headerData</name>
      <anchorfile>classWt_1_1WBatchEditProxyModel.html</anchorfile>
      <anchor>ab691c10a769249711ab996ac8a86175f</anchor>
      <arglist>(int section, Orientation orientation=Orientation::Horizontal, ItemDataRole role=ItemDataRole::Display) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>insertRows</name>
      <anchorfile>classWt_1_1WBatchEditProxyModel.html</anchorfile>
      <anchor>ac6d528c61ff9d1839b6b88fdfa62bff0</anchor>
      <arglist>(int row, int count, const WModelIndex &amp;parent=WModelIndex()) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>removeRows</name>
      <anchorfile>classWt_1_1WBatchEditProxyModel.html</anchorfile>
      <anchor>ab16d7354dcfae17680fa0517bc0ef6bb</anchor>
      <arglist>(int row, int count, const WModelIndex &amp;parent=WModelIndex()) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>insertColumns</name>
      <anchorfile>classWt_1_1WBatchEditProxyModel.html</anchorfile>
      <anchor>ac9740de9528d994ec232fdea44bf4929</anchor>
      <arglist>(int column, int count, const WModelIndex &amp;parent=WModelIndex()) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>removeColumns</name>
      <anchorfile>classWt_1_1WBatchEditProxyModel.html</anchorfile>
      <anchor>a2b4484f8c06a527b1c147c0dabda3af7</anchor>
      <arglist>(int column, int count, const WModelIndex &amp;parent=WModelIndex()) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>sort</name>
      <anchorfile>classWt_1_1WBatchEditProxyModel.html</anchorfile>
      <anchor>a8eff22e1b7281c59e187fb0b36e632f5</anchor>
      <arglist>(int column, SortOrder order=SortOrder::Ascending) override</arglist>
    </member>
    <member kind="function">
      <type>virtual bool</type>
      <name>setData</name>
      <anchorfile>classWt_1_1WBatchEditProxyModel.html</anchorfile>
      <anchor>abe2d5b91abf57ff6dbc26d0e66a77572</anchor>
      <arglist>(const WModelIndex &amp;index, const cpp17::any &amp;value, ItemDataRole role=ItemDataRole::Edit)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setData</name>
      <anchorfile>classWt_1_1WBatchEditProxyModel.html</anchorfile>
      <anchor>aae463d7040f364ffcc008997f8e387a2</anchor>
      <arglist>(int row, int column, const cpp17::any &amp;value, ItemDataRole role=ItemDataRole::Edit, const WModelIndex &amp;parent=WModelIndex())</arglist>
    </member>
    <member kind="function">
      <type>virtual cpp17::any</type>
      <name>data</name>
      <anchorfile>classWt_1_1WBatchEditProxyModel.html</anchorfile>
      <anchor>a837660e348a3c61c3919c238bf11eb29</anchor>
      <arglist>(const WModelIndex &amp;index, ItemDataRole role=ItemDataRole::Display) const=0</arglist>
    </member>
    <member kind="function">
      <type>cpp17::any</type>
      <name>data</name>
      <anchorfile>classWt_1_1WBatchEditProxyModel.html</anchorfile>
      <anchor>a5fc67e5fbb584cd1c6e6108ad07ff484</anchor>
      <arglist>(int row, int column, ItemDataRole role=ItemDataRole::Display, const WModelIndex &amp;parent=WModelIndex()) const</arglist>
    </member>
    <member kind="function">
      <type>virtual bool</type>
      <name>setHeaderData</name>
      <anchorfile>classWt_1_1WBatchEditProxyModel.html</anchorfile>
      <anchor>abd4f1baf6088c2cc4847d3b384cddbd2</anchor>
      <arglist>(int section, Orientation orientation, const cpp17::any &amp;value, ItemDataRole role=ItemDataRole::Edit)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setHeaderData</name>
      <anchorfile>classWt_1_1WBatchEditProxyModel.html</anchorfile>
      <anchor>a0bccbb4373b4c1e8bce85573b933d53d</anchor>
      <arglist>(int section, const cpp17::any &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WBootstrapTheme</name>
    <filename>classWt_1_1WBootstrapTheme.html</filename>
    <base>Wt::WTheme</base>
    <member kind="typedef">
      <type>BootstrapVersion</type>
      <name>Version</name>
      <anchorfile>classWt_1_1WBootstrapTheme.html</anchorfile>
      <anchor>a2f04c62851cac773f9ab13aa8d394c46</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WBootstrapTheme</name>
      <anchorfile>classWt_1_1WBootstrapTheme.html</anchorfile>
      <anchor>aff56f78ea99502c27d1e5ba45e5f4d54</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setResponsive</name>
      <anchorfile>classWt_1_1WBootstrapTheme.html</anchorfile>
      <anchor>a8d3bdf537cf1da396b847766e8e842c0</anchor>
      <arglist>(bool responsive)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>responsive</name>
      <anchorfile>classWt_1_1WBootstrapTheme.html</anchorfile>
      <anchor>ab3e917c15dbf6a72a07fa526a14114cb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVersion</name>
      <anchorfile>classWt_1_1WBootstrapTheme.html</anchorfile>
      <anchor>a449663c304d799b278f21d73c0affc1f</anchor>
      <arglist>(BootstrapVersion version)</arglist>
    </member>
    <member kind="function">
      <type>BootstrapVersion</type>
      <name>version</name>
      <anchorfile>classWt_1_1WBootstrapTheme.html</anchorfile>
      <anchor>af2e447640b4a99628ea8717a8aece642</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFormControlStyleEnabled</name>
      <anchorfile>classWt_1_1WBootstrapTheme.html</anchorfile>
      <anchor>abd7bbdf136b61302efb5408563c933eb</anchor>
      <arglist>(bool enabled)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>name</name>
      <anchorfile>classWt_1_1WBootstrapTheme.html</anchorfile>
      <anchor>a51d288664261b6ad957842995b3ede98</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::vector&lt; WLinkedCssStyleSheet &gt;</type>
      <name>styleSheets</name>
      <anchorfile>classWt_1_1WBootstrapTheme.html</anchorfile>
      <anchor>af7437ee92883055bb4884dcd19c5d8a3</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>apply</name>
      <anchorfile>classWt_1_1WBootstrapTheme.html</anchorfile>
      <anchor>a20e8e7a35bda0921b115ab992a378931</anchor>
      <arglist>(WWidget *widget, WWidget *child, int widgetRole) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>apply</name>
      <anchorfile>classWt_1_1WBootstrapTheme.html</anchorfile>
      <anchor>a808347cd9f37571ea7344b1ee6a3fe2c</anchor>
      <arglist>(WWidget *widget, DomElement &amp;element, int elementRole) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>disabledClass</name>
      <anchorfile>classWt_1_1WBootstrapTheme.html</anchorfile>
      <anchor>ad5873e5a492238e2d746d23e4aec7d1d</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>activeClass</name>
      <anchorfile>classWt_1_1WBootstrapTheme.html</anchorfile>
      <anchor>a3ff796a6763f8d464118668c6576f515</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>utilityCssClass</name>
      <anchorfile>classWt_1_1WBootstrapTheme.html</anchorfile>
      <anchor>af66f66a807c42b7d6c68c907236e16b1</anchor>
      <arglist>(int utilityCssClassRole) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>canStyleAnchorAsButton</name>
      <anchorfile>classWt_1_1WBootstrapTheme.html</anchorfile>
      <anchor>a15027751ab03d67488bd7bbe278f2271</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>applyValidationStyle</name>
      <anchorfile>classWt_1_1WBootstrapTheme.html</anchorfile>
      <anchor>a99f686b041f216c47dbc5648d71798b4</anchor>
      <arglist>(WWidget *widget, const Wt::WValidator::Result &amp;validation, WFlags&lt; ValidationStyleFlag &gt; styles) const override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WBorder</name>
    <filename>classWt_1_1WBorder.html</filename>
    <member kind="typedef">
      <type>BorderWidth</type>
      <name>Width</name>
      <anchorfile>classWt_1_1WBorder.html</anchorfile>
      <anchor>ab68fc54ed4c799964648fe3cd5fdfcd0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>BorderStyle</type>
      <name>Style</name>
      <anchorfile>classWt_1_1WBorder.html</anchorfile>
      <anchor>a57a71e854fc1e8b5ee880927d815abd0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WBorder</name>
      <anchorfile>classWt_1_1WBorder.html</anchorfile>
      <anchor>acc8471953ee905e5bc363184bf37a8df</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WBorder</name>
      <anchorfile>classWt_1_1WBorder.html</anchorfile>
      <anchor>a5464eb6ae97bfe545c77b9ced0f01eaa</anchor>
      <arglist>(BorderStyle style, BorderWidth=BorderWidth::Medium, WColor color=WColor())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WBorder</name>
      <anchorfile>classWt_1_1WBorder.html</anchorfile>
      <anchor>ab968587991b3c387f2e209bff9773e18</anchor>
      <arglist>(BorderStyle style, const WLength &amp;width, WColor color=WColor())</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classWt_1_1WBorder.html</anchorfile>
      <anchor>a036d145d4494492a0d1faf5edf13d7b4</anchor>
      <arglist>(const WBorder &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classWt_1_1WBorder.html</anchorfile>
      <anchor>abf6b47ed1742524c75fe64aaa15609d6</anchor>
      <arglist>(const WBorder &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setWidth</name>
      <anchorfile>classWt_1_1WBorder.html</anchorfile>
      <anchor>a79f059f99190aed0c2a00e4c5c63d104</anchor>
      <arglist>(BorderWidth width, const WLength &amp;explicitWidth=WLength::Auto)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setColor</name>
      <anchorfile>classWt_1_1WBorder.html</anchorfile>
      <anchor>a8336b810e01de7acc051644c75a74ac0</anchor>
      <arglist>(WColor color)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setStyle</name>
      <anchorfile>classWt_1_1WBorder.html</anchorfile>
      <anchor>a5d2d9c9646e7331232eb92ee9b028596</anchor>
      <arglist>(BorderStyle style)</arglist>
    </member>
    <member kind="function">
      <type>BorderWidth</type>
      <name>width</name>
      <anchorfile>classWt_1_1WBorder.html</anchorfile>
      <anchor>a5ff043a4859af54f126fbc3e6b81b010</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WLength</type>
      <name>explicitWidth</name>
      <anchorfile>classWt_1_1WBorder.html</anchorfile>
      <anchor>a8481e82439716924fa4593976f67454b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WColor</type>
      <name>color</name>
      <anchorfile>classWt_1_1WBorder.html</anchorfile>
      <anchor>a2d4fe1be4f710e738110f4d4b98e2334</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>BorderStyle</type>
      <name>style</name>
      <anchorfile>classWt_1_1WBorder.html</anchorfile>
      <anchor>aa12ec2b7bdb3fff4638d8d597266ae56</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>cssText</name>
      <anchorfile>classWt_1_1WBorder.html</anchorfile>
      <anchor>a8420c0e5c60ad88e269400fe6c4ce347</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WBorderLayout</name>
    <filename>classWt_1_1WBorderLayout.html</filename>
    <base>Wt::WLayout</base>
    <member kind="typedef">
      <type>LayoutPosition</type>
      <name>Position</name>
      <anchorfile>classWt_1_1WBorderLayout.html</anchorfile>
      <anchor>a3576d00b519861a62e359a00c0ee7409</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WBorderLayout</name>
      <anchorfile>classWt_1_1WBorderLayout.html</anchorfile>
      <anchor>a615d2fc497321dda5301293b73c9817a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~WBorderLayout</name>
      <anchorfile>classWt_1_1WBorderLayout.html</anchorfile>
      <anchor>a6595850b1f7fd3ef09980f0be4026833</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSpacing</name>
      <anchorfile>classWt_1_1WBorderLayout.html</anchorfile>
      <anchor>a353057bcf43bd82c579db80f3e38cee4</anchor>
      <arglist>(int size)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>spacing</name>
      <anchorfile>classWt_1_1WBorderLayout.html</anchorfile>
      <anchor>a2331517e13de437b8b5d9c6e95d37b8e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>addItem</name>
      <anchorfile>classWt_1_1WBorderLayout.html</anchorfile>
      <anchor>af01edb0676a660193eeb9c89768d8d99</anchor>
      <arglist>(std::unique_ptr&lt; WLayoutItem &gt; item) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::unique_ptr&lt; WLayoutItem &gt;</type>
      <name>removeItem</name>
      <anchorfile>classWt_1_1WBorderLayout.html</anchorfile>
      <anchor>afd3f8cf7f6dfdeaed4a50a32b7306b9f</anchor>
      <arglist>(WLayoutItem *item) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WLayoutItem *</type>
      <name>itemAt</name>
      <anchorfile>classWt_1_1WBorderLayout.html</anchorfile>
      <anchor>a83cccc615e51c5bfe6d8f679c9917c95</anchor>
      <arglist>(int index) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>count</name>
      <anchorfile>classWt_1_1WBorderLayout.html</anchorfile>
      <anchor>abb6380ed9826a5b9909615020578cd26</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addWidget</name>
      <anchorfile>classWt_1_1WBorderLayout.html</anchorfile>
      <anchor>a64aacb28a11ebb316fd5f4666fd9764a</anchor>
      <arglist>(std::unique_ptr&lt; WWidget &gt; widget, LayoutPosition position)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add</name>
      <anchorfile>classWt_1_1WBorderLayout.html</anchorfile>
      <anchor>accd9f0f7fea849d8cf865055acefce7b</anchor>
      <arglist>(std::unique_ptr&lt; WLayoutItem &gt; item, LayoutPosition position)</arglist>
    </member>
    <member kind="function">
      <type>WWidget *</type>
      <name>widgetAt</name>
      <anchorfile>classWt_1_1WBorderLayout.html</anchorfile>
      <anchor>ae493926d0fed5db8e10c61d20638cfe3</anchor>
      <arglist>(LayoutPosition position) const</arglist>
    </member>
    <member kind="function">
      <type>WLayoutItem *</type>
      <name>itemAt</name>
      <anchorfile>classWt_1_1WBorderLayout.html</anchorfile>
      <anchor>a1baade20e5817f219023ba5e5926fd41</anchor>
      <arglist>(LayoutPosition position) const</arglist>
    </member>
    <member kind="function">
      <type>LayoutPosition</type>
      <name>position</name>
      <anchorfile>classWt_1_1WBorderLayout.html</anchorfile>
      <anchor>acde10d591b1e99d5687c5c2a4b936499</anchor>
      <arglist>(WLayoutItem *item) const</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual void</type>
      <name>setParentWidget</name>
      <anchorfile>classWt_1_1WBorderLayout.html</anchorfile>
      <anchor>ad1b5f35db839e6995ae706ca570e0064</anchor>
      <arglist>(WWidget *parent) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WBoxLayout</name>
    <filename>classWt_1_1WBoxLayout.html</filename>
    <base>Wt::WLayout</base>
    <member kind="function">
      <type></type>
      <name>WBoxLayout</name>
      <anchorfile>classWt_1_1WBoxLayout.html</anchorfile>
      <anchor>a3e549614ef0a6b3c6f5cc9667e35ad22</anchor>
      <arglist>(LayoutDirection dir)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>addItem</name>
      <anchorfile>classWt_1_1WBoxLayout.html</anchorfile>
      <anchor>af7c6ffa4ceaad3418c995348712dba94</anchor>
      <arglist>(std::unique_ptr&lt; WLayoutItem &gt; item) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::unique_ptr&lt; WLayoutItem &gt;</type>
      <name>removeItem</name>
      <anchorfile>classWt_1_1WBoxLayout.html</anchorfile>
      <anchor>ab4002874e66bb0684aec44c015eb96db</anchor>
      <arglist>(WLayoutItem *item) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WLayoutItem *</type>
      <name>itemAt</name>
      <anchorfile>classWt_1_1WBoxLayout.html</anchorfile>
      <anchor>a3484fc08d50ec25c3f596cf6c9aea500</anchor>
      <arglist>(int index) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>count</name>
      <anchorfile>classWt_1_1WBoxLayout.html</anchorfile>
      <anchor>a035fea32d5b405f5fefaa93163cccef3</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDirection</name>
      <anchorfile>classWt_1_1WBoxLayout.html</anchorfile>
      <anchor>ae521270da7b4b96c110084bd6500be5f</anchor>
      <arglist>(LayoutDirection direction)</arglist>
    </member>
    <member kind="function">
      <type>LayoutDirection</type>
      <name>direction</name>
      <anchorfile>classWt_1_1WBoxLayout.html</anchorfile>
      <anchor>a21a0e52ebfc54d42ead68507e1dd1288</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSpacing</name>
      <anchorfile>classWt_1_1WBoxLayout.html</anchorfile>
      <anchor>a34d544a1a2bd8beffa6b8e5e84fbc19b</anchor>
      <arglist>(int size)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>spacing</name>
      <anchorfile>classWt_1_1WBoxLayout.html</anchorfile>
      <anchor>a6c6cfb60ecfb811c059955cb7f4c2d20</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addWidget</name>
      <anchorfile>classWt_1_1WBoxLayout.html</anchorfile>
      <anchor>a2e3e6bcd3a059fd9780ac2b584a9e07b</anchor>
      <arglist>(std::unique_ptr&lt; WWidget &gt; widget, int stretch, WFlags&lt; AlignmentFlag &gt; alignment)</arglist>
    </member>
    <member kind="function">
      <type>Widget *</type>
      <name>addWidget</name>
      <anchorfile>classWt_1_1WBoxLayout.html</anchorfile>
      <anchor>a4d13c4c40ab06d7a59b2675f1b86d437</anchor>
      <arglist>(std::unique_ptr&lt; Widget &gt; widget, int stretch=0, WFlags&lt; AlignmentFlag &gt; alignment=None)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addLayout</name>
      <anchorfile>classWt_1_1WBoxLayout.html</anchorfile>
      <anchor>a1c1e7041b5cd133446c3d61661473f82</anchor>
      <arglist>(std::unique_ptr&lt; WLayout &gt; layout, int stretch, WFlags&lt; AlignmentFlag &gt; alignment)</arglist>
    </member>
    <member kind="function">
      <type>Layout *</type>
      <name>addLayout</name>
      <anchorfile>classWt_1_1WBoxLayout.html</anchorfile>
      <anchor>a79bc02b5f307c12a8ab57416cc7c48c4</anchor>
      <arglist>(std::unique_ptr&lt; Layout &gt; layout, int stretch=0, WFlags&lt; AlignmentFlag &gt; alignment=None)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addSpacing</name>
      <anchorfile>classWt_1_1WBoxLayout.html</anchorfile>
      <anchor>a3cbd78251252e724d01937e2f6cc803d</anchor>
      <arglist>(const WLength &amp;size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addStretch</name>
      <anchorfile>classWt_1_1WBoxLayout.html</anchorfile>
      <anchor>a811708ce9336d753c20aaedc14b00d5f</anchor>
      <arglist>(int stretch=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertWidget</name>
      <anchorfile>classWt_1_1WBoxLayout.html</anchorfile>
      <anchor>af133226e0d67ae8e2f9aa485033435ac</anchor>
      <arglist>(int index, std::unique_ptr&lt; WWidget &gt; widget, int stretch=0, WFlags&lt; AlignmentFlag &gt; alignment=None)</arglist>
    </member>
    <member kind="function">
      <type>Widget *</type>
      <name>insertWidget</name>
      <anchorfile>classWt_1_1WBoxLayout.html</anchorfile>
      <anchor>a31f821f13614c83dd6144a85bc77d032</anchor>
      <arglist>(int index, std::unique_ptr&lt; Widget &gt; widget, int stretch=0, WFlags&lt; AlignmentFlag &gt; alignment=None)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertLayout</name>
      <anchorfile>classWt_1_1WBoxLayout.html</anchorfile>
      <anchor>ad74396028a898a0ac3518c0362f48e6e</anchor>
      <arglist>(int index, std::unique_ptr&lt; WLayout &gt; layout, int stretch=0, WFlags&lt; AlignmentFlag &gt; alignment=None)</arglist>
    </member>
    <member kind="function">
      <type>Layout *</type>
      <name>insertLayout</name>
      <anchorfile>classWt_1_1WBoxLayout.html</anchorfile>
      <anchor>a89de619a39b566efd1aa5ce2b044e3d6</anchor>
      <arglist>(int index, std::unique_ptr&lt; Layout &gt; layout, int stretch=0, WFlags&lt; AlignmentFlag &gt; alignment=None)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertSpacing</name>
      <anchorfile>classWt_1_1WBoxLayout.html</anchorfile>
      <anchor>a0d5d6a9e408c6bc7e25020f8c85cb4cf</anchor>
      <arglist>(int index, const WLength &amp;size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertStretch</name>
      <anchorfile>classWt_1_1WBoxLayout.html</anchorfile>
      <anchor>a0174de2ae36e2992b7209cf789d85271</anchor>
      <arglist>(int index, int stretch=0)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setStretchFactor</name>
      <anchorfile>classWt_1_1WBoxLayout.html</anchorfile>
      <anchor>a47182ea3c459afdadb3cc03232a8d110</anchor>
      <arglist>(WLayout *layout, int stretch)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setStretchFactor</name>
      <anchorfile>classWt_1_1WBoxLayout.html</anchorfile>
      <anchor>af5ce73d289874c80e88ed6fd9934bb39</anchor>
      <arglist>(WWidget *widget, int stretch)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setResizable</name>
      <anchorfile>classWt_1_1WBoxLayout.html</anchorfile>
      <anchor>ac2628c9ddfb9b6c079a8b5d5261b94c2</anchor>
      <arglist>(int index, bool enabled=true, const WLength &amp;initialSize=WLength::Auto)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isResizable</name>
      <anchorfile>classWt_1_1WBoxLayout.html</anchorfile>
      <anchor>a09592488b9a64d4800cae7c8bba6e00e</anchor>
      <arglist>(int index) const</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual void</type>
      <name>setParentWidget</name>
      <anchorfile>classWt_1_1WBoxLayout.html</anchorfile>
      <anchor>af2102954d7e4fa0c4407dbca5bf40aa2</anchor>
      <arglist>(WWidget *parent) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WBreak</name>
    <filename>classWt_1_1WBreak.html</filename>
    <base>Wt::WWebWidget</base>
    <member kind="function">
      <type></type>
      <name>WBreak</name>
      <anchorfile>classWt_1_1WBreak.html</anchorfile>
      <anchor>a501f16024bcb67d325640839f7ca4012</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WBrush</name>
    <filename>classWt_1_1WBrush.html</filename>
    <base>Wt::WJavaScriptExposableObject</base>
    <member kind="typedef">
      <type>BrushStyle</type>
      <name>Style</name>
      <anchorfile>classWt_1_1WBrush.html</anchorfile>
      <anchor>a347219f376cec9d0a332a53963945657</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WBrush</name>
      <anchorfile>classWt_1_1WBrush.html</anchorfile>
      <anchor>ab650511b8300044e2c62b209d8b5ada2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WBrush</name>
      <anchorfile>classWt_1_1WBrush.html</anchorfile>
      <anchor>a3008dcc22cb049cd8ec7b7fdc286b13f</anchor>
      <arglist>(BrushStyle style)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WBrush</name>
      <anchorfile>classWt_1_1WBrush.html</anchorfile>
      <anchor>a1cd32bceb74be7792cf1b89d5df862a6</anchor>
      <arglist>(const WColor &amp;color)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WBrush</name>
      <anchorfile>classWt_1_1WBrush.html</anchorfile>
      <anchor>a213caf5e80151d73a2b911a9bf786b4e</anchor>
      <arglist>(StandardColor color)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WBrush</name>
      <anchorfile>classWt_1_1WBrush.html</anchorfile>
      <anchor>a587d7ad908aafb17621079a497d8a99d</anchor>
      <arglist>(const WGradient &amp;gradient)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classWt_1_1WBrush.html</anchorfile>
      <anchor>a6c74eb499fb5942de0759ab586edc959</anchor>
      <arglist>(const WBrush &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classWt_1_1WBrush.html</anchorfile>
      <anchor>a009b8db9cd6a5c8fffb046b018624e02</anchor>
      <arglist>(const WBrush &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setStyle</name>
      <anchorfile>classWt_1_1WBrush.html</anchorfile>
      <anchor>a17140d3478a678345df0f1113ee00f30</anchor>
      <arglist>(BrushStyle style)</arglist>
    </member>
    <member kind="function">
      <type>BrushStyle</type>
      <name>style</name>
      <anchorfile>classWt_1_1WBrush.html</anchorfile>
      <anchor>a11c072633662d2d1e9962ea4052d1b65</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setColor</name>
      <anchorfile>classWt_1_1WBrush.html</anchorfile>
      <anchor>a9b6a446a81d6c3089a2cf37010fc5743</anchor>
      <arglist>(const WColor &amp;color)</arglist>
    </member>
    <member kind="function">
      <type>const WColor &amp;</type>
      <name>color</name>
      <anchorfile>classWt_1_1WBrush.html</anchorfile>
      <anchor>a90b7f01b19a3bf9b4f50f18981fc9d67</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setGradient</name>
      <anchorfile>classWt_1_1WBrush.html</anchorfile>
      <anchor>a8b9fa3282e28c6bce499ec2b20e38fb5</anchor>
      <arglist>(const WGradient &amp;gradient)</arglist>
    </member>
    <member kind="function">
      <type>const WGradient &amp;</type>
      <name>gradient</name>
      <anchorfile>classWt_1_1WBrush.html</anchorfile>
      <anchor>afdd2f3bb0730d1bf3122e2c8e4d7c62e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>jsValue</name>
      <anchorfile>classWt_1_1WBrush.html</anchorfile>
      <anchor>a6d59ed758c91a56ad193bda6335e9e02</anchor>
      <arglist>() const override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WButtonGroup</name>
    <filename>classWt_1_1WButtonGroup.html</filename>
    <base>Wt::WObject</base>
    <member kind="function">
      <type></type>
      <name>WButtonGroup</name>
      <anchorfile>classWt_1_1WButtonGroup.html</anchorfile>
      <anchor>ae008d528256573e44470c38a8bd38ffc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addButton</name>
      <anchorfile>classWt_1_1WButtonGroup.html</anchorfile>
      <anchor>abbe8605c1e57e75316731af9124bacca</anchor>
      <arglist>(WRadioButton *button, int id=-1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeButton</name>
      <anchorfile>classWt_1_1WButtonGroup.html</anchorfile>
      <anchor>ade4ea1cf5ac08b17e0f92153c98204d3</anchor>
      <arglist>(WRadioButton *button)</arglist>
    </member>
    <member kind="function">
      <type>WRadioButton *</type>
      <name>button</name>
      <anchorfile>classWt_1_1WButtonGroup.html</anchorfile>
      <anchor>af0869b3dbe6cf379a502555d97e92f5c</anchor>
      <arglist>(int id) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>id</name>
      <anchorfile>classWt_1_1WButtonGroup.html</anchorfile>
      <anchor>aafe83456284d4d0fc2c8ef777e5d4263</anchor>
      <arglist>(WRadioButton *button) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const std::string</type>
      <name>id</name>
      <anchorfile>classWt_1_1WButtonGroup.html</anchorfile>
      <anchor>a2f1b5269d9dae69bdc78aaa8ede36e1b</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; WRadioButton * &gt;</type>
      <name>buttons</name>
      <anchorfile>classWt_1_1WButtonGroup.html</anchorfile>
      <anchor>ae6049609249e93bb2a0f65fed8e17493</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>count</name>
      <anchorfile>classWt_1_1WButtonGroup.html</anchorfile>
      <anchor>a72115b61bfe71b37054fe599b3f3b47a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>checkedId</name>
      <anchorfile>classWt_1_1WButtonGroup.html</anchorfile>
      <anchor>ad20837e5c563a74cd1ab14c4f81e18b8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCheckedButton</name>
      <anchorfile>classWt_1_1WButtonGroup.html</anchorfile>
      <anchor>ac67ce8ffc614cb7319efa4657c57f25a</anchor>
      <arglist>(WRadioButton *button)</arglist>
    </member>
    <member kind="function">
      <type>WRadioButton *</type>
      <name>checkedButton</name>
      <anchorfile>classWt_1_1WButtonGroup.html</anchorfile>
      <anchor>a70fe649a0d55aee847e0a717f51e2e19</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSelectedButtonIndex</name>
      <anchorfile>classWt_1_1WButtonGroup.html</anchorfile>
      <anchor>a968222f7cba72561b1712c90efc30d46</anchor>
      <arglist>(int idx)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>selectedButtonIndex</name>
      <anchorfile>classWt_1_1WButtonGroup.html</anchorfile>
      <anchor>a57b916b5f0cdcd51b357aa07c06d5139</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Signal&lt; WRadioButton * &gt; &amp;</type>
      <name>checkedChanged</name>
      <anchorfile>classWt_1_1WButtonGroup.html</anchorfile>
      <anchor>ad5661cc6137de244819f47f492b42687</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WCalendar</name>
    <filename>classWt_1_1WCalendar.html</filename>
    <base>Wt::WCompositeWidget</base>
    <member kind="typedef">
      <type>CalendarHeaderFormat</type>
      <name>HeaderFormat</name>
      <anchorfile>classWt_1_1WCalendar.html</anchorfile>
      <anchor>a00ca455eae3700114b06c9ba12022ba0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WCalendar</name>
      <anchorfile>classWt_1_1WCalendar.html</anchorfile>
      <anchor>ab0ccf0a157e29c548496b662842abdd1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSelectionMode</name>
      <anchorfile>classWt_1_1WCalendar.html</anchorfile>
      <anchor>a42e800f304acd0e6ed55258149354b9d</anchor>
      <arglist>(SelectionMode mode)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>browseToPreviousYear</name>
      <anchorfile>classWt_1_1WCalendar.html</anchorfile>
      <anchor>aa60744e2ecaeda40a2a9b0a401010470</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>browseToPreviousMonth</name>
      <anchorfile>classWt_1_1WCalendar.html</anchorfile>
      <anchor>a99c57c17f6afab4a0aa3a74ee9b19289</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>browseToNextYear</name>
      <anchorfile>classWt_1_1WCalendar.html</anchorfile>
      <anchor>abe866003ddb73b9fed91f35b7383e8ee</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>browseToNextMonth</name>
      <anchorfile>classWt_1_1WCalendar.html</anchorfile>
      <anchor>a4e77a4335ac8891a4d51441ce0f9e626</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>browseTo</name>
      <anchorfile>classWt_1_1WCalendar.html</anchorfile>
      <anchor>a59949bcc20f604fd96a73aa342157b8d</anchor>
      <arglist>(const WDate &amp;date)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>currentMonth</name>
      <anchorfile>classWt_1_1WCalendar.html</anchorfile>
      <anchor>a80f5994654c2884d838ae81cffc36de3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>currentYear</name>
      <anchorfile>classWt_1_1WCalendar.html</anchorfile>
      <anchor>ad2c8a731c98cad249d9e82e1722e354f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearSelection</name>
      <anchorfile>classWt_1_1WCalendar.html</anchorfile>
      <anchor>aff46e84192787483ec4f00c5b1410a8d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>select</name>
      <anchorfile>classWt_1_1WCalendar.html</anchorfile>
      <anchor>ab3b72e0e5a76f3e365d94d056465453f</anchor>
      <arglist>(const WDate &amp;date)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>select</name>
      <anchorfile>classWt_1_1WCalendar.html</anchorfile>
      <anchor>aa128787a7b96264b5e755712e720f928</anchor>
      <arglist>(const std::set&lt; WDate &gt; &amp;dates)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setHorizontalHeaderFormat</name>
      <anchorfile>classWt_1_1WCalendar.html</anchorfile>
      <anchor>af552c5175950fccdbea39c90f5d1b56d</anchor>
      <arglist>(CalendarHeaderFormat format)</arglist>
    </member>
    <member kind="function">
      <type>CalendarHeaderFormat</type>
      <name>horizontalHeaderFormat</name>
      <anchorfile>classWt_1_1WCalendar.html</anchorfile>
      <anchor>a68471e171c5f80c69540617df41e8498</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFirstDayOfWeek</name>
      <anchorfile>classWt_1_1WCalendar.html</anchorfile>
      <anchor>a741e177dd86d834956a65343fefd14d0</anchor>
      <arglist>(int dayOfWeek)</arglist>
    </member>
    <member kind="function">
      <type>const std::set&lt; WDate &gt; &amp;</type>
      <name>selection</name>
      <anchorfile>classWt_1_1WCalendar.html</anchorfile>
      <anchor>a01fc72bf20af2f95820ddc17d09a596f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Signal &amp;</type>
      <name>selectionChanged</name>
      <anchorfile>classWt_1_1WCalendar.html</anchorfile>
      <anchor>a317d3018608bbeed934e1823969a3a7f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Signal&lt; WDate &gt; &amp;</type>
      <name>activated</name>
      <anchorfile>classWt_1_1WCalendar.html</anchorfile>
      <anchor>a8675afd38f2b773d0945af207d7639f9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Signal&lt; WDate &gt; &amp;</type>
      <name>clicked</name>
      <anchorfile>classWt_1_1WCalendar.html</anchorfile>
      <anchor>a51ad8160985f49f5ff0e726df8103921</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Signal&lt; int, int &gt; &amp;</type>
      <name>currentPageChanged</name>
      <anchorfile>classWt_1_1WCalendar.html</anchorfile>
      <anchor>a5dc6d29c25661c665e0110dd0dcaaca6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSingleClickSelect</name>
      <anchorfile>classWt_1_1WCalendar.html</anchorfile>
      <anchor>ad33dba722cbddf4b9feff69d4ca744f2</anchor>
      <arglist>(bool single)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBottom</name>
      <anchorfile>classWt_1_1WCalendar.html</anchorfile>
      <anchor>a5d5237e806862564ba9a8c9f5b8f5272</anchor>
      <arglist>(const WDate &amp;bottom)</arglist>
    </member>
    <member kind="function">
      <type>const WDate &amp;</type>
      <name>bottom</name>
      <anchorfile>classWt_1_1WCalendar.html</anchorfile>
      <anchor>a17bc421be6969c0927345bb1e2e0e896</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTop</name>
      <anchorfile>classWt_1_1WCalendar.html</anchorfile>
      <anchor>a6a45200e082a7178d7060bdb9f960a17</anchor>
      <arglist>(const WDate &amp;top)</arglist>
    </member>
    <member kind="function">
      <type>const WDate &amp;</type>
      <name>top</name>
      <anchorfile>classWt_1_1WCalendar.html</anchorfile>
      <anchor>a59bc68fa697a70933fd6ffa816978a27</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>load</name>
      <anchorfile>classWt_1_1WCalendar.html</anchorfile>
      <anchor>a62d5bacd9e5ec9eec0c57091042fc441</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>render</name>
      <anchorfile>classWt_1_1WCalendar.html</anchorfile>
      <anchor>aca6b16d5120cb645f78f2f8f8afbf6c7</anchor>
      <arglist>(WFlags&lt; RenderFlag &gt; renderFlags) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual WWidget *</type>
      <name>renderCell</name>
      <anchorfile>classWt_1_1WCalendar.html</anchorfile>
      <anchor>a3513147b88fa57ac287ab2546d00dd96</anchor>
      <arglist>(WWidget *widget, const WDate &amp;date)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>isSelected</name>
      <anchorfile>classWt_1_1WCalendar.html</anchorfile>
      <anchor>a0dd30eda420c6b82703c4a8e5dd4bc7a</anchor>
      <arglist>(const WDate &amp;date) const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>enableAjax</name>
      <anchorfile>classWt_1_1WCalendar.html</anchorfile>
      <anchor>a1c481c60baaec55e02d2c65923daed4b</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WCanvasPaintDevice</name>
    <filename>classWt_1_1WCanvasPaintDevice.html</filename>
    <base>Wt::WObject</base>
    <base>Wt::WPaintDevice</base>
    <member kind="function">
      <type></type>
      <name>WCanvasPaintDevice</name>
      <anchorfile>classWt_1_1WCanvasPaintDevice.html</anchorfile>
      <anchor>a4dbb5280da77ad4d0d67caec9a94ae3a</anchor>
      <arglist>(const WLength &amp;width, const WLength &amp;height, bool paintUpdate=false)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WFlags&lt; PaintDeviceFeatureFlag &gt;</type>
      <name>features</name>
      <anchorfile>classWt_1_1WCanvasPaintDevice.html</anchorfile>
      <anchor>ae10237f5ca71f126e6f5ffa9af7730bd</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setChanged</name>
      <anchorfile>classWt_1_1WCanvasPaintDevice.html</anchorfile>
      <anchor>a908540fa2ec833d0cea9178d5d934795</anchor>
      <arglist>(WFlags&lt; PainterChangeFlag &gt; flags) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>drawArc</name>
      <anchorfile>classWt_1_1WCanvasPaintDevice.html</anchorfile>
      <anchor>a7cd7ab7384dd09cb016215da0947c2d4</anchor>
      <arglist>(const WRectF &amp;rect, double startAngle, double spanAngle) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>drawImage</name>
      <anchorfile>classWt_1_1WCanvasPaintDevice.html</anchorfile>
      <anchor>ae4436842128969333f068f180c968f9e</anchor>
      <arglist>(const WRectF &amp;rect, const std::string &amp;imgUri, int imgWidth, int imgHeight, const WRectF &amp;sourceRect) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>drawLine</name>
      <anchorfile>classWt_1_1WCanvasPaintDevice.html</anchorfile>
      <anchor>a4ac353ff850cee9090b033ae8f59f64c</anchor>
      <arglist>(double x1, double y1, double x2, double y2) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>drawPath</name>
      <anchorfile>classWt_1_1WCanvasPaintDevice.html</anchorfile>
      <anchor>a5075bbfa28de075655a40c13d9d63109</anchor>
      <arglist>(const WPainterPath &amp;path) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>drawRect</name>
      <anchorfile>classWt_1_1WCanvasPaintDevice.html</anchorfile>
      <anchor>a71ade43101e63d69417388d7896b4266</anchor>
      <arglist>(const WRectF &amp;rectangle) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>drawText</name>
      <anchorfile>classWt_1_1WCanvasPaintDevice.html</anchorfile>
      <anchor>a30a6ba3a0f40e55e9fa13182b9419895</anchor>
      <arglist>(const WRectF &amp;rect, WFlags&lt; AlignmentFlag &gt; alignmentFlags, TextFlag textFlag, const WString &amp;text, const WPointF *clipPoint) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WTextItem</type>
      <name>measureText</name>
      <anchorfile>classWt_1_1WCanvasPaintDevice.html</anchorfile>
      <anchor>a9ce7e543e65809956b9daf36b73858f3</anchor>
      <arglist>(const WString &amp;text, double maxWidth=-1, bool wordWrap=false) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WFontMetrics</type>
      <name>fontMetrics</name>
      <anchorfile>classWt_1_1WCanvasPaintDevice.html</anchorfile>
      <anchor>a45723392589bf0b0fdfbfd6fa895067b</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>init</name>
      <anchorfile>classWt_1_1WCanvasPaintDevice.html</anchorfile>
      <anchor>ac37d8f1f2fa7977407e9b2c6978aa795</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>done</name>
      <anchorfile>classWt_1_1WCanvasPaintDevice.html</anchorfile>
      <anchor>aac2629881a0cee20d296b09f9cd3744c</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>paintActive</name>
      <anchorfile>classWt_1_1WCanvasPaintDevice.html</anchorfile>
      <anchor>ab30488ec37d016aa9a6af9f6c42dd7d0</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WLength</type>
      <name>width</name>
      <anchorfile>classWt_1_1WCanvasPaintDevice.html</anchorfile>
      <anchor>a9ccc46b96343f1f3137a76693745947a</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WLength</type>
      <name>height</name>
      <anchorfile>classWt_1_1WCanvasPaintDevice.html</anchorfile>
      <anchor>a8946dac622347ef1bd287b2539dd61c7</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual WPainter *</type>
      <name>painter</name>
      <anchorfile>classWt_1_1WCanvasPaintDevice.html</anchorfile>
      <anchor>aeb8c06b846a901a0e2cf9363c9a0d1a6</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>setPainter</name>
      <anchorfile>classWt_1_1WCanvasPaintDevice.html</anchorfile>
      <anchor>a5ea97bc0f2d2097f0fff63a3defcde10</anchor>
      <arglist>(WPainter *painter) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Chart::WCartesian3DChart</name>
    <filename>classWt_1_1Chart_1_1WCartesian3DChart.html</filename>
    <base>Wt::WGLWidget</base>
    <class kind="class">Wt::Chart::WCartesian3DChart::IntersectionPlane</class>
    <member kind="function">
      <type></type>
      <name>WCartesian3DChart</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesian3DChart.html</anchorfile>
      <anchor>a26210c44005facafa2272cf5a88748ea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WCartesian3DChart</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesian3DChart.html</anchorfile>
      <anchor>a4760b47cecd0af014919ef4d5f2126c8</anchor>
      <arglist>(ChartType type)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WCartesian3DChart</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesian3DChart.html</anchorfile>
      <anchor>ae3cc3e5f433c10cf9852d012074c9ed0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addDataSeries</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesian3DChart.html</anchorfile>
      <anchor>a8759ca2b04ac1847e350526f53f4002b</anchor>
      <arglist>(std::unique_ptr&lt; WAbstractDataSeries3D &gt; dataseries)</arglist>
    </member>
    <member kind="function">
      <type>std::unique_ptr&lt; WAbstractDataSeries3D &gt;</type>
      <name>removeDataSeries</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesian3DChart.html</anchorfile>
      <anchor>ac4a544f7fe61d22a7fbf774a06f90539</anchor>
      <arglist>(WAbstractDataSeries3D *dataseries)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; WAbstractDataSeries3D * &gt;</type>
      <name>dataSeries</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesian3DChart.html</anchorfile>
      <anchor>a68bb2e36f01b76bc541f2464a8be0565</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WAxis &amp;</type>
      <name>axis</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesian3DChart.html</anchorfile>
      <anchor>ae1ee2adbf033983ce0e50db8336fca04</anchor>
      <arglist>(Axis axis)</arglist>
    </member>
    <member kind="function">
      <type>const WAxis &amp;</type>
      <name>axis</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesian3DChart.html</anchorfile>
      <anchor>a91a63d116ce83543a681e2e75d09d910</anchor>
      <arglist>(Axis axis) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAxis</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesian3DChart.html</anchorfile>
      <anchor>ac097e1922b519592a6b3732f3e8b8119</anchor>
      <arglist>(std::unique_ptr&lt; WAxis &gt; waxis, Axis axis)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setGridEnabled</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesian3DChart.html</anchorfile>
      <anchor>ae29bcf914447840a355cacef4634df96</anchor>
      <arglist>(Plane plane, Axis axis, bool enabled=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isGridEnabled</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesian3DChart.html</anchorfile>
      <anchor>a7ca79032279803138da214d7cb8241de</anchor>
      <arglist>(Plane plane, Axis axis)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setIntersectionLinesEnabled</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesian3DChart.html</anchorfile>
      <anchor>a8adb0ca981382e3e1435fe8e7fcf1d6e</anchor>
      <arglist>(bool enabled=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isIntersectionLinesEnabled</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesian3DChart.html</anchorfile>
      <anchor>a5174ac4593aab99630d72fc168ef94bc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setIntersectionLinesColor</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesian3DChart.html</anchorfile>
      <anchor>ac5d9fb74b8b36f3f07927ada1bac102a</anchor>
      <arglist>(WColor color)</arglist>
    </member>
    <member kind="function">
      <type>const WColor &amp;</type>
      <name>intersectionLinesColor</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesian3DChart.html</anchorfile>
      <anchor>aa2175c99e2ada57cfc86d1e5ac9aa218</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setIntersectionPlanes</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesian3DChart.html</anchorfile>
      <anchor>aaa438dbabf5f25b310690e0794950d21</anchor>
      <arglist>(const std::vector&lt; IntersectionPlane &gt; &amp;intersectionPlanes)</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; IntersectionPlane &gt; &amp;</type>
      <name>intersectionPlanes</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesian3DChart.html</anchorfile>
      <anchor>aa23246b8358832ea3b2b93155e4cb5ce</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setGridLinesPen</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesian3DChart.html</anchorfile>
      <anchor>a6c1834a315ca0628f67a64829c9f06ff</anchor>
      <arglist>(const WPen &amp;pen)</arglist>
    </member>
    <member kind="function">
      <type>const WPen &amp;</type>
      <name>gridLinesPen</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesian3DChart.html</anchorfile>
      <anchor>a1d19d12e2281d57dc33be80c28950d36</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCubeLinesPen</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesian3DChart.html</anchorfile>
      <anchor>a51a2e92fd2d3aa7e897deae9d31abdaf</anchor>
      <arglist>(const WPen &amp;pen)</arglist>
    </member>
    <member kind="function">
      <type>const WPen &amp;</type>
      <name>cubeLinesPen</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesian3DChart.html</anchorfile>
      <anchor>a57695350549a127fda823ece46a27ef0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setType</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesian3DChart.html</anchorfile>
      <anchor>a33887e7cf70483611e99094944ee19b7</anchor>
      <arglist>(ChartType type)</arglist>
    </member>
    <member kind="function">
      <type>ChartType</type>
      <name>type</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesian3DChart.html</anchorfile>
      <anchor>afb2e0f09c28ceade248ce5c6b7fa1c55</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPalette</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesian3DChart.html</anchorfile>
      <anchor>aa98d151937c6759add22225e2a25a2cf</anchor>
      <arglist>(const std::shared_ptr&lt; WChartPalette &gt; &amp;palette)</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; WChartPalette &gt;</type>
      <name>palette</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesian3DChart.html</anchorfile>
      <anchor>a012e7440432db678945b3510b1d129ca</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBackground</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesian3DChart.html</anchorfile>
      <anchor>afa7f10ce50ed077e12592528966f9f0c</anchor>
      <arglist>(const WColor &amp;background)</arglist>
    </member>
    <member kind="function">
      <type>const WColor &amp;</type>
      <name>background</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesian3DChart.html</anchorfile>
      <anchor>a88522f14c17ef3bb691e5fb52e3d5413</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTitle</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesian3DChart.html</anchorfile>
      <anchor>af8ed4dda937f3d02af83abd5754256c7</anchor>
      <arglist>(const WString &amp;title)</arglist>
    </member>
    <member kind="function">
      <type>const WString &amp;</type>
      <name>title</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesian3DChart.html</anchorfile>
      <anchor>ab4f763905a6f0bad6e3607619781810c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTitleFont</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesian3DChart.html</anchorfile>
      <anchor>a72ee0d78aa08bfa3d8e4f3e1c2fafa5e</anchor>
      <arglist>(const WFont &amp;titleFont)</arglist>
    </member>
    <member kind="function">
      <type>const WFont &amp;</type>
      <name>titleFont</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesian3DChart.html</anchorfile>
      <anchor>a5b6f3383733e561e7db0d64762dc5b7f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLegendEnabled</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesian3DChart.html</anchorfile>
      <anchor>a92eb6ecb48e5ecea260208701290be48</anchor>
      <arglist>(bool enabled)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isLegendEnabled</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesian3DChart.html</anchorfile>
      <anchor>ac654a646d0891e9b956d841dd17f88ef</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLegendLocation</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesian3DChart.html</anchorfile>
      <anchor>ae05186f6e39222e75884095c5ab1be94</anchor>
      <arglist>(Side side, AlignmentFlag alignment)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLegendStyle</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesian3DChart.html</anchorfile>
      <anchor>a726e7413a1b1de880cd40c0dc2f9f364</anchor>
      <arglist>(const WFont &amp;font, const WPen &amp;border, const WBrush &amp;background)</arglist>
    </member>
    <member kind="function">
      <type>Side</type>
      <name>legendSide</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesian3DChart.html</anchorfile>
      <anchor>a8c72fa92b26be9837e30e15acded7f23</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>AlignmentFlag</type>
      <name>legendAlignment</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesian3DChart.html</anchorfile>
      <anchor>a9d01504153e32e98548fbbd71ff2b51b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>legendColumns</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesian3DChart.html</anchorfile>
      <anchor>a0365b171e6bf4c12087f22518e1c502f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WLength</type>
      <name>legendColumnWidth</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesian3DChart.html</anchorfile>
      <anchor>ac207102ec9ab6074b45dfc47d7a1753f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WFont</type>
      <name>legendFont</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesian3DChart.html</anchorfile>
      <anchor>a7a569923a3ce5d49c960a7f2cf22aea6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WPen</type>
      <name>legendBorder</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesian3DChart.html</anchorfile>
      <anchor>a5cba848640cb03c2bac452e5eeae4372</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WBrush</type>
      <name>legendBackground</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesian3DChart.html</anchorfile>
      <anchor>aa4d6795cf7fcd819cc597c49199f64b1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLegendColumns</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesian3DChart.html</anchorfile>
      <anchor>aedbc17cf7ffc74958c009c9cf6c7bd9f</anchor>
      <arglist>(int columns, const WLength &amp;columnWidth)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initLayout</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesian3DChart.html</anchorfile>
      <anchor>a88a94df318b361a3f12942d9de83dd64</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCameraMatrix</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesian3DChart.html</anchorfile>
      <anchor>a94bc783281ab31d2b39d86bf1540c79f</anchor>
      <arglist>(const WMatrix4x4 &amp;matrix)</arglist>
    </member>
    <member kind="function">
      <type>WMatrix4x4</type>
      <name>cameraMatrix</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesian3DChart.html</anchorfile>
      <anchor>ac4caddaae9d839076a36b11e3af67855</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>JavaScriptMatrix4x4</type>
      <name>jsMatrix</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesian3DChart.html</anchorfile>
      <anchor>ac2ac9a0a1a176b597ad4234a55be5e88</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateChart</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesian3DChart.html</anchorfile>
      <anchor>ad33d8deddded703c2ec69be771faa09e</anchor>
      <arglist>(WFlags&lt; ChartUpdates &gt; flags)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resize</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesian3DChart.html</anchorfile>
      <anchor>abd8ae104045a1243b167aa455d73f1e3</anchor>
      <arglist>(const WLength &amp;width, const WLength &amp;height) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>initializeGL</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesian3DChart.html</anchorfile>
      <anchor>af8c1d06f76d31fadc830e529e8170c0f</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>paintGL</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesian3DChart.html</anchorfile>
      <anchor>a0be4fb12f72c2d6eb7679d7eda83028d</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateGL</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesian3DChart.html</anchorfile>
      <anchor>abc4076c92139b97ce03ef75110cfb60c</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>resizeGL</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesian3DChart.html</anchorfile>
      <anchor>a4dd8493dfb47ea54c0d465e284af87d2</anchor>
      <arglist>(int width, int height) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Chart::WCartesianChart</name>
    <filename>classWt_1_1Chart_1_1WCartesianChart.html</filename>
    <base>Wt::Chart::WAbstractChart</base>
    <member kind="function">
      <type></type>
      <name>WCartesianChart</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>adbdee865df72240bc78a69df36eef36b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WCartesianChart</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>aac2fe15c1bae03834961637c1e2db06c</anchor>
      <arglist>(ChartType type)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setType</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>a02775290965d59ffba03da574925e387</anchor>
      <arglist>(ChartType type)</arglist>
    </member>
    <member kind="function">
      <type>ChartType</type>
      <name>type</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>a6d8d8221a570536f85d534c02d36320f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setOrientation</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>ac8638a7ae6b0d1141794d9c07336e500</anchor>
      <arglist>(Orientation orientation)</arglist>
    </member>
    <member kind="function">
      <type>Orientation</type>
      <name>orientation</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>a119e9e90528d170bc73dd8053ac65c8c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setXSeriesColumn</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>a6c954fa4ed6d73f00ee973bfe3af5ed0</anchor>
      <arglist>(int modelColumn)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTextPen</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>afe121f12015e1932beedac3d93a45e7c</anchor>
      <arglist>(const WPen &amp;pen)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>XSeriesColumn</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>a08e3ff107e45b85bbd277db217850185</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addSeries</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>ade295a3e179a0e83dd608b0dfc54372a</anchor>
      <arglist>(std::unique_ptr&lt; WDataSeries &gt; series)</arglist>
    </member>
    <member kind="function">
      <type>std::unique_ptr&lt; WDataSeries &gt;</type>
      <name>removeSeries</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>a1ccfaddc9e94116bb29fa8da54271d2b</anchor>
      <arglist>(WDataSeries *series)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSeries</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>ad583ca21c6338aaf70e44f51ddcf0f8e</anchor>
      <arglist>(std::vector&lt; std::unique_ptr&lt; WDataSeries &gt; &gt; series)</arglist>
    </member>
    <member kind="function">
      <type>WDataSeries &amp;</type>
      <name>series</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>a96cf7387ebbe867dcbdd6aad9f48e72c</anchor>
      <arglist>(int modelColumn)</arglist>
    </member>
    <member kind="function">
      <type>const WDataSeries &amp;</type>
      <name>series</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>a65984f9e3655ed979987c5604e5b0910</anchor>
      <arglist>(int modelColumn) const</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; std::unique_ptr&lt; WDataSeries &gt; &gt; &amp;</type>
      <name>series</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>ac569180c68c4c97353bdd122ba0ac699</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WAxis &amp;</type>
      <name>axis</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>af966d6ee6b2e43e6b26e794459005375</anchor>
      <arglist>(Axis axis)</arglist>
    </member>
    <member kind="function">
      <type>const WAxis &amp;</type>
      <name>axis</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>a62184e5b3460cd1e903eb23ec6d51182</anchor>
      <arglist>(Axis axis) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAxis</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>a54408442dbe55026bcaf8d6d86f391f5</anchor>
      <arglist>(std::unique_ptr&lt; WAxis &gt; waxis, Axis axis)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; WAxis * &gt;</type>
      <name>xAxes</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>ab263517e7371f51ae5ab7251cbf4793b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; const WAxis * &gt;</type>
      <name>xAxes</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>a500340d275a9075795d1537efd934634</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; WAxis * &gt;</type>
      <name>yAxes</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>a95f540459f2ddb42572f796575ef10ec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; const WAxis * &gt;</type>
      <name>yAxes</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>a16ed604b88626619dea2dd4f3b6c4433</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>xAxisCount</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>a64777980578bb25de7074c20ba26904e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>yAxisCount</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>a2650a9fae3f660196b32bcfd30b90386</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WAxis &amp;</type>
      <name>xAxis</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>a33474650d14236f4e2ca5e1512378e4e</anchor>
      <arglist>(int i)</arglist>
    </member>
    <member kind="function">
      <type>const WAxis &amp;</type>
      <name>xAxis</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>ab439b79043a3f540d7e242b55b2a67ca</anchor>
      <arglist>(int i) const</arglist>
    </member>
    <member kind="function">
      <type>WAxis &amp;</type>
      <name>yAxis</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>a3b0038712fce477634c39cdc736c2388</anchor>
      <arglist>(int i)</arglist>
    </member>
    <member kind="function">
      <type>const WAxis &amp;</type>
      <name>yAxis</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>ad3eef71ae63734ddd46c3bfe56c93273</anchor>
      <arglist>(int i) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>addXAxis</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>a59d6c9d5a9a9e5d43133ed2fde648ccc</anchor>
      <arglist>(std::unique_ptr&lt; WAxis &gt; waxis)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>addYAxis</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>a0abfca1c61508d49f9c8b5e95e896b4b</anchor>
      <arglist>(std::unique_ptr&lt; WAxis &gt; waxis)</arglist>
    </member>
    <member kind="function">
      <type>std::unique_ptr&lt; WAxis &gt;</type>
      <name>removeXAxis</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>a6120916345da21d723567189dcc2f6ee</anchor>
      <arglist>(int xAxisId)</arglist>
    </member>
    <member kind="function">
      <type>std::unique_ptr&lt; WAxis &gt;</type>
      <name>removeYAxis</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>a8e884bd514607231e025b1c06aed6b8e</anchor>
      <arglist>(int yAxisId)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearXAxes</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>a74e3c44d849ff027ee90dd26925e27a1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearYAxes</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>a34329c849eaa8761f730d027c9c47af9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBarMargin</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>a5419bad74246b5cb94cd224e915bfe0f</anchor>
      <arglist>(double margin)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>barMargin</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>af7d75f64b0a01a81747e7916bbae4767</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLegendEnabled</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>a26c3d97f4884da079e01e7b50447a915</anchor>
      <arglist>(bool enabled)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isLegendEnabled</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>a001ba50f1faa0467feb0580461b339a9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLegendLocation</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>ae4336637c800631714ec521cbf2aa452</anchor>
      <arglist>(LegendLocation location, Side side, AlignmentFlag alignment)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLegendStyle</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>a94505b419f2ed8ba4d939de57944397d</anchor>
      <arglist>(const WFont &amp;font, const WPen &amp;border, const WBrush &amp;background)</arglist>
    </member>
    <member kind="function">
      <type>LegendLocation</type>
      <name>legendLocation</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>a063df2ec97df8b876f032e4bc9a18917</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Side</type>
      <name>legendSide</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>ad8c35926b45ad82636cbaa2031ca4f9d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>AlignmentFlag</type>
      <name>legendAlignment</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>ad0f09529c730848408e1c9ba965f9cdd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>legendColumns</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>a7887b914d18778b6b5ff0018c61f4a3e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WLength</type>
      <name>legendColumnWidth</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>a419edf3f174700c881e71c118f87506b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WFont</type>
      <name>legendFont</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>a756c8b9590c5c73d571d2568ebeb7160</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WPen</type>
      <name>legendBorder</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>a67aced1ed1febb17c3193bfa17bc04a5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WBrush</type>
      <name>legendBackground</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>a3eda1e0e9cd7b7a098925660f01f676a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLegendColumns</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>a9f4133ef8280991032bded06ce2dc58a</anchor>
      <arglist>(int columns, const WLength &amp;width)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>paint</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>acfe27716f0d01d1709c40b1ab5d583bc</anchor>
      <arglist>(WPainter &amp;painter, const WRectF &amp;rectangle=WRectF()) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>drawMarker</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>ad5931a933c79f11d7d51bdde3ed124c9</anchor>
      <arglist>(const WDataSeries &amp;series, WPainterPath &amp;result) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>renderLegendIcon</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>ad8d7768a44fb28f05edb5152b99216d6</anchor>
      <arglist>(WPainter &amp;painter, const WPointF &amp;pos, const WDataSeries &amp;series) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>renderLegendItem</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>a9938387e662273f383a55f5146bcec40</anchor>
      <arglist>(WPainter &amp;painter, const WPointF &amp;pos, const WDataSeries &amp;series) const</arglist>
    </member>
    <member kind="function">
      <type>WPointF</type>
      <name>mapFromDevice</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>afa6f3b2c0851a335998c69a13c30db3c</anchor>
      <arglist>(const WPointF &amp;point, Axis ordinateAxis=Axis::Ordinate) const</arglist>
    </member>
    <member kind="function">
      <type>WPointF</type>
      <name>mapFromDevice</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>ac7522fc33c220e7fa706ca9de7e8c654</anchor>
      <arglist>(const WPointF &amp;point, int ordinateAxis) const</arglist>
    </member>
    <member kind="function">
      <type>WPointF</type>
      <name>mapFromDeviceWithoutTransform</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>a89c8de50cf89b4fc11e47c6b3a1eb438</anchor>
      <arglist>(const WPointF &amp;point, Axis ordinateAxis=Axis::Ordinate) const</arglist>
    </member>
    <member kind="function">
      <type>WPointF</type>
      <name>mapFromDevice</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>a17cfd1cf0bb35ed54bc1992b16fd875b</anchor>
      <arglist>(const WPointF &amp;point, const WAxis &amp;xAxis, const WAxis &amp;yAxis) const</arglist>
    </member>
    <member kind="function">
      <type>WPointF</type>
      <name>mapFromDeviceWithoutTransform</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>a5868b8ce5a7c62b08b6f14532374a5fb</anchor>
      <arglist>(const WPointF &amp;point, int ordinateAxis) const</arglist>
    </member>
    <member kind="function">
      <type>WPointF</type>
      <name>mapFromDeviceWithoutTransform</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>ac8755d4977f772afb9c1eaa92e64c481</anchor>
      <arglist>(const WPointF &amp;point, const WAxis &amp;xAxis, const WAxis &amp;yAxis) const</arglist>
    </member>
    <member kind="function">
      <type>WPointF</type>
      <name>mapToDevice</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>a146820fa83f208f588a24c2ffd0e9ede</anchor>
      <arglist>(const cpp17::any &amp;xValue, const cpp17::any &amp;yValue, Axis axis=Axis::Ordinate, int xSegment=0, int ySegment=0) const</arglist>
    </member>
    <member kind="function">
      <type>WPointF</type>
      <name>mapToDevice</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>ae0516fdd01e680124305a7899abb90e3</anchor>
      <arglist>(const cpp17::any &amp;xValue, const cpp17::any &amp;yValue, int yAxis, int xSegment=0, int ySegment=0) const</arglist>
    </member>
    <member kind="function">
      <type>WPointF</type>
      <name>mapToDevice</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>a9fa1744ddd62213f205d624aa5d7b9c1</anchor>
      <arglist>(const cpp17::any &amp;xValue, const cpp17::any &amp;yValue, const WAxis &amp;xAxis, const WAxis &amp;yAxis, int xSegment=0, int ySegment=0) const</arglist>
    </member>
    <member kind="function">
      <type>WPointF</type>
      <name>mapToDeviceWithoutTransform</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>a9aaa4e422196e3ef33ed4dad98299195</anchor>
      <arglist>(const cpp17::any &amp;xValue, const cpp17::any &amp;yValue, Axis axis=Axis::Ordinate, int xSegment=0, int ySegment=0) const</arglist>
    </member>
    <member kind="function">
      <type>WPointF</type>
      <name>mapToDeviceWithoutTransform</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>aa261b74affe994c19735d235d97567f1</anchor>
      <arglist>(const cpp17::any &amp;xValue, const cpp17::any &amp;yValue, int yAxis, int xSegment=0, int ySegment=0) const</arglist>
    </member>
    <member kind="function">
      <type>WPointF</type>
      <name>mapToDeviceWithoutTransform</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>aca7b888b2ed0aca58c8ce4a24864a35e</anchor>
      <arglist>(const cpp17::any &amp;xValue, const cpp17::any &amp;yValue, const WAxis &amp;xAxis, const WAxis &amp;yAxis, int xSegment=0, int ySegment=0) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>initLayout</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>afb8c75682293611eace3d5899a03eb07</anchor>
      <arglist>(const WRectF &amp;rectangle=WRectF(), WPaintDevice *device=nullptr) const</arglist>
    </member>
    <member kind="function">
      <type>std::unique_ptr&lt; WWidget &gt;</type>
      <name>createLegendItemWidget</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>a4036000a109965e588d1a2966dbb79fb</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>addDataPointArea</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>a0d03d9abefa128e0c0ff8a280e75f045</anchor>
      <arglist>(const WDataSeries &amp;series, int xRow, int xColumn, std::unique_ptr&lt; WAbstractArea &gt; area)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAxisPadding</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>aa6c394c4d9a801d088b7b02c3fd66b28</anchor>
      <arglist>(int axisPadding)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>axisPadding</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>a3b2992e119f72b7fda99c1003babee6d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBorderPen</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>acf9fb3b059aff07a63b45215929843df</anchor>
      <arglist>(const WPen &amp;pen)</arglist>
    </member>
    <member kind="function">
      <type>const WPen &amp;</type>
      <name>borderPen</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>a38df799cf9f48baa1a36197150aef025</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addCurveLabel</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>a0ca5407b147a04f3ef3a83fbba8d5b8f</anchor>
      <arglist>(const CurveLabel &amp;label)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCurveLabels</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>aab90f7474c38bcc86d46144824cda489</anchor>
      <arglist>(const std::vector&lt; CurveLabel &gt; &amp;labels)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearCurveLabels</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>a6095cdd5ce1ce1f72d86f39db7c22dea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; CurveLabel &gt; &amp;</type>
      <name>curveLabels</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>abaaa07c00a02243bd48beec99a90146b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isInteractive</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>ae8265e6c80d5c0d73863ae623165cb3d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setZoomEnabled</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>a5ff1331e2837807cae16fea146e93ce4</anchor>
      <arglist>(bool zoom=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>zoomEnabled</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>a6d39c56a38cbc91952aea4b617ce1a2d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPanEnabled</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>a4bb5996032ffc1ff28f87b4200a68623</anchor>
      <arglist>(bool pan=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>panEnabled</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>a2aabff8817519688730e18fd314a9aec</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCrosshairEnabled</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>ade003fe6cdaf352d045796254127680a</anchor>
      <arglist>(bool crosshair=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>crosshairEnabled</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>a360ffd8f405959e6e62b484a98d20770</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCrosshairColor</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>a836c0601a0bb5fb493d19fe15dbffe57</anchor>
      <arglist>(const WColor &amp;color)</arglist>
    </member>
    <member kind="function">
      <type>const WColor &amp;</type>
      <name>crosshairColor</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>a29d05dd7001a6639fc29217ec2775856</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCrosshairXAxis</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>aef10bf73dc30c2fab92aedc6f9ff586b</anchor>
      <arglist>(int xAxis)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>crosshairXAxis</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>a95e12ba9ca17b72063c905a15c1400f1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCrosshairYAxis</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>a9f31ca5174b6127e49ad92c9da481adc</anchor>
      <arglist>(int yAxis)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>crosshairYAxis</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>a11ed1322f4c6f94eecf60072c7dd9860</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFollowCurve</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>a2a3c3c567c2d2e10effeac70dc0cdb4d</anchor>
      <arglist>(int modelColumn)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFollowCurve</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>a7941c22269e9b9aa30b2d9c31289860e</anchor>
      <arglist>(const WDataSeries *series)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>disableFollowCurve</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>aac7673c7c38d7d98383bee7b72ae556d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const WDataSeries *</type>
      <name>followCurve</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>ae3a43473eeb67f6e7c5de036c08ac2b9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRubberBandEffectEnabled</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>a81f7bc2f6934480ffa4eab212dcbd67c</anchor>
      <arglist>(bool rubberBand=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>rubberBandEffectEnabled</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>a838f227b0d025102b809c1c94c71069b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setWheelActions</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>a9080d0351171802250889d1dd5e3ae92</anchor>
      <arglist>(WheelActions wheelActions)</arglist>
    </member>
    <member kind="function">
      <type>WheelActions</type>
      <name>wheelActions</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>a49bca58bf053358024c88935a57a6915</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSoftLabelClipping</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>a2f400f8b923fec8ba5140a42d94dda23</anchor>
      <arglist>(bool enabled)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSeriesSelectionEnabled</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>a8fdd621fa64e84ca7e95e67b617dd63f</anchor>
      <arglist>(bool enabled=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>seriesSelectionEnabled</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>a30540f8acc54374a456dcb60767e78a9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Signal&lt; const WDataSeries *, WPointF &gt; &amp;</type>
      <name>seriesSelected</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>abeb783198b93e77872637d0de97ec97a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSelectedSeries</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>afa74fe1532dcfd46d697b7e92abdc765</anchor>
      <arglist>(const WDataSeries *series)</arglist>
    </member>
    <member kind="function">
      <type>const WDataSeries *</type>
      <name>selectedSeries</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>a8e195e06dec43f75918d9263e447f111</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCurveManipulationEnabled</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>a6078b67f146e686bd482d846dfe463cb</anchor>
      <arglist>(bool enabled=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>curveManipulationEnabled</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>a355e62cea65db78e06a4e12d298210ff</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setOnDemandLoadingEnabled</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>a97f7f38a9f751b0b41d67f4546cc32f9</anchor>
      <arglist>(bool enabled)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>onDemandLoadingEnabled</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>acd3549734d554765bcbcc698ea15eece</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLoadingBackground</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>a9072e157f556bd8eea1eef14426d4f29</anchor>
      <arglist>(const WBrush &amp;brush)</arglist>
    </member>
    <member kind="function">
      <type>const WBrush &amp;</type>
      <name>loadingBackground</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>aad195b4918cb5039054b05c00e236032</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>render</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>aa7e997dd9fcbe5d9e1fd89fd66f345c1</anchor>
      <arglist>(WFlags&lt; RenderFlag &gt; flags) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>WTransform</type>
      <name>zoomRangeTransform</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>a913934a771968399273449ce789a0423</anchor>
      <arglist>(int yAxis=0) const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>WTransform</type>
      <name>zoomRangeTransform</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>a943f40c87bbc3e9599083de11390457b</anchor>
      <arglist>(const WAxis &amp;xAxis, const WAxis &amp;yAxis) const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>paintEvent</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>a0ce15a9f3a7d6fca4d1e3a88eaac685a</anchor>
      <arglist>(WPaintDevice *paintDevice) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>render</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>af548bd0d0c455f1689c55215eb132c45</anchor>
      <arglist>(WPainter &amp;painter, const WRectF &amp;rectangle) const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual WPointF</type>
      <name>map</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>a7364c6591fc5fccec57f77e5de58f02a</anchor>
      <arglist>(double xValue, double yValue, Axis yAxis=Axis::Ordinate, int currentXSegment=0, int currentYSegment=0) const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual WPointF</type>
      <name>map</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>a37b22e4bdc17c45d193848cca443dd28</anchor>
      <arglist>(double xValue, double yValue, int yAxis, int currentXSegment=0, int currentYSegment=0) const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual WPointF</type>
      <name>map</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>add68cee30988ff539814d451a5ded0a1</anchor>
      <arglist>(double xValue, double yValue, const WAxis &amp;xAxis, const WAxis &amp;yAxis, int currentXSegment=0, int currentYSegment=0) const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>renderLabel</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>ae52126a14ac199938e95c2a1cc8fe694</anchor>
      <arglist>(WPainter &amp;painter, const WString &amp;text, const WPointF &amp;pos, WFlags&lt; AlignmentFlag &gt; flags, double angle, int margin) const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>WPointF</type>
      <name>hv</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>a4d1023156ed68ea1e5eaff2e6eccad9e</anchor>
      <arglist>(double x, double y) const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>WPointF</type>
      <name>hv</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>aa5765706760de7215e9d949a3a716d2a</anchor>
      <arglist>(const WPointF &amp;f) const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>WRectF</type>
      <name>hv</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>ab7f61b15ef006ef17762f0d32863bb68</anchor>
      <arglist>(const WRectF &amp;f) const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>WRectF</type>
      <name>chartSegmentArea</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>a93d7a7d5bdf963d84899d65f8cd47121</anchor>
      <arglist>(const WAxis &amp;yAxis, int xSegment, int ySegment) const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>WRectF</type>
      <name>chartSegmentArea</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>ac40d315e0c42d78eb52d3fc6cc9a31af</anchor>
      <arglist>(const WAxis &amp;xAxis, const WAxis &amp;yAxis, int xSegment, int ySegment) const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>calcChartArea</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>a5ded1d42a2c06b16ea4b9f1dd1c3d690</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>prepareAxes</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>a1328954859a6da59d8169e01b89b0fa5</anchor>
      <arglist>(WPaintDevice *device) const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>renderBackground</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>a9e15ce444a61206ac28cd60bb60e6dc3</anchor>
      <arglist>(WPainter &amp;painter) const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>renderAxes</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>ac6dd25254e10fe0c92f144497f76ecda</anchor>
      <arglist>(WPainter &amp;painter, WFlags&lt; AxisProperty &gt; properties) const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>renderBorder</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>a688791d361e80368c07c8a4e0807f57b</anchor>
      <arglist>(WPainter &amp;painter) const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>renderCurveLabels</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>af9ced0270a829e4272408331b3450973</anchor>
      <arglist>(WPainter &amp;painter) const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>renderSeries</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>a5a012245413e2074d8fe1cdc4c1d59c5</anchor>
      <arglist>(WPainter &amp;painter) const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>renderLegend</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>a301fce0bce26c49ed3ca960bbdc4a3c2</anchor>
      <arglist>(WPainter &amp;painter) const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>renderAxis</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>a124a02de9c9a6e515c0f3f635ea70151</anchor>
      <arglist>(WPainter &amp;painter, const WAxis &amp;axis, WFlags&lt; AxisProperty &gt; properties) const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>renderGrid</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>acb967f72a5e5923fbf9ac3f09af801b7</anchor>
      <arglist>(WPainter &amp;painter, const WAxis &amp;axis) const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>renderOther</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>a631b6971d8dce44c9a77aace22e8ea4b</anchor>
      <arglist>(WPainter &amp;painter) const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>calcNumBarGroups</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>a125e708cf23ef4aec4c7219ae252f360</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isInteractive</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>ae8265e6c80d5c0d73863ae623165cb3d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setZoomEnabled</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>a5ff1331e2837807cae16fea146e93ce4</anchor>
      <arglist>(bool zoom=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>zoomEnabled</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>a6d39c56a38cbc91952aea4b617ce1a2d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPanEnabled</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>a4bb5996032ffc1ff28f87b4200a68623</anchor>
      <arglist>(bool pan=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>panEnabled</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>a2aabff8817519688730e18fd314a9aec</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCrosshairEnabled</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>ade003fe6cdaf352d045796254127680a</anchor>
      <arglist>(bool crosshair=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>crosshairEnabled</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>a360ffd8f405959e6e62b484a98d20770</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCrosshairColor</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>a836c0601a0bb5fb493d19fe15dbffe57</anchor>
      <arglist>(const WColor &amp;color)</arglist>
    </member>
    <member kind="function">
      <type>const WColor &amp;</type>
      <name>crosshairColor</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>a29d05dd7001a6639fc29217ec2775856</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCrosshairXAxis</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>aef10bf73dc30c2fab92aedc6f9ff586b</anchor>
      <arglist>(int xAxis)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>crosshairXAxis</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>a95e12ba9ca17b72063c905a15c1400f1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCrosshairYAxis</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>a9f31ca5174b6127e49ad92c9da481adc</anchor>
      <arglist>(int yAxis)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>crosshairYAxis</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>a11ed1322f4c6f94eecf60072c7dd9860</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFollowCurve</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>a2a3c3c567c2d2e10effeac70dc0cdb4d</anchor>
      <arglist>(int modelColumn)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFollowCurve</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>a7941c22269e9b9aa30b2d9c31289860e</anchor>
      <arglist>(const WDataSeries *series)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>disableFollowCurve</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>aac7673c7c38d7d98383bee7b72ae556d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const WDataSeries *</type>
      <name>followCurve</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>ae3a43473eeb67f6e7c5de036c08ac2b9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRubberBandEffectEnabled</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>a81f7bc2f6934480ffa4eab212dcbd67c</anchor>
      <arglist>(bool rubberBand=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>rubberBandEffectEnabled</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>a838f227b0d025102b809c1c94c71069b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setWheelActions</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>a9080d0351171802250889d1dd5e3ae92</anchor>
      <arglist>(WheelActions wheelActions)</arglist>
    </member>
    <member kind="function">
      <type>WheelActions</type>
      <name>wheelActions</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>a49bca58bf053358024c88935a57a6915</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSoftLabelClipping</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>a2f400f8b923fec8ba5140a42d94dda23</anchor>
      <arglist>(bool enabled)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSeriesSelectionEnabled</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>a8fdd621fa64e84ca7e95e67b617dd63f</anchor>
      <arglist>(bool enabled=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>seriesSelectionEnabled</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>a30540f8acc54374a456dcb60767e78a9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Signal&lt; const WDataSeries *, WPointF &gt; &amp;</type>
      <name>seriesSelected</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>abeb783198b93e77872637d0de97ec97a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSelectedSeries</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>afa74fe1532dcfd46d697b7e92abdc765</anchor>
      <arglist>(const WDataSeries *series)</arglist>
    </member>
    <member kind="function">
      <type>const WDataSeries *</type>
      <name>selectedSeries</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>a8e195e06dec43f75918d9263e447f111</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCurveManipulationEnabled</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>a6078b67f146e686bd482d846dfe463cb</anchor>
      <arglist>(bool enabled=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>curveManipulationEnabled</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>a355e62cea65db78e06a4e12d298210ff</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setOnDemandLoadingEnabled</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>a97f7f38a9f751b0b41d67f4546cc32f9</anchor>
      <arglist>(bool enabled)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>onDemandLoadingEnabled</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>acd3549734d554765bcbcc698ea15eece</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLoadingBackground</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>a9072e157f556bd8eea1eef14426d4f29</anchor>
      <arglist>(const WBrush &amp;brush)</arglist>
    </member>
    <member kind="function">
      <type>const WBrush &amp;</type>
      <name>loadingBackground</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>aad195b4918cb5039054b05c00e236032</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>paintEvent</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>a0ce15a9f3a7d6fca4d1e3a88eaac685a</anchor>
      <arglist>(WPaintDevice *paintDevice) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>render</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>af548bd0d0c455f1689c55215eb132c45</anchor>
      <arglist>(WPainter &amp;painter, const WRectF &amp;rectangle) const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual WPointF</type>
      <name>map</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>a7364c6591fc5fccec57f77e5de58f02a</anchor>
      <arglist>(double xValue, double yValue, Axis yAxis=Axis::Ordinate, int currentXSegment=0, int currentYSegment=0) const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual WPointF</type>
      <name>map</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>a37b22e4bdc17c45d193848cca443dd28</anchor>
      <arglist>(double xValue, double yValue, int yAxis, int currentXSegment=0, int currentYSegment=0) const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual WPointF</type>
      <name>map</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>add68cee30988ff539814d451a5ded0a1</anchor>
      <arglist>(double xValue, double yValue, const WAxis &amp;xAxis, const WAxis &amp;yAxis, int currentXSegment=0, int currentYSegment=0) const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>renderLabel</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>ae52126a14ac199938e95c2a1cc8fe694</anchor>
      <arglist>(WPainter &amp;painter, const WString &amp;text, const WPointF &amp;pos, WFlags&lt; AlignmentFlag &gt; flags, double angle, int margin) const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>WPointF</type>
      <name>hv</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>a4d1023156ed68ea1e5eaff2e6eccad9e</anchor>
      <arglist>(double x, double y) const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>WPointF</type>
      <name>hv</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>aa5765706760de7215e9d949a3a716d2a</anchor>
      <arglist>(const WPointF &amp;f) const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>WRectF</type>
      <name>hv</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>ab7f61b15ef006ef17762f0d32863bb68</anchor>
      <arglist>(const WRectF &amp;f) const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>WRectF</type>
      <name>chartSegmentArea</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>a93d7a7d5bdf963d84899d65f8cd47121</anchor>
      <arglist>(const WAxis &amp;yAxis, int xSegment, int ySegment) const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>WRectF</type>
      <name>chartSegmentArea</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>ac40d315e0c42d78eb52d3fc6cc9a31af</anchor>
      <arglist>(const WAxis &amp;xAxis, const WAxis &amp;yAxis, int xSegment, int ySegment) const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>calcChartArea</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>a5ded1d42a2c06b16ea4b9f1dd1c3d690</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>prepareAxes</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>a1328954859a6da59d8169e01b89b0fa5</anchor>
      <arglist>(WPaintDevice *device) const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>renderBackground</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>a9e15ce444a61206ac28cd60bb60e6dc3</anchor>
      <arglist>(WPainter &amp;painter) const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>renderAxes</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>ac6dd25254e10fe0c92f144497f76ecda</anchor>
      <arglist>(WPainter &amp;painter, WFlags&lt; AxisProperty &gt; properties) const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>renderBorder</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>a688791d361e80368c07c8a4e0807f57b</anchor>
      <arglist>(WPainter &amp;painter) const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>renderCurveLabels</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>af9ced0270a829e4272408331b3450973</anchor>
      <arglist>(WPainter &amp;painter) const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>renderSeries</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>a5a012245413e2074d8fe1cdc4c1d59c5</anchor>
      <arglist>(WPainter &amp;painter) const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>renderLegend</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>a301fce0bce26c49ed3ca960bbdc4a3c2</anchor>
      <arglist>(WPainter &amp;painter) const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>renderAxis</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>a124a02de9c9a6e515c0f3f635ea70151</anchor>
      <arglist>(WPainter &amp;painter, const WAxis &amp;axis, WFlags&lt; AxisProperty &gt; properties) const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>renderGrid</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>acb967f72a5e5923fbf9ac3f09af801b7</anchor>
      <arglist>(WPainter &amp;painter, const WAxis &amp;axis) const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>renderOther</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>a631b6971d8dce44c9a77aace22e8ea4b</anchor>
      <arglist>(WPainter &amp;painter) const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>calcNumBarGroups</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>a125e708cf23ef4aec4c7219ae252f360</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Chart::WChartPalette</name>
    <filename>classWt_1_1Chart_1_1WChartPalette.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~WChartPalette</name>
      <anchorfile>classWt_1_1Chart_1_1WChartPalette.html</anchorfile>
      <anchor>a72e713c7e44024ebc5044bd2c67a3812</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual WBrush</type>
      <name>brush</name>
      <anchorfile>classWt_1_1Chart_1_1WChartPalette.html</anchorfile>
      <anchor>aa7e88bb175f4f83b245076150e658e99</anchor>
      <arglist>(int index) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual WPen</type>
      <name>borderPen</name>
      <anchorfile>classWt_1_1Chart_1_1WChartPalette.html</anchorfile>
      <anchor>a770025513b0e83146d54011743950726</anchor>
      <arglist>(int index) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual WPen</type>
      <name>strokePen</name>
      <anchorfile>classWt_1_1Chart_1_1WChartPalette.html</anchorfile>
      <anchor>ab395b91af20d3171c0cbb0abca85d967</anchor>
      <arglist>(int index) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual WColor</type>
      <name>fontColor</name>
      <anchorfile>classWt_1_1Chart_1_1WChartPalette.html</anchorfile>
      <anchor>a4968d1f875e0aedac02d7dbc312d085f</anchor>
      <arglist>(int index) const =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WCheckBox</name>
    <filename>classWt_1_1WCheckBox.html</filename>
    <base>Wt::WAbstractToggleButton</base>
    <member kind="function">
      <type></type>
      <name>WCheckBox</name>
      <anchorfile>classWt_1_1WCheckBox.html</anchorfile>
      <anchor>a42ce84bb48c2250d9a818042eac0b122</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WCheckBox</name>
      <anchorfile>classWt_1_1WCheckBox.html</anchorfile>
      <anchor>a2a1baf8097dab386eb7af418161eae64</anchor>
      <arglist>(const WString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTristate</name>
      <anchorfile>classWt_1_1WCheckBox.html</anchorfile>
      <anchor>aaa80606e36bfd34a73f6b58dc6cac926</anchor>
      <arglist>(bool tristate=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPartialStateSelectable</name>
      <anchorfile>classWt_1_1WCheckBox.html</anchorfile>
      <anchor>a2d741874682e9a683d40527b03615d32</anchor>
      <arglist>(bool b)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isPartialStateSelectable</name>
      <anchorfile>classWt_1_1WCheckBox.html</anchorfile>
      <anchor>abde010dedede8179824a126d0d673140</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isTristate</name>
      <anchorfile>classWt_1_1WCheckBox.html</anchorfile>
      <anchor>a86d271e97fc98b33b6075afec02e9ea2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCheckState</name>
      <anchorfile>classWt_1_1WCheckBox.html</anchorfile>
      <anchor>a293d15f49d36587b55a04216322083d8</anchor>
      <arglist>(CheckState state)</arglist>
    </member>
    <member kind="function">
      <type>CheckState</type>
      <name>checkState</name>
      <anchorfile>classWt_1_1WCheckBox.html</anchorfile>
      <anchor>ad006879a9fb12a6eb6dc52a63922505b</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WCircleArea</name>
    <filename>classWt_1_1WCircleArea.html</filename>
    <base>Wt::WAbstractArea</base>
    <member kind="function">
      <type></type>
      <name>WCircleArea</name>
      <anchorfile>classWt_1_1WCircleArea.html</anchorfile>
      <anchor>a60514d5a3a2da148a684b0a0b3a5b235</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WCircleArea</name>
      <anchorfile>classWt_1_1WCircleArea.html</anchorfile>
      <anchor>ae2d43a04099e8d29a317700570828365</anchor>
      <arglist>(int x, int y, int radius)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCenter</name>
      <anchorfile>classWt_1_1WCircleArea.html</anchorfile>
      <anchor>a10932e173eef6c9531c8086324b7ced8</anchor>
      <arglist>(const WPoint &amp;point)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCenter</name>
      <anchorfile>classWt_1_1WCircleArea.html</anchorfile>
      <anchor>a604bd32d585d03c2ea509b57f71412f3</anchor>
      <arglist>(const WPointF &amp;point)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCenter</name>
      <anchorfile>classWt_1_1WCircleArea.html</anchorfile>
      <anchor>a939c6645039059067b6924466a477c6c</anchor>
      <arglist>(int x, int y)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>centerX</name>
      <anchorfile>classWt_1_1WCircleArea.html</anchorfile>
      <anchor>ae70daac7faaeab404ddf3fbd2432b2f1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>centerY</name>
      <anchorfile>classWt_1_1WCircleArea.html</anchorfile>
      <anchor>a46dbac537d4c98430b9bdabf5513c540</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRadius</name>
      <anchorfile>classWt_1_1WCircleArea.html</anchorfile>
      <anchor>a69d4391565a8cb7c707d951362fe22bf</anchor>
      <arglist>(int radius)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>radius</name>
      <anchorfile>classWt_1_1WCircleArea.html</anchorfile>
      <anchor>a8f0344a9ca7b8bccd1c3987aecceb49a</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WColor</name>
    <filename>classWt_1_1WColor.html</filename>
    <member kind="function">
      <type></type>
      <name>WColor</name>
      <anchorfile>classWt_1_1WColor.html</anchorfile>
      <anchor>a0aca175990842e4be3d944236e27cda3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WColor</name>
      <anchorfile>classWt_1_1WColor.html</anchorfile>
      <anchor>a5e0102afbdf3ece70a200c1379ad3522</anchor>
      <arglist>(int red, int green, int blue, int alpha=255)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WColor</name>
      <anchorfile>classWt_1_1WColor.html</anchorfile>
      <anchor>a00336e4511fb1fd68f3c66d58c30a4c1</anchor>
      <arglist>(const WString &amp;name)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WColor</name>
      <anchorfile>classWt_1_1WColor.html</anchorfile>
      <anchor>a85be34f24d73064098f560abb1247704</anchor>
      <arglist>(StandardColor name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRgb</name>
      <anchorfile>classWt_1_1WColor.html</anchorfile>
      <anchor>ab3e459365133f983d702a310dd600772</anchor>
      <arglist>(int red, int green, int blue, int alpha=255)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setName</name>
      <anchorfile>classWt_1_1WColor.html</anchorfile>
      <anchor>aea520f8d33c730809176bd555463e33a</anchor>
      <arglist>(const WString &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isDefault</name>
      <anchorfile>classWt_1_1WColor.html</anchorfile>
      <anchor>a705456501d9098c03a00bd302a41bd2f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>red</name>
      <anchorfile>classWt_1_1WColor.html</anchorfile>
      <anchor>af2d14c535e53d1ca53f7559425035e78</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>green</name>
      <anchorfile>classWt_1_1WColor.html</anchorfile>
      <anchor>aeb98b7683cd9ed7d15532c6cb8474c07</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>blue</name>
      <anchorfile>classWt_1_1WColor.html</anchorfile>
      <anchor>ac1f3245c96106e16ac34cfc3ff45eb4d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>alpha</name>
      <anchorfile>classWt_1_1WColor.html</anchorfile>
      <anchor>aad4547691eeed83db184844c063aa425</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const WString &amp;</type>
      <name>name</name>
      <anchorfile>classWt_1_1WColor.html</anchorfile>
      <anchor>af255fe10865586d432005506e4444922</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classWt_1_1WColor.html</anchorfile>
      <anchor>a17fa00aba664fb7af8c7972a37b628bd</anchor>
      <arglist>(const WColor &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classWt_1_1WColor.html</anchorfile>
      <anchor>a96a157363149d5cefc6d2c94e8b820c7</anchor>
      <arglist>(const WColor &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>const std::string</type>
      <name>cssText</name>
      <anchorfile>classWt_1_1WColor.html</anchorfile>
      <anchor>a3eadaf524a1d61055c7c9f3265f38ba4</anchor>
      <arglist>(bool withAlpha=false) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WColorPicker</name>
    <filename>classWt_1_1WColorPicker.html</filename>
    <base>Wt::WFormWidget</base>
    <member kind="function">
      <type></type>
      <name>WColorPicker</name>
      <anchorfile>classWt_1_1WColorPicker.html</anchorfile>
      <anchor>afc43b4285f2dffc41457bd5e520e5c3b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WColorPicker</name>
      <anchorfile>classWt_1_1WColorPicker.html</anchorfile>
      <anchor>ac2a7df543b85711baa4afaf726b5848b</anchor>
      <arglist>(const WColor &amp;color)</arglist>
    </member>
    <member kind="function">
      <type>WColor</type>
      <name>color</name>
      <anchorfile>classWt_1_1WColorPicker.html</anchorfile>
      <anchor>a37a46881db650c31b45fcb75a9c386de</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setColor</name>
      <anchorfile>classWt_1_1WColorPicker.html</anchorfile>
      <anchor>a45ee16e70bd269e233f63c8509c5a784</anchor>
      <arglist>(const WColor &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>EventSignal &amp;</type>
      <name>colorInput</name>
      <anchorfile>classWt_1_1WColorPicker.html</anchorfile>
      <anchor>a3f7986482f5f18c4ab7c79f578ed3794</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WString</type>
      <name>valueText</name>
      <anchorfile>classWt_1_1WColorPicker.html</anchorfile>
      <anchor>aa1bbb2ac2bbfc69c96221cc2638aaca1</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setValueText</name>
      <anchorfile>classWt_1_1WColorPicker.html</anchorfile>
      <anchor>a129a006dcfb9dba3ba3296738b854cd2</anchor>
      <arglist>(const WString &amp;value) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WCombinedLocalizedStrings</name>
    <filename>classWt_1_1WCombinedLocalizedStrings.html</filename>
    <base>Wt::WLocalizedStrings</base>
    <member kind="function">
      <type></type>
      <name>WCombinedLocalizedStrings</name>
      <anchorfile>classWt_1_1WCombinedLocalizedStrings.html</anchorfile>
      <anchor>a0e421a2f2ff41d7c1e52584db1088b23</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add</name>
      <anchorfile>classWt_1_1WCombinedLocalizedStrings.html</anchorfile>
      <anchor>a4ac074b0c02d3a53dc88849ea87fcae0</anchor>
      <arglist>(const std::shared_ptr&lt; WLocalizedStrings &gt; &amp;resolver)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insert</name>
      <anchorfile>classWt_1_1WCombinedLocalizedStrings.html</anchorfile>
      <anchor>a3d9fe220665bff92a12693daf74e21f4</anchor>
      <arglist>(int index, const std::shared_ptr&lt; WLocalizedStrings &gt; &amp;resolver)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove</name>
      <anchorfile>classWt_1_1WCombinedLocalizedStrings.html</anchorfile>
      <anchor>ae93cd9584e826cb60f2b3e8dcbd83958</anchor>
      <arglist>(const std::shared_ptr&lt; WLocalizedStrings &gt; &amp;resolver)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>hibernate</name>
      <anchorfile>classWt_1_1WCombinedLocalizedStrings.html</anchorfile>
      <anchor>a61417ba28232db68ede9d282f63ef15c</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual LocalizedString</type>
      <name>resolveKey</name>
      <anchorfile>classWt_1_1WCombinedLocalizedStrings.html</anchorfile>
      <anchor>a7628f0553504a0359a34c0ccebd686e3</anchor>
      <arglist>(const WLocale &amp;locale, const std::string &amp;key) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual LocalizedString</type>
      <name>resolvePluralKey</name>
      <anchorfile>classWt_1_1WCombinedLocalizedStrings.html</anchorfile>
      <anchor>aa0a19526dcd6593a549cbace4362fb2d</anchor>
      <arglist>(const WLocale &amp;locale, const std::string &amp;key, ::uint64_t amount) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WComboBox</name>
    <filename>classWt_1_1WComboBox.html</filename>
    <base>Wt::WFormWidget</base>
    <member kind="function">
      <type></type>
      <name>WComboBox</name>
      <anchorfile>classWt_1_1WComboBox.html</anchorfile>
      <anchor>a2abe9fb106e881a815302035d3da8557</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addItem</name>
      <anchorfile>classWt_1_1WComboBox.html</anchorfile>
      <anchor>a9b2308a7d962ceb17c1ee32627b106d4</anchor>
      <arglist>(const WString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>count</name>
      <anchorfile>classWt_1_1WComboBox.html</anchorfile>
      <anchor>aa05148c999c900fccc219c4334bc1226</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>currentIndex</name>
      <anchorfile>classWt_1_1WComboBox.html</anchorfile>
      <anchor>a46d536faa379cf01e50974065265780f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertItem</name>
      <anchorfile>classWt_1_1WComboBox.html</anchorfile>
      <anchor>a2092c15c7c0c2f77342d0abdc393ca6b</anchor>
      <arglist>(int index, const WString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeItem</name>
      <anchorfile>classWt_1_1WComboBox.html</anchorfile>
      <anchor>a95db6ec7468a1eabbf95f7eba3012a54</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCurrentIndex</name>
      <anchorfile>classWt_1_1WComboBox.html</anchorfile>
      <anchor>a903e2d98c6860fe09198bdb43f0566bd</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setItemText</name>
      <anchorfile>classWt_1_1WComboBox.html</anchorfile>
      <anchor>a8eafbaa6e87ca46a411b904b78b12db6</anchor>
      <arglist>(int index, const WString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>const WString</type>
      <name>currentText</name>
      <anchorfile>classWt_1_1WComboBox.html</anchorfile>
      <anchor>a815e7bf650f01348cae2a2594c7c4cab</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const WString</type>
      <name>itemText</name>
      <anchorfile>classWt_1_1WComboBox.html</anchorfile>
      <anchor>a9385f3756aa2f970d866011f8d0edd90</anchor>
      <arglist>(int index) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setModel</name>
      <anchorfile>classWt_1_1WComboBox.html</anchorfile>
      <anchor>ac1ae5c539f5b761b4a672ccde09f19f6</anchor>
      <arglist>(const std::shared_ptr&lt; WAbstractItemModel &gt; model)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setModelColumn</name>
      <anchorfile>classWt_1_1WComboBox.html</anchorfile>
      <anchor>a5d33b665d2fa12b349fa2783ba4d2033</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; WAbstractItemModel &gt;</type>
      <name>model</name>
      <anchorfile>classWt_1_1WComboBox.html</anchorfile>
      <anchor>ab7ab1df5e7624815fca695243cc7eb0e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>findText</name>
      <anchorfile>classWt_1_1WComboBox.html</anchorfile>
      <anchor>a349f5edd6be46089d92fc14ecd0e460c</anchor>
      <arglist>(const WString &amp;text, WFlags&lt; MatchFlag &gt; flags=MatchFlag::Exactly|MatchFlag::CaseSensitive) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual SelectionMode</type>
      <name>selectionMode</name>
      <anchorfile>classWt_1_1WComboBox.html</anchorfile>
      <anchor>a676e354c2db9fdb712886023610e3922</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WString</type>
      <name>valueText</name>
      <anchorfile>classWt_1_1WComboBox.html</anchorfile>
      <anchor>a2a15f537a8ddfbde493d93f1ce6047f9</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setValueText</name>
      <anchorfile>classWt_1_1WComboBox.html</anchorfile>
      <anchor>a4aa78312a0b6417b9964d96c962b92b9</anchor>
      <arglist>(const WString &amp;value) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>refresh</name>
      <anchorfile>classWt_1_1WComboBox.html</anchorfile>
      <anchor>ad3ef9e5f8e14e68ad0ef2812f06c2e93</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classWt_1_1WComboBox.html</anchorfile>
      <anchor>a0ed207e9616b51089d97030cc767409d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Signal&lt; int &gt; &amp;</type>
      <name>activated</name>
      <anchorfile>classWt_1_1WComboBox.html</anchorfile>
      <anchor>ac39b46ccd8134a5397b4cbd87dc9f01f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Signal&lt; WString &gt; &amp;</type>
      <name>sactivated</name>
      <anchorfile>classWt_1_1WComboBox.html</anchorfile>
      <anchor>a06401499734540c65db26fceb60bfdbf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNoSelectionEnabled</name>
      <anchorfile>classWt_1_1WComboBox.html</anchorfile>
      <anchor>ab8984ed25093ad5c3d9e5d0ab1cedde8</anchor>
      <arglist>(bool enabled)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>noSelectionEnabled</name>
      <anchorfile>classWt_1_1WComboBox.html</anchorfile>
      <anchor>ae3e6646f37e854fa856c45e2aa12ffa4</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WCompositeWidget</name>
    <filename>classWt_1_1WCompositeWidget.html</filename>
    <base>Wt::WWidget</base>
    <member kind="function">
      <type></type>
      <name>WCompositeWidget</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>a13e85ce92d9798ca8cd15fa7c997a1d8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WCompositeWidget</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>ab2af7f798ea32cf2cb2ca7360c3861a4</anchor>
      <arglist>(std::unique_ptr&lt; WWidget &gt; implementation)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::vector&lt; WWidget * &gt;</type>
      <name>children</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>a4550fbf9c549b0746eb661fe0db545c4</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::unique_ptr&lt; WWidget &gt;</type>
      <name>removeWidget</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>a48642e98a4e0e6dc30304eefa75f7018</anchor>
      <arglist>(WWidget *widget) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setObjectName</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>a11c8dcbf4fb2b5e772317893facbec17</anchor>
      <arglist>(const std::string &amp;name) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>objectName</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>a6a159e43e0488bf3bf043cda24c6d84f</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const std::string</type>
      <name>id</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>ac621f2e8fef8765877b98098c74b4b10</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setPositionScheme</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>a908b0c79bd1018ef86c0bbd701701183</anchor>
      <arglist>(PositionScheme scheme) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual PositionScheme</type>
      <name>positionScheme</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>a2572b55b654573313da03b7e287d5658</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setOffsets</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>a898a200aff146332e946c06c5f9dc825</anchor>
      <arglist>(const WLength &amp;offset, WFlags&lt; Side &gt; sides=AllSides) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WLength</type>
      <name>offset</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>a70cfac94696ec6aa5510e5a6dc2edd55</anchor>
      <arglist>(Side s) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>resize</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>a0d058bbe925f5cf23b0491e71d45f23a</anchor>
      <arglist>(const WLength &amp;width, const WLength &amp;height) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WLength</type>
      <name>width</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>a154d5b7f30cb49ffe761a88ddd877362</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WLength</type>
      <name>height</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>ab570793097c0391c30aff409c5fd1ea6</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setMinimumSize</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>aedf106b5ce2aeefbebad55956d3ef693</anchor>
      <arglist>(const WLength &amp;width, const WLength &amp;height) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WLength</type>
      <name>minimumWidth</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>a20fd2ffa448a54b6430e6096c18c4f83</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WLength</type>
      <name>minimumHeight</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>a979ebd1d2f320fbd3980ab21088fe209</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setMaximumSize</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>a4218f745a9f6e5ebaa053362731902e5</anchor>
      <arglist>(const WLength &amp;width, const WLength &amp;height) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WLength</type>
      <name>maximumWidth</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>a655f4405052e7cfb28b67de1b931a38c</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WLength</type>
      <name>maximumHeight</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>adf016f28f542eb05f249cede29d1bf2c</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setLineHeight</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>a5f6de97a1192145135efd03966599587</anchor>
      <arglist>(const WLength &amp;height) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WLength</type>
      <name>lineHeight</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>aa534477fb70efa1a91a1349ce50eab26</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setFloatSide</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>a8068b058463c61b8ee6243a05c2635f0</anchor>
      <arglist>(Side s) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Side</type>
      <name>floatSide</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>a86900d762c6ec1b51cf3134c88c8c062</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setClearSides</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>a4dec0d1dc3fed8770ca2e9a4b1460b9e</anchor>
      <arglist>(WFlags&lt; Side &gt; sides) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WFlags&lt; Side &gt;</type>
      <name>clearSides</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>a82acda57e172604d56ed1c309b6695e3</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setMargin</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>ae6b65da61591651122dcc22982cddb42</anchor>
      <arglist>(const WLength &amp;margin, WFlags&lt; Side &gt; sides=AllSides) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WLength</type>
      <name>margin</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>a2a97a6d993d4733b1ff2a12070248ff7</anchor>
      <arglist>(Side side) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setHiddenKeepsGeometry</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>a3ff2e02e0b13e49cd0e6b968bd836e10</anchor>
      <arglist>(bool enabled) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>hiddenKeepsGeometry</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>a2b3b12288f080d7a98f9f54c78013a85</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setHidden</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>a6f106b18c5082a2501b8eb869552ca96</anchor>
      <arglist>(bool hidden, const WAnimation &amp;animation=WAnimation()) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isHidden</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>a9655dc0d4fcad6afaac541a8f7467b6c</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isVisible</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>a1d6b5e4d7770b6130be36b505a45f57e</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setDisabled</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>af0186120a0adf80edbc11bc600913ce0</anchor>
      <arglist>(bool disabled) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isDisabled</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>ae6697390b5c952ffcb30b3b65482d15f</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isEnabled</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>a659bf00ec3640e7a82211e70a5c7da95</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setPopup</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>a18163123786d858f09db4b9c7b63e10b</anchor>
      <arglist>(bool popup) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isPopup</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>a610fecfa92b18dbd442caaed07b931fe</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setInline</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>a4e9ad46cddbe2d990a80ba03b74eb662</anchor>
      <arglist>(bool isInline) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isInline</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>a984772ba0e030ba6e619f3ddbab4be8a</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setDecorationStyle</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>a410db067bbb13d676b661106269f2442</anchor>
      <arglist>(const WCssDecorationStyle &amp;style) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WCssDecorationStyle &amp;</type>
      <name>decorationStyle</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>ad249a7419cd2f40703ff1b5dd75076ea</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setStyleClass</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>ace12654a695f6e28f7efd34b5b51dfed</anchor>
      <arglist>(const WString &amp;styleClass) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WString</type>
      <name>styleClass</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>a2b53b2236989e6846321a7e86c67c0b5</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>addStyleClass</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>ad6f4ea6c9bf0a0f38401e1516a5fda32</anchor>
      <arglist>(const WString &amp;styleClass, bool force=false) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>removeStyleClass</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>ae3297231ab8502624bd6447332350b81</anchor>
      <arglist>(const WString &amp;styleClass, bool force=false) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>hasStyleClass</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>a28d9be0e4e0a1d28c3dcd4e65cfc2c60</anchor>
      <arglist>(const WString &amp;styleClass) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setVerticalAlignment</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>a3c72b9e2535cc89dc4db213fb266ba6a</anchor>
      <arglist>(AlignmentFlag alignment, const WLength &amp;length=WLength::Auto) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual AlignmentFlag</type>
      <name>verticalAlignment</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>ae571152fb643a1974da597b3e8a49acd</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WLength</type>
      <name>verticalAlignmentLength</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>aa870f474e953dfb4e64b978da47366c5</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setToolTip</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>aaa4b99f093f791d1cba2b6c97e899ac2</anchor>
      <arglist>(const WString &amp;text, TextFormat textFormat=TextFormat::Plain) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WString</type>
      <name>toolTip</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>a183d7faaac39618e936f993332ddbfa4</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setDeferredToolTip</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>a2d179f42ef376e782b2027c936544f80</anchor>
      <arglist>(bool enable, TextFormat textFormat=TextFormat::Plain) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>refresh</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>ae42d02d39bbe457cb56259d8b97e19cb</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttributeValue</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>a88ff047fd13c16e68f273dda60623c6f</anchor>
      <arglist>(const std::string &amp;name, const WString &amp;value) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WString</type>
      <name>attributeValue</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>a68f2b880e9655a33bb4b632cb98a94b2</anchor>
      <arglist>(const std::string &amp;name) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setJavaScriptMember</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>a905e5987d2b0a0aea1d24bed944814bb</anchor>
      <arglist>(const std::string &amp;name, const std::string &amp;value) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>javaScriptMember</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>a235f1df44b57a6615077558e5e803eac</anchor>
      <arglist>(const std::string &amp;name) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>callJavaScriptMember</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>a80890e782b0e63145c5bd5c0bd8a8887</anchor>
      <arglist>(const std::string &amp;name, const std::string &amp;args) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>load</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>afeec178d35eda919f2370911a5194f7e</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>loaded</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>a4790a73c709f9076581c6ff64e5f7d0f</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setCanReceiveFocus</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>a889e8a8e30445cd7479232a910b10e46</anchor>
      <arglist>(bool enabled) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>canReceiveFocus</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>a3f1bb44b492867c2612ca8c35786e40e</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setFocus</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>a9fa42df5e76e82f23e380af7d1f678c5</anchor>
      <arglist>(bool focus) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>setFirstFocus</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>a472424fcf44a7f09343ed1629f4774da</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>hasFocus</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>afccefcf00aa9b809ba393e64034344d0</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setTabIndex</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>af1c07ab341b50f3daf77ec955e12a4d0</anchor>
      <arglist>(int index) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>tabIndex</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>a74b299fc93ab94c6cf9184ad877f64d3</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setId</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>aad0519bc789086f605692173616ac59b</anchor>
      <arglist>(const std::string &amp;id) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WWidget *</type>
      <name>find</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>a0f1358301734b189b6bf7055d7f8befd</anchor>
      <arglist>(const std::string &amp;name) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WWidget *</type>
      <name>findById</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>a6f3b55a0066ae592e853142bfe92711d</anchor>
      <arglist>(const std::string &amp;name) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setSelectable</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>aa4b6264923eaf6b01686c51efb705ce0</anchor>
      <arglist>(bool selectable) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>doJavaScript</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>a911e4f84eff53fc3e2453e73724b9d4e</anchor>
      <arglist>(const std::string &amp;js) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>propagateSetEnabled</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>aa3b8e98559bf65e70ef982c99ab0925b</anchor>
      <arglist>(bool enabled) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>scrollVisibilityEnabled</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>aafbeeeca33dc5b6f5178deda04e43799</anchor>
      <arglist>() const final override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setScrollVisibilityEnabled</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>a60a5cdc9f41b546231c7abeab3ad34c6</anchor>
      <arglist>(bool enabled) final override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>scrollVisibilityMargin</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>aa8a2aa2a8d99137b96bf4fd80f13cdfa</anchor>
      <arglist>() const final override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setScrollVisibilityMargin</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>a4ca3a1ba116989080dbac516b3e1554a</anchor>
      <arglist>(int margin) final override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Signal&lt; bool &gt; &amp;</type>
      <name>scrollVisibilityChanged</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>aa396035d219f5067946dc0ecec1b5b35</anchor>
      <arglist>() final override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isScrollVisible</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>a002cdf1247298a280928d143b4e628f5</anchor>
      <arglist>() const final override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThemeStyleEnabled</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>aa98a321d579c41473ec875f53d2c7015</anchor>
      <arglist>(bool enabled) final override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isThemeStyleEnabled</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>af6d0e629db4abbdfb19b5b07ca6e6be7</anchor>
      <arglist>() const final override</arglist>
    </member>
    <member kind="function">
      <type>virtual std::unique_ptr&lt; WWidget &gt;</type>
      <name>removeWidget</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>a3daab3808c96956d30bc1045c379f407</anchor>
      <arglist>(WWidget *widget)</arglist>
    </member>
    <member kind="function">
      <type>std::unique_ptr&lt; Widget &gt;</type>
      <name>removeWidget</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>a1f5151154770b4956b4870cb4ecc38d3</anchor>
      <arglist>(Widget *widget)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFocus</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>a49b5c27de386b34ab0eecb712864a3a8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>virtual void</type>
      <name>setFocus</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>aee0ea3cc14a53876cbae5b4f95813a3a</anchor>
      <arglist>(bool focus)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>enableAjax</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>a0c2c00aa8c941350ea6505228b318302</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setImplementation</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>a7881d4ef40288e50af2c4da5bb7ff78f</anchor>
      <arglist>(std::unique_ptr&lt; WWidget &gt; widget)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Widget *</type>
      <name>setImplementation</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>a7f27dec4537ddca6b7cf36c38b026ade</anchor>
      <arglist>(std::unique_ptr&lt; Widget &gt; widget)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>W *</type>
      <name>setNewImplementation</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>a48e9c269c4e6dc40be7964e0ccb5127d</anchor>
      <arglist>(Args &amp;&amp;... args)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>WWidget *</type>
      <name>implementation</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>a8fe3e478986808ff0ddbcbbddcd66072</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual int</type>
      <name>boxPadding</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>a0ed9197d8fbc592ff86e49d60ea0186d</anchor>
      <arglist>(Orientation orientation) const override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual int</type>
      <name>boxBorder</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>a582eebe936f6887d333405a4f2506b08</anchor>
      <arglist>(Orientation orientation) const override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>render</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>afed91cb6c19691abd87128355c1e2fda</anchor>
      <arglist>(WFlags&lt; RenderFlag &gt; flags) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WContainerWidget</name>
    <filename>classWt_1_1WContainerWidget.html</filename>
    <base>Wt::WInteractWidget</base>
    <member kind="function">
      <type></type>
      <name>WContainerWidget</name>
      <anchorfile>classWt_1_1WContainerWidget.html</anchorfile>
      <anchor>af03845bd9a10c96feb585b7061b66a68</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WContainerWidget</name>
      <anchorfile>classWt_1_1WContainerWidget.html</anchorfile>
      <anchor>abcdb141e27e673f10c8e0e693307bf94</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLayout</name>
      <anchorfile>classWt_1_1WContainerWidget.html</anchorfile>
      <anchor>a60e57a8860785d6b587a36b616cb5e12</anchor>
      <arglist>(std::unique_ptr&lt; WLayout &gt; layout)</arglist>
    </member>
    <member kind="function">
      <type>Layout *</type>
      <name>setLayout</name>
      <anchorfile>classWt_1_1WContainerWidget.html</anchorfile>
      <anchor>a16c50a8192c4f8598e06747086bd03e9</anchor>
      <arglist>(std::unique_ptr&lt; Layout &gt; layout)</arglist>
    </member>
    <member kind="function">
      <type>WLayout *</type>
      <name>layout</name>
      <anchorfile>classWt_1_1WContainerWidget.html</anchorfile>
      <anchor>a4ea9ac2eebc6e43ec2c8ef1a632755c4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>addWidget</name>
      <anchorfile>classWt_1_1WContainerWidget.html</anchorfile>
      <anchor>ad17b653b6f0487e42b2a63ab9de03f20</anchor>
      <arglist>(std::unique_ptr&lt; WWidget &gt; widget)</arglist>
    </member>
    <member kind="function">
      <type>Widget *</type>
      <name>addWidget</name>
      <anchorfile>classWt_1_1WContainerWidget.html</anchorfile>
      <anchor>a3341360fc6cc1e86c1a42a3a54d9e0c7</anchor>
      <arglist>(std::unique_ptr&lt; Widget &gt; widget)</arglist>
    </member>
    <member kind="function">
      <type>Widget *</type>
      <name>addNew</name>
      <anchorfile>classWt_1_1WContainerWidget.html</anchorfile>
      <anchor>acf75dda5024db05cf847c282f8a99117</anchor>
      <arglist>(Args &amp;&amp;...args)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>insertBefore</name>
      <anchorfile>classWt_1_1WContainerWidget.html</anchorfile>
      <anchor>ade4addde8b3a096bea9c104c87ac456c</anchor>
      <arglist>(std::unique_ptr&lt; WWidget &gt; widget, WWidget *before)</arglist>
    </member>
    <member kind="function">
      <type>Widget *</type>
      <name>insertBefore</name>
      <anchorfile>classWt_1_1WContainerWidget.html</anchorfile>
      <anchor>a8fe12f51976d41481459ffe72c9907c2</anchor>
      <arglist>(std::unique_ptr&lt; Widget &gt; widget, WWidget *before)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>insertWidget</name>
      <anchorfile>classWt_1_1WContainerWidget.html</anchorfile>
      <anchor>a4d57949e836eabfe599cae9055e79805</anchor>
      <arglist>(int index, std::unique_ptr&lt; WWidget &gt; widget)</arglist>
    </member>
    <member kind="function">
      <type>Widget *</type>
      <name>insertWidget</name>
      <anchorfile>classWt_1_1WContainerWidget.html</anchorfile>
      <anchor>a707ff02cff13b3c6b5941229d616bc6b</anchor>
      <arglist>(int index, std::unique_ptr&lt; Widget &gt; widget)</arglist>
    </member>
    <member kind="function">
      <type>Widget *</type>
      <name>insertNew</name>
      <anchorfile>classWt_1_1WContainerWidget.html</anchorfile>
      <anchor>a5a7e7b9fe21bdc38f7a270193ed83243</anchor>
      <arglist>(int index, Args &amp;&amp;...args)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::unique_ptr&lt; WWidget &gt;</type>
      <name>removeWidget</name>
      <anchorfile>classWt_1_1WContainerWidget.html</anchorfile>
      <anchor>a556ec313d81eb2414d0e9dd6a772c92f</anchor>
      <arglist>(WWidget *widget) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>clear</name>
      <anchorfile>classWt_1_1WContainerWidget.html</anchorfile>
      <anchor>a608f748cbdda763f1a11556ddad9fbe1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>indexOf</name>
      <anchorfile>classWt_1_1WContainerWidget.html</anchorfile>
      <anchor>a9617d352c7685a599d756180f89e18a3</anchor>
      <arglist>(WWidget *widget) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WWidget *</type>
      <name>widget</name>
      <anchorfile>classWt_1_1WContainerWidget.html</anchorfile>
      <anchor>a2132e56aae279572a5e0d6993e64762b</anchor>
      <arglist>(int index) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>count</name>
      <anchorfile>classWt_1_1WContainerWidget.html</anchorfile>
      <anchor>a001362a22f194278ce4e356e7d127b0c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setContentAlignment</name>
      <anchorfile>classWt_1_1WContainerWidget.html</anchorfile>
      <anchor>aba13c9e62c74bcba53519ee9cf41f40a</anchor>
      <arglist>(WFlags&lt; AlignmentFlag &gt; contentAlignment)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPadding</name>
      <anchorfile>classWt_1_1WContainerWidget.html</anchorfile>
      <anchor>ac9fb9045ce6bd06e5aa53ee8456c0033</anchor>
      <arglist>(const WLength &amp;padding, WFlags&lt; Side &gt; sides=AllSides)</arglist>
    </member>
    <member kind="function">
      <type>WLength</type>
      <name>padding</name>
      <anchorfile>classWt_1_1WContainerWidget.html</anchorfile>
      <anchor>ac10d8ea33792bb9b9c80b44fe7db89a8</anchor>
      <arglist>(Side side) const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; AlignmentFlag &gt;</type>
      <name>contentAlignment</name>
      <anchorfile>classWt_1_1WContainerWidget.html</anchorfile>
      <anchor>a45848ee901b6f1f9cbac29b712d4c418</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setOverflow</name>
      <anchorfile>classWt_1_1WContainerWidget.html</anchorfile>
      <anchor>af3d9510f569deed060689aa509ecc831</anchor>
      <arglist>(Overflow overflow, WFlags&lt; Orientation &gt; orientation=(Orientation::Horizontal|Orientation::Vertical))</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setList</name>
      <anchorfile>classWt_1_1WContainerWidget.html</anchorfile>
      <anchor>a4b1857ba8e8a677887cd20aa657fb77f</anchor>
      <arglist>(bool list, bool ordered=false)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isList</name>
      <anchorfile>classWt_1_1WContainerWidget.html</anchorfile>
      <anchor>a8d2a337cc5fe06daa632098274dd8d2e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isUnorderedList</name>
      <anchorfile>classWt_1_1WContainerWidget.html</anchorfile>
      <anchor>ae66b88d50fa69bcb0274ed17c38e5bec</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isOrderedList</name>
      <anchorfile>classWt_1_1WContainerWidget.html</anchorfile>
      <anchor>aafb86ce1c6f791d721b06f67153983e2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>EventSignal&lt; WScrollEvent &gt; &amp;</type>
      <name>scrolled</name>
      <anchorfile>classWt_1_1WContainerWidget.html</anchorfile>
      <anchor>a64b97ae076fc6d678305fcdf77738a31</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>scrollTop</name>
      <anchorfile>classWt_1_1WContainerWidget.html</anchorfile>
      <anchor>a7346f5414063099bfee82ed321caeaed</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>scrollLeft</name>
      <anchorfile>classWt_1_1WContainerWidget.html</anchorfile>
      <anchor>acb7b5f2826328c24e9a9d80ad9390f7a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>virtual std::unique_ptr&lt; WWidget &gt;</type>
      <name>removeWidget</name>
      <anchorfile>classWt_1_1WContainerWidget.html</anchorfile>
      <anchor>a3daab3808c96956d30bc1045c379f407</anchor>
      <arglist>(WWidget *widget)</arglist>
    </member>
    <member kind="function">
      <type>std::unique_ptr&lt; Widget &gt;</type>
      <name>removeWidget</name>
      <anchorfile>classWt_1_1WContainerWidget.html</anchorfile>
      <anchor>a1f5151154770b4956b4870cb4ecc38d3</anchor>
      <arglist>(Widget *widget)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WCssDecorationStyle</name>
    <filename>classWt_1_1WCssDecorationStyle.html</filename>
    <base>Wt::WObject</base>
    <member kind="function">
      <type></type>
      <name>WCssDecorationStyle</name>
      <anchorfile>classWt_1_1WCssDecorationStyle.html</anchorfile>
      <anchor>ab7eebc38d1b857016e2b4e521edda0d9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WCssDecorationStyle</name>
      <anchorfile>classWt_1_1WCssDecorationStyle.html</anchorfile>
      <anchor>acbc9a0a4062bfb602a85dac37423c892</anchor>
      <arglist>(const WCssDecorationStyle &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WCssDecorationStyle</name>
      <anchorfile>classWt_1_1WCssDecorationStyle.html</anchorfile>
      <anchor>a5582095d55ae285370ee6fe3bac20e0e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>WCssDecorationStyle &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1WCssDecorationStyle.html</anchorfile>
      <anchor>a7076ca4b870ba4c59c83cb8326af6e37</anchor>
      <arglist>(const WCssDecorationStyle &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCursor</name>
      <anchorfile>classWt_1_1WCssDecorationStyle.html</anchorfile>
      <anchor>afa12d38e05ad171e9ec718e7ae0d7b70</anchor>
      <arglist>(Cursor c)</arglist>
    </member>
    <member kind="function">
      <type>Cursor</type>
      <name>cursor</name>
      <anchorfile>classWt_1_1WCssDecorationStyle.html</anchorfile>
      <anchor>a7199ba809c0a43cba6db70ffbb9503ba</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCursor</name>
      <anchorfile>classWt_1_1WCssDecorationStyle.html</anchorfile>
      <anchor>afff215291220deb18ed24d2be44d5d2c</anchor>
      <arglist>(std::string cursorImage, Cursor fallback=Cursor::Arrow)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>cursorImage</name>
      <anchorfile>classWt_1_1WCssDecorationStyle.html</anchorfile>
      <anchor>a913f3985f63c855e5789f745592406b0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBackgroundColor</name>
      <anchorfile>classWt_1_1WCssDecorationStyle.html</anchorfile>
      <anchor>ac6bd2a8b86c8092fc437329dac09b302</anchor>
      <arglist>(WColor color)</arglist>
    </member>
    <member kind="function">
      <type>WColor</type>
      <name>backgroundColor</name>
      <anchorfile>classWt_1_1WCssDecorationStyle.html</anchorfile>
      <anchor>a5ba03f245d22744f9a235906c952a8b4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBackgroundImage</name>
      <anchorfile>classWt_1_1WCssDecorationStyle.html</anchorfile>
      <anchor>af6b8f850c6230f19937637eaef453799</anchor>
      <arglist>(const WLink &amp;link, WFlags&lt; Orientation &gt; repeat=Orientation::Horizontal|Orientation::Vertical, WFlags&lt; Side &gt; sides=None)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>backgroundImage</name>
      <anchorfile>classWt_1_1WCssDecorationStyle.html</anchorfile>
      <anchor>a09f4936e230534e400e1a2a8c7b973d3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; Orientation &gt;</type>
      <name>backgroundImageRepeat</name>
      <anchorfile>classWt_1_1WCssDecorationStyle.html</anchorfile>
      <anchor>a2ecedb242f0e3b158c28f93a42a7ace3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setForegroundColor</name>
      <anchorfile>classWt_1_1WCssDecorationStyle.html</anchorfile>
      <anchor>a986681e0391d09bdf7f82d0cf283ae86</anchor>
      <arglist>(WColor color)</arglist>
    </member>
    <member kind="function">
      <type>WColor</type>
      <name>foregroundColor</name>
      <anchorfile>classWt_1_1WCssDecorationStyle.html</anchorfile>
      <anchor>a880c9efbf877b5475053bd6638fa4da6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBorder</name>
      <anchorfile>classWt_1_1WCssDecorationStyle.html</anchorfile>
      <anchor>a7b7829f0a3d6b4eb56cfa43ab87df234</anchor>
      <arglist>(WBorder border, WFlags&lt; Side &gt; sides=AllSides)</arglist>
    </member>
    <member kind="function">
      <type>WBorder</type>
      <name>border</name>
      <anchorfile>classWt_1_1WCssDecorationStyle.html</anchorfile>
      <anchor>aa6230220a0fceab91c68f551facb312a</anchor>
      <arglist>(Side side=Side::Top) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFont</name>
      <anchorfile>classWt_1_1WCssDecorationStyle.html</anchorfile>
      <anchor>a876f3f4a081622b0500d02032b56b659</anchor>
      <arglist>(const WFont &amp;font)</arglist>
    </member>
    <member kind="function">
      <type>WFont &amp;</type>
      <name>font</name>
      <anchorfile>classWt_1_1WCssDecorationStyle.html</anchorfile>
      <anchor>a5e552350f0955212ea237994a98638dc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTextDecoration</name>
      <anchorfile>classWt_1_1WCssDecorationStyle.html</anchorfile>
      <anchor>ae30cbd3f4306be25434c89f269551904</anchor>
      <arglist>(WFlags&lt; TextDecoration &gt; decoration)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; TextDecoration &gt;</type>
      <name>textDecoration</name>
      <anchorfile>classWt_1_1WCssDecorationStyle.html</anchorfile>
      <anchor>afe38c46ec13629943c603702a6d94b87</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WCssRule</name>
    <filename>classWt_1_1WCssRule.html</filename>
    <base>Wt::WObject</base>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~WCssRule</name>
      <anchorfile>classWt_1_1WCssRule.html</anchorfile>
      <anchor>afcb8249f4038c7185eb37fcecaca6675</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSelector</name>
      <anchorfile>classWt_1_1WCssRule.html</anchorfile>
      <anchor>a7ac4be2a52a9d098926e8090f8779c63</anchor>
      <arglist>(const std::string &amp;selector)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>selector</name>
      <anchorfile>classWt_1_1WCssRule.html</anchorfile>
      <anchor>abedc916853c3d8a889c070ca2c7ae7e7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WCssStyleSheet *</type>
      <name>sheet</name>
      <anchorfile>classWt_1_1WCssRule.html</anchorfile>
      <anchor>a4a03aa7ecac6c528c882247b74b99a79</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>modified</name>
      <anchorfile>classWt_1_1WCssRule.html</anchorfile>
      <anchor>a15ca55980b693ac64e70ca5f0d8cbf5d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>declarations</name>
      <anchorfile>classWt_1_1WCssRule.html</anchorfile>
      <anchor>afecf9476d8d319f1f607bf0519e4eeb3</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>WCssRule</name>
      <anchorfile>classWt_1_1WCssRule.html</anchorfile>
      <anchor>adc9c4088ba70dae3f82175a370677ee9</anchor>
      <arglist>(const std::string &amp;selector)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WCssStyleSheet</name>
    <filename>classWt_1_1WCssStyleSheet.html</filename>
    <member kind="function">
      <type></type>
      <name>WCssStyleSheet</name>
      <anchorfile>classWt_1_1WCssStyleSheet.html</anchorfile>
      <anchor>ae94dfb465a5d4f7eb405842dfda08d32</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WCssStyleSheet</name>
      <anchorfile>classWt_1_1WCssStyleSheet.html</anchorfile>
      <anchor>aaa08125ae86aa489b65edf98ffa984f1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>WCssTextRule *</type>
      <name>addRule</name>
      <anchorfile>classWt_1_1WCssStyleSheet.html</anchorfile>
      <anchor>ad2c989b38a7ee084a7c9b681e16e8a8c</anchor>
      <arglist>(const std::string &amp;selector, const WString &amp;declarations, const std::string &amp;ruleName=std::string())</arglist>
    </member>
    <member kind="function">
      <type>WCssTemplateRule *</type>
      <name>addRule</name>
      <anchorfile>classWt_1_1WCssStyleSheet.html</anchorfile>
      <anchor>a3ecf53815b4044ea0337db6ce90fb5c9</anchor>
      <arglist>(const std::string &amp;selector, const WCssDecorationStyle &amp;style, const std::string &amp;ruleName=std::string())</arglist>
    </member>
    <member kind="function">
      <type>WCssRule *</type>
      <name>addRule</name>
      <anchorfile>classWt_1_1WCssStyleSheet.html</anchorfile>
      <anchor>aae555da3ab015acf494e0700835a94a9</anchor>
      <arglist>(std::unique_ptr&lt; WCssRule &gt; rule, const std::string &amp;ruleName=std::string())</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isDefined</name>
      <anchorfile>classWt_1_1WCssStyleSheet.html</anchorfile>
      <anchor>a2d050947802a2e21aa7a6f2df15d6781</anchor>
      <arglist>(const std::string &amp;ruleName) const</arglist>
    </member>
    <member kind="function">
      <type>std::unique_ptr&lt; WCssRule &gt;</type>
      <name>removeRule</name>
      <anchorfile>classWt_1_1WCssStyleSheet.html</anchorfile>
      <anchor>ac99cff9f7ffccaa9b93b67db57098a94</anchor>
      <arglist>(WCssRule *rule)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WCssTemplateRule</name>
    <filename>classWt_1_1WCssTemplateRule.html</filename>
    <base>Wt::WCssRule</base>
    <member kind="function">
      <type></type>
      <name>WCssTemplateRule</name>
      <anchorfile>classWt_1_1WCssTemplateRule.html</anchorfile>
      <anchor>ae05ee2d960f007cda1db3fa3bc2db60d</anchor>
      <arglist>(const std::string &amp;selector)</arglist>
    </member>
    <member kind="function">
      <type>WWidget *</type>
      <name>templateWidget</name>
      <anchorfile>classWt_1_1WCssTemplateRule.html</anchorfile>
      <anchor>aebf91a4bcb9c9b737e20ce6177624553</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>declarations</name>
      <anchorfile>classWt_1_1WCssTemplateRule.html</anchorfile>
      <anchor>a0befec13cd90319bf6b6711a0fdfc0f2</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WCssTextRule</name>
    <filename>classWt_1_1WCssTextRule.html</filename>
    <base>Wt::WCssRule</base>
    <member kind="function">
      <type></type>
      <name>WCssTextRule</name>
      <anchorfile>classWt_1_1WCssTextRule.html</anchorfile>
      <anchor>a437f6c4f45fd1388728ed37d6aa214c4</anchor>
      <arglist>(const std::string &amp;selector, const WString &amp;declarations)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>declarations</name>
      <anchorfile>classWt_1_1WCssTextRule.html</anchorfile>
      <anchor>a0bc368a60c1404604bdf212076dc2a62</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WCssTheme</name>
    <filename>classWt_1_1WCssTheme.html</filename>
    <base>Wt::WTheme</base>
    <member kind="function">
      <type></type>
      <name>WCssTheme</name>
      <anchorfile>classWt_1_1WCssTheme.html</anchorfile>
      <anchor>a3ff86b4b8333dfa9cd2904414614185e</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>name</name>
      <anchorfile>classWt_1_1WCssTheme.html</anchorfile>
      <anchor>aa36d821fd7cef424dd8a6affea8cdf3e</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::vector&lt; WLinkedCssStyleSheet &gt;</type>
      <name>styleSheets</name>
      <anchorfile>classWt_1_1WCssTheme.html</anchorfile>
      <anchor>a9e166693de55fa241766c64a886715e2</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>apply</name>
      <anchorfile>classWt_1_1WCssTheme.html</anchorfile>
      <anchor>a19e1f1b7cd9bf269b2829bba2a50fbb1</anchor>
      <arglist>(WWidget *widget, WWidget *child, int widgetRole) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>apply</name>
      <anchorfile>classWt_1_1WCssTheme.html</anchorfile>
      <anchor>ab8393adc9e249d057a245af978c88236</anchor>
      <arglist>(WWidget *widget, DomElement &amp;element, int elementRole) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>disabledClass</name>
      <anchorfile>classWt_1_1WCssTheme.html</anchorfile>
      <anchor>a006b2d4338629641455188dc817a317b</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>activeClass</name>
      <anchorfile>classWt_1_1WCssTheme.html</anchorfile>
      <anchor>ae6090434bb393d61b9c7b34dcd065a0b</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>utilityCssClass</name>
      <anchorfile>classWt_1_1WCssTheme.html</anchorfile>
      <anchor>a3b5fe5a91da3bc14e63f3b694b5ec10a</anchor>
      <arglist>(int utilityCssClassRole) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>canStyleAnchorAsButton</name>
      <anchorfile>classWt_1_1WCssTheme.html</anchorfile>
      <anchor>ab358c76cff070309dea299e0ef19b02e</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>applyValidationStyle</name>
      <anchorfile>classWt_1_1WCssTheme.html</anchorfile>
      <anchor>a2d060025d45da7d545c7732281b72cda</anchor>
      <arglist>(WWidget *widget, const Wt::WValidator::Result &amp;validation, WFlags&lt; ValidationStyleFlag &gt; styles) const override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Chart::WDataSeries</name>
    <filename>classWt_1_1Chart_1_1WDataSeries.html</filename>
    <member kind="function">
      <type></type>
      <name>WDataSeries</name>
      <anchorfile>classWt_1_1Chart_1_1WDataSeries.html</anchorfile>
      <anchor>acb4ef11a7f3c8f8d20ac698dd856b41c</anchor>
      <arglist>(int modelColumn, SeriesType seriesType=SeriesType::Point, Axis axis=Axis::Y1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WDataSeries</name>
      <anchorfile>classWt_1_1Chart_1_1WDataSeries.html</anchorfile>
      <anchor>aafffe717e28c00afea645652a9b6a655</anchor>
      <arglist>(int modelColumn, SeriesType seriesType, int yAxis)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WDataSeries</name>
      <anchorfile>classWt_1_1Chart_1_1WDataSeries.html</anchorfile>
      <anchor>aae8bfd78a82c42d886664e4d72753c69</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBarWidth</name>
      <anchorfile>classWt_1_1Chart_1_1WDataSeries.html</anchorfile>
      <anchor>a05e7458bcdfbf762010c075456eea03c</anchor>
      <arglist>(const double width)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>barWidth</name>
      <anchorfile>classWt_1_1Chart_1_1WDataSeries.html</anchorfile>
      <anchor>a961770013cc29ce999a871853f98d437</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setType</name>
      <anchorfile>classWt_1_1Chart_1_1WDataSeries.html</anchorfile>
      <anchor>a8db1e060f64d2b4f44c21f96a071ff38</anchor>
      <arglist>(SeriesType t)</arglist>
    </member>
    <member kind="function">
      <type>SeriesType</type>
      <name>type</name>
      <anchorfile>classWt_1_1Chart_1_1WDataSeries.html</anchorfile>
      <anchor>adc0d6feb167d47cd7e8ff0294fc79828</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setModelColumn</name>
      <anchorfile>classWt_1_1Chart_1_1WDataSeries.html</anchorfile>
      <anchor>aa78e8b438d3b232d2d01afbe1b8be557</anchor>
      <arglist>(int modelColumn)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>modelColumn</name>
      <anchorfile>classWt_1_1Chart_1_1WDataSeries.html</anchorfile>
      <anchor>a32fc4394bbf21790ee57af37ea2c2b16</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setXSeriesColumn</name>
      <anchorfile>classWt_1_1Chart_1_1WDataSeries.html</anchorfile>
      <anchor>a9361e12e94699f59090ae8ac3a4921df</anchor>
      <arglist>(int modelColumn)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>XSeriesColumn</name>
      <anchorfile>classWt_1_1Chart_1_1WDataSeries.html</anchorfile>
      <anchor>a553e2930dfb1fd6ad109e7b46c30c0aa</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setStacked</name>
      <anchorfile>classWt_1_1Chart_1_1WDataSeries.html</anchorfile>
      <anchor>a14ce75bdb16de5158291f391a0c35f9b</anchor>
      <arglist>(bool stacked)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isStacked</name>
      <anchorfile>classWt_1_1Chart_1_1WDataSeries.html</anchorfile>
      <anchor>aa24e8111b9f289a320b9ddd2ffc6dce6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bindToAxis</name>
      <anchorfile>classWt_1_1Chart_1_1WDataSeries.html</anchorfile>
      <anchor>a2c7bf4f065a4f2be24603cbdad3f24b6</anchor>
      <arglist>(Axis axis)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bindToXAxis</name>
      <anchorfile>classWt_1_1Chart_1_1WDataSeries.html</anchorfile>
      <anchor>a8d17348ae304a48ec58ef7c61b03953f</anchor>
      <arglist>(int xAxis)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bindToYAxis</name>
      <anchorfile>classWt_1_1Chart_1_1WDataSeries.html</anchorfile>
      <anchor>ae3abca77e796e8d0c1b1e5830ef80866</anchor>
      <arglist>(int yAxis)</arglist>
    </member>
    <member kind="function">
      <type>Axis</type>
      <name>axis</name>
      <anchorfile>classWt_1_1Chart_1_1WDataSeries.html</anchorfile>
      <anchor>aeb3e1d1eb3481b1fe4b180e0cb8a16a4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>xAxis</name>
      <anchorfile>classWt_1_1Chart_1_1WDataSeries.html</anchorfile>
      <anchor>ae61f8d1b8b343c99fe8474f278ac06a0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>yAxis</name>
      <anchorfile>classWt_1_1Chart_1_1WDataSeries.html</anchorfile>
      <anchor>ad433a9da313a96600030953c9089e973</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCustomFlags</name>
      <anchorfile>classWt_1_1Chart_1_1WDataSeries.html</anchorfile>
      <anchor>adad2a2ef9304287900207028b5255a73</anchor>
      <arglist>(WFlags&lt; CustomFlag &gt; customFlags)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; CustomFlag &gt;</type>
      <name>customFlags</name>
      <anchorfile>classWt_1_1Chart_1_1WDataSeries.html</anchorfile>
      <anchor>a4951b207167c572cd407daf53793ebeb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPen</name>
      <anchorfile>classWt_1_1Chart_1_1WDataSeries.html</anchorfile>
      <anchor>aac0f9d064024241b16685c196bd04818</anchor>
      <arglist>(const WPen &amp;pen)</arglist>
    </member>
    <member kind="function">
      <type>WPen</type>
      <name>pen</name>
      <anchorfile>classWt_1_1Chart_1_1WDataSeries.html</anchorfile>
      <anchor>a39243c3c06066fcafe11cc8ea00eee67</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBrush</name>
      <anchorfile>classWt_1_1Chart_1_1WDataSeries.html</anchorfile>
      <anchor>a9271ca3b3f70822ae6582b7e28363b2e</anchor>
      <arglist>(const WBrush &amp;brush)</arglist>
    </member>
    <member kind="function">
      <type>WBrush</type>
      <name>brush</name>
      <anchorfile>classWt_1_1Chart_1_1WDataSeries.html</anchorfile>
      <anchor>ab0966104c503d65e4a6db3db34dd6500</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setShadow</name>
      <anchorfile>classWt_1_1Chart_1_1WDataSeries.html</anchorfile>
      <anchor>a683e2c2d0d4b94631be803600b519e9a</anchor>
      <arglist>(const WShadow &amp;shadow)</arglist>
    </member>
    <member kind="function">
      <type>const WShadow &amp;</type>
      <name>shadow</name>
      <anchorfile>classWt_1_1Chart_1_1WDataSeries.html</anchorfile>
      <anchor>a341eae9ebffb127f4eef071043a6b7bf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFillRange</name>
      <anchorfile>classWt_1_1Chart_1_1WDataSeries.html</anchorfile>
      <anchor>a9b5ea5691c650d567e26b2a7ea762462</anchor>
      <arglist>(FillRangeType fillRange)</arglist>
    </member>
    <member kind="function">
      <type>FillRangeType</type>
      <name>fillRange</name>
      <anchorfile>classWt_1_1Chart_1_1WDataSeries.html</anchorfile>
      <anchor>ac72bf516fc245553744949bef40b0776</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMarker</name>
      <anchorfile>classWt_1_1Chart_1_1WDataSeries.html</anchorfile>
      <anchor>ac8f4ae7c878df76662d92fd48e57d17d</anchor>
      <arglist>(MarkerType marker)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCustomMarker</name>
      <anchorfile>classWt_1_1Chart_1_1WDataSeries.html</anchorfile>
      <anchor>ab0dbcd9bcbc0f39a042eb36aa930def4</anchor>
      <arglist>(const WPainterPath &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>WPainterPath</type>
      <name>customMarker</name>
      <anchorfile>classWt_1_1Chart_1_1WDataSeries.html</anchorfile>
      <anchor>ad5e86fe6d98c44c244369c877f760ae6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>MarkerType</type>
      <name>marker</name>
      <anchorfile>classWt_1_1Chart_1_1WDataSeries.html</anchorfile>
      <anchor>a12ce2189a5ee8ae7e88dd24824f1af6c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMarkerSize</name>
      <anchorfile>classWt_1_1Chart_1_1WDataSeries.html</anchorfile>
      <anchor>a750caa710c08a1550059e90c32b61487</anchor>
      <arglist>(double size)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>markerSize</name>
      <anchorfile>classWt_1_1Chart_1_1WDataSeries.html</anchorfile>
      <anchor>af926dc101cf002e3059ef73e3517d6d0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMarkerPen</name>
      <anchorfile>classWt_1_1Chart_1_1WDataSeries.html</anchorfile>
      <anchor>a00efc7980ccbf435dadab50f09bbb90c</anchor>
      <arglist>(const WPen &amp;pen)</arglist>
    </member>
    <member kind="function">
      <type>WPen</type>
      <name>markerPen</name>
      <anchorfile>classWt_1_1Chart_1_1WDataSeries.html</anchorfile>
      <anchor>a2089ca4514b20f227f2cc698ba251ca7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMarkerBrush</name>
      <anchorfile>classWt_1_1Chart_1_1WDataSeries.html</anchorfile>
      <anchor>a5226ee065d0594b997916fb1f89c9113</anchor>
      <arglist>(const WBrush &amp;brush)</arglist>
    </member>
    <member kind="function">
      <type>WBrush</type>
      <name>markerBrush</name>
      <anchorfile>classWt_1_1Chart_1_1WDataSeries.html</anchorfile>
      <anchor>ac873c6c721c08055ff61642584297697</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLegendEnabled</name>
      <anchorfile>classWt_1_1Chart_1_1WDataSeries.html</anchorfile>
      <anchor>adbddd50fc4ccd1608987900f0231bd50</anchor>
      <arglist>(bool enabled)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isLegendEnabled</name>
      <anchorfile>classWt_1_1Chart_1_1WDataSeries.html</anchorfile>
      <anchor>af74437aa169d754271080b5a33cb3d91</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLabelsEnabled</name>
      <anchorfile>classWt_1_1Chart_1_1WDataSeries.html</anchorfile>
      <anchor>a0b3425ac94c831ffa6b46bb1fb354f2f</anchor>
      <arglist>(Axis axis, bool enabled=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isLabelsEnabled</name>
      <anchorfile>classWt_1_1Chart_1_1WDataSeries.html</anchorfile>
      <anchor>a98f845a1709fe2e8444b26763da28970</anchor>
      <arglist>(Axis axis) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLabelColor</name>
      <anchorfile>classWt_1_1Chart_1_1WDataSeries.html</anchorfile>
      <anchor>a7d1ed652c7a689ecf3988fb7ee66b2cd</anchor>
      <arglist>(const WColor &amp;color)</arglist>
    </member>
    <member kind="function">
      <type>WColor</type>
      <name>labelColor</name>
      <anchorfile>classWt_1_1Chart_1_1WDataSeries.html</anchorfile>
      <anchor>adfd2d36e6eba1536df2517067ead9f3f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setHidden</name>
      <anchorfile>classWt_1_1Chart_1_1WDataSeries.html</anchorfile>
      <anchor>ac10d08d0f84d2d6c4a32311d923a3df8</anchor>
      <arglist>(bool hidden)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isHidden</name>
      <anchorfile>classWt_1_1Chart_1_1WDataSeries.html</anchorfile>
      <anchor>a08d10af019311c9f2f35930b60259c0f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WPointF</type>
      <name>mapFromDevice</name>
      <anchorfile>classWt_1_1Chart_1_1WDataSeries.html</anchorfile>
      <anchor>ad9f223bcc87115b09b9340c8ec044ba6</anchor>
      <arglist>(const WPointF &amp;deviceCoordinates) const</arglist>
    </member>
    <member kind="function">
      <type>WPointF</type>
      <name>mapToDevice</name>
      <anchorfile>classWt_1_1Chart_1_1WDataSeries.html</anchorfile>
      <anchor>a3fdf2be61358741f4e0ae95d9625cef0</anchor>
      <arglist>(const cpp17::any &amp;xValue, const cpp17::any &amp;yValue, int segment=0) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setOffset</name>
      <anchorfile>classWt_1_1Chart_1_1WDataSeries.html</anchorfile>
      <anchor>a675ac49cb9a1d25a70159f67beb90a23</anchor>
      <arglist>(double offset)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>offset</name>
      <anchorfile>classWt_1_1Chart_1_1WDataSeries.html</anchorfile>
      <anchor>a7e1231f621654148f41e18ebdd53e7b6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setScale</name>
      <anchorfile>classWt_1_1Chart_1_1WDataSeries.html</anchorfile>
      <anchor>af3dbdacaf63691f7829d06b0924f3d65</anchor>
      <arglist>(double scale)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>scale</name>
      <anchorfile>classWt_1_1Chart_1_1WDataSeries.html</anchorfile>
      <anchor>a7634ae78a4e7f2ef933b82955ac04ae4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setModel</name>
      <anchorfile>classWt_1_1Chart_1_1WDataSeries.html</anchorfile>
      <anchor>a67c564eb35bd99819fecb610b707c1ba</anchor>
      <arglist>(const std::shared_ptr&lt; WAbstractChartModel &gt; &amp;model)</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; WAbstractChartModel &gt;</type>
      <name>model</name>
      <anchorfile>classWt_1_1Chart_1_1WDataSeries.html</anchorfile>
      <anchor>a575b567885c1cef03e1b8d18437a6200</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WDate</name>
    <filename>classWt_1_1WDate.html</filename>
    <member kind="function">
      <type></type>
      <name>WDate</name>
      <anchorfile>classWt_1_1WDate.html</anchorfile>
      <anchor>a88823f7de1cc16e9211015733f15eac3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WDate</name>
      <anchorfile>classWt_1_1WDate.html</anchorfile>
      <anchor>afa04a7ed85df7f5fee122e1d220a3e4a</anchor>
      <arglist>(const std::chrono::system_clock::time_point &amp;tp)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WDate</name>
      <anchorfile>classWt_1_1WDate.html</anchorfile>
      <anchor>ae88e64cff5fa3f28283f26fa7c8e4b99</anchor>
      <arglist>(int year, int month, int day)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDate</name>
      <anchorfile>classWt_1_1WDate.html</anchorfile>
      <anchor>ad9f497db41a525c9955aa6c45fa9a692</anchor>
      <arglist>(int year, int month, int day)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTimePoint</name>
      <anchorfile>classWt_1_1WDate.html</anchorfile>
      <anchor>a08929d87ac2db80540c3e33d25fc3997</anchor>
      <arglist>(const std::chrono::system_clock::time_point &amp;tp)</arglist>
    </member>
    <member kind="function">
      <type>WDate</type>
      <name>addDays</name>
      <anchorfile>classWt_1_1WDate.html</anchorfile>
      <anchor>aff37aed03de07823e3451fcda7765e87</anchor>
      <arglist>(int ndays) const</arglist>
    </member>
    <member kind="function">
      <type>WDate</type>
      <name>addMonths</name>
      <anchorfile>classWt_1_1WDate.html</anchorfile>
      <anchor>a6d604c9c4409729abbe4a334c4d69368</anchor>
      <arglist>(int nmonths) const</arglist>
    </member>
    <member kind="function">
      <type>WDate</type>
      <name>addYears</name>
      <anchorfile>classWt_1_1WDate.html</anchorfile>
      <anchor>ab03f57a16749501343b8368047199002</anchor>
      <arglist>(int nyears) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isNull</name>
      <anchorfile>classWt_1_1WDate.html</anchorfile>
      <anchor>a15f10a5100d5865f0536f5e73e712851</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isValid</name>
      <anchorfile>classWt_1_1WDate.html</anchorfile>
      <anchor>a316c9979216382dd8b2dd26b28bfa7f9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>year</name>
      <anchorfile>classWt_1_1WDate.html</anchorfile>
      <anchor>affe98e6062a978167db9e6dca4a4da7f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>month</name>
      <anchorfile>classWt_1_1WDate.html</anchorfile>
      <anchor>a4d74512b96a67ef19ad5bd9857d9002e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>day</name>
      <anchorfile>classWt_1_1WDate.html</anchorfile>
      <anchor>af4f63aaf64b1b54fc04031becdef0226</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>dayOfWeek</name>
      <anchorfile>classWt_1_1WDate.html</anchorfile>
      <anchor>a05ec97ab0e38a4bbd68067c443c0c78c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>daysTo</name>
      <anchorfile>classWt_1_1WDate.html</anchorfile>
      <anchor>a06ee35c9d4b6e49e3dfe2227821a053b</anchor>
      <arglist>(const WDate &amp;date) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>toJulianDay</name>
      <anchorfile>classWt_1_1WDate.html</anchorfile>
      <anchor>a89855250cec72c1a2d199602db786089</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>classWt_1_1WDate.html</anchorfile>
      <anchor>a621af80ab1079fd15de51423f17c6997</anchor>
      <arglist>(const WDate &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;=</name>
      <anchorfile>classWt_1_1WDate.html</anchorfile>
      <anchor>a2484b358c20027bee19cd72c6fa2f0c3</anchor>
      <arglist>(const WDate &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&gt;</name>
      <anchorfile>classWt_1_1WDate.html</anchorfile>
      <anchor>a01c51206377bbb6a0bc6dff93984dddb</anchor>
      <arglist>(const WDate &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&gt;=</name>
      <anchorfile>classWt_1_1WDate.html</anchorfile>
      <anchor>ace555130bdbef603d16cd77fda7418c1</anchor>
      <arglist>(const WDate &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classWt_1_1WDate.html</anchorfile>
      <anchor>ac3bc5a3c2cce6248f2cc2f8da205b1f3</anchor>
      <arglist>(const WDate &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classWt_1_1WDate.html</anchorfile>
      <anchor>acda152574cdc4bcb0a38acef8ed95cd1</anchor>
      <arglist>(const WDate &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>WString</type>
      <name>toString</name>
      <anchorfile>classWt_1_1WDate.html</anchorfile>
      <anchor>a575829f09e243ed4473627af356fdc58</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WString</type>
      <name>toString</name>
      <anchorfile>classWt_1_1WDate.html</anchorfile>
      <anchor>ac81af89bb379d2715e3dd78123a4300f</anchor>
      <arglist>(const WString &amp;format) const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static WDate</type>
      <name>fromString</name>
      <anchorfile>classWt_1_1WDate.html</anchorfile>
      <anchor>a86383757788870ff2f22bd29536336b7</anchor>
      <arglist>(const WString &amp;s)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static WDate</type>
      <name>fromString</name>
      <anchorfile>classWt_1_1WDate.html</anchorfile>
      <anchor>a25e1f637674f18ebb4fa528d107b3d46</anchor>
      <arglist>(const WString &amp;s, const WString &amp;format)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static WDate</type>
      <name>fromJulianDay</name>
      <anchorfile>classWt_1_1WDate.html</anchorfile>
      <anchor>a18041da6c27f01659607dac53e35f924</anchor>
      <arglist>(int jd)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static WDate</type>
      <name>currentDate</name>
      <anchorfile>classWt_1_1WDate.html</anchorfile>
      <anchor>a6221e680cd7b1f7d324f1f1932e4a3db</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static WDate</type>
      <name>currentServerDate</name>
      <anchorfile>classWt_1_1WDate.html</anchorfile>
      <anchor>a57a614e3408f39c70605027fe3e3f3f5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>isLeapYear</name>
      <anchorfile>classWt_1_1WDate.html</anchorfile>
      <anchor>a995d8ac5936d34f59526c4402b51f459</anchor>
      <arglist>(int year)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static WDate</type>
      <name>previousWeekday</name>
      <anchorfile>classWt_1_1WDate.html</anchorfile>
      <anchor>ac37c4d0974f98637aad83e1be2bd33f1</anchor>
      <arglist>(WDate &amp;d, int weekday)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Wt::WString</type>
      <name>shortDayName</name>
      <anchorfile>classWt_1_1WDate.html</anchorfile>
      <anchor>a342672cb868912660f60bb51ef99c6ca</anchor>
      <arglist>(int weekday, bool localized=true)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Wt::WString</type>
      <name>shortMonthName</name>
      <anchorfile>classWt_1_1WDate.html</anchorfile>
      <anchor>a1b1ec6bd1312f4259a6be9fc0fb6e73e</anchor>
      <arglist>(int month, bool localized=true)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Wt::WString</type>
      <name>longDayName</name>
      <anchorfile>classWt_1_1WDate.html</anchorfile>
      <anchor>ae5116093b098606acb7cbbeec2134e55</anchor>
      <arglist>(int weekday, bool localized=true)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Wt::WString</type>
      <name>longMonthName</name>
      <anchorfile>classWt_1_1WDate.html</anchorfile>
      <anchor>a42c593776dfe9feb0befbb2841047ab6</anchor>
      <arglist>(int month, bool localized=true)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WDateEdit</name>
    <filename>classWt_1_1WDateEdit.html</filename>
    <base>Wt::WLineEdit</base>
    <member kind="function">
      <type></type>
      <name>WDateEdit</name>
      <anchorfile>classWt_1_1WDateEdit.html</anchorfile>
      <anchor>a219efda1b60a976b01690c74a0a18a89</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDate</name>
      <anchorfile>classWt_1_1WDateEdit.html</anchorfile>
      <anchor>a58a1d033025773af02ce38511e02f005</anchor>
      <arglist>(const WDate &amp;date)</arglist>
    </member>
    <member kind="function">
      <type>WDate</type>
      <name>date</name>
      <anchorfile>classWt_1_1WDateEdit.html</anchorfile>
      <anchor>a226728d2290d5faba295f2bc2741335f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::shared_ptr&lt; WDateValidator &gt;</type>
      <name>dateValidator</name>
      <anchorfile>classWt_1_1WDateEdit.html</anchorfile>
      <anchor>acb844fb401f6f47a38773ab3066c80be</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFormat</name>
      <anchorfile>classWt_1_1WDateEdit.html</anchorfile>
      <anchor>a39d73de5258507815ed20b43b28df5a4</anchor>
      <arglist>(const WString &amp;format)</arglist>
    </member>
    <member kind="function">
      <type>WString</type>
      <name>format</name>
      <anchorfile>classWt_1_1WDateEdit.html</anchorfile>
      <anchor>a6d98a994940ac1422899d99b1b26a7ec</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBottom</name>
      <anchorfile>classWt_1_1WDateEdit.html</anchorfile>
      <anchor>a294ece27b84437eb4cd7c9da36e1265c</anchor>
      <arglist>(const WDate &amp;bottom)</arglist>
    </member>
    <member kind="function">
      <type>WDate</type>
      <name>bottom</name>
      <anchorfile>classWt_1_1WDateEdit.html</anchorfile>
      <anchor>a9b3a90d5a5e9e5bc766aad3707f61736</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTop</name>
      <anchorfile>classWt_1_1WDateEdit.html</anchorfile>
      <anchor>a68431831acb72c35f46d30b28e93e2a6</anchor>
      <arglist>(const WDate &amp;top)</arglist>
    </member>
    <member kind="function">
      <type>WDate</type>
      <name>top</name>
      <anchorfile>classWt_1_1WDateEdit.html</anchorfile>
      <anchor>a4d5f9d4ee5c1731317fd78ad986c3a93</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WCalendar *</type>
      <name>calendar</name>
      <anchorfile>classWt_1_1WDateEdit.html</anchorfile>
      <anchor>a1f8d65aad106a8b5bd559406a660b170</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setHidden</name>
      <anchorfile>classWt_1_1WDateEdit.html</anchorfile>
      <anchor>aafbb420b2e9cb897b60e23c9de082c86</anchor>
      <arglist>(bool hidden, const WAnimation &amp;animation=WAnimation()) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>load</name>
      <anchorfile>classWt_1_1WDateEdit.html</anchorfile>
      <anchor>a819751b4f495626f18db82e259c068d5</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>refresh</name>
      <anchorfile>classWt_1_1WDateEdit.html</anchorfile>
      <anchor>aa21f16cce03786edadaa7831177bf887</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>render</name>
      <anchorfile>classWt_1_1WDateEdit.html</anchorfile>
      <anchor>a7235a5f43c0e6586c7dbbfe7cbb17e88</anchor>
      <arglist>(WFlags&lt; RenderFlag &gt; flags) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>propagateSetEnabled</name>
      <anchorfile>classWt_1_1WDateEdit.html</anchorfile>
      <anchor>a14d0c94fd2c336c9d1b0652e67a1e6bd</anchor>
      <arglist>(bool enabled) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>setFromCalendar</name>
      <anchorfile>classWt_1_1WDateEdit.html</anchorfile>
      <anchor>aca06499d213abe4ed413a48fa9b02ef2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>setFromLineEdit</name>
      <anchorfile>classWt_1_1WDateEdit.html</anchorfile>
      <anchor>a4edfd972a929b93a73eb64a723c16eef</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WDatePicker</name>
    <filename>classWt_1_1WDatePicker.html</filename>
    <base>Wt::WCompositeWidget</base>
    <member kind="function">
      <type></type>
      <name>WDatePicker</name>
      <anchorfile>classWt_1_1WDatePicker.html</anchorfile>
      <anchor>a468273fa30e030018bb23ee5feac82de</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WDatePicker</name>
      <anchorfile>classWt_1_1WDatePicker.html</anchorfile>
      <anchor>af9b75e687d72251a4702ddaa45f6cc85</anchor>
      <arglist>(WLineEdit *forEdit)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WDatePicker</name>
      <anchorfile>classWt_1_1WDatePicker.html</anchorfile>
      <anchor>ad68a75fbd6870b47b58d9b40fb0e477b</anchor>
      <arglist>(std::unique_ptr&lt; WInteractWidget &gt; displayWidget, WLineEdit *forEdit)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WDatePicker</name>
      <anchorfile>classWt_1_1WDatePicker.html</anchorfile>
      <anchor>aca2558c09355ec7902b1da352385e912</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::shared_ptr&lt; WDateValidator &gt;</type>
      <name>dateValidator</name>
      <anchorfile>classWt_1_1WDatePicker.html</anchorfile>
      <anchor>af84ae93474176f4326d79831ade37dd2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFormat</name>
      <anchorfile>classWt_1_1WDatePicker.html</anchorfile>
      <anchor>a4eea10671eea698aea906802b7f67fde</anchor>
      <arglist>(const WString &amp;format)</arglist>
    </member>
    <member kind="function">
      <type>const WString &amp;</type>
      <name>format</name>
      <anchorfile>classWt_1_1WDatePicker.html</anchorfile>
      <anchor>a0b7c809909942da9da7c496509c5dc13</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WCalendar *</type>
      <name>calendar</name>
      <anchorfile>classWt_1_1WDatePicker.html</anchorfile>
      <anchor>a1b031904fc611b91d00bb47a04c1b1b2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WLineEdit *</type>
      <name>lineEdit</name>
      <anchorfile>classWt_1_1WDatePicker.html</anchorfile>
      <anchor>a08a1dd7cf98a5ac103093acf5d6bff33</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WInteractWidget *</type>
      <name>displayWidget</name>
      <anchorfile>classWt_1_1WDatePicker.html</anchorfile>
      <anchor>aa6a65df4aba99d42c0696d8e858805d4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WPopupWidget *</type>
      <name>popupWidget</name>
      <anchorfile>classWt_1_1WDatePicker.html</anchorfile>
      <anchor>a7ce0401c66fd786e58860429a0960b97</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WDate</type>
      <name>date</name>
      <anchorfile>classWt_1_1WDatePicker.html</anchorfile>
      <anchor>a4920f662e74bef3a2ac5400f6c876869</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDate</name>
      <anchorfile>classWt_1_1WDatePicker.html</anchorfile>
      <anchor>adc47d5a1b0faf43dfed193f22f93c559</anchor>
      <arglist>(const WDate &amp;date)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setEnabled</name>
      <anchorfile>classWt_1_1WDatePicker.html</anchorfile>
      <anchor>a3f18fb47c77a16d8e1772593eaef6d23</anchor>
      <arglist>(bool enabled)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setDisabled</name>
      <anchorfile>classWt_1_1WDatePicker.html</anchorfile>
      <anchor>a12cfa102021929003dfae380cd2450ae</anchor>
      <arglist>(bool disabled) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setHidden</name>
      <anchorfile>classWt_1_1WDatePicker.html</anchorfile>
      <anchor>a0828de29209d77f8a999eb501f85ef32</anchor>
      <arglist>(bool hidden, const WAnimation &amp;animation=WAnimation()) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBottom</name>
      <anchorfile>classWt_1_1WDatePicker.html</anchorfile>
      <anchor>a00d263440d85d63ad19cfc48482b2f1a</anchor>
      <arglist>(const WDate &amp;bottom)</arglist>
    </member>
    <member kind="function">
      <type>WDate</type>
      <name>bottom</name>
      <anchorfile>classWt_1_1WDatePicker.html</anchorfile>
      <anchor>a207ed44f37b49f5950a7fa60ffcec430</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTop</name>
      <anchorfile>classWt_1_1WDatePicker.html</anchorfile>
      <anchor>a772dd0063197bcea023be869dc550496</anchor>
      <arglist>(const WDate &amp;top)</arglist>
    </member>
    <member kind="function">
      <type>WDate</type>
      <name>top</name>
      <anchorfile>classWt_1_1WDatePicker.html</anchorfile>
      <anchor>ad1a767db268ea7893322e50bcd14ba1d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Signal &amp;</type>
      <name>changed</name>
      <anchorfile>classWt_1_1WDatePicker.html</anchorfile>
      <anchor>a9c379cc583e04509d3c50de3ee6aefdc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPopupVisible</name>
      <anchorfile>classWt_1_1WDatePicker.html</anchorfile>
      <anchor>a6fb616d7418b8af4ea70699630e8c733</anchor>
      <arglist>(bool visible)</arglist>
    </member>
    <member kind="function">
      <type>Signal &amp;</type>
      <name>popupClosed</name>
      <anchorfile>classWt_1_1WDatePicker.html</anchorfile>
      <anchor>a83f07c5bf02567bdce3559fbd725a451</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>render</name>
      <anchorfile>classWt_1_1WDatePicker.html</anchorfile>
      <anchor>a9f0cef02723bb4ad8ec3b299cf2a1e4d</anchor>
      <arglist>(WFlags&lt; RenderFlag &gt; flags) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WDateTime</name>
    <filename>classWt_1_1WDateTime.html</filename>
    <member kind="function">
      <type></type>
      <name>WDateTime</name>
      <anchorfile>classWt_1_1WDateTime.html</anchorfile>
      <anchor>a29901946960d23153fcf1467ee24a971</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WDateTime</name>
      <anchorfile>classWt_1_1WDateTime.html</anchorfile>
      <anchor>a3e4c80c57d9830aef554176d66ca5132</anchor>
      <arglist>(const WDate &amp;date)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WDateTime</name>
      <anchorfile>classWt_1_1WDateTime.html</anchorfile>
      <anchor>a88851754ee49eb44b3971191e6499c5f</anchor>
      <arglist>(const WDate &amp;date, const WTime &amp;time)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WDateTime</name>
      <anchorfile>classWt_1_1WDateTime.html</anchorfile>
      <anchor>ac5fae01fc8aa403a7c2a1875b1c3758d</anchor>
      <arglist>(const std::chrono::system_clock::time_point timepoint)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTime_t</name>
      <anchorfile>classWt_1_1WDateTime.html</anchorfile>
      <anchor>a791a4236d61e1787caf071040e7c6689</anchor>
      <arglist>(std::time_t time)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTimePoint</name>
      <anchorfile>classWt_1_1WDateTime.html</anchorfile>
      <anchor>a70843e1eacae3b0b3999d1afcbc802b5</anchor>
      <arglist>(const std::chrono::system_clock::time_point &amp;timepoint)</arglist>
    </member>
    <member kind="function">
      <type>WDateTime</type>
      <name>addMSecs</name>
      <anchorfile>classWt_1_1WDateTime.html</anchorfile>
      <anchor>a82a6daaed443d4e5c9120f17dcb92e02</anchor>
      <arglist>(int ms) const</arglist>
    </member>
    <member kind="function">
      <type>WDateTime</type>
      <name>addSecs</name>
      <anchorfile>classWt_1_1WDateTime.html</anchorfile>
      <anchor>a2c89488c8110a0d9dbaf3cd462430ac1</anchor>
      <arglist>(int s) const</arglist>
    </member>
    <member kind="function">
      <type>WDateTime</type>
      <name>addDays</name>
      <anchorfile>classWt_1_1WDateTime.html</anchorfile>
      <anchor>a1da50c035b600ca82deb191f099c865a</anchor>
      <arglist>(int ndays) const</arglist>
    </member>
    <member kind="function">
      <type>WDateTime</type>
      <name>addMonths</name>
      <anchorfile>classWt_1_1WDateTime.html</anchorfile>
      <anchor>a3265cb88ff635b85509c4122dd7eb292</anchor>
      <arglist>(int nmonths) const</arglist>
    </member>
    <member kind="function">
      <type>WDateTime</type>
      <name>addYears</name>
      <anchorfile>classWt_1_1WDateTime.html</anchorfile>
      <anchor>a412d8eba7c50de479a79a7de1a36ad8b</anchor>
      <arglist>(int nyears) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isNull</name>
      <anchorfile>classWt_1_1WDateTime.html</anchorfile>
      <anchor>aa2041a76a6206b6a09afce1b4ab66fef</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isValid</name>
      <anchorfile>classWt_1_1WDateTime.html</anchorfile>
      <anchor>ad0035a9d57b8dd48479c623907f52796</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDate</name>
      <anchorfile>classWt_1_1WDateTime.html</anchorfile>
      <anchor>a5059023135c5c8f2964e4944b38bfe61</anchor>
      <arglist>(const WDate &amp;date)</arglist>
    </member>
    <member kind="function">
      <type>const WDate</type>
      <name>date</name>
      <anchorfile>classWt_1_1WDateTime.html</anchorfile>
      <anchor>af2c242d76c16d6742e8a73e3e70de5e6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTime</name>
      <anchorfile>classWt_1_1WDateTime.html</anchorfile>
      <anchor>a8846e7a9987797b2fff6e6e22ea7fea3</anchor>
      <arglist>(const WTime &amp;time)</arglist>
    </member>
    <member kind="function">
      <type>const WTime</type>
      <name>time</name>
      <anchorfile>classWt_1_1WDateTime.html</anchorfile>
      <anchor>a7592dd4285bf204d7e6b542704de24a9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::time_t</type>
      <name>toTime_t</name>
      <anchorfile>classWt_1_1WDateTime.html</anchorfile>
      <anchor>a5c40513f1f92e93e3fbcbe3c92142032</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::chrono::system_clock::time_point</type>
      <name>toTimePoint</name>
      <anchorfile>classWt_1_1WDateTime.html</anchorfile>
      <anchor>a81e3f212ea7a6de94e75d18b6a5df775</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WLocalDateTime</type>
      <name>toLocalTime</name>
      <anchorfile>classWt_1_1WDateTime.html</anchorfile>
      <anchor>a94fc40589603a414424e7e836f36755b</anchor>
      <arglist>(const WLocale &amp;locale=WLocale::currentLocale()) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>secsTo</name>
      <anchorfile>classWt_1_1WDateTime.html</anchorfile>
      <anchor>aa210ec740d441e42800c87e68742b1a2</anchor>
      <arglist>(const WDateTime &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>daysTo</name>
      <anchorfile>classWt_1_1WDateTime.html</anchorfile>
      <anchor>a270ee4032a37b4f2a05d264a0fc3c014</anchor>
      <arglist>(const WDateTime &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>WString</type>
      <name>timeTo</name>
      <anchorfile>classWt_1_1WDateTime.html</anchorfile>
      <anchor>a69ebd895f54465f7ee07b2b5c1047ba9</anchor>
      <arglist>(const WDateTime &amp;other, std::chrono::seconds minValue=std::chrono::seconds(1)) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>classWt_1_1WDateTime.html</anchorfile>
      <anchor>acf4c82fa6c5b4119240830cf7c99b9c6</anchor>
      <arglist>(const WDateTime &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;=</name>
      <anchorfile>classWt_1_1WDateTime.html</anchorfile>
      <anchor>aab25dca8094ede7fdcf07bc3a97c038e</anchor>
      <arglist>(const WDateTime &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&gt;</name>
      <anchorfile>classWt_1_1WDateTime.html</anchorfile>
      <anchor>ad59deeb5209fce9a3f3fa38a0e03f697</anchor>
      <arglist>(const WDateTime &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&gt;=</name>
      <anchorfile>classWt_1_1WDateTime.html</anchorfile>
      <anchor>a120e295bc8301cd8ae33cc34fd3f266e</anchor>
      <arglist>(const WDateTime &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classWt_1_1WDateTime.html</anchorfile>
      <anchor>a70dd63586dee4518fe465fc476b6ba77</anchor>
      <arglist>(const WDateTime &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classWt_1_1WDateTime.html</anchorfile>
      <anchor>a0637402ee313c7764257e008f0e34516</anchor>
      <arglist>(const WDateTime &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>WString</type>
      <name>toString</name>
      <anchorfile>classWt_1_1WDateTime.html</anchorfile>
      <anchor>af7da637cae13983e742c681c8e1f88a4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WString</type>
      <name>toString</name>
      <anchorfile>classWt_1_1WDateTime.html</anchorfile>
      <anchor>aef31960362b6683446759b4648465458</anchor>
      <arglist>(const WString &amp;format, bool localized=true) const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static WDateTime</type>
      <name>fromString</name>
      <anchorfile>classWt_1_1WDateTime.html</anchorfile>
      <anchor>abbce10071edbed23ed425d73b46ad65a</anchor>
      <arglist>(const WString &amp;s)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static WDateTime</type>
      <name>fromString</name>
      <anchorfile>classWt_1_1WDateTime.html</anchorfile>
      <anchor>ae6025f1099ca81feae4288708b4130b3</anchor>
      <arglist>(const WString &amp;s, const WString &amp;format)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static WDateTime</type>
      <name>currentDateTime</name>
      <anchorfile>classWt_1_1WDateTime.html</anchorfile>
      <anchor>accc1d6a4815dab7c5e5332b494130178</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static WDateTime</type>
      <name>fromTime_t</name>
      <anchorfile>classWt_1_1WDateTime.html</anchorfile>
      <anchor>ab8fb88773f890b78b82f903b43e981b9</anchor>
      <arglist>(std::time_t seconds)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static WDateTime</type>
      <name>fromTimePoint</name>
      <anchorfile>classWt_1_1WDateTime.html</anchorfile>
      <anchor>ae1c72aeb7c39a1c1f7f2c7282fde1b52</anchor>
      <arglist>(const std::chrono::system_clock::time_point &amp;datetime)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WDateValidator</name>
    <filename>classWt_1_1WDateValidator.html</filename>
    <base>Wt::WValidator</base>
    <member kind="function">
      <type></type>
      <name>WDateValidator</name>
      <anchorfile>classWt_1_1WDateValidator.html</anchorfile>
      <anchor>adfa64c059f5325b78c9d69180de38c03</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WDateValidator</name>
      <anchorfile>classWt_1_1WDateValidator.html</anchorfile>
      <anchor>a8afd4291fd21987002daff8c10e87216</anchor>
      <arglist>(const WDate &amp;bottom, const WDate &amp;top)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WDateValidator</name>
      <anchorfile>classWt_1_1WDateValidator.html</anchorfile>
      <anchor>ab4b8a3a643bb67318a452c6494b03190</anchor>
      <arglist>(const WString &amp;format)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WDateValidator</name>
      <anchorfile>classWt_1_1WDateValidator.html</anchorfile>
      <anchor>ad7e0c135f004ed27650d47404d6d8c49</anchor>
      <arglist>(const WString &amp;format, const WDate &amp;bottom, const WDate &amp;top)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBottom</name>
      <anchorfile>classWt_1_1WDateValidator.html</anchorfile>
      <anchor>a65ef611c859119da8eb71f2020599077</anchor>
      <arglist>(const WDate &amp;bottom)</arglist>
    </member>
    <member kind="function">
      <type>const WDate &amp;</type>
      <name>bottom</name>
      <anchorfile>classWt_1_1WDateValidator.html</anchorfile>
      <anchor>a0d2de0d072b5ba7ead1bb5c2cc8da0d1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTop</name>
      <anchorfile>classWt_1_1WDateValidator.html</anchorfile>
      <anchor>ae6354b791d536a6de2d8f619f51e560f</anchor>
      <arglist>(const WDate &amp;top)</arglist>
    </member>
    <member kind="function">
      <type>const WDate &amp;</type>
      <name>top</name>
      <anchorfile>classWt_1_1WDateValidator.html</anchorfile>
      <anchor>af5437bbd314ce421e530ff7d5181c0aa</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFormat</name>
      <anchorfile>classWt_1_1WDateValidator.html</anchorfile>
      <anchor>acee1f3949840c056c60bf38e78b911e4</anchor>
      <arglist>(const WString &amp;format)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WString</type>
      <name>format</name>
      <anchorfile>classWt_1_1WDateValidator.html</anchorfile>
      <anchor>aeb8222f37f8adb5b607aa0bc81e71e51</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFormats</name>
      <anchorfile>classWt_1_1WDateValidator.html</anchorfile>
      <anchor>ab92f432fe9b9f63679df120d7f9838f1</anchor>
      <arglist>(const std::vector&lt; WString &gt; &amp;formats)</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; WString &gt; &amp;</type>
      <name>formats</name>
      <anchorfile>classWt_1_1WDateValidator.html</anchorfile>
      <anchor>acaae4f38b7e1867f372ed6b72a99b257</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Result</type>
      <name>validate</name>
      <anchorfile>classWt_1_1WDateValidator.html</anchorfile>
      <anchor>ad53168d2f8d14eb2e2bdd02e36b3b49e</anchor>
      <arglist>(const WString &amp;input) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInvalidNotADateText</name>
      <anchorfile>classWt_1_1WDateValidator.html</anchorfile>
      <anchor>a73be0b02ae9d2532a0b951ea51e4f053</anchor>
      <arglist>(const WString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>WString</type>
      <name>invalidNotADateText</name>
      <anchorfile>classWt_1_1WDateValidator.html</anchorfile>
      <anchor>a80fb932cd5c5e47fb40a35af1d9c5861</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInvalidTooEarlyText</name>
      <anchorfile>classWt_1_1WDateValidator.html</anchorfile>
      <anchor>ad1ffa06a037d203da6f7c6e121a066be</anchor>
      <arglist>(const WString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>WString</type>
      <name>invalidTooEarlyText</name>
      <anchorfile>classWt_1_1WDateValidator.html</anchorfile>
      <anchor>ab86f494dfa22dbbecc3c7e55b5e4e778</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInvalidTooLateText</name>
      <anchorfile>classWt_1_1WDateValidator.html</anchorfile>
      <anchor>a16559b0e658bf4211d9dc797455c930e</anchor>
      <arglist>(const WString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>WString</type>
      <name>invalidTooLateText</name>
      <anchorfile>classWt_1_1WDateValidator.html</anchorfile>
      <anchor>a20a0bf2feaf04729058061446281dba5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>javaScriptValidate</name>
      <anchorfile>classWt_1_1WDateValidator.html</anchorfile>
      <anchor>a8457be7c52751f6110bd40c3114a4614</anchor>
      <arglist>() const override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WDefaultLoadingIndicator</name>
    <filename>classWt_1_1WDefaultLoadingIndicator.html</filename>
    <base>Wt::WLoadingIndicator</base>
    <member kind="function">
      <type></type>
      <name>WDefaultLoadingIndicator</name>
      <anchorfile>classWt_1_1WDefaultLoadingIndicator.html</anchorfile>
      <anchor>a667089dada9be1ac765e0daa676f5e45</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setMessage</name>
      <anchorfile>classWt_1_1WDefaultLoadingIndicator.html</anchorfile>
      <anchor>a6f71295bf2f42d119a8e5f8f5341f7bc</anchor>
      <arglist>(const WString &amp;text) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WDialog</name>
    <filename>classWt_1_1WDialog.html</filename>
    <base>Wt::WPopupWidget</base>
    <member kind="typedef">
      <type>DialogCode</type>
      <name>Code</name>
      <anchorfile>classWt_1_1WDialog.html</anchorfile>
      <anchor>a92f80e0f2b73023f7527aaea79fa5aa2</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WDialog</name>
      <anchorfile>classWt_1_1WDialog.html</anchorfile>
      <anchor>a943574bdb999dafd3b66fc0d0cad3ed2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WDialog</name>
      <anchorfile>classWt_1_1WDialog.html</anchorfile>
      <anchor>af9863b8a9edb989c54c035c283d22898</anchor>
      <arglist>(const WString &amp;windowTitle)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WDialog</name>
      <anchorfile>classWt_1_1WDialog.html</anchorfile>
      <anchor>a97fa6bfc8c31a3bf98284ad66b2df738</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setWindowTitle</name>
      <anchorfile>classWt_1_1WDialog.html</anchorfile>
      <anchor>ae0923afc12895002f30b8ee12ab91aae</anchor>
      <arglist>(const WString &amp;title)</arglist>
    </member>
    <member kind="function">
      <type>WString</type>
      <name>windowTitle</name>
      <anchorfile>classWt_1_1WDialog.html</anchorfile>
      <anchor>a77af782ed0904f49f0c850c95c797f61</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTitleBarEnabled</name>
      <anchorfile>classWt_1_1WDialog.html</anchorfile>
      <anchor>ab8ae8763648de12a67ada4b8237154a9</anchor>
      <arglist>(bool enabled)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isTitleBarEnabled</name>
      <anchorfile>classWt_1_1WDialog.html</anchorfile>
      <anchor>a37e4f1341d15aadfd4b7e2895aae0b55</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WContainerWidget *</type>
      <name>titleBar</name>
      <anchorfile>classWt_1_1WDialog.html</anchorfile>
      <anchor>ae016a75d11e22888f21eeec62c9374c8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WContainerWidget *</type>
      <name>contents</name>
      <anchorfile>classWt_1_1WDialog.html</anchorfile>
      <anchor>afdd49e5f71f65ea48b6fa312d820cbbd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WContainerWidget *</type>
      <name>footer</name>
      <anchorfile>classWt_1_1WDialog.html</anchorfile>
      <anchor>ace351a23e52d8e6ecaaba75e53f0b9b9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>DialogCode</type>
      <name>exec</name>
      <anchorfile>classWt_1_1WDialog.html</anchorfile>
      <anchor>a223f8635e38a6e9809b867f247b2185f</anchor>
      <arglist>(const WAnimation &amp;animation=WAnimation())</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>done</name>
      <anchorfile>classWt_1_1WDialog.html</anchorfile>
      <anchor>a8d0a8725d03e5d7d144ef015983a8d08</anchor>
      <arglist>(DialogCode r)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>accept</name>
      <anchorfile>classWt_1_1WDialog.html</anchorfile>
      <anchor>afab6f75ebb2d2970ebe0bbf1cf19f288</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>reject</name>
      <anchorfile>classWt_1_1WDialog.html</anchorfile>
      <anchor>afcff2ea14c4ae79b2fc7bac1a86b0062</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>rejectWhenEscapePressed</name>
      <anchorfile>classWt_1_1WDialog.html</anchorfile>
      <anchor>afbea0405a68e8700091f3b8d548e055b</anchor>
      <arglist>(bool enable=true)</arglist>
    </member>
    <member kind="function">
      <type>Signal&lt; DialogCode &gt; &amp;</type>
      <name>finished</name>
      <anchorfile>classWt_1_1WDialog.html</anchorfile>
      <anchor>ae7f3991e5adf17ec4e9e93fd8a3a2f79</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>DialogCode</type>
      <name>result</name>
      <anchorfile>classWt_1_1WDialog.html</anchorfile>
      <anchor>ad7e883b5293d06bf3c616824440c46c4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setModal</name>
      <anchorfile>classWt_1_1WDialog.html</anchorfile>
      <anchor>acc8c9734f33b405bf0a706fe2f6e4e05</anchor>
      <arglist>(bool modal)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isModal</name>
      <anchorfile>classWt_1_1WDialog.html</anchorfile>
      <anchor>aa891e33ee66b53ef64ab02fd61a88375</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setResizable</name>
      <anchorfile>classWt_1_1WDialog.html</anchorfile>
      <anchor>a0a3517bffbd049b988e80bb85ae18c46</anchor>
      <arglist>(bool resizable)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>resizable</name>
      <anchorfile>classWt_1_1WDialog.html</anchorfile>
      <anchor>ad9204eee3b7caba213b27b60e76bf1bf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMovable</name>
      <anchorfile>classWt_1_1WDialog.html</anchorfile>
      <anchor>afbccf557a0343591f3087c9a0a9b7051</anchor>
      <arglist>(bool movable)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>movable</name>
      <anchorfile>classWt_1_1WDialog.html</anchorfile>
      <anchor>a29fc77663d3de9def8a7f17e58238cb3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setClosable</name>
      <anchorfile>classWt_1_1WDialog.html</anchorfile>
      <anchor>afe7c5f57ddb5fd1bc67334c931401e98</anchor>
      <arglist>(bool closable)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>closable</name>
      <anchorfile>classWt_1_1WDialog.html</anchorfile>
      <anchor>ac3fef5cec7c3a0c475adb92da20542fa</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAutoFocus</name>
      <anchorfile>classWt_1_1WDialog.html</anchorfile>
      <anchor>a2cf1a5d6ccde9bbea734bda389fbd5c8</anchor>
      <arglist>(bool enable)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setHidden</name>
      <anchorfile>classWt_1_1WDialog.html</anchorfile>
      <anchor>a8155b80a5f6dee3e0285a43ed01801b0</anchor>
      <arglist>(bool hidden, const WAnimation &amp;animation=WAnimation()) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>positionAt</name>
      <anchorfile>classWt_1_1WDialog.html</anchorfile>
      <anchor>a98e5c6e3df186b0954253c4575c06b12</anchor>
      <arglist>(const WWidget *widget, Orientation orientation=Orientation::Vertical) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>positionAt</name>
      <anchorfile>classWt_1_1WDialog.html</anchorfile>
      <anchor>a7dd5be946b39806805285cfa7416757f</anchor>
      <arglist>(const Wt::WMouseEvent &amp;ev)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>raiseToFront</name>
      <anchorfile>classWt_1_1WDialog.html</anchorfile>
      <anchor>a113dd08d646491476342e5293c6e36f9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setMinimumSize</name>
      <anchorfile>classWt_1_1WDialog.html</anchorfile>
      <anchor>a82524fa5d6f77b2cd5b53eb9ebfdad1b</anchor>
      <arglist>(const WLength &amp;width, const WLength &amp;height) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setMaximumSize</name>
      <anchorfile>classWt_1_1WDialog.html</anchorfile>
      <anchor>aaa2867c0433a78f9c4078d8697376001</anchor>
      <arglist>(const WLength &amp;width, const WLength &amp;height) override</arglist>
    </member>
    <member kind="function">
      <type>JSignal&lt; int, int &gt; &amp;</type>
      <name>resized</name>
      <anchorfile>classWt_1_1WDialog.html</anchorfile>
      <anchor>a0c258ff49273242b7a43e4a75ac93c3b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>JSignal&lt; int, int &gt; &amp;</type>
      <name>moved</name>
      <anchorfile>classWt_1_1WDialog.html</anchorfile>
      <anchor>a139707b3b05f02887ee6257fc244c31d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EventSignal&lt; WTouchEvent &gt; &amp;</type>
      <name>touchStarted</name>
      <anchorfile>classWt_1_1WDialog.html</anchorfile>
      <anchor>acf710992a699db1b7fc1a7fdbe00cafa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EventSignal&lt; WTouchEvent &gt; &amp;</type>
      <name>touchEnded</name>
      <anchorfile>classWt_1_1WDialog.html</anchorfile>
      <anchor>a23597fc23d1d46980283da3fe94a3d5e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EventSignal&lt; WTouchEvent &gt; &amp;</type>
      <name>touchMoved</name>
      <anchorfile>classWt_1_1WDialog.html</anchorfile>
      <anchor>a9a8ce1d7a646ca29cf4d5508739b6ff1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EventSignal&lt; WKeyEvent &gt; &amp;</type>
      <name>keyWentDown</name>
      <anchorfile>classWt_1_1WDialog.html</anchorfile>
      <anchor>a7da2f1f110190cc345b34ba4a6f35301</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EventSignal&lt; WKeyEvent &gt; &amp;</type>
      <name>keyPressed</name>
      <anchorfile>classWt_1_1WDialog.html</anchorfile>
      <anchor>af9b775cbc3c600b583a1135513284f33</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EventSignal&lt; WKeyEvent &gt; &amp;</type>
      <name>keyWentUp</name>
      <anchorfile>classWt_1_1WDialog.html</anchorfile>
      <anchor>a92b8bc34a92d942880a47b6df8a6596c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EventSignal &amp;</type>
      <name>enterPressed</name>
      <anchorfile>classWt_1_1WDialog.html</anchorfile>
      <anchor>ab9c6b71671e3fc5e3de27e51de197d47</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EventSignal &amp;</type>
      <name>escapePressed</name>
      <anchorfile>classWt_1_1WDialog.html</anchorfile>
      <anchor>a672a6f507b3ad1c1270efc5d62ef64dc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>render</name>
      <anchorfile>classWt_1_1WDialog.html</anchorfile>
      <anchor>a5be39956150204ff46ffae1139e7c886</anchor>
      <arglist>(WFlags&lt; RenderFlag &gt; flags) override</arglist>
    </member>
    <member kind="function">
      <type>EventSignal&lt; WKeyEvent &gt; &amp;</type>
      <name>keyWentDown</name>
      <anchorfile>classWt_1_1WDialog.html</anchorfile>
      <anchor>a7da2f1f110190cc345b34ba4a6f35301</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EventSignal&lt; WKeyEvent &gt; &amp;</type>
      <name>keyPressed</name>
      <anchorfile>classWt_1_1WDialog.html</anchorfile>
      <anchor>af9b775cbc3c600b583a1135513284f33</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EventSignal&lt; WKeyEvent &gt; &amp;</type>
      <name>keyWentUp</name>
      <anchorfile>classWt_1_1WDialog.html</anchorfile>
      <anchor>a92b8bc34a92d942880a47b6df8a6596c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EventSignal &amp;</type>
      <name>enterPressed</name>
      <anchorfile>classWt_1_1WDialog.html</anchorfile>
      <anchor>ab9c6b71671e3fc5e3de27e51de197d47</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EventSignal &amp;</type>
      <name>escapePressed</name>
      <anchorfile>classWt_1_1WDialog.html</anchorfile>
      <anchor>a672a6f507b3ad1c1270efc5d62ef64dc</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WDoubleSpinBox</name>
    <filename>classWt_1_1WDoubleSpinBox.html</filename>
    <base>Wt::WAbstractSpinBox</base>
    <member kind="function">
      <type></type>
      <name>WDoubleSpinBox</name>
      <anchorfile>classWt_1_1WDoubleSpinBox.html</anchorfile>
      <anchor>ad45dad3187c986d755194872264897a3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMinimum</name>
      <anchorfile>classWt_1_1WDoubleSpinBox.html</anchorfile>
      <anchor>adafc3f523fcdfcbd6fe3ca46848b5973</anchor>
      <arglist>(double minimum)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>minimum</name>
      <anchorfile>classWt_1_1WDoubleSpinBox.html</anchorfile>
      <anchor>a4c88fd063cc9f68a5eb4350781d109e3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMaximum</name>
      <anchorfile>classWt_1_1WDoubleSpinBox.html</anchorfile>
      <anchor>aea02ba3a493ed8ccb9ca3ac02829b966</anchor>
      <arglist>(double maximum)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>maximum</name>
      <anchorfile>classWt_1_1WDoubleSpinBox.html</anchorfile>
      <anchor>ac738a67dca4f7738310c9d6a67ca2b97</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRange</name>
      <anchorfile>classWt_1_1WDoubleSpinBox.html</anchorfile>
      <anchor>aa9f1380843ef7cad54e2765e0eb9e9f4</anchor>
      <arglist>(double minimum, double maximum)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSingleStep</name>
      <anchorfile>classWt_1_1WDoubleSpinBox.html</anchorfile>
      <anchor>a5e7e23af6f005cfe4de928a68ae0f1df</anchor>
      <arglist>(double step)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>singleStep</name>
      <anchorfile>classWt_1_1WDoubleSpinBox.html</anchorfile>
      <anchor>ad51bf4d6b1fda88ed5680ffe1faae59b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDecimals</name>
      <anchorfile>classWt_1_1WDoubleSpinBox.html</anchorfile>
      <anchor>ab01cba50c3d713aeba44bdb5ec4b5541</anchor>
      <arglist>(int precision)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>decimals</name>
      <anchorfile>classWt_1_1WDoubleSpinBox.html</anchorfile>
      <anchor>a2c7db55fe2b454bd7c03dbe5a52e6924</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setValue</name>
      <anchorfile>classWt_1_1WDoubleSpinBox.html</anchorfile>
      <anchor>a2cf9b42de8747f538fe1f532b524d69f</anchor>
      <arglist>(double value)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>value</name>
      <anchorfile>classWt_1_1WDoubleSpinBox.html</anchorfile>
      <anchor>ac5ee76fd583a08f85ef49807862a7c18</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Signal&lt; double &gt; &amp;</type>
      <name>valueChanged</name>
      <anchorfile>classWt_1_1WDoubleSpinBox.html</anchorfile>
      <anchor>af0d2381ce51006c6c0dd4ce05ff2ff01</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>refresh</name>
      <anchorfile>classWt_1_1WDoubleSpinBox.html</anchorfile>
      <anchor>ad783231bfaddb94bf786596cc4cf2784</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>render</name>
      <anchorfile>classWt_1_1WDoubleSpinBox.html</anchorfile>
      <anchor>a70d417534adb049dfba267cc3037dce8</anchor>
      <arglist>(WFlags&lt; RenderFlag &gt; flags) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WDoubleValidator</name>
    <filename>classWt_1_1WDoubleValidator.html</filename>
    <base>Wt::WValidator</base>
    <member kind="function">
      <type></type>
      <name>WDoubleValidator</name>
      <anchorfile>classWt_1_1WDoubleValidator.html</anchorfile>
      <anchor>a6f862044b4837b1448ccaad2a047aa71</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WDoubleValidator</name>
      <anchorfile>classWt_1_1WDoubleValidator.html</anchorfile>
      <anchor>a4f18c77e8d50dd29b0ee607be4743cfd</anchor>
      <arglist>(double minimum, double maximum)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>bottom</name>
      <anchorfile>classWt_1_1WDoubleValidator.html</anchorfile>
      <anchor>a0826da378e318d140b5897043152825f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBottom</name>
      <anchorfile>classWt_1_1WDoubleValidator.html</anchorfile>
      <anchor>a520fe2f7859670b0c30144dbc4990e98</anchor>
      <arglist>(double bottom)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>top</name>
      <anchorfile>classWt_1_1WDoubleValidator.html</anchorfile>
      <anchor>ae3df9aeb1b9729f79de6a58751debdf3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTop</name>
      <anchorfile>classWt_1_1WDoubleValidator.html</anchorfile>
      <anchor>a931cc4c5d0409093f4a6fd8ab023ee73</anchor>
      <arglist>(double top)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setRange</name>
      <anchorfile>classWt_1_1WDoubleValidator.html</anchorfile>
      <anchor>a160f579d7884d02786a1cc36ec3ecca1</anchor>
      <arglist>(double bottom, double top)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Result</type>
      <name>validate</name>
      <anchorfile>classWt_1_1WDoubleValidator.html</anchorfile>
      <anchor>aef6c7880e51284b3983002ea92c10442</anchor>
      <arglist>(const WString &amp;input) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInvalidNotANumberText</name>
      <anchorfile>classWt_1_1WDoubleValidator.html</anchorfile>
      <anchor>a86e8f0e07b6c861af2e656575a329d47</anchor>
      <arglist>(const WString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>WString</type>
      <name>invalidNotANumberText</name>
      <anchorfile>classWt_1_1WDoubleValidator.html</anchorfile>
      <anchor>a15491739050574c05f5b319165665105</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInvalidTooSmallText</name>
      <anchorfile>classWt_1_1WDoubleValidator.html</anchorfile>
      <anchor>a119b5f1c2396f8d595c2607e76d27b1a</anchor>
      <arglist>(const WString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>WString</type>
      <name>invalidTooSmallText</name>
      <anchorfile>classWt_1_1WDoubleValidator.html</anchorfile>
      <anchor>a5bbafb3392d81270c7414b77cc0787af</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInvalidTooLargeText</name>
      <anchorfile>classWt_1_1WDoubleValidator.html</anchorfile>
      <anchor>a6c3fa94752583d7e2de640cf6b91cef7</anchor>
      <arglist>(const WString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>WString</type>
      <name>invalidTooLargeText</name>
      <anchorfile>classWt_1_1WDoubleValidator.html</anchorfile>
      <anchor>ae52b034598040f6eb8eaf4c01b7fca02</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setIgnoreTrailingSpaces</name>
      <anchorfile>classWt_1_1WDoubleValidator.html</anchorfile>
      <anchor>a405d4c01e0ad315c5be716d8288c1d32</anchor>
      <arglist>(bool b)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ignoreTrailingSpaces</name>
      <anchorfile>classWt_1_1WDoubleValidator.html</anchorfile>
      <anchor>ab3d482575f464b51309379b6119ad7ac</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>javaScriptValidate</name>
      <anchorfile>classWt_1_1WDoubleValidator.html</anchorfile>
      <anchor>a85899615119d7b77b11dd566e46866e1</anchor>
      <arglist>() const override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WDropEvent</name>
    <filename>classWt_1_1WDropEvent.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>OriginalEventType</name>
      <anchorfile>classWt_1_1WDropEvent.html</anchorfile>
      <anchor>a051c26128cc98f15c286939c81ea247b</anchor>
      <arglist></arglist>
      <enumvalue file="classWt_1_1WDropEvent.html" anchor="a051c26128cc98f15c286939c81ea247baf2a47c6809d88e175dade0ef7b16aa13">Mouse</enumvalue>
      <enumvalue file="classWt_1_1WDropEvent.html" anchor="a051c26128cc98f15c286939c81ea247baf0f31c9700c6b10d8a20dc487b2ae6a8">Touch</enumvalue>
    </member>
    <member kind="function">
      <type></type>
      <name>WDropEvent</name>
      <anchorfile>classWt_1_1WDropEvent.html</anchorfile>
      <anchor>a392415b39dbff17302e63ba344894ff3</anchor>
      <arglist>(WObject *source, const std::string &amp;mimeType, const WMouseEvent &amp;mouseEvent)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WDropEvent</name>
      <anchorfile>classWt_1_1WDropEvent.html</anchorfile>
      <anchor>ac4a79123aaf34e3d4c2e77b314557cb3</anchor>
      <arglist>(WObject *source, const std::string &amp;mimeType, const WTouchEvent &amp;touchEvent)</arglist>
    </member>
    <member kind="function">
      <type>WObject *</type>
      <name>source</name>
      <anchorfile>classWt_1_1WDropEvent.html</anchorfile>
      <anchor>aa3979c47968c99b3bb81d0d3574acb38</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>mimeType</name>
      <anchorfile>classWt_1_1WDropEvent.html</anchorfile>
      <anchor>a7e8dace51ed22a3d7c9434c4cadbd14b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const WMouseEvent *</type>
      <name>mouseEvent</name>
      <anchorfile>classWt_1_1WDropEvent.html</anchorfile>
      <anchor>a5718772ee45814801f3b131ae36817f8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const WTouchEvent *</type>
      <name>touchEvent</name>
      <anchorfile>classWt_1_1WDropEvent.html</anchorfile>
      <anchor>aa915108e8e3c23159837302ba07ae666</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>OriginalEventType</type>
      <name>originalEventType</name>
      <anchorfile>classWt_1_1WDropEvent.html</anchorfile>
      <anchor>ad66d040d17a4b6d905f4df03c2bfae36</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Dbo::weak_ptr</name>
    <filename>classWt_1_1Dbo_1_1weak__ptr.html</filename>
    <member kind="function">
      <type></type>
      <name>weak_ptr</name>
      <anchorfile>classWt_1_1Dbo_1_1weak__ptr.html</anchorfile>
      <anchor>a5830deaafebce2dc453956b99b94281b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>weak_ptr</name>
      <anchorfile>classWt_1_1Dbo_1_1weak__ptr.html</anchorfile>
      <anchor>a03e7180764b62d73309971553952736e</anchor>
      <arglist>(const weak_ptr&lt; C &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>weak_ptr</name>
      <anchorfile>classWt_1_1Dbo_1_1weak__ptr.html</anchorfile>
      <anchor>ab755c3791bca4680c3e6454f079ac477</anchor>
      <arglist>(weak_ptr&lt; C &gt; &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classWt_1_1Dbo_1_1weak__ptr.html</anchorfile>
      <anchor>abe38689ff11f3d4b73b34b515b1175b8</anchor>
      <arglist>(C *obj=0)</arglist>
    </member>
    <member kind="function">
      <type>weak_ptr&lt; C &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1Dbo_1_1weak__ptr.html</anchorfile>
      <anchor>a9f8ff78c10a70d62cb69c2357dfc0ca2</anchor>
      <arglist>(const weak_ptr&lt; C &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>weak_ptr&lt; C &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1Dbo_1_1weak__ptr.html</anchorfile>
      <anchor>a41b15065678c877595088bd9236009f2</anchor>
      <arglist>(weak_ptr&lt; C &gt; &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>weak_ptr&lt; C &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1Dbo_1_1weak__ptr.html</anchorfile>
      <anchor>a27782164182883bc260bbf7a8307942f</anchor>
      <arglist>(const ptr&lt; C &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>const C *</type>
      <name>operator-&gt;</name>
      <anchorfile>classWt_1_1Dbo_1_1weak__ptr.html</anchorfile>
      <anchor>a546c1b6a2d9bc7216d562c5b9c46822e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>C *</type>
      <name>modify</name>
      <anchorfile>classWt_1_1Dbo_1_1weak__ptr.html</anchorfile>
      <anchor>a9085395169ab6fe63a71eb985bcf4c1f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classWt_1_1Dbo_1_1weak__ptr.html</anchorfile>
      <anchor>a7b59413f2a00acff59bd3e1241f44d8b</anchor>
      <arglist>(const weak_ptr&lt; C &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classWt_1_1Dbo_1_1weak__ptr.html</anchorfile>
      <anchor>a82e95dc71766536dbb93fad8215ea3ae</anchor>
      <arglist>(const ptr&lt; C &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classWt_1_1Dbo_1_1weak__ptr.html</anchorfile>
      <anchor>a265c250624c260c22b2b669835616650</anchor>
      <arglist>(const weak_ptr&lt; C &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classWt_1_1Dbo_1_1weak__ptr.html</anchorfile>
      <anchor>a58471bfecc68c0994d82fb06213c9dff</anchor>
      <arglist>(const ptr&lt; C &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator bool</name>
      <anchorfile>classWt_1_1Dbo_1_1weak__ptr.html</anchorfile>
      <anchor>a4097fb48c660419468ff3d85a11b1acf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator ptr&lt; C &gt;</name>
      <anchorfile>classWt_1_1Dbo_1_1weak__ptr.html</anchorfile>
      <anchor>a1bea8c68f2ade03cfdfa273ca0e625b0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ptr&lt; C &gt;</type>
      <name>query</name>
      <anchorfile>classWt_1_1Dbo_1_1weak__ptr.html</anchorfile>
      <anchor>a320e84142ca80183d10caa1610531f48</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ptr&lt; C &gt;</type>
      <name>lock</name>
      <anchorfile>classWt_1_1Dbo_1_1weak__ptr.html</anchorfile>
      <anchor>abb35da83d992a879ed8b422b33d90177</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>dbo_traits&lt; C &gt;::IdType</type>
      <name>id</name>
      <anchorfile>classWt_1_1Dbo_1_1weak__ptr.html</anchorfile>
      <anchor>a97ee067804cef599d89160e6c936a8b9</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>weak_ptr&lt; C &gt;</name>
    <filename>classWt_1_1Dbo_1_1weak__ptr.html</filename>
    <member kind="function">
      <type></type>
      <name>weak_ptr</name>
      <anchorfile>classWt_1_1Dbo_1_1weak__ptr.html</anchorfile>
      <anchor>a5830deaafebce2dc453956b99b94281b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>weak_ptr</name>
      <anchorfile>classWt_1_1Dbo_1_1weak__ptr.html</anchorfile>
      <anchor>a03e7180764b62d73309971553952736e</anchor>
      <arglist>(const weak_ptr&lt; C &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>weak_ptr</name>
      <anchorfile>classWt_1_1Dbo_1_1weak__ptr.html</anchorfile>
      <anchor>ab755c3791bca4680c3e6454f079ac477</anchor>
      <arglist>(weak_ptr&lt; C &gt; &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classWt_1_1Dbo_1_1weak__ptr.html</anchorfile>
      <anchor>abe38689ff11f3d4b73b34b515b1175b8</anchor>
      <arglist>(C *obj=0)</arglist>
    </member>
    <member kind="function">
      <type>weak_ptr&lt; C &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1Dbo_1_1weak__ptr.html</anchorfile>
      <anchor>a9f8ff78c10a70d62cb69c2357dfc0ca2</anchor>
      <arglist>(const weak_ptr&lt; C &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>weak_ptr&lt; C &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1Dbo_1_1weak__ptr.html</anchorfile>
      <anchor>a41b15065678c877595088bd9236009f2</anchor>
      <arglist>(weak_ptr&lt; C &gt; &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>weak_ptr&lt; C &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1Dbo_1_1weak__ptr.html</anchorfile>
      <anchor>a27782164182883bc260bbf7a8307942f</anchor>
      <arglist>(const ptr&lt; C &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>const C *</type>
      <name>operator-&gt;</name>
      <anchorfile>classWt_1_1Dbo_1_1weak__ptr.html</anchorfile>
      <anchor>a546c1b6a2d9bc7216d562c5b9c46822e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>C *</type>
      <name>modify</name>
      <anchorfile>classWt_1_1Dbo_1_1weak__ptr.html</anchorfile>
      <anchor>a9085395169ab6fe63a71eb985bcf4c1f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classWt_1_1Dbo_1_1weak__ptr.html</anchorfile>
      <anchor>a7b59413f2a00acff59bd3e1241f44d8b</anchor>
      <arglist>(const weak_ptr&lt; C &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classWt_1_1Dbo_1_1weak__ptr.html</anchorfile>
      <anchor>a82e95dc71766536dbb93fad8215ea3ae</anchor>
      <arglist>(const ptr&lt; C &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classWt_1_1Dbo_1_1weak__ptr.html</anchorfile>
      <anchor>a265c250624c260c22b2b669835616650</anchor>
      <arglist>(const weak_ptr&lt; C &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classWt_1_1Dbo_1_1weak__ptr.html</anchorfile>
      <anchor>a58471bfecc68c0994d82fb06213c9dff</anchor>
      <arglist>(const ptr&lt; C &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator bool</name>
      <anchorfile>classWt_1_1Dbo_1_1weak__ptr.html</anchorfile>
      <anchor>a4097fb48c660419468ff3d85a11b1acf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator ptr&lt; C &gt;</name>
      <anchorfile>classWt_1_1Dbo_1_1weak__ptr.html</anchorfile>
      <anchor>a1bea8c68f2ade03cfdfa273ca0e625b0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ptr&lt; C &gt;</type>
      <name>query</name>
      <anchorfile>classWt_1_1Dbo_1_1weak__ptr.html</anchorfile>
      <anchor>a320e84142ca80183d10caa1610531f48</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ptr&lt; C &gt;</type>
      <name>lock</name>
      <anchorfile>classWt_1_1Dbo_1_1weak__ptr.html</anchorfile>
      <anchor>abb35da83d992a879ed8b422b33d90177</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>dbo_traits&lt; C &gt;::IdType</type>
      <name>id</name>
      <anchorfile>classWt_1_1Dbo_1_1weak__ptr.html</anchorfile>
      <anchor>a97ee067804cef599d89160e6c936a8b9</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WEnvironment</name>
    <filename>classWt_1_1WEnvironment.html</filename>
    <member kind="typedef">
      <type>std::map&lt; std::string, std::string &gt;</type>
      <name>CookieMap</name>
      <anchorfile>classWt_1_1WEnvironment.html</anchorfile>
      <anchor>a163671f35f1080badcb791a826f5fadd</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>const Http::ParameterMap &amp;</type>
      <name>getParameterMap</name>
      <anchorfile>classWt_1_1WEnvironment.html</anchorfile>
      <anchor>a200031ac3a029704fe1bafddb496cc3f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const Http::ParameterValues &amp;</type>
      <name>getParameterValues</name>
      <anchorfile>classWt_1_1WEnvironment.html</anchorfile>
      <anchor>a38db6641fb725146b2c1498f122c368f</anchor>
      <arglist>(const std::string &amp;name) const</arglist>
    </member>
    <member kind="function">
      <type>const std::string *</type>
      <name>getParameter</name>
      <anchorfile>classWt_1_1WEnvironment.html</anchorfile>
      <anchor>aec41080d53f11bfe1fb363fd4e577636</anchor>
      <arglist>(const std::string &amp;name) const</arglist>
    </member>
    <member kind="function">
      <type>const CookieMap &amp;</type>
      <name>cookies</name>
      <anchorfile>classWt_1_1WEnvironment.html</anchorfile>
      <anchor>a9f646d1d5e53e13ffb4169d563cd4716</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::string *</type>
      <name>getCookie</name>
      <anchorfile>classWt_1_1WEnvironment.html</anchorfile>
      <anchor>ae2fd873531a06d59c7021a1de1fc3fe0</anchor>
      <arglist>(const std::string &amp;cookieName) const</arglist>
    </member>
    <member kind="function">
      <type>const std::string</type>
      <name>headerValue</name>
      <anchorfile>classWt_1_1WEnvironment.html</anchorfile>
      <anchor>a6558368112dd7ccbbb23eacb1aed11b4</anchor>
      <arglist>(const std::string &amp;field) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>supportsCookies</name>
      <anchorfile>classWt_1_1WEnvironment.html</anchorfile>
      <anchor>a9f71866d88ac3f00ae0fa9183d0e2600</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>javaScript</name>
      <anchorfile>classWt_1_1WEnvironment.html</anchorfile>
      <anchor>a27d95d86838fb5bfcbc171809dca7e48</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ajax</name>
      <anchorfile>classWt_1_1WEnvironment.html</anchorfile>
      <anchor>a18fb3679dc328a64cb90a2eb2c092722</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>webGL</name>
      <anchorfile>classWt_1_1WEnvironment.html</anchorfile>
      <anchor>a5b7ef1d77a68e9bb2f531974539bd4c9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>screenWidth</name>
      <anchorfile>classWt_1_1WEnvironment.html</anchorfile>
      <anchor>ad5b8c09e2fc986310c1b2a3b32888267</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>screenHeight</name>
      <anchorfile>classWt_1_1WEnvironment.html</anchorfile>
      <anchor>a8f995add84b2f28c916453a1fbb0e9fb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>dpiScale</name>
      <anchorfile>classWt_1_1WEnvironment.html</anchorfile>
      <anchor>a9f1a553a3575cca16da64dc6f2b51f16</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const WLocale &amp;</type>
      <name>locale</name>
      <anchorfile>classWt_1_1WEnvironment.html</anchorfile>
      <anchor>ab1930441b0ee774f0ffcdc9910a01a81</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::chrono::minutes</type>
      <name>timeZoneOffset</name>
      <anchorfile>classWt_1_1WEnvironment.html</anchorfile>
      <anchor>abe9ace6cd3b5c61e2d20cea5ef493e6c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>timeZoneName</name>
      <anchorfile>classWt_1_1WEnvironment.html</anchorfile>
      <anchor>ab429100601e457420dba6c436b97ba20</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>hostName</name>
      <anchorfile>classWt_1_1WEnvironment.html</anchorfile>
      <anchor>a3b8b1b38dd8c079d41b732356379ea8f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>urlScheme</name>
      <anchorfile>classWt_1_1WEnvironment.html</anchorfile>
      <anchor>acf00b114b5e0a0ace32e382aa4ee23ee</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>userAgent</name>
      <anchorfile>classWt_1_1WEnvironment.html</anchorfile>
      <anchor>a64c6dae101d4c5bf5e6ffd111a101202</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>referer</name>
      <anchorfile>classWt_1_1WEnvironment.html</anchorfile>
      <anchor>aa7abf89ebd352c7c1d5dcb1cc7a0bf1f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>accept</name>
      <anchorfile>classWt_1_1WEnvironment.html</anchorfile>
      <anchor>afff633321592a2c7e4bc6ccc543ed01b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>agentIsSpiderBot</name>
      <anchorfile>classWt_1_1WEnvironment.html</anchorfile>
      <anchor>ad7dd42fefc4e318b6724c71b3a79b487</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>serverSignature</name>
      <anchorfile>classWt_1_1WEnvironment.html</anchorfile>
      <anchor>a3470589906ac2589b82e59bd212b8fbc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>serverSoftware</name>
      <anchorfile>classWt_1_1WEnvironment.html</anchorfile>
      <anchor>ad919d78400f8064f1c944efd6af64d19</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>serverAdmin</name>
      <anchorfile>classWt_1_1WEnvironment.html</anchorfile>
      <anchor>ae9dbe94327aa0832225157a7a2b7f4dd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>clientAddress</name>
      <anchorfile>classWt_1_1WEnvironment.html</anchorfile>
      <anchor>aedad4a59684dc41c9985a713ee4eb00a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>internalPath</name>
      <anchorfile>classWt_1_1WEnvironment.html</anchorfile>
      <anchor>a1df7e3adc43bf704c1423d4d429a136d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>deploymentPath</name>
      <anchorfile>classWt_1_1WEnvironment.html</anchorfile>
      <anchor>a0e18848af468dd624031c9718b6a6c17</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>libraryVersion</name>
      <anchorfile>classWt_1_1WEnvironment.html</anchorfile>
      <anchor>a067e25b4898e1d301f448818ff397557</anchor>
      <arglist>(int &amp;series, int &amp;major, int &amp;minor) const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getCgiValue</name>
      <anchorfile>classWt_1_1WEnvironment.html</anchorfile>
      <anchor>adbc113195ed44d4bc989990a5a6d7acc</anchor>
      <arglist>(const std::string &amp;varName) const</arglist>
    </member>
    <member kind="function">
      <type>HtmlContentType</type>
      <name>contentType</name>
      <anchorfile>classWt_1_1WEnvironment.html</anchorfile>
      <anchor>a23d9a5849f74d9ce4a52b5e13a0c576c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>UserAgent</type>
      <name>agent</name>
      <anchorfile>classWt_1_1WEnvironment.html</anchorfile>
      <anchor>a48ae23f4129971bf4b3d4efa742e12f2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>agentIsIE</name>
      <anchorfile>classWt_1_1WEnvironment.html</anchorfile>
      <anchor>a10778aadd4413f597eed53b41bd57bf0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>agentIsIElt</name>
      <anchorfile>classWt_1_1WEnvironment.html</anchorfile>
      <anchor>a1e1342b3d4cbbdc19d4d09af915cd073</anchor>
      <arglist>(int version) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>agentIsIEMobile</name>
      <anchorfile>classWt_1_1WEnvironment.html</anchorfile>
      <anchor>a2ce4a084202e5991f84480c1478c8f77</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>agentIsOpera</name>
      <anchorfile>classWt_1_1WEnvironment.html</anchorfile>
      <anchor>a11d99e31622e9c7765badc3440a3925c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>agentIsWebKit</name>
      <anchorfile>classWt_1_1WEnvironment.html</anchorfile>
      <anchor>abeb5dde214ed5a4bcf97e731feb91e04</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>agentIsMobileWebKit</name>
      <anchorfile>classWt_1_1WEnvironment.html</anchorfile>
      <anchor>a7cb4240cea01f06c2c31784630e2e68f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>agentIsSafari</name>
      <anchorfile>classWt_1_1WEnvironment.html</anchorfile>
      <anchor>a747666a1b823f7d86fcad2c83f8d9327</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>agentIsChrome</name>
      <anchorfile>classWt_1_1WEnvironment.html</anchorfile>
      <anchor>a0d0f6d083e71d4fe2ecf83edb82b00e5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>agentIsGecko</name>
      <anchorfile>classWt_1_1WEnvironment.html</anchorfile>
      <anchor>a758e459c00594ce6c954ffd885392dbf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WServer *</type>
      <name>server</name>
      <anchorfile>classWt_1_1WEnvironment.html</anchorfile>
      <anchor>a710ab3dd56b6f1dfbf62e5ed040dd7a3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WSslInfo *</type>
      <name>sslInfo</name>
      <anchorfile>classWt_1_1WEnvironment.html</anchorfile>
      <anchor>a04b65c4f7fe6e3b0bd652e2580b4f62e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>internalPathUsingFragments</name>
      <anchorfile>classWt_1_1WEnvironment.html</anchorfile>
      <anchor>a6894c40e61b280e83013a2f2300d5ff4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>supportsCss3Animations</name>
      <anchorfile>classWt_1_1WEnvironment.html</anchorfile>
      <anchor>adcd867d6165e463338da73e87aa974c5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isTest</name>
      <anchorfile>classWt_1_1WEnvironment.html</anchorfile>
      <anchor>abc951662b47455329b7aa7d88da1b292</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>libraryVersion</name>
      <anchorfile>classWt_1_1WEnvironment.html</anchorfile>
      <anchor>a8d55627d202b6d8866c7703a6e9dddf1</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Chart::WEquidistantGridData</name>
    <filename>classWt_1_1Chart_1_1WEquidistantGridData.html</filename>
    <base>Wt::Chart::WAbstractGridData</base>
    <member kind="function">
      <type></type>
      <name>WEquidistantGridData</name>
      <anchorfile>classWt_1_1Chart_1_1WEquidistantGridData.html</anchorfile>
      <anchor>a1cc718a8c2deded9a87ea4b45306e78d</anchor>
      <arglist>(std::shared_ptr&lt; WAbstractItemModel &gt; model, double XMin, double deltaX, double YMin, double deltaY)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>minimum</name>
      <anchorfile>classWt_1_1Chart_1_1WEquidistantGridData.html</anchorfile>
      <anchor>ac63b6aef56490688c756ccab4ac8c705</anchor>
      <arglist>(Axis axis) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>maximum</name>
      <anchorfile>classWt_1_1Chart_1_1WEquidistantGridData.html</anchorfile>
      <anchor>a336a6728ab9efb56bc5cff4238a5f3d0</anchor>
      <arglist>(Axis axis) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setXAbscis</name>
      <anchorfile>classWt_1_1Chart_1_1WEquidistantGridData.html</anchorfile>
      <anchor>ae626c749886f51dc24eb24e1755d33f4</anchor>
      <arglist>(double XMinimum, double deltaX)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>XMinimum</name>
      <anchorfile>classWt_1_1Chart_1_1WEquidistantGridData.html</anchorfile>
      <anchor>ae905644e3daf70ff69111fa5a1297c36</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>deltaX</name>
      <anchorfile>classWt_1_1Chart_1_1WEquidistantGridData.html</anchorfile>
      <anchor>a9c4138e7e5e5ee24c85f82776274bc49</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setYAbscis</name>
      <anchorfile>classWt_1_1Chart_1_1WEquidistantGridData.html</anchorfile>
      <anchor>a3505e2d7585b9b899eafac7c84ef1e86</anchor>
      <arglist>(double YMinimum, double deltaY)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>YMinimum</name>
      <anchorfile>classWt_1_1Chart_1_1WEquidistantGridData.html</anchorfile>
      <anchor>aae03aee5f70f666016637f870f18fa1c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>deltaY</name>
      <anchorfile>classWt_1_1Chart_1_1WEquidistantGridData.html</anchorfile>
      <anchor>ae3972da96fb2eed10e501167bc2125ad</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WEvent</name>
    <filename>classWt_1_1WEvent.html</filename>
    <member kind="function">
      <type>EventType</type>
      <name>eventType</name>
      <anchorfile>classWt_1_1WEvent.html</anchorfile>
      <anchor>a0f844c490e89f87f652b627f2ad8e1ea</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WException</name>
    <filename>classWt_1_1WException.html</filename>
    <member kind="function">
      <type></type>
      <name>WException</name>
      <anchorfile>classWt_1_1WException.html</anchorfile>
      <anchor>a075c8da7eb5e0d6feb436c91c1fddda4</anchor>
      <arglist>(const std::string &amp;what)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WException</name>
      <anchorfile>classWt_1_1WException.html</anchorfile>
      <anchor>accec190f87d5493b2c951fbd858b3f47</anchor>
      <arglist>(const std::string &amp;what, const std::exception &amp;wrapped)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~WException</name>
      <anchorfile>classWt_1_1WException.html</anchorfile>
      <anchor>aeb0bdb363424ec96ae4bff5ddaa1a2e7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>what</name>
      <anchorfile>classWt_1_1WException.html</anchorfile>
      <anchor>a588112f1f51efbaf1019b91474723e18</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMessage</name>
      <anchorfile>classWt_1_1WException.html</anchorfile>
      <anchor>a8879fd99ffd51538371ab106223661d2</anchor>
      <arglist>(const std::string &amp;msg)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WFileDropWidget</name>
    <filename>classWt_1_1WFileDropWidget.html</filename>
    <base>Wt::WContainerWidget</base>
    <class kind="class">Wt::WFileDropWidget::File</class>
    <member kind="function">
      <type></type>
      <name>WFileDropWidget</name>
      <anchorfile>classWt_1_1WFileDropWidget.html</anchorfile>
      <anchor>ae57cc7bf4185d38adc00a17dcf4f4a4d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; File * &gt; &amp;</type>
      <name>uploads</name>
      <anchorfile>classWt_1_1WFileDropWidget.html</anchorfile>
      <anchor>afbceba0d4640d2812f536011490de614</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>currentIndex</name>
      <anchorfile>classWt_1_1WFileDropWidget.html</anchorfile>
      <anchor>a3c4d94ceab18b60f7118d70ff9698596</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>cancelUpload</name>
      <anchorfile>classWt_1_1WFileDropWidget.html</anchorfile>
      <anchor>a87cdffe00e1a7d5ad23ed277ed67b6d1</anchor>
      <arglist>(File *file)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>remove</name>
      <anchorfile>classWt_1_1WFileDropWidget.html</anchorfile>
      <anchor>a83fd2ee5ffc90f22cf66d8e7f9b87b99</anchor>
      <arglist>(File *file)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAcceptDrops</name>
      <anchorfile>classWt_1_1WFileDropWidget.html</anchorfile>
      <anchor>a4032057631d756628f27b6546eeaa7bb</anchor>
      <arglist>(bool enable)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setHoverStyleClass</name>
      <anchorfile>classWt_1_1WFileDropWidget.html</anchorfile>
      <anchor>a4fb8e92c328f4fe4a79f749b187e66f4</anchor>
      <arglist>(const std::string &amp;className)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFilters</name>
      <anchorfile>classWt_1_1WFileDropWidget.html</anchorfile>
      <anchor>a5d36310701fb392cc35a181d4ef4a4ac</anchor>
      <arglist>(const std::string &amp;acceptAttributes)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDropIndicationEnabled</name>
      <anchorfile>classWt_1_1WFileDropWidget.html</anchorfile>
      <anchor>a0c1400a6f7f63eec4bb1cfe30807538e</anchor>
      <arglist>(bool enable)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>dropIndicationEnabled</name>
      <anchorfile>classWt_1_1WFileDropWidget.html</anchorfile>
      <anchor>ad29d5b464be843706c6f0d9c58bc9fb0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setGlobalDropEnabled</name>
      <anchorfile>classWt_1_1WFileDropWidget.html</anchorfile>
      <anchor>a051b4928cb26446de1eb3617d0f8c954</anchor>
      <arglist>(bool enable)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>globalDropEnabled</name>
      <anchorfile>classWt_1_1WFileDropWidget.html</anchorfile>
      <anchor>a9dbb9a04deff48e2295fb92af5551ab2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setJavaScriptFilter</name>
      <anchorfile>classWt_1_1WFileDropWidget.html</anchorfile>
      <anchor>a75e947a7ceaf0a63e04b4db10a9e0013</anchor>
      <arglist>(const std::string &amp;filterFn, ::uint64_t chunksize=0, const std::vector&lt; std::string &gt; &amp;imports=std::vector&lt; std::string &gt;())</arglist>
    </member>
    <member kind="function">
      <type>Signal&lt; std::vector&lt; File * &gt; &gt; &amp;</type>
      <name>drop</name>
      <anchorfile>classWt_1_1WFileDropWidget.html</anchorfile>
      <anchor>ac446e916f56adfc4a7f58957767dbe18</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Signal&lt; File * &gt; &amp;</type>
      <name>newUpload</name>
      <anchorfile>classWt_1_1WFileDropWidget.html</anchorfile>
      <anchor>a3d2505800ef4aa3a4d705ac8c7aca6e5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Signal&lt; File * &gt; &amp;</type>
      <name>uploaded</name>
      <anchorfile>classWt_1_1WFileDropWidget.html</anchorfile>
      <anchor>abc5cec6a85e9694b67eb023553513260</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Signal&lt; File *, ::uint64_t &gt; &amp;</type>
      <name>tooLarge</name>
      <anchorfile>classWt_1_1WFileDropWidget.html</anchorfile>
      <anchor>ac79f9e7915e274b30a14c9c8e8c6cdd7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Signal&lt; File * &gt; &amp;</type>
      <name>uploadFailed</name>
      <anchorfile>classWt_1_1WFileDropWidget.html</anchorfile>
      <anchor>ab7c7a17534b2809398d49f293616d9d5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>enableAjax</name>
      <anchorfile>classWt_1_1WFileDropWidget.html</anchorfile>
      <anchor>ac31b3bec2ced7a292817bd807788e4d5</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WFileResource</name>
    <filename>classWt_1_1WFileResource.html</filename>
    <base>Wt::WStreamResource</base>
    <member kind="function">
      <type></type>
      <name>WFileResource</name>
      <anchorfile>classWt_1_1WFileResource.html</anchorfile>
      <anchor>ab20f019f86a00e35caa3f49c8c7c7b16</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WFileResource</name>
      <anchorfile>classWt_1_1WFileResource.html</anchorfile>
      <anchor>aa69952af6686bb0f17359306c5859f84</anchor>
      <arglist>(const std::string &amp;fileName)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WFileResource</name>
      <anchorfile>classWt_1_1WFileResource.html</anchorfile>
      <anchor>ae22dfa18b675f7b5d048853babf0bf89</anchor>
      <arglist>(const std::string &amp;mimeType, const std::string &amp;fileName)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WFileResource</name>
      <anchorfile>classWt_1_1WFileResource.html</anchorfile>
      <anchor>a60bcdd2873274df4143c79444d178004</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFileName</name>
      <anchorfile>classWt_1_1WFileResource.html</anchorfile>
      <anchor>a02a899ebef188895c4f1707e529c0ef3</anchor>
      <arglist>(const std::string &amp;fileName)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>fileName</name>
      <anchorfile>classWt_1_1WFileResource.html</anchorfile>
      <anchor>ab893760b2fcf368b5a9f3c9027f766a8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>handleRequest</name>
      <anchorfile>classWt_1_1WFileResource.html</anchorfile>
      <anchor>a0f4155c92e36fb534142124f415a2828</anchor>
      <arglist>(const Http::Request &amp;request, Http::Response &amp;response) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WFileUpload</name>
    <filename>classWt_1_1WFileUpload.html</filename>
    <base>Wt::WWebWidget</base>
    <member kind="function">
      <type></type>
      <name>WFileUpload</name>
      <anchorfile>classWt_1_1WFileUpload.html</anchorfile>
      <anchor>a0587fa99d66585af33b41f683b266975</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMultiple</name>
      <anchorfile>classWt_1_1WFileUpload.html</anchorfile>
      <anchor>a17f8e368c2ffc9836c65e470b311de9d</anchor>
      <arglist>(bool multiple)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>multiple</name>
      <anchorfile>classWt_1_1WFileUpload.html</anchorfile>
      <anchor>a8576b15a63ab5a4bdc2289429c5a49e3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFileTextSize</name>
      <anchorfile>classWt_1_1WFileUpload.html</anchorfile>
      <anchor>ac7ad1324c86d378da9da9740a631a662</anchor>
      <arglist>(int chars)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>fileTextSize</name>
      <anchorfile>classWt_1_1WFileUpload.html</anchorfile>
      <anchor>a2527604bd27a5376076276ec7c890786</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>spoolFileName</name>
      <anchorfile>classWt_1_1WFileUpload.html</anchorfile>
      <anchor>afd4e833c97e6c3f4e5449ac551795ae0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WString</type>
      <name>clientFileName</name>
      <anchorfile>classWt_1_1WFileUpload.html</anchorfile>
      <anchor>a2e80e7eb0a0b08a8a8f79b03ed4912dd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WString</type>
      <name>contentDescription</name>
      <anchorfile>classWt_1_1WFileUpload.html</anchorfile>
      <anchor>a9d47f93b00526f45ea969aa1c0aa332d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stealSpooledFile</name>
      <anchorfile>classWt_1_1WFileUpload.html</anchorfile>
      <anchor>a541d634e9f9e546f59417682811f01ef</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>empty</name>
      <anchorfile>classWt_1_1WFileUpload.html</anchorfile>
      <anchor>ab19c49ef829c9f9fa8d6fb66c9b87c4f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; Http::UploadedFile &gt; &amp;</type>
      <name>uploadedFiles</name>
      <anchorfile>classWt_1_1WFileUpload.html</anchorfile>
      <anchor>af5ab58a0166ad0b99cc5daa6d29bc9f1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canUpload</name>
      <anchorfile>classWt_1_1WFileUpload.html</anchorfile>
      <anchor>ac0b34ef1ceb8b6c2836756720fa86068</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDisplayWidget</name>
      <anchorfile>classWt_1_1WFileUpload.html</anchorfile>
      <anchor>ab95ec35db690296e848d89a71c23737a</anchor>
      <arglist>(WInteractWidget *widget)</arglist>
    </member>
    <member kind="function">
      <type>EventSignal &amp;</type>
      <name>uploaded</name>
      <anchorfile>classWt_1_1WFileUpload.html</anchorfile>
      <anchor>aacb4622c8cd83d1635a8c0db13c8c0fe</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>JSignal&lt; ::int64_t &gt; &amp;</type>
      <name>fileTooLarge</name>
      <anchorfile>classWt_1_1WFileUpload.html</anchorfile>
      <anchor>a943e9ea6fb2eb542362afea67d527205</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EventSignal &amp;</type>
      <name>changed</name>
      <anchorfile>classWt_1_1WFileUpload.html</anchorfile>
      <anchor>a3abaf94bdba04e7833aa18bc7e8d0f40</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>upload</name>
      <anchorfile>classWt_1_1WFileUpload.html</anchorfile>
      <anchor>ac17094f2fd6ae8cac1035161f7d80b9c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProgressBar</name>
      <anchorfile>classWt_1_1WFileUpload.html</anchorfile>
      <anchor>a6600c5a1232057418b3fe63d5db1c004</anchor>
      <arglist>(WProgressBar *progressBar)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProgressBar</name>
      <anchorfile>classWt_1_1WFileUpload.html</anchorfile>
      <anchor>aff4b807b84f7d98e1a8a5d02fbb2da38</anchor>
      <arglist>(std::unique_ptr&lt; WProgressBar &gt; progressBar)</arglist>
    </member>
    <member kind="function">
      <type>WProgressBar *</type>
      <name>progressBar</name>
      <anchorfile>classWt_1_1WFileUpload.html</anchorfile>
      <anchor>ae86f9f223935a65b7320e8f376dec9eb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Signal&lt; ::uint64_t, ::uint64_t &gt; &amp;</type>
      <name>dataReceived</name>
      <anchorfile>classWt_1_1WFileUpload.html</anchorfile>
      <anchor>ae488bf948aca68c9b9eb4e8ed751ff76</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>enableAjax</name>
      <anchorfile>classWt_1_1WFileUpload.html</anchorfile>
      <anchor>a6a300f40da791ed6268f630185d00284</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFilters</name>
      <anchorfile>classWt_1_1WFileUpload.html</anchorfile>
      <anchor>a78bc33442b3f2b07b60b9cda650278d2</anchor>
      <arglist>(const std::string &amp;acceptAttributes)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>propagateSetEnabled</name>
      <anchorfile>classWt_1_1WFileUpload.html</anchorfile>
      <anchor>ac8444d0f6bb7420756c06633b2d37c83</anchor>
      <arglist>(bool enabled) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WFitLayout</name>
    <filename>classWt_1_1WFitLayout.html</filename>
    <base>Wt::WLayout</base>
    <member kind="function">
      <type></type>
      <name>WFitLayout</name>
      <anchorfile>classWt_1_1WFitLayout.html</anchorfile>
      <anchor>a45ab4d9543a057a386b3eb8f478903e2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Widget *</type>
      <name>addWidget</name>
      <anchorfile>classWt_1_1WFitLayout.html</anchorfile>
      <anchor>a071ea55ea16e71213b3bbd2f5f497932</anchor>
      <arglist>(std::unique_ptr&lt; Widget &gt; widget)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>addItem</name>
      <anchorfile>classWt_1_1WFitLayout.html</anchorfile>
      <anchor>a4ee35de100dc832d93fc3f147fec0a05</anchor>
      <arglist>(std::unique_ptr&lt; WLayoutItem &gt; item) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::unique_ptr&lt; WLayoutItem &gt;</type>
      <name>removeItem</name>
      <anchorfile>classWt_1_1WFitLayout.html</anchorfile>
      <anchor>a2a26a80452036072ad8b349c67a97383</anchor>
      <arglist>(WLayoutItem *item) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WLayoutItem *</type>
      <name>itemAt</name>
      <anchorfile>classWt_1_1WFitLayout.html</anchorfile>
      <anchor>a21592437fe6cdf836b579aecdb2a8460</anchor>
      <arglist>(int index) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>indexOf</name>
      <anchorfile>classWt_1_1WFitLayout.html</anchorfile>
      <anchor>a54a52d67794e4b2a46f15af303ef5fee</anchor>
      <arglist>(WLayoutItem *item) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>count</name>
      <anchorfile>classWt_1_1WFitLayout.html</anchorfile>
      <anchor>a695f1fa9dc6f8f956234dfea0de7ae49</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual void</type>
      <name>setParentWidget</name>
      <anchorfile>classWt_1_1WFitLayout.html</anchorfile>
      <anchor>adaafc29b70ee040f428c84c394804829</anchor>
      <arglist>(WWidget *parent) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WFlags</name>
    <filename>classWt_1_1WFlags.html</filename>
    <templarg></templarg>
    <member kind="function">
      <type></type>
      <name>WFlags</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a866ce1716c87b4c1f47b3021b0805ace</anchor>
      <arglist>(NoFlagsType none=None)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WFlags</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>aff76055d02d80739d8c6690acea2987d</anchor>
      <arglist>(EnumType flag)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WFlags</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a66d179908503a36d61b25ec6eaefc325</anchor>
      <arglist>(const WFlags&lt; EnumType &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; EnumType &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>ad393bae4f713eaf6b4ed962a3cc60343</anchor>
      <arglist>(const WFlags&lt; EnumType &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; EnumType &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>ab41240e9031411e48694dfd0335adbe1</anchor>
      <arglist>(const EnumType other)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>test</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a91a1f471ef60b8bc8abf45cdcc68f576</anchor>
      <arglist>(EnumType flag) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>empty</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a8e7bdca91df4a68c0ed8116187529323</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; EnumType &gt; &amp;</type>
      <name>clear</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a971f9fc03d038ae212ca0165f0a5a6b1</anchor>
      <arglist>(EnumType value)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator EnumType</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>aa6a1a9b16589ab738208fbaa48a90c5e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a2d88f1be491cfacebfd9d1e2a841b4bb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; EnumType &gt;</type>
      <name>operator&amp;</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>af9aea2bb3a973f548e553dfb143a103e</anchor>
      <arglist>(EnumType mask) const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; EnumType &gt;</type>
      <name>operator&amp;</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>ace4ba410e4bbe24795a9c5e3e76a73c2</anchor>
      <arglist>(MaskType mask) const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; EnumType &gt; &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a292599924fcaea5dc0a6faefb46fb75b</anchor>
      <arglist>(EnumType mask)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; EnumType &gt; &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a6f6f0e9a5491cd2be7d0e2d5056bf477</anchor>
      <arglist>(MaskType mask)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; EnumType &gt;</type>
      <name>operator^</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a82376f146983333700b96d1e59a7da5a</anchor>
      <arglist>(WFlags&lt; EnumType &gt; other) const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; EnumType &gt;</type>
      <name>operator^</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a188f5274b86795945a6fc677110dc2a5</anchor>
      <arglist>(EnumType other) const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; EnumType &gt; &amp;</type>
      <name>operator^=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a7ba6ca4a33b6e86a41032f5e62ce4e7a</anchor>
      <arglist>(WFlags&lt; EnumType &gt; other)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; EnumType &gt; &amp;</type>
      <name>operator^=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a95a44ac96b3e1c090ba03110e46601b0</anchor>
      <arglist>(EnumType other)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; EnumType &gt;</type>
      <name>operator|</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>acf18d53ea75bcb921199c75e6eb6079a</anchor>
      <arglist>(WFlags&lt; EnumType &gt; other) const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; EnumType &gt;</type>
      <name>operator|</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a3c576be0331f4d53bc954003c4b6af68</anchor>
      <arglist>(EnumType other) const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; EnumType &gt; &amp;</type>
      <name>operator|=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>ab8dcdda2833b9a423d424af93d4629e7</anchor>
      <arglist>(WFlags&lt; EnumType &gt; other)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; EnumType &gt; &amp;</type>
      <name>operator|=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>afe78c22fe47491a9bbe89ecafe88b215</anchor>
      <arglist>(EnumType other)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; EnumType &gt;</type>
      <name>operator~</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>ab4ffd437d69da401e0ffc8dc1fbba05b</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>WFlags&lt; AlignmentFlag &gt;</name>
    <filename>classWt_1_1WFlags.html</filename>
    <member kind="function">
      <type></type>
      <name>WFlags</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a866ce1716c87b4c1f47b3021b0805ace</anchor>
      <arglist>(NoFlagsType none=None)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WFlags</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>aff76055d02d80739d8c6690acea2987d</anchor>
      <arglist>(AlignmentFlag flag)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WFlags</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a66d179908503a36d61b25ec6eaefc325</anchor>
      <arglist>(const WFlags&lt; AlignmentFlag &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; AlignmentFlag &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>ad393bae4f713eaf6b4ed962a3cc60343</anchor>
      <arglist>(const WFlags&lt; AlignmentFlag &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; AlignmentFlag &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>ab41240e9031411e48694dfd0335adbe1</anchor>
      <arglist>(const AlignmentFlag other)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>test</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a91a1f471ef60b8bc8abf45cdcc68f576</anchor>
      <arglist>(AlignmentFlag flag) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>empty</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a8e7bdca91df4a68c0ed8116187529323</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; AlignmentFlag &gt; &amp;</type>
      <name>clear</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a971f9fc03d038ae212ca0165f0a5a6b1</anchor>
      <arglist>(AlignmentFlag value)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator AlignmentFlag</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>aa6a1a9b16589ab738208fbaa48a90c5e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a2d88f1be491cfacebfd9d1e2a841b4bb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; AlignmentFlag &gt;</type>
      <name>operator&amp;</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>af9aea2bb3a973f548e553dfb143a103e</anchor>
      <arglist>(AlignmentFlag mask) const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; AlignmentFlag &gt;</type>
      <name>operator&amp;</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>ace4ba410e4bbe24795a9c5e3e76a73c2</anchor>
      <arglist>(MaskType mask) const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; AlignmentFlag &gt; &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a292599924fcaea5dc0a6faefb46fb75b</anchor>
      <arglist>(AlignmentFlag mask)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; AlignmentFlag &gt; &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a6f6f0e9a5491cd2be7d0e2d5056bf477</anchor>
      <arglist>(MaskType mask)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; AlignmentFlag &gt;</type>
      <name>operator^</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a82376f146983333700b96d1e59a7da5a</anchor>
      <arglist>(WFlags&lt; AlignmentFlag &gt; other) const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; AlignmentFlag &gt;</type>
      <name>operator^</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a188f5274b86795945a6fc677110dc2a5</anchor>
      <arglist>(AlignmentFlag other) const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; AlignmentFlag &gt; &amp;</type>
      <name>operator^=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a7ba6ca4a33b6e86a41032f5e62ce4e7a</anchor>
      <arglist>(WFlags&lt; AlignmentFlag &gt; other)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; AlignmentFlag &gt; &amp;</type>
      <name>operator^=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a95a44ac96b3e1c090ba03110e46601b0</anchor>
      <arglist>(AlignmentFlag other)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; AlignmentFlag &gt;</type>
      <name>operator|</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>acf18d53ea75bcb921199c75e6eb6079a</anchor>
      <arglist>(WFlags&lt; AlignmentFlag &gt; other) const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; AlignmentFlag &gt;</type>
      <name>operator|</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a3c576be0331f4d53bc954003c4b6af68</anchor>
      <arglist>(AlignmentFlag other) const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; AlignmentFlag &gt; &amp;</type>
      <name>operator|=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>ab8dcdda2833b9a423d424af93d4629e7</anchor>
      <arglist>(WFlags&lt; AlignmentFlag &gt; other)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; AlignmentFlag &gt; &amp;</type>
      <name>operator|=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>afe78c22fe47491a9bbe89ecafe88b215</anchor>
      <arglist>(AlignmentFlag other)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; AlignmentFlag &gt;</type>
      <name>operator~</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>ab4ffd437d69da401e0ffc8dc1fbba05b</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>WFlags&lt; AnimationEffect &gt;</name>
    <filename>classWt_1_1WFlags.html</filename>
    <member kind="function">
      <type></type>
      <name>WFlags</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a866ce1716c87b4c1f47b3021b0805ace</anchor>
      <arglist>(NoFlagsType none=None)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WFlags</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>aff76055d02d80739d8c6690acea2987d</anchor>
      <arglist>(AnimationEffect flag)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WFlags</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a66d179908503a36d61b25ec6eaefc325</anchor>
      <arglist>(const WFlags&lt; AnimationEffect &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; AnimationEffect &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>ad393bae4f713eaf6b4ed962a3cc60343</anchor>
      <arglist>(const WFlags&lt; AnimationEffect &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; AnimationEffect &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>ab41240e9031411e48694dfd0335adbe1</anchor>
      <arglist>(const AnimationEffect other)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>test</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a91a1f471ef60b8bc8abf45cdcc68f576</anchor>
      <arglist>(AnimationEffect flag) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>empty</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a8e7bdca91df4a68c0ed8116187529323</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; AnimationEffect &gt; &amp;</type>
      <name>clear</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a971f9fc03d038ae212ca0165f0a5a6b1</anchor>
      <arglist>(AnimationEffect value)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator AnimationEffect</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>aa6a1a9b16589ab738208fbaa48a90c5e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a2d88f1be491cfacebfd9d1e2a841b4bb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; AnimationEffect &gt;</type>
      <name>operator&amp;</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>af9aea2bb3a973f548e553dfb143a103e</anchor>
      <arglist>(AnimationEffect mask) const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; AnimationEffect &gt;</type>
      <name>operator&amp;</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>ace4ba410e4bbe24795a9c5e3e76a73c2</anchor>
      <arglist>(MaskType mask) const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; AnimationEffect &gt; &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a292599924fcaea5dc0a6faefb46fb75b</anchor>
      <arglist>(AnimationEffect mask)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; AnimationEffect &gt; &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a6f6f0e9a5491cd2be7d0e2d5056bf477</anchor>
      <arglist>(MaskType mask)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; AnimationEffect &gt;</type>
      <name>operator^</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a82376f146983333700b96d1e59a7da5a</anchor>
      <arglist>(WFlags&lt; AnimationEffect &gt; other) const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; AnimationEffect &gt;</type>
      <name>operator^</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a188f5274b86795945a6fc677110dc2a5</anchor>
      <arglist>(AnimationEffect other) const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; AnimationEffect &gt; &amp;</type>
      <name>operator^=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a7ba6ca4a33b6e86a41032f5e62ce4e7a</anchor>
      <arglist>(WFlags&lt; AnimationEffect &gt; other)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; AnimationEffect &gt; &amp;</type>
      <name>operator^=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a95a44ac96b3e1c090ba03110e46601b0</anchor>
      <arglist>(AnimationEffect other)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; AnimationEffect &gt;</type>
      <name>operator|</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>acf18d53ea75bcb921199c75e6eb6079a</anchor>
      <arglist>(WFlags&lt; AnimationEffect &gt; other) const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; AnimationEffect &gt;</type>
      <name>operator|</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a3c576be0331f4d53bc954003c4b6af68</anchor>
      <arglist>(AnimationEffect other) const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; AnimationEffect &gt; &amp;</type>
      <name>operator|=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>ab8dcdda2833b9a423d424af93d4629e7</anchor>
      <arglist>(WFlags&lt; AnimationEffect &gt; other)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; AnimationEffect &gt; &amp;</type>
      <name>operator|=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>afe78c22fe47491a9bbe89ecafe88b215</anchor>
      <arglist>(AnimationEffect other)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; AnimationEffect &gt;</type>
      <name>operator~</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>ab4ffd437d69da401e0ffc8dc1fbba05b</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>WFlags&lt; AxisValue &gt;</name>
    <filename>classWt_1_1WFlags.html</filename>
    <member kind="function">
      <type></type>
      <name>WFlags</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a866ce1716c87b4c1f47b3021b0805ace</anchor>
      <arglist>(NoFlagsType none=None)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WFlags</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>aff76055d02d80739d8c6690acea2987d</anchor>
      <arglist>(AxisValue flag)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WFlags</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a66d179908503a36d61b25ec6eaefc325</anchor>
      <arglist>(const WFlags&lt; AxisValue &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; AxisValue &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>ad393bae4f713eaf6b4ed962a3cc60343</anchor>
      <arglist>(const WFlags&lt; AxisValue &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; AxisValue &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>ab41240e9031411e48694dfd0335adbe1</anchor>
      <arglist>(const AxisValue other)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>test</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a91a1f471ef60b8bc8abf45cdcc68f576</anchor>
      <arglist>(AxisValue flag) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>empty</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a8e7bdca91df4a68c0ed8116187529323</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; AxisValue &gt; &amp;</type>
      <name>clear</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a971f9fc03d038ae212ca0165f0a5a6b1</anchor>
      <arglist>(AxisValue value)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator AxisValue</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>aa6a1a9b16589ab738208fbaa48a90c5e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a2d88f1be491cfacebfd9d1e2a841b4bb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; AxisValue &gt;</type>
      <name>operator&amp;</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>af9aea2bb3a973f548e553dfb143a103e</anchor>
      <arglist>(AxisValue mask) const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; AxisValue &gt;</type>
      <name>operator&amp;</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>ace4ba410e4bbe24795a9c5e3e76a73c2</anchor>
      <arglist>(MaskType mask) const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; AxisValue &gt; &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a292599924fcaea5dc0a6faefb46fb75b</anchor>
      <arglist>(AxisValue mask)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; AxisValue &gt; &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a6f6f0e9a5491cd2be7d0e2d5056bf477</anchor>
      <arglist>(MaskType mask)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; AxisValue &gt;</type>
      <name>operator^</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a82376f146983333700b96d1e59a7da5a</anchor>
      <arglist>(WFlags&lt; AxisValue &gt; other) const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; AxisValue &gt;</type>
      <name>operator^</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a188f5274b86795945a6fc677110dc2a5</anchor>
      <arglist>(AxisValue other) const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; AxisValue &gt; &amp;</type>
      <name>operator^=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a7ba6ca4a33b6e86a41032f5e62ce4e7a</anchor>
      <arglist>(WFlags&lt; AxisValue &gt; other)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; AxisValue &gt; &amp;</type>
      <name>operator^=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a95a44ac96b3e1c090ba03110e46601b0</anchor>
      <arglist>(AxisValue other)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; AxisValue &gt;</type>
      <name>operator|</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>acf18d53ea75bcb921199c75e6eb6079a</anchor>
      <arglist>(WFlags&lt; AxisValue &gt; other) const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; AxisValue &gt;</type>
      <name>operator|</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a3c576be0331f4d53bc954003c4b6af68</anchor>
      <arglist>(AxisValue other) const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; AxisValue &gt; &amp;</type>
      <name>operator|=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>ab8dcdda2833b9a423d424af93d4629e7</anchor>
      <arglist>(WFlags&lt; AxisValue &gt; other)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; AxisValue &gt; &amp;</type>
      <name>operator|=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>afe78c22fe47491a9bbe89ecafe88b215</anchor>
      <arglist>(AxisValue other)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; AxisValue &gt;</type>
      <name>operator~</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>ab4ffd437d69da401e0ffc8dc1fbba05b</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>WFlags&lt; ChartUpdates &gt;</name>
    <filename>classWt_1_1WFlags.html</filename>
    <member kind="function">
      <type></type>
      <name>WFlags</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a866ce1716c87b4c1f47b3021b0805ace</anchor>
      <arglist>(NoFlagsType none=None)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WFlags</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>aff76055d02d80739d8c6690acea2987d</anchor>
      <arglist>(ChartUpdates flag)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WFlags</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a66d179908503a36d61b25ec6eaefc325</anchor>
      <arglist>(const WFlags&lt; ChartUpdates &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; ChartUpdates &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>ad393bae4f713eaf6b4ed962a3cc60343</anchor>
      <arglist>(const WFlags&lt; ChartUpdates &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; ChartUpdates &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>ab41240e9031411e48694dfd0335adbe1</anchor>
      <arglist>(const ChartUpdates other)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>test</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a91a1f471ef60b8bc8abf45cdcc68f576</anchor>
      <arglist>(ChartUpdates flag) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>empty</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a8e7bdca91df4a68c0ed8116187529323</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; ChartUpdates &gt; &amp;</type>
      <name>clear</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a971f9fc03d038ae212ca0165f0a5a6b1</anchor>
      <arglist>(ChartUpdates value)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator ChartUpdates</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>aa6a1a9b16589ab738208fbaa48a90c5e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a2d88f1be491cfacebfd9d1e2a841b4bb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; ChartUpdates &gt;</type>
      <name>operator&amp;</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>af9aea2bb3a973f548e553dfb143a103e</anchor>
      <arglist>(ChartUpdates mask) const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; ChartUpdates &gt;</type>
      <name>operator&amp;</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>ace4ba410e4bbe24795a9c5e3e76a73c2</anchor>
      <arglist>(MaskType mask) const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; ChartUpdates &gt; &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a292599924fcaea5dc0a6faefb46fb75b</anchor>
      <arglist>(ChartUpdates mask)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; ChartUpdates &gt; &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a6f6f0e9a5491cd2be7d0e2d5056bf477</anchor>
      <arglist>(MaskType mask)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; ChartUpdates &gt;</type>
      <name>operator^</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a82376f146983333700b96d1e59a7da5a</anchor>
      <arglist>(WFlags&lt; ChartUpdates &gt; other) const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; ChartUpdates &gt;</type>
      <name>operator^</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a188f5274b86795945a6fc677110dc2a5</anchor>
      <arglist>(ChartUpdates other) const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; ChartUpdates &gt; &amp;</type>
      <name>operator^=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a7ba6ca4a33b6e86a41032f5e62ce4e7a</anchor>
      <arglist>(WFlags&lt; ChartUpdates &gt; other)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; ChartUpdates &gt; &amp;</type>
      <name>operator^=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a95a44ac96b3e1c090ba03110e46601b0</anchor>
      <arglist>(ChartUpdates other)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; ChartUpdates &gt;</type>
      <name>operator|</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>acf18d53ea75bcb921199c75e6eb6079a</anchor>
      <arglist>(WFlags&lt; ChartUpdates &gt; other) const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; ChartUpdates &gt;</type>
      <name>operator|</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a3c576be0331f4d53bc954003c4b6af68</anchor>
      <arglist>(ChartUpdates other) const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; ChartUpdates &gt; &amp;</type>
      <name>operator|=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>ab8dcdda2833b9a423d424af93d4629e7</anchor>
      <arglist>(WFlags&lt; ChartUpdates &gt; other)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; ChartUpdates &gt; &amp;</type>
      <name>operator|=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>afe78c22fe47491a9bbe89ecafe88b215</anchor>
      <arglist>(ChartUpdates other)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; ChartUpdates &gt;</type>
      <name>operator~</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>ab4ffd437d69da401e0ffc8dc1fbba05b</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>WFlags&lt; CustomFlag &gt;</name>
    <filename>classWt_1_1WFlags.html</filename>
    <member kind="function">
      <type></type>
      <name>WFlags</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a866ce1716c87b4c1f47b3021b0805ace</anchor>
      <arglist>(NoFlagsType none=None)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WFlags</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>aff76055d02d80739d8c6690acea2987d</anchor>
      <arglist>(CustomFlag flag)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WFlags</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a66d179908503a36d61b25ec6eaefc325</anchor>
      <arglist>(const WFlags&lt; CustomFlag &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; CustomFlag &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>ad393bae4f713eaf6b4ed962a3cc60343</anchor>
      <arglist>(const WFlags&lt; CustomFlag &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; CustomFlag &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>ab41240e9031411e48694dfd0335adbe1</anchor>
      <arglist>(const CustomFlag other)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>test</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a91a1f471ef60b8bc8abf45cdcc68f576</anchor>
      <arglist>(CustomFlag flag) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>empty</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a8e7bdca91df4a68c0ed8116187529323</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; CustomFlag &gt; &amp;</type>
      <name>clear</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a971f9fc03d038ae212ca0165f0a5a6b1</anchor>
      <arglist>(CustomFlag value)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator CustomFlag</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>aa6a1a9b16589ab738208fbaa48a90c5e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a2d88f1be491cfacebfd9d1e2a841b4bb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; CustomFlag &gt;</type>
      <name>operator&amp;</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>af9aea2bb3a973f548e553dfb143a103e</anchor>
      <arglist>(CustomFlag mask) const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; CustomFlag &gt;</type>
      <name>operator&amp;</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>ace4ba410e4bbe24795a9c5e3e76a73c2</anchor>
      <arglist>(MaskType mask) const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; CustomFlag &gt; &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a292599924fcaea5dc0a6faefb46fb75b</anchor>
      <arglist>(CustomFlag mask)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; CustomFlag &gt; &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a6f6f0e9a5491cd2be7d0e2d5056bf477</anchor>
      <arglist>(MaskType mask)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; CustomFlag &gt;</type>
      <name>operator^</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a82376f146983333700b96d1e59a7da5a</anchor>
      <arglist>(WFlags&lt; CustomFlag &gt; other) const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; CustomFlag &gt;</type>
      <name>operator^</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a188f5274b86795945a6fc677110dc2a5</anchor>
      <arglist>(CustomFlag other) const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; CustomFlag &gt; &amp;</type>
      <name>operator^=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a7ba6ca4a33b6e86a41032f5e62ce4e7a</anchor>
      <arglist>(WFlags&lt; CustomFlag &gt; other)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; CustomFlag &gt; &amp;</type>
      <name>operator^=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a95a44ac96b3e1c090ba03110e46601b0</anchor>
      <arglist>(CustomFlag other)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; CustomFlag &gt;</type>
      <name>operator|</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>acf18d53ea75bcb921199c75e6eb6079a</anchor>
      <arglist>(WFlags&lt; CustomFlag &gt; other) const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; CustomFlag &gt;</type>
      <name>operator|</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a3c576be0331f4d53bc954003c4b6af68</anchor>
      <arglist>(CustomFlag other) const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; CustomFlag &gt; &amp;</type>
      <name>operator|=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>ab8dcdda2833b9a423d424af93d4629e7</anchor>
      <arglist>(WFlags&lt; CustomFlag &gt; other)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; CustomFlag &gt; &amp;</type>
      <name>operator|=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>afe78c22fe47491a9bbe89ecafe88b215</anchor>
      <arglist>(CustomFlag other)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; CustomFlag &gt;</type>
      <name>operator~</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>ab4ffd437d69da401e0ffc8dc1fbba05b</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>WFlags&lt; EditOption &gt;</name>
    <filename>classWt_1_1WFlags.html</filename>
    <member kind="function">
      <type></type>
      <name>WFlags</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a866ce1716c87b4c1f47b3021b0805ace</anchor>
      <arglist>(NoFlagsType none=None)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WFlags</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>aff76055d02d80739d8c6690acea2987d</anchor>
      <arglist>(EditOption flag)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WFlags</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a66d179908503a36d61b25ec6eaefc325</anchor>
      <arglist>(const WFlags&lt; EditOption &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; EditOption &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>ad393bae4f713eaf6b4ed962a3cc60343</anchor>
      <arglist>(const WFlags&lt; EditOption &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; EditOption &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>ab41240e9031411e48694dfd0335adbe1</anchor>
      <arglist>(const EditOption other)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>test</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a91a1f471ef60b8bc8abf45cdcc68f576</anchor>
      <arglist>(EditOption flag) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>empty</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a8e7bdca91df4a68c0ed8116187529323</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; EditOption &gt; &amp;</type>
      <name>clear</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a971f9fc03d038ae212ca0165f0a5a6b1</anchor>
      <arglist>(EditOption value)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator EditOption</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>aa6a1a9b16589ab738208fbaa48a90c5e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a2d88f1be491cfacebfd9d1e2a841b4bb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; EditOption &gt;</type>
      <name>operator&amp;</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>af9aea2bb3a973f548e553dfb143a103e</anchor>
      <arglist>(EditOption mask) const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; EditOption &gt;</type>
      <name>operator&amp;</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>ace4ba410e4bbe24795a9c5e3e76a73c2</anchor>
      <arglist>(MaskType mask) const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; EditOption &gt; &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a292599924fcaea5dc0a6faefb46fb75b</anchor>
      <arglist>(EditOption mask)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; EditOption &gt; &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a6f6f0e9a5491cd2be7d0e2d5056bf477</anchor>
      <arglist>(MaskType mask)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; EditOption &gt;</type>
      <name>operator^</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a82376f146983333700b96d1e59a7da5a</anchor>
      <arglist>(WFlags&lt; EditOption &gt; other) const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; EditOption &gt;</type>
      <name>operator^</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a188f5274b86795945a6fc677110dc2a5</anchor>
      <arglist>(EditOption other) const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; EditOption &gt; &amp;</type>
      <name>operator^=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a7ba6ca4a33b6e86a41032f5e62ce4e7a</anchor>
      <arglist>(WFlags&lt; EditOption &gt; other)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; EditOption &gt; &amp;</type>
      <name>operator^=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a95a44ac96b3e1c090ba03110e46601b0</anchor>
      <arglist>(EditOption other)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; EditOption &gt;</type>
      <name>operator|</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>acf18d53ea75bcb921199c75e6eb6079a</anchor>
      <arglist>(WFlags&lt; EditOption &gt; other) const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; EditOption &gt;</type>
      <name>operator|</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a3c576be0331f4d53bc954003c4b6af68</anchor>
      <arglist>(EditOption other) const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; EditOption &gt; &amp;</type>
      <name>operator|=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>ab8dcdda2833b9a423d424af93d4629e7</anchor>
      <arglist>(WFlags&lt; EditOption &gt; other)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; EditOption &gt; &amp;</type>
      <name>operator|=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>afe78c22fe47491a9bbe89ecafe88b215</anchor>
      <arglist>(EditOption other)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; EditOption &gt;</type>
      <name>operator~</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>ab4ffd437d69da401e0ffc8dc1fbba05b</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>WFlags&lt; EditTrigger &gt;</name>
    <filename>classWt_1_1WFlags.html</filename>
    <member kind="function">
      <type></type>
      <name>WFlags</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a866ce1716c87b4c1f47b3021b0805ace</anchor>
      <arglist>(NoFlagsType none=None)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WFlags</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>aff76055d02d80739d8c6690acea2987d</anchor>
      <arglist>(EditTrigger flag)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WFlags</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a66d179908503a36d61b25ec6eaefc325</anchor>
      <arglist>(const WFlags&lt; EditTrigger &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; EditTrigger &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>ad393bae4f713eaf6b4ed962a3cc60343</anchor>
      <arglist>(const WFlags&lt; EditTrigger &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; EditTrigger &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>ab41240e9031411e48694dfd0335adbe1</anchor>
      <arglist>(const EditTrigger other)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>test</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a91a1f471ef60b8bc8abf45cdcc68f576</anchor>
      <arglist>(EditTrigger flag) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>empty</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a8e7bdca91df4a68c0ed8116187529323</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; EditTrigger &gt; &amp;</type>
      <name>clear</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a971f9fc03d038ae212ca0165f0a5a6b1</anchor>
      <arglist>(EditTrigger value)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator EditTrigger</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>aa6a1a9b16589ab738208fbaa48a90c5e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a2d88f1be491cfacebfd9d1e2a841b4bb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; EditTrigger &gt;</type>
      <name>operator&amp;</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>af9aea2bb3a973f548e553dfb143a103e</anchor>
      <arglist>(EditTrigger mask) const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; EditTrigger &gt;</type>
      <name>operator&amp;</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>ace4ba410e4bbe24795a9c5e3e76a73c2</anchor>
      <arglist>(MaskType mask) const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; EditTrigger &gt; &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a292599924fcaea5dc0a6faefb46fb75b</anchor>
      <arglist>(EditTrigger mask)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; EditTrigger &gt; &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a6f6f0e9a5491cd2be7d0e2d5056bf477</anchor>
      <arglist>(MaskType mask)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; EditTrigger &gt;</type>
      <name>operator^</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a82376f146983333700b96d1e59a7da5a</anchor>
      <arglist>(WFlags&lt; EditTrigger &gt; other) const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; EditTrigger &gt;</type>
      <name>operator^</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a188f5274b86795945a6fc677110dc2a5</anchor>
      <arglist>(EditTrigger other) const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; EditTrigger &gt; &amp;</type>
      <name>operator^=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a7ba6ca4a33b6e86a41032f5e62ce4e7a</anchor>
      <arglist>(WFlags&lt; EditTrigger &gt; other)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; EditTrigger &gt; &amp;</type>
      <name>operator^=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a95a44ac96b3e1c090ba03110e46601b0</anchor>
      <arglist>(EditTrigger other)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; EditTrigger &gt;</type>
      <name>operator|</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>acf18d53ea75bcb921199c75e6eb6079a</anchor>
      <arglist>(WFlags&lt; EditTrigger &gt; other) const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; EditTrigger &gt;</type>
      <name>operator|</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a3c576be0331f4d53bc954003c4b6af68</anchor>
      <arglist>(EditTrigger other) const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; EditTrigger &gt; &amp;</type>
      <name>operator|=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>ab8dcdda2833b9a423d424af93d4629e7</anchor>
      <arglist>(WFlags&lt; EditTrigger &gt; other)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; EditTrigger &gt; &amp;</type>
      <name>operator|=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>afe78c22fe47491a9bbe89ecafe88b215</anchor>
      <arglist>(EditTrigger other)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; EditTrigger &gt;</type>
      <name>operator~</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>ab4ffd437d69da401e0ffc8dc1fbba05b</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>WFlags&lt; GLRenderOption &gt;</name>
    <filename>classWt_1_1WFlags.html</filename>
    <member kind="function">
      <type></type>
      <name>WFlags</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a866ce1716c87b4c1f47b3021b0805ace</anchor>
      <arglist>(NoFlagsType none=None)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WFlags</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>aff76055d02d80739d8c6690acea2987d</anchor>
      <arglist>(GLRenderOption flag)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WFlags</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a66d179908503a36d61b25ec6eaefc325</anchor>
      <arglist>(const WFlags&lt; GLRenderOption &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; GLRenderOption &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>ad393bae4f713eaf6b4ed962a3cc60343</anchor>
      <arglist>(const WFlags&lt; GLRenderOption &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; GLRenderOption &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>ab41240e9031411e48694dfd0335adbe1</anchor>
      <arglist>(const GLRenderOption other)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>test</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a91a1f471ef60b8bc8abf45cdcc68f576</anchor>
      <arglist>(GLRenderOption flag) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>empty</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a8e7bdca91df4a68c0ed8116187529323</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; GLRenderOption &gt; &amp;</type>
      <name>clear</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a971f9fc03d038ae212ca0165f0a5a6b1</anchor>
      <arglist>(GLRenderOption value)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator GLRenderOption</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>aa6a1a9b16589ab738208fbaa48a90c5e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a2d88f1be491cfacebfd9d1e2a841b4bb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; GLRenderOption &gt;</type>
      <name>operator&amp;</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>af9aea2bb3a973f548e553dfb143a103e</anchor>
      <arglist>(GLRenderOption mask) const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; GLRenderOption &gt;</type>
      <name>operator&amp;</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>ace4ba410e4bbe24795a9c5e3e76a73c2</anchor>
      <arglist>(MaskType mask) const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; GLRenderOption &gt; &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a292599924fcaea5dc0a6faefb46fb75b</anchor>
      <arglist>(GLRenderOption mask)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; GLRenderOption &gt; &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a6f6f0e9a5491cd2be7d0e2d5056bf477</anchor>
      <arglist>(MaskType mask)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; GLRenderOption &gt;</type>
      <name>operator^</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a82376f146983333700b96d1e59a7da5a</anchor>
      <arglist>(WFlags&lt; GLRenderOption &gt; other) const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; GLRenderOption &gt;</type>
      <name>operator^</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a188f5274b86795945a6fc677110dc2a5</anchor>
      <arglist>(GLRenderOption other) const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; GLRenderOption &gt; &amp;</type>
      <name>operator^=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a7ba6ca4a33b6e86a41032f5e62ce4e7a</anchor>
      <arglist>(WFlags&lt; GLRenderOption &gt; other)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; GLRenderOption &gt; &amp;</type>
      <name>operator^=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a95a44ac96b3e1c090ba03110e46601b0</anchor>
      <arglist>(GLRenderOption other)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; GLRenderOption &gt;</type>
      <name>operator|</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>acf18d53ea75bcb921199c75e6eb6079a</anchor>
      <arglist>(WFlags&lt; GLRenderOption &gt; other) const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; GLRenderOption &gt;</type>
      <name>operator|</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a3c576be0331f4d53bc954003c4b6af68</anchor>
      <arglist>(GLRenderOption other) const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; GLRenderOption &gt; &amp;</type>
      <name>operator|=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>ab8dcdda2833b9a423d424af93d4629e7</anchor>
      <arglist>(WFlags&lt; GLRenderOption &gt; other)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; GLRenderOption &gt; &amp;</type>
      <name>operator|=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>afe78c22fe47491a9bbe89ecafe88b215</anchor>
      <arglist>(GLRenderOption other)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; GLRenderOption &gt;</type>
      <name>operator~</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>ab4ffd437d69da401e0ffc8dc1fbba05b</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>WFlags&lt; HeaderFlag &gt;</name>
    <filename>classWt_1_1WFlags.html</filename>
    <member kind="function">
      <type></type>
      <name>WFlags</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a866ce1716c87b4c1f47b3021b0805ace</anchor>
      <arglist>(NoFlagsType none=None)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WFlags</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>aff76055d02d80739d8c6690acea2987d</anchor>
      <arglist>(HeaderFlag flag)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WFlags</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a66d179908503a36d61b25ec6eaefc325</anchor>
      <arglist>(const WFlags&lt; HeaderFlag &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; HeaderFlag &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>ad393bae4f713eaf6b4ed962a3cc60343</anchor>
      <arglist>(const WFlags&lt; HeaderFlag &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; HeaderFlag &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>ab41240e9031411e48694dfd0335adbe1</anchor>
      <arglist>(const HeaderFlag other)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>test</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a91a1f471ef60b8bc8abf45cdcc68f576</anchor>
      <arglist>(HeaderFlag flag) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>empty</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a8e7bdca91df4a68c0ed8116187529323</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; HeaderFlag &gt; &amp;</type>
      <name>clear</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a971f9fc03d038ae212ca0165f0a5a6b1</anchor>
      <arglist>(HeaderFlag value)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator HeaderFlag</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>aa6a1a9b16589ab738208fbaa48a90c5e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a2d88f1be491cfacebfd9d1e2a841b4bb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; HeaderFlag &gt;</type>
      <name>operator&amp;</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>af9aea2bb3a973f548e553dfb143a103e</anchor>
      <arglist>(HeaderFlag mask) const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; HeaderFlag &gt;</type>
      <name>operator&amp;</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>ace4ba410e4bbe24795a9c5e3e76a73c2</anchor>
      <arglist>(MaskType mask) const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; HeaderFlag &gt; &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a292599924fcaea5dc0a6faefb46fb75b</anchor>
      <arglist>(HeaderFlag mask)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; HeaderFlag &gt; &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a6f6f0e9a5491cd2be7d0e2d5056bf477</anchor>
      <arglist>(MaskType mask)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; HeaderFlag &gt;</type>
      <name>operator^</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a82376f146983333700b96d1e59a7da5a</anchor>
      <arglist>(WFlags&lt; HeaderFlag &gt; other) const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; HeaderFlag &gt;</type>
      <name>operator^</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a188f5274b86795945a6fc677110dc2a5</anchor>
      <arglist>(HeaderFlag other) const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; HeaderFlag &gt; &amp;</type>
      <name>operator^=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a7ba6ca4a33b6e86a41032f5e62ce4e7a</anchor>
      <arglist>(WFlags&lt; HeaderFlag &gt; other)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; HeaderFlag &gt; &amp;</type>
      <name>operator^=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a95a44ac96b3e1c090ba03110e46601b0</anchor>
      <arglist>(HeaderFlag other)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; HeaderFlag &gt;</type>
      <name>operator|</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>acf18d53ea75bcb921199c75e6eb6079a</anchor>
      <arglist>(WFlags&lt; HeaderFlag &gt; other) const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; HeaderFlag &gt;</type>
      <name>operator|</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a3c576be0331f4d53bc954003c4b6af68</anchor>
      <arglist>(HeaderFlag other) const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; HeaderFlag &gt; &amp;</type>
      <name>operator|=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>ab8dcdda2833b9a423d424af93d4629e7</anchor>
      <arglist>(WFlags&lt; HeaderFlag &gt; other)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; HeaderFlag &gt; &amp;</type>
      <name>operator|=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>afe78c22fe47491a9bbe89ecafe88b215</anchor>
      <arglist>(HeaderFlag other)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; HeaderFlag &gt;</type>
      <name>operator~</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>ab4ffd437d69da401e0ffc8dc1fbba05b</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>WFlags&lt; InputMaskFlag &gt;</name>
    <filename>classWt_1_1WFlags.html</filename>
    <member kind="function">
      <type></type>
      <name>WFlags</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a866ce1716c87b4c1f47b3021b0805ace</anchor>
      <arglist>(NoFlagsType none=None)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WFlags</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>aff76055d02d80739d8c6690acea2987d</anchor>
      <arglist>(InputMaskFlag flag)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WFlags</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a66d179908503a36d61b25ec6eaefc325</anchor>
      <arglist>(const WFlags&lt; InputMaskFlag &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; InputMaskFlag &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>ad393bae4f713eaf6b4ed962a3cc60343</anchor>
      <arglist>(const WFlags&lt; InputMaskFlag &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; InputMaskFlag &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>ab41240e9031411e48694dfd0335adbe1</anchor>
      <arglist>(const InputMaskFlag other)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>test</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a91a1f471ef60b8bc8abf45cdcc68f576</anchor>
      <arglist>(InputMaskFlag flag) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>empty</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a8e7bdca91df4a68c0ed8116187529323</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; InputMaskFlag &gt; &amp;</type>
      <name>clear</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a971f9fc03d038ae212ca0165f0a5a6b1</anchor>
      <arglist>(InputMaskFlag value)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator InputMaskFlag</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>aa6a1a9b16589ab738208fbaa48a90c5e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a2d88f1be491cfacebfd9d1e2a841b4bb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; InputMaskFlag &gt;</type>
      <name>operator&amp;</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>af9aea2bb3a973f548e553dfb143a103e</anchor>
      <arglist>(InputMaskFlag mask) const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; InputMaskFlag &gt;</type>
      <name>operator&amp;</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>ace4ba410e4bbe24795a9c5e3e76a73c2</anchor>
      <arglist>(MaskType mask) const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; InputMaskFlag &gt; &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a292599924fcaea5dc0a6faefb46fb75b</anchor>
      <arglist>(InputMaskFlag mask)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; InputMaskFlag &gt; &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a6f6f0e9a5491cd2be7d0e2d5056bf477</anchor>
      <arglist>(MaskType mask)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; InputMaskFlag &gt;</type>
      <name>operator^</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a82376f146983333700b96d1e59a7da5a</anchor>
      <arglist>(WFlags&lt; InputMaskFlag &gt; other) const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; InputMaskFlag &gt;</type>
      <name>operator^</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a188f5274b86795945a6fc677110dc2a5</anchor>
      <arglist>(InputMaskFlag other) const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; InputMaskFlag &gt; &amp;</type>
      <name>operator^=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a7ba6ca4a33b6e86a41032f5e62ce4e7a</anchor>
      <arglist>(WFlags&lt; InputMaskFlag &gt; other)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; InputMaskFlag &gt; &amp;</type>
      <name>operator^=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a95a44ac96b3e1c090ba03110e46601b0</anchor>
      <arglist>(InputMaskFlag other)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; InputMaskFlag &gt;</type>
      <name>operator|</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>acf18d53ea75bcb921199c75e6eb6079a</anchor>
      <arglist>(WFlags&lt; InputMaskFlag &gt; other) const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; InputMaskFlag &gt;</type>
      <name>operator|</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a3c576be0331f4d53bc954003c4b6af68</anchor>
      <arglist>(InputMaskFlag other) const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; InputMaskFlag &gt; &amp;</type>
      <name>operator|=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>ab8dcdda2833b9a423d424af93d4629e7</anchor>
      <arglist>(WFlags&lt; InputMaskFlag &gt; other)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; InputMaskFlag &gt; &amp;</type>
      <name>operator|=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>afe78c22fe47491a9bbe89ecafe88b215</anchor>
      <arglist>(InputMaskFlag other)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; InputMaskFlag &gt;</type>
      <name>operator~</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>ab4ffd437d69da401e0ffc8dc1fbba05b</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>WFlags&lt; ItemFlag &gt;</name>
    <filename>classWt_1_1WFlags.html</filename>
    <member kind="function">
      <type></type>
      <name>WFlags</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a866ce1716c87b4c1f47b3021b0805ace</anchor>
      <arglist>(NoFlagsType none=None)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WFlags</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>aff76055d02d80739d8c6690acea2987d</anchor>
      <arglist>(ItemFlag flag)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WFlags</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a66d179908503a36d61b25ec6eaefc325</anchor>
      <arglist>(const WFlags&lt; ItemFlag &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; ItemFlag &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>ad393bae4f713eaf6b4ed962a3cc60343</anchor>
      <arglist>(const WFlags&lt; ItemFlag &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; ItemFlag &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>ab41240e9031411e48694dfd0335adbe1</anchor>
      <arglist>(const ItemFlag other)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>test</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a91a1f471ef60b8bc8abf45cdcc68f576</anchor>
      <arglist>(ItemFlag flag) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>empty</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a8e7bdca91df4a68c0ed8116187529323</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; ItemFlag &gt; &amp;</type>
      <name>clear</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a971f9fc03d038ae212ca0165f0a5a6b1</anchor>
      <arglist>(ItemFlag value)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator ItemFlag</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>aa6a1a9b16589ab738208fbaa48a90c5e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a2d88f1be491cfacebfd9d1e2a841b4bb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; ItemFlag &gt;</type>
      <name>operator&amp;</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>af9aea2bb3a973f548e553dfb143a103e</anchor>
      <arglist>(ItemFlag mask) const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; ItemFlag &gt;</type>
      <name>operator&amp;</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>ace4ba410e4bbe24795a9c5e3e76a73c2</anchor>
      <arglist>(MaskType mask) const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; ItemFlag &gt; &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a292599924fcaea5dc0a6faefb46fb75b</anchor>
      <arglist>(ItemFlag mask)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; ItemFlag &gt; &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a6f6f0e9a5491cd2be7d0e2d5056bf477</anchor>
      <arglist>(MaskType mask)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; ItemFlag &gt;</type>
      <name>operator^</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a82376f146983333700b96d1e59a7da5a</anchor>
      <arglist>(WFlags&lt; ItemFlag &gt; other) const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; ItemFlag &gt;</type>
      <name>operator^</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a188f5274b86795945a6fc677110dc2a5</anchor>
      <arglist>(ItemFlag other) const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; ItemFlag &gt; &amp;</type>
      <name>operator^=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a7ba6ca4a33b6e86a41032f5e62ce4e7a</anchor>
      <arglist>(WFlags&lt; ItemFlag &gt; other)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; ItemFlag &gt; &amp;</type>
      <name>operator^=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a95a44ac96b3e1c090ba03110e46601b0</anchor>
      <arglist>(ItemFlag other)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; ItemFlag &gt;</type>
      <name>operator|</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>acf18d53ea75bcb921199c75e6eb6079a</anchor>
      <arglist>(WFlags&lt; ItemFlag &gt; other) const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; ItemFlag &gt;</type>
      <name>operator|</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a3c576be0331f4d53bc954003c4b6af68</anchor>
      <arglist>(ItemFlag other) const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; ItemFlag &gt; &amp;</type>
      <name>operator|=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>ab8dcdda2833b9a423d424af93d4629e7</anchor>
      <arglist>(WFlags&lt; ItemFlag &gt; other)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; ItemFlag &gt; &amp;</type>
      <name>operator|=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>afe78c22fe47491a9bbe89ecafe88b215</anchor>
      <arglist>(ItemFlag other)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; ItemFlag &gt;</type>
      <name>operator~</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>ab4ffd437d69da401e0ffc8dc1fbba05b</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>WFlags&lt; KeyboardModifier &gt;</name>
    <filename>classWt_1_1WFlags.html</filename>
    <member kind="function">
      <type></type>
      <name>WFlags</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a866ce1716c87b4c1f47b3021b0805ace</anchor>
      <arglist>(NoFlagsType none=None)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WFlags</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>aff76055d02d80739d8c6690acea2987d</anchor>
      <arglist>(KeyboardModifier flag)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WFlags</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a66d179908503a36d61b25ec6eaefc325</anchor>
      <arglist>(const WFlags&lt; KeyboardModifier &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; KeyboardModifier &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>ad393bae4f713eaf6b4ed962a3cc60343</anchor>
      <arglist>(const WFlags&lt; KeyboardModifier &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; KeyboardModifier &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>ab41240e9031411e48694dfd0335adbe1</anchor>
      <arglist>(const KeyboardModifier other)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>test</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a91a1f471ef60b8bc8abf45cdcc68f576</anchor>
      <arglist>(KeyboardModifier flag) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>empty</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a8e7bdca91df4a68c0ed8116187529323</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; KeyboardModifier &gt; &amp;</type>
      <name>clear</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a971f9fc03d038ae212ca0165f0a5a6b1</anchor>
      <arglist>(KeyboardModifier value)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator KeyboardModifier</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>aa6a1a9b16589ab738208fbaa48a90c5e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a2d88f1be491cfacebfd9d1e2a841b4bb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; KeyboardModifier &gt;</type>
      <name>operator&amp;</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>af9aea2bb3a973f548e553dfb143a103e</anchor>
      <arglist>(KeyboardModifier mask) const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; KeyboardModifier &gt;</type>
      <name>operator&amp;</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>ace4ba410e4bbe24795a9c5e3e76a73c2</anchor>
      <arglist>(MaskType mask) const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; KeyboardModifier &gt; &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a292599924fcaea5dc0a6faefb46fb75b</anchor>
      <arglist>(KeyboardModifier mask)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; KeyboardModifier &gt; &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a6f6f0e9a5491cd2be7d0e2d5056bf477</anchor>
      <arglist>(MaskType mask)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; KeyboardModifier &gt;</type>
      <name>operator^</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a82376f146983333700b96d1e59a7da5a</anchor>
      <arglist>(WFlags&lt; KeyboardModifier &gt; other) const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; KeyboardModifier &gt;</type>
      <name>operator^</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a188f5274b86795945a6fc677110dc2a5</anchor>
      <arglist>(KeyboardModifier other) const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; KeyboardModifier &gt; &amp;</type>
      <name>operator^=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a7ba6ca4a33b6e86a41032f5e62ce4e7a</anchor>
      <arglist>(WFlags&lt; KeyboardModifier &gt; other)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; KeyboardModifier &gt; &amp;</type>
      <name>operator^=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a95a44ac96b3e1c090ba03110e46601b0</anchor>
      <arglist>(KeyboardModifier other)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; KeyboardModifier &gt;</type>
      <name>operator|</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>acf18d53ea75bcb921199c75e6eb6079a</anchor>
      <arglist>(WFlags&lt; KeyboardModifier &gt; other) const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; KeyboardModifier &gt;</type>
      <name>operator|</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a3c576be0331f4d53bc954003c4b6af68</anchor>
      <arglist>(KeyboardModifier other) const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; KeyboardModifier &gt; &amp;</type>
      <name>operator|=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>ab8dcdda2833b9a423d424af93d4629e7</anchor>
      <arglist>(WFlags&lt; KeyboardModifier &gt; other)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; KeyboardModifier &gt; &amp;</type>
      <name>operator|=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>afe78c22fe47491a9bbe89ecafe88b215</anchor>
      <arglist>(KeyboardModifier other)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; KeyboardModifier &gt;</type>
      <name>operator~</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>ab4ffd437d69da401e0ffc8dc1fbba05b</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>WFlags&lt; LabelOption &gt;</name>
    <filename>classWt_1_1WFlags.html</filename>
    <member kind="function">
      <type></type>
      <name>WFlags</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a866ce1716c87b4c1f47b3021b0805ace</anchor>
      <arglist>(NoFlagsType none=None)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WFlags</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>aff76055d02d80739d8c6690acea2987d</anchor>
      <arglist>(LabelOption flag)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WFlags</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a66d179908503a36d61b25ec6eaefc325</anchor>
      <arglist>(const WFlags&lt; LabelOption &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; LabelOption &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>ad393bae4f713eaf6b4ed962a3cc60343</anchor>
      <arglist>(const WFlags&lt; LabelOption &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; LabelOption &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>ab41240e9031411e48694dfd0335adbe1</anchor>
      <arglist>(const LabelOption other)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>test</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a91a1f471ef60b8bc8abf45cdcc68f576</anchor>
      <arglist>(LabelOption flag) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>empty</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a8e7bdca91df4a68c0ed8116187529323</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; LabelOption &gt; &amp;</type>
      <name>clear</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a971f9fc03d038ae212ca0165f0a5a6b1</anchor>
      <arglist>(LabelOption value)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator LabelOption</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>aa6a1a9b16589ab738208fbaa48a90c5e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a2d88f1be491cfacebfd9d1e2a841b4bb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; LabelOption &gt;</type>
      <name>operator&amp;</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>af9aea2bb3a973f548e553dfb143a103e</anchor>
      <arglist>(LabelOption mask) const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; LabelOption &gt;</type>
      <name>operator&amp;</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>ace4ba410e4bbe24795a9c5e3e76a73c2</anchor>
      <arglist>(MaskType mask) const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; LabelOption &gt; &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a292599924fcaea5dc0a6faefb46fb75b</anchor>
      <arglist>(LabelOption mask)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; LabelOption &gt; &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a6f6f0e9a5491cd2be7d0e2d5056bf477</anchor>
      <arglist>(MaskType mask)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; LabelOption &gt;</type>
      <name>operator^</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a82376f146983333700b96d1e59a7da5a</anchor>
      <arglist>(WFlags&lt; LabelOption &gt; other) const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; LabelOption &gt;</type>
      <name>operator^</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a188f5274b86795945a6fc677110dc2a5</anchor>
      <arglist>(LabelOption other) const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; LabelOption &gt; &amp;</type>
      <name>operator^=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a7ba6ca4a33b6e86a41032f5e62ce4e7a</anchor>
      <arglist>(WFlags&lt; LabelOption &gt; other)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; LabelOption &gt; &amp;</type>
      <name>operator^=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a95a44ac96b3e1c090ba03110e46601b0</anchor>
      <arglist>(LabelOption other)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; LabelOption &gt;</type>
      <name>operator|</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>acf18d53ea75bcb921199c75e6eb6079a</anchor>
      <arglist>(WFlags&lt; LabelOption &gt; other) const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; LabelOption &gt;</type>
      <name>operator|</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a3c576be0331f4d53bc954003c4b6af68</anchor>
      <arglist>(LabelOption other) const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; LabelOption &gt; &amp;</type>
      <name>operator|=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>ab8dcdda2833b9a423d424af93d4629e7</anchor>
      <arglist>(WFlags&lt; LabelOption &gt; other)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; LabelOption &gt; &amp;</type>
      <name>operator|=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>afe78c22fe47491a9bbe89ecafe88b215</anchor>
      <arglist>(LabelOption other)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; LabelOption &gt;</type>
      <name>operator~</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>ab4ffd437d69da401e0ffc8dc1fbba05b</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>WFlags&lt; Orientation &gt;</name>
    <filename>classWt_1_1WFlags.html</filename>
    <member kind="function">
      <type></type>
      <name>WFlags</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a866ce1716c87b4c1f47b3021b0805ace</anchor>
      <arglist>(NoFlagsType none=None)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WFlags</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>aff76055d02d80739d8c6690acea2987d</anchor>
      <arglist>(Orientation flag)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WFlags</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a66d179908503a36d61b25ec6eaefc325</anchor>
      <arglist>(const WFlags&lt; Orientation &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; Orientation &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>ad393bae4f713eaf6b4ed962a3cc60343</anchor>
      <arglist>(const WFlags&lt; Orientation &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; Orientation &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>ab41240e9031411e48694dfd0335adbe1</anchor>
      <arglist>(const Orientation other)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>test</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a91a1f471ef60b8bc8abf45cdcc68f576</anchor>
      <arglist>(Orientation flag) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>empty</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a8e7bdca91df4a68c0ed8116187529323</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; Orientation &gt; &amp;</type>
      <name>clear</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a971f9fc03d038ae212ca0165f0a5a6b1</anchor>
      <arglist>(Orientation value)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator Orientation</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>aa6a1a9b16589ab738208fbaa48a90c5e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a2d88f1be491cfacebfd9d1e2a841b4bb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; Orientation &gt;</type>
      <name>operator&amp;</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>af9aea2bb3a973f548e553dfb143a103e</anchor>
      <arglist>(Orientation mask) const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; Orientation &gt;</type>
      <name>operator&amp;</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>ace4ba410e4bbe24795a9c5e3e76a73c2</anchor>
      <arglist>(MaskType mask) const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; Orientation &gt; &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a292599924fcaea5dc0a6faefb46fb75b</anchor>
      <arglist>(Orientation mask)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; Orientation &gt; &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a6f6f0e9a5491cd2be7d0e2d5056bf477</anchor>
      <arglist>(MaskType mask)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; Orientation &gt;</type>
      <name>operator^</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a82376f146983333700b96d1e59a7da5a</anchor>
      <arglist>(WFlags&lt; Orientation &gt; other) const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; Orientation &gt;</type>
      <name>operator^</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a188f5274b86795945a6fc677110dc2a5</anchor>
      <arglist>(Orientation other) const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; Orientation &gt; &amp;</type>
      <name>operator^=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a7ba6ca4a33b6e86a41032f5e62ce4e7a</anchor>
      <arglist>(WFlags&lt; Orientation &gt; other)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; Orientation &gt; &amp;</type>
      <name>operator^=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a95a44ac96b3e1c090ba03110e46601b0</anchor>
      <arglist>(Orientation other)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; Orientation &gt;</type>
      <name>operator|</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>acf18d53ea75bcb921199c75e6eb6079a</anchor>
      <arglist>(WFlags&lt; Orientation &gt; other) const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; Orientation &gt;</type>
      <name>operator|</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a3c576be0331f4d53bc954003c4b6af68</anchor>
      <arglist>(Orientation other) const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; Orientation &gt; &amp;</type>
      <name>operator|=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>ab8dcdda2833b9a423d424af93d4629e7</anchor>
      <arglist>(WFlags&lt; Orientation &gt; other)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; Orientation &gt; &amp;</type>
      <name>operator|=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>afe78c22fe47491a9bbe89ecafe88b215</anchor>
      <arglist>(Orientation other)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; Orientation &gt;</type>
      <name>operator~</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>ab4ffd437d69da401e0ffc8dc1fbba05b</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>WFlags&lt; PainterChangeFlag &gt;</name>
    <filename>classWt_1_1WFlags.html</filename>
    <member kind="function">
      <type></type>
      <name>WFlags</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a866ce1716c87b4c1f47b3021b0805ace</anchor>
      <arglist>(NoFlagsType none=None)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WFlags</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>aff76055d02d80739d8c6690acea2987d</anchor>
      <arglist>(PainterChangeFlag flag)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WFlags</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a66d179908503a36d61b25ec6eaefc325</anchor>
      <arglist>(const WFlags&lt; PainterChangeFlag &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; PainterChangeFlag &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>ad393bae4f713eaf6b4ed962a3cc60343</anchor>
      <arglist>(const WFlags&lt; PainterChangeFlag &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; PainterChangeFlag &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>ab41240e9031411e48694dfd0335adbe1</anchor>
      <arglist>(const PainterChangeFlag other)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>test</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a91a1f471ef60b8bc8abf45cdcc68f576</anchor>
      <arglist>(PainterChangeFlag flag) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>empty</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a8e7bdca91df4a68c0ed8116187529323</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; PainterChangeFlag &gt; &amp;</type>
      <name>clear</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a971f9fc03d038ae212ca0165f0a5a6b1</anchor>
      <arglist>(PainterChangeFlag value)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator PainterChangeFlag</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>aa6a1a9b16589ab738208fbaa48a90c5e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a2d88f1be491cfacebfd9d1e2a841b4bb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; PainterChangeFlag &gt;</type>
      <name>operator&amp;</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>af9aea2bb3a973f548e553dfb143a103e</anchor>
      <arglist>(PainterChangeFlag mask) const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; PainterChangeFlag &gt;</type>
      <name>operator&amp;</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>ace4ba410e4bbe24795a9c5e3e76a73c2</anchor>
      <arglist>(MaskType mask) const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; PainterChangeFlag &gt; &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a292599924fcaea5dc0a6faefb46fb75b</anchor>
      <arglist>(PainterChangeFlag mask)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; PainterChangeFlag &gt; &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a6f6f0e9a5491cd2be7d0e2d5056bf477</anchor>
      <arglist>(MaskType mask)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; PainterChangeFlag &gt;</type>
      <name>operator^</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a82376f146983333700b96d1e59a7da5a</anchor>
      <arglist>(WFlags&lt; PainterChangeFlag &gt; other) const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; PainterChangeFlag &gt;</type>
      <name>operator^</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a188f5274b86795945a6fc677110dc2a5</anchor>
      <arglist>(PainterChangeFlag other) const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; PainterChangeFlag &gt; &amp;</type>
      <name>operator^=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a7ba6ca4a33b6e86a41032f5e62ce4e7a</anchor>
      <arglist>(WFlags&lt; PainterChangeFlag &gt; other)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; PainterChangeFlag &gt; &amp;</type>
      <name>operator^=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a95a44ac96b3e1c090ba03110e46601b0</anchor>
      <arglist>(PainterChangeFlag other)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; PainterChangeFlag &gt;</type>
      <name>operator|</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>acf18d53ea75bcb921199c75e6eb6079a</anchor>
      <arglist>(WFlags&lt; PainterChangeFlag &gt; other) const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; PainterChangeFlag &gt;</type>
      <name>operator|</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a3c576be0331f4d53bc954003c4b6af68</anchor>
      <arglist>(PainterChangeFlag other) const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; PainterChangeFlag &gt; &amp;</type>
      <name>operator|=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>ab8dcdda2833b9a423d424af93d4629e7</anchor>
      <arglist>(WFlags&lt; PainterChangeFlag &gt; other)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; PainterChangeFlag &gt; &amp;</type>
      <name>operator|=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>afe78c22fe47491a9bbe89ecafe88b215</anchor>
      <arglist>(PainterChangeFlag other)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; PainterChangeFlag &gt;</type>
      <name>operator~</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>ab4ffd437d69da401e0ffc8dc1fbba05b</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>WFlags&lt; PaintFlag &gt;</name>
    <filename>classWt_1_1WFlags.html</filename>
    <member kind="function">
      <type></type>
      <name>WFlags</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a866ce1716c87b4c1f47b3021b0805ace</anchor>
      <arglist>(NoFlagsType none=None)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WFlags</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>aff76055d02d80739d8c6690acea2987d</anchor>
      <arglist>(PaintFlag flag)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WFlags</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a66d179908503a36d61b25ec6eaefc325</anchor>
      <arglist>(const WFlags&lt; PaintFlag &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; PaintFlag &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>ad393bae4f713eaf6b4ed962a3cc60343</anchor>
      <arglist>(const WFlags&lt; PaintFlag &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; PaintFlag &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>ab41240e9031411e48694dfd0335adbe1</anchor>
      <arglist>(const PaintFlag other)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>test</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a91a1f471ef60b8bc8abf45cdcc68f576</anchor>
      <arglist>(PaintFlag flag) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>empty</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a8e7bdca91df4a68c0ed8116187529323</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; PaintFlag &gt; &amp;</type>
      <name>clear</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a971f9fc03d038ae212ca0165f0a5a6b1</anchor>
      <arglist>(PaintFlag value)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator PaintFlag</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>aa6a1a9b16589ab738208fbaa48a90c5e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a2d88f1be491cfacebfd9d1e2a841b4bb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; PaintFlag &gt;</type>
      <name>operator&amp;</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>af9aea2bb3a973f548e553dfb143a103e</anchor>
      <arglist>(PaintFlag mask) const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; PaintFlag &gt;</type>
      <name>operator&amp;</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>ace4ba410e4bbe24795a9c5e3e76a73c2</anchor>
      <arglist>(MaskType mask) const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; PaintFlag &gt; &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a292599924fcaea5dc0a6faefb46fb75b</anchor>
      <arglist>(PaintFlag mask)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; PaintFlag &gt; &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a6f6f0e9a5491cd2be7d0e2d5056bf477</anchor>
      <arglist>(MaskType mask)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; PaintFlag &gt;</type>
      <name>operator^</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a82376f146983333700b96d1e59a7da5a</anchor>
      <arglist>(WFlags&lt; PaintFlag &gt; other) const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; PaintFlag &gt;</type>
      <name>operator^</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a188f5274b86795945a6fc677110dc2a5</anchor>
      <arglist>(PaintFlag other) const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; PaintFlag &gt; &amp;</type>
      <name>operator^=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a7ba6ca4a33b6e86a41032f5e62ce4e7a</anchor>
      <arglist>(WFlags&lt; PaintFlag &gt; other)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; PaintFlag &gt; &amp;</type>
      <name>operator^=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a95a44ac96b3e1c090ba03110e46601b0</anchor>
      <arglist>(PaintFlag other)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; PaintFlag &gt;</type>
      <name>operator|</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>acf18d53ea75bcb921199c75e6eb6079a</anchor>
      <arglist>(WFlags&lt; PaintFlag &gt; other) const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; PaintFlag &gt;</type>
      <name>operator|</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a3c576be0331f4d53bc954003c4b6af68</anchor>
      <arglist>(PaintFlag other) const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; PaintFlag &gt; &amp;</type>
      <name>operator|=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>ab8dcdda2833b9a423d424af93d4629e7</anchor>
      <arglist>(WFlags&lt; PaintFlag &gt; other)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; PaintFlag &gt; &amp;</type>
      <name>operator|=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>afe78c22fe47491a9bbe89ecafe88b215</anchor>
      <arglist>(PaintFlag other)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; PaintFlag &gt;</type>
      <name>operator~</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>ab4ffd437d69da401e0ffc8dc1fbba05b</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>WFlags&lt; PlayerOption &gt;</name>
    <filename>classWt_1_1WFlags.html</filename>
    <member kind="function">
      <type></type>
      <name>WFlags</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a866ce1716c87b4c1f47b3021b0805ace</anchor>
      <arglist>(NoFlagsType none=None)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WFlags</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>aff76055d02d80739d8c6690acea2987d</anchor>
      <arglist>(PlayerOption flag)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WFlags</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a66d179908503a36d61b25ec6eaefc325</anchor>
      <arglist>(const WFlags&lt; PlayerOption &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; PlayerOption &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>ad393bae4f713eaf6b4ed962a3cc60343</anchor>
      <arglist>(const WFlags&lt; PlayerOption &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; PlayerOption &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>ab41240e9031411e48694dfd0335adbe1</anchor>
      <arglist>(const PlayerOption other)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>test</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a91a1f471ef60b8bc8abf45cdcc68f576</anchor>
      <arglist>(PlayerOption flag) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>empty</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a8e7bdca91df4a68c0ed8116187529323</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; PlayerOption &gt; &amp;</type>
      <name>clear</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a971f9fc03d038ae212ca0165f0a5a6b1</anchor>
      <arglist>(PlayerOption value)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator PlayerOption</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>aa6a1a9b16589ab738208fbaa48a90c5e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a2d88f1be491cfacebfd9d1e2a841b4bb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; PlayerOption &gt;</type>
      <name>operator&amp;</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>af9aea2bb3a973f548e553dfb143a103e</anchor>
      <arglist>(PlayerOption mask) const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; PlayerOption &gt;</type>
      <name>operator&amp;</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>ace4ba410e4bbe24795a9c5e3e76a73c2</anchor>
      <arglist>(MaskType mask) const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; PlayerOption &gt; &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a292599924fcaea5dc0a6faefb46fb75b</anchor>
      <arglist>(PlayerOption mask)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; PlayerOption &gt; &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a6f6f0e9a5491cd2be7d0e2d5056bf477</anchor>
      <arglist>(MaskType mask)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; PlayerOption &gt;</type>
      <name>operator^</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a82376f146983333700b96d1e59a7da5a</anchor>
      <arglist>(WFlags&lt; PlayerOption &gt; other) const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; PlayerOption &gt;</type>
      <name>operator^</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a188f5274b86795945a6fc677110dc2a5</anchor>
      <arglist>(PlayerOption other) const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; PlayerOption &gt; &amp;</type>
      <name>operator^=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a7ba6ca4a33b6e86a41032f5e62ce4e7a</anchor>
      <arglist>(WFlags&lt; PlayerOption &gt; other)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; PlayerOption &gt; &amp;</type>
      <name>operator^=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a95a44ac96b3e1c090ba03110e46601b0</anchor>
      <arglist>(PlayerOption other)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; PlayerOption &gt;</type>
      <name>operator|</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>acf18d53ea75bcb921199c75e6eb6079a</anchor>
      <arglist>(WFlags&lt; PlayerOption &gt; other) const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; PlayerOption &gt;</type>
      <name>operator|</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a3c576be0331f4d53bc954003c4b6af68</anchor>
      <arglist>(PlayerOption other) const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; PlayerOption &gt; &amp;</type>
      <name>operator|=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>ab8dcdda2833b9a423d424af93d4629e7</anchor>
      <arglist>(WFlags&lt; PlayerOption &gt; other)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; PlayerOption &gt; &amp;</type>
      <name>operator|=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>afe78c22fe47491a9bbe89ecafe88b215</anchor>
      <arglist>(PlayerOption other)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; PlayerOption &gt;</type>
      <name>operator~</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>ab4ffd437d69da401e0ffc8dc1fbba05b</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>WFlags&lt; RenderHint &gt;</name>
    <filename>classWt_1_1WFlags.html</filename>
    <member kind="function">
      <type></type>
      <name>WFlags</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a866ce1716c87b4c1f47b3021b0805ace</anchor>
      <arglist>(NoFlagsType none=None)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WFlags</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>aff76055d02d80739d8c6690acea2987d</anchor>
      <arglist>(RenderHint flag)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WFlags</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a66d179908503a36d61b25ec6eaefc325</anchor>
      <arglist>(const WFlags&lt; RenderHint &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; RenderHint &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>ad393bae4f713eaf6b4ed962a3cc60343</anchor>
      <arglist>(const WFlags&lt; RenderHint &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; RenderHint &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>ab41240e9031411e48694dfd0335adbe1</anchor>
      <arglist>(const RenderHint other)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>test</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a91a1f471ef60b8bc8abf45cdcc68f576</anchor>
      <arglist>(RenderHint flag) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>empty</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a8e7bdca91df4a68c0ed8116187529323</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; RenderHint &gt; &amp;</type>
      <name>clear</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a971f9fc03d038ae212ca0165f0a5a6b1</anchor>
      <arglist>(RenderHint value)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator RenderHint</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>aa6a1a9b16589ab738208fbaa48a90c5e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a2d88f1be491cfacebfd9d1e2a841b4bb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; RenderHint &gt;</type>
      <name>operator&amp;</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>af9aea2bb3a973f548e553dfb143a103e</anchor>
      <arglist>(RenderHint mask) const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; RenderHint &gt;</type>
      <name>operator&amp;</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>ace4ba410e4bbe24795a9c5e3e76a73c2</anchor>
      <arglist>(MaskType mask) const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; RenderHint &gt; &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a292599924fcaea5dc0a6faefb46fb75b</anchor>
      <arglist>(RenderHint mask)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; RenderHint &gt; &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a6f6f0e9a5491cd2be7d0e2d5056bf477</anchor>
      <arglist>(MaskType mask)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; RenderHint &gt;</type>
      <name>operator^</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a82376f146983333700b96d1e59a7da5a</anchor>
      <arglist>(WFlags&lt; RenderHint &gt; other) const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; RenderHint &gt;</type>
      <name>operator^</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a188f5274b86795945a6fc677110dc2a5</anchor>
      <arglist>(RenderHint other) const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; RenderHint &gt; &amp;</type>
      <name>operator^=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a7ba6ca4a33b6e86a41032f5e62ce4e7a</anchor>
      <arglist>(WFlags&lt; RenderHint &gt; other)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; RenderHint &gt; &amp;</type>
      <name>operator^=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a95a44ac96b3e1c090ba03110e46601b0</anchor>
      <arglist>(RenderHint other)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; RenderHint &gt;</type>
      <name>operator|</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>acf18d53ea75bcb921199c75e6eb6079a</anchor>
      <arglist>(WFlags&lt; RenderHint &gt; other) const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; RenderHint &gt;</type>
      <name>operator|</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a3c576be0331f4d53bc954003c4b6af68</anchor>
      <arglist>(RenderHint other) const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; RenderHint &gt; &amp;</type>
      <name>operator|=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>ab8dcdda2833b9a423d424af93d4629e7</anchor>
      <arglist>(WFlags&lt; RenderHint &gt; other)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; RenderHint &gt; &amp;</type>
      <name>operator|=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>afe78c22fe47491a9bbe89ecafe88b215</anchor>
      <arglist>(RenderHint other)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; RenderHint &gt;</type>
      <name>operator~</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>ab4ffd437d69da401e0ffc8dc1fbba05b</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>WFlags&lt; Side &gt;</name>
    <filename>classWt_1_1WFlags.html</filename>
    <member kind="function">
      <type></type>
      <name>WFlags</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a866ce1716c87b4c1f47b3021b0805ace</anchor>
      <arglist>(NoFlagsType none=None)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WFlags</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>aff76055d02d80739d8c6690acea2987d</anchor>
      <arglist>(Side flag)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WFlags</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a66d179908503a36d61b25ec6eaefc325</anchor>
      <arglist>(const WFlags&lt; Side &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; Side &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>ad393bae4f713eaf6b4ed962a3cc60343</anchor>
      <arglist>(const WFlags&lt; Side &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; Side &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>ab41240e9031411e48694dfd0335adbe1</anchor>
      <arglist>(const Side other)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>test</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a91a1f471ef60b8bc8abf45cdcc68f576</anchor>
      <arglist>(Side flag) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>empty</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a8e7bdca91df4a68c0ed8116187529323</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; Side &gt; &amp;</type>
      <name>clear</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a971f9fc03d038ae212ca0165f0a5a6b1</anchor>
      <arglist>(Side value)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator Side</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>aa6a1a9b16589ab738208fbaa48a90c5e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a2d88f1be491cfacebfd9d1e2a841b4bb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; Side &gt;</type>
      <name>operator&amp;</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>af9aea2bb3a973f548e553dfb143a103e</anchor>
      <arglist>(Side mask) const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; Side &gt;</type>
      <name>operator&amp;</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>ace4ba410e4bbe24795a9c5e3e76a73c2</anchor>
      <arglist>(MaskType mask) const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; Side &gt; &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a292599924fcaea5dc0a6faefb46fb75b</anchor>
      <arglist>(Side mask)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; Side &gt; &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a6f6f0e9a5491cd2be7d0e2d5056bf477</anchor>
      <arglist>(MaskType mask)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; Side &gt;</type>
      <name>operator^</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a82376f146983333700b96d1e59a7da5a</anchor>
      <arglist>(WFlags&lt; Side &gt; other) const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; Side &gt;</type>
      <name>operator^</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a188f5274b86795945a6fc677110dc2a5</anchor>
      <arglist>(Side other) const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; Side &gt; &amp;</type>
      <name>operator^=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a7ba6ca4a33b6e86a41032f5e62ce4e7a</anchor>
      <arglist>(WFlags&lt; Side &gt; other)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; Side &gt; &amp;</type>
      <name>operator^=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a95a44ac96b3e1c090ba03110e46601b0</anchor>
      <arglist>(Side other)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; Side &gt;</type>
      <name>operator|</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>acf18d53ea75bcb921199c75e6eb6079a</anchor>
      <arglist>(WFlags&lt; Side &gt; other) const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; Side &gt;</type>
      <name>operator|</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a3c576be0331f4d53bc954003c4b6af68</anchor>
      <arglist>(Side other) const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; Side &gt; &amp;</type>
      <name>operator|=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>ab8dcdda2833b9a423d424af93d4629e7</anchor>
      <arglist>(WFlags&lt; Side &gt; other)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; Side &gt; &amp;</type>
      <name>operator|=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>afe78c22fe47491a9bbe89ecafe88b215</anchor>
      <arglist>(Side other)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; Side &gt;</type>
      <name>operator~</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>ab4ffd437d69da401e0ffc8dc1fbba05b</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>WFlags&lt; TextDecoration &gt;</name>
    <filename>classWt_1_1WFlags.html</filename>
    <member kind="function">
      <type></type>
      <name>WFlags</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a866ce1716c87b4c1f47b3021b0805ace</anchor>
      <arglist>(NoFlagsType none=None)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WFlags</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>aff76055d02d80739d8c6690acea2987d</anchor>
      <arglist>(TextDecoration flag)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WFlags</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a66d179908503a36d61b25ec6eaefc325</anchor>
      <arglist>(const WFlags&lt; TextDecoration &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; TextDecoration &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>ad393bae4f713eaf6b4ed962a3cc60343</anchor>
      <arglist>(const WFlags&lt; TextDecoration &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; TextDecoration &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>ab41240e9031411e48694dfd0335adbe1</anchor>
      <arglist>(const TextDecoration other)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>test</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a91a1f471ef60b8bc8abf45cdcc68f576</anchor>
      <arglist>(TextDecoration flag) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>empty</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a8e7bdca91df4a68c0ed8116187529323</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; TextDecoration &gt; &amp;</type>
      <name>clear</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a971f9fc03d038ae212ca0165f0a5a6b1</anchor>
      <arglist>(TextDecoration value)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator TextDecoration</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>aa6a1a9b16589ab738208fbaa48a90c5e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a2d88f1be491cfacebfd9d1e2a841b4bb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; TextDecoration &gt;</type>
      <name>operator&amp;</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>af9aea2bb3a973f548e553dfb143a103e</anchor>
      <arglist>(TextDecoration mask) const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; TextDecoration &gt;</type>
      <name>operator&amp;</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>ace4ba410e4bbe24795a9c5e3e76a73c2</anchor>
      <arglist>(MaskType mask) const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; TextDecoration &gt; &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a292599924fcaea5dc0a6faefb46fb75b</anchor>
      <arglist>(TextDecoration mask)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; TextDecoration &gt; &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a6f6f0e9a5491cd2be7d0e2d5056bf477</anchor>
      <arglist>(MaskType mask)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; TextDecoration &gt;</type>
      <name>operator^</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a82376f146983333700b96d1e59a7da5a</anchor>
      <arglist>(WFlags&lt; TextDecoration &gt; other) const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; TextDecoration &gt;</type>
      <name>operator^</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a188f5274b86795945a6fc677110dc2a5</anchor>
      <arglist>(TextDecoration other) const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; TextDecoration &gt; &amp;</type>
      <name>operator^=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a7ba6ca4a33b6e86a41032f5e62ce4e7a</anchor>
      <arglist>(WFlags&lt; TextDecoration &gt; other)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; TextDecoration &gt; &amp;</type>
      <name>operator^=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a95a44ac96b3e1c090ba03110e46601b0</anchor>
      <arglist>(TextDecoration other)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; TextDecoration &gt;</type>
      <name>operator|</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>acf18d53ea75bcb921199c75e6eb6079a</anchor>
      <arglist>(WFlags&lt; TextDecoration &gt; other) const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; TextDecoration &gt;</type>
      <name>operator|</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a3c576be0331f4d53bc954003c4b6af68</anchor>
      <arglist>(TextDecoration other) const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; TextDecoration &gt; &amp;</type>
      <name>operator|=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>ab8dcdda2833b9a423d424af93d4629e7</anchor>
      <arglist>(WFlags&lt; TextDecoration &gt; other)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; TextDecoration &gt; &amp;</type>
      <name>operator|=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>afe78c22fe47491a9bbe89ecafe88b215</anchor>
      <arglist>(TextDecoration other)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; TextDecoration &gt;</type>
      <name>operator~</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>ab4ffd437d69da401e0ffc8dc1fbba05b</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>WFlags&lt; TickPosition &gt;</name>
    <filename>classWt_1_1WFlags.html</filename>
    <member kind="function">
      <type></type>
      <name>WFlags</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a866ce1716c87b4c1f47b3021b0805ace</anchor>
      <arglist>(NoFlagsType none=None)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WFlags</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>aff76055d02d80739d8c6690acea2987d</anchor>
      <arglist>(TickPosition flag)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WFlags</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a66d179908503a36d61b25ec6eaefc325</anchor>
      <arglist>(const WFlags&lt; TickPosition &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; TickPosition &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>ad393bae4f713eaf6b4ed962a3cc60343</anchor>
      <arglist>(const WFlags&lt; TickPosition &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; TickPosition &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>ab41240e9031411e48694dfd0335adbe1</anchor>
      <arglist>(const TickPosition other)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>test</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a91a1f471ef60b8bc8abf45cdcc68f576</anchor>
      <arglist>(TickPosition flag) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>empty</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a8e7bdca91df4a68c0ed8116187529323</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; TickPosition &gt; &amp;</type>
      <name>clear</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a971f9fc03d038ae212ca0165f0a5a6b1</anchor>
      <arglist>(TickPosition value)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator TickPosition</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>aa6a1a9b16589ab738208fbaa48a90c5e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a2d88f1be491cfacebfd9d1e2a841b4bb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; TickPosition &gt;</type>
      <name>operator&amp;</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>af9aea2bb3a973f548e553dfb143a103e</anchor>
      <arglist>(TickPosition mask) const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; TickPosition &gt;</type>
      <name>operator&amp;</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>ace4ba410e4bbe24795a9c5e3e76a73c2</anchor>
      <arglist>(MaskType mask) const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; TickPosition &gt; &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a292599924fcaea5dc0a6faefb46fb75b</anchor>
      <arglist>(TickPosition mask)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; TickPosition &gt; &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a6f6f0e9a5491cd2be7d0e2d5056bf477</anchor>
      <arglist>(MaskType mask)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; TickPosition &gt;</type>
      <name>operator^</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a82376f146983333700b96d1e59a7da5a</anchor>
      <arglist>(WFlags&lt; TickPosition &gt; other) const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; TickPosition &gt;</type>
      <name>operator^</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a188f5274b86795945a6fc677110dc2a5</anchor>
      <arglist>(TickPosition other) const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; TickPosition &gt; &amp;</type>
      <name>operator^=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a7ba6ca4a33b6e86a41032f5e62ce4e7a</anchor>
      <arglist>(WFlags&lt; TickPosition &gt; other)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; TickPosition &gt; &amp;</type>
      <name>operator^=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a95a44ac96b3e1c090ba03110e46601b0</anchor>
      <arglist>(TickPosition other)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; TickPosition &gt;</type>
      <name>operator|</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>acf18d53ea75bcb921199c75e6eb6079a</anchor>
      <arglist>(WFlags&lt; TickPosition &gt; other) const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; TickPosition &gt;</type>
      <name>operator|</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>a3c576be0331f4d53bc954003c4b6af68</anchor>
      <arglist>(TickPosition other) const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; TickPosition &gt; &amp;</type>
      <name>operator|=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>ab8dcdda2833b9a423d424af93d4629e7</anchor>
      <arglist>(WFlags&lt; TickPosition &gt; other)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; TickPosition &gt; &amp;</type>
      <name>operator|=</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>afe78c22fe47491a9bbe89ecafe88b215</anchor>
      <arglist>(TickPosition other)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; TickPosition &gt;</type>
      <name>operator~</name>
      <anchorfile>classWt_1_1WFlags.html</anchorfile>
      <anchor>ab4ffd437d69da401e0ffc8dc1fbba05b</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WFlashObject</name>
    <filename>classWt_1_1WFlashObject.html</filename>
    <base>Wt::WWebWidget</base>
    <member kind="function">
      <type></type>
      <name>WFlashObject</name>
      <anchorfile>classWt_1_1WFlashObject.html</anchorfile>
      <anchor>a6187f5f06a9a25dac621eb7c2d4cc401</anchor>
      <arglist>(const std::string &amp;url)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WFlashObject</name>
      <anchorfile>classWt_1_1WFlashObject.html</anchorfile>
      <anchor>ab171e2e30fe09b82db7e97b9b9589265</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>resize</name>
      <anchorfile>classWt_1_1WFlashObject.html</anchorfile>
      <anchor>a8dca161157097825fdf474b6d886aedc</anchor>
      <arglist>(const WLength &amp;width, const WLength &amp;height) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFlashParameter</name>
      <anchorfile>classWt_1_1WFlashObject.html</anchorfile>
      <anchor>af5b66c371c595a6c749535280c2823e7</anchor>
      <arglist>(const std::string &amp;name, const WString &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFlashVariable</name>
      <anchorfile>classWt_1_1WFlashObject.html</anchorfile>
      <anchor>a00d24cf3b700d448f504279b4c3f2501</anchor>
      <arglist>(const std::string &amp;name, const WString &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>jsFlashRef</name>
      <anchorfile>classWt_1_1WFlashObject.html</anchorfile>
      <anchor>a7493f1d05c90a2cd8fd078b38c55055a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAlternativeContent</name>
      <anchorfile>classWt_1_1WFlashObject.html</anchorfile>
      <anchor>a48449d3189fce5f0947d5e0c45ef75c5</anchor>
      <arglist>(std::unique_ptr&lt; WWidget &gt; alternative)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WFont</name>
    <filename>classWt_1_1WFont.html</filename>
    <member kind="typedef">
      <type>FontFamily</type>
      <name>Family</name>
      <anchorfile>classWt_1_1WFont.html</anchorfile>
      <anchor>a8e99fdbc170a956dd6628263057d821f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>FontStyle</type>
      <name>Style</name>
      <anchorfile>classWt_1_1WFont.html</anchorfile>
      <anchor>a5728e34d7e5e3ba058e53f1177fa0915</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>FontVariant</type>
      <name>Variant</name>
      <anchorfile>classWt_1_1WFont.html</anchorfile>
      <anchor>a5851f1bfcb47a76d0a608515dd3ad696</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>FontWeight</type>
      <name>Weight</name>
      <anchorfile>classWt_1_1WFont.html</anchorfile>
      <anchor>a6be549d78eda96297166f58db0eb2d1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>FontSize</type>
      <name>Size</name>
      <anchorfile>classWt_1_1WFont.html</anchorfile>
      <anchor>a63ca451c7d49679321986ed9723236f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WFont</name>
      <anchorfile>classWt_1_1WFont.html</anchorfile>
      <anchor>a9839e47278aa3da5b613d29d6643e106</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WFont</name>
      <anchorfile>classWt_1_1WFont.html</anchorfile>
      <anchor>ad5a813b5192d14a535359f847bbcdaf1</anchor>
      <arglist>(FontFamily family)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classWt_1_1WFont.html</anchorfile>
      <anchor>a3c5334b6d7ce231e28ff1548b9af6a80</anchor>
      <arglist>(const WFont &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFamily</name>
      <anchorfile>classWt_1_1WFont.html</anchorfile>
      <anchor>a2eca2f602b67a55ffc6919f69d7b8ac3</anchor>
      <arglist>(FontFamily genericFamily, const WString &amp;specificFamilies=WString())</arglist>
    </member>
    <member kind="function">
      <type>FontFamily</type>
      <name>genericFamily</name>
      <anchorfile>classWt_1_1WFont.html</anchorfile>
      <anchor>a9bd8a92ef7f4d9cfbb2d7b0c1235fb5d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const WString &amp;</type>
      <name>specificFamilies</name>
      <anchorfile>classWt_1_1WFont.html</anchorfile>
      <anchor>a00144a249790b2d0048fec275f239df9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setStyle</name>
      <anchorfile>classWt_1_1WFont.html</anchorfile>
      <anchor>aab99e994a48d78a20b533acf8bb308e1</anchor>
      <arglist>(FontStyle style)</arglist>
    </member>
    <member kind="function">
      <type>FontStyle</type>
      <name>style</name>
      <anchorfile>classWt_1_1WFont.html</anchorfile>
      <anchor>a2b7dcc480c299179930acc7163f9b2ea</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVariant</name>
      <anchorfile>classWt_1_1WFont.html</anchorfile>
      <anchor>ab0b67c2fdd8b3e9564b34c054f9039dd</anchor>
      <arglist>(FontVariant variant)</arglist>
    </member>
    <member kind="function">
      <type>FontVariant</type>
      <name>variant</name>
      <anchorfile>classWt_1_1WFont.html</anchorfile>
      <anchor>aa893bf3e45d8608420be68ebb2590904</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setWeight</name>
      <anchorfile>classWt_1_1WFont.html</anchorfile>
      <anchor>a800a92425a63b1db787784552d1696c9</anchor>
      <arglist>(FontWeight weight, int value=400)</arglist>
    </member>
    <member kind="function">
      <type>FontWeight</type>
      <name>weight</name>
      <anchorfile>classWt_1_1WFont.html</anchorfile>
      <anchor>a62b7f0bc0739f6b66bc480aa18423c79</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>weightValue</name>
      <anchorfile>classWt_1_1WFont.html</anchorfile>
      <anchor>a9bb0501dd0ce3de9274160bf71144cb7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSize</name>
      <anchorfile>classWt_1_1WFont.html</anchorfile>
      <anchor>afc97aefa2f3da701810054fc436ddc37</anchor>
      <arglist>(FontSize size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSize</name>
      <anchorfile>classWt_1_1WFont.html</anchorfile>
      <anchor>ac1abaaa06860b42e1ca6ed3cfbbd3c6d</anchor>
      <arglist>(const WLength &amp;size)</arglist>
    </member>
    <member kind="function">
      <type>FontSize</type>
      <name>size</name>
      <anchorfile>classWt_1_1WFont.html</anchorfile>
      <anchor>ab71a4649f748169f2ec11b08e3e1cb8b</anchor>
      <arglist>(double mediumSize=16) const</arglist>
    </member>
    <member kind="function">
      <type>WLength</type>
      <name>sizeLength</name>
      <anchorfile>classWt_1_1WFont.html</anchorfile>
      <anchor>aa94117cc34e4f09f4f810f0f2be7e300</anchor>
      <arglist>(double mediumSize=16) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WFontMetrics</name>
    <filename>classWt_1_1WFontMetrics.html</filename>
    <member kind="function">
      <type></type>
      <name>WFontMetrics</name>
      <anchorfile>classWt_1_1WFontMetrics.html</anchorfile>
      <anchor>a3a17920227740c4df9c98e44989cf765</anchor>
      <arglist>(const WFont &amp;font, double leading, double ascent, double descent)</arglist>
    </member>
    <member kind="function">
      <type>const WFont &amp;</type>
      <name>font</name>
      <anchorfile>classWt_1_1WFontMetrics.html</anchorfile>
      <anchor>a3c3c2e5fd30c86a2fab3525f3f27f942</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>size</name>
      <anchorfile>classWt_1_1WFontMetrics.html</anchorfile>
      <anchor>a84c82e4c82554c8312f2aae147f9a1f8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>height</name>
      <anchorfile>classWt_1_1WFontMetrics.html</anchorfile>
      <anchor>acc4c2ecd193ecfa4c28466c05944210f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>leading</name>
      <anchorfile>classWt_1_1WFontMetrics.html</anchorfile>
      <anchor>a7cc759ceda21faf5dfce32c0640c16d7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>ascent</name>
      <anchorfile>classWt_1_1WFontMetrics.html</anchorfile>
      <anchor>a0fdbf2d6481c20002a98b8625b4f75c9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>descent</name>
      <anchorfile>classWt_1_1WFontMetrics.html</anchorfile>
      <anchor>a044e6fad69217fde57ad09abc3e84754</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WFormModel</name>
    <filename>classWt_1_1WFormModel.html</filename>
    <base>Wt::WObject</base>
    <member kind="function">
      <type></type>
      <name>WFormModel</name>
      <anchorfile>classWt_1_1WFormModel.html</anchorfile>
      <anchor>a0fd4be96703b80957f6289e8f9eb3e4f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addField</name>
      <anchorfile>classWt_1_1WFormModel.html</anchorfile>
      <anchor>a0d570781cb3aaa44a1bd09254dd54c9e</anchor>
      <arglist>(Field field, const WString &amp;info=WString::Empty)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeField</name>
      <anchorfile>classWt_1_1WFormModel.html</anchorfile>
      <anchor>abca319cc5a0ab159d55adba68882f424</anchor>
      <arglist>(Field field)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Field &gt;</type>
      <name>fields</name>
      <anchorfile>classWt_1_1WFormModel.html</anchorfile>
      <anchor>a4d83ebf140ea0d8893adf3e3c94ea775</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>reset</name>
      <anchorfile>classWt_1_1WFormModel.html</anchorfile>
      <anchor>a32f3c9ff0302d54462939b71029d2c54</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>validate</name>
      <anchorfile>classWt_1_1WFormModel.html</anchorfile>
      <anchor>ab616d3fc40e0f90f9221500f72421cd0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>valid</name>
      <anchorfile>classWt_1_1WFormModel.html</anchorfile>
      <anchor>a2d5f681a59aebbf458882896c7b15f17</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVisible</name>
      <anchorfile>classWt_1_1WFormModel.html</anchorfile>
      <anchor>a465d3ee3dd6c074c52dadc2167cd4437</anchor>
      <arglist>(Field field, bool visible)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isVisible</name>
      <anchorfile>classWt_1_1WFormModel.html</anchorfile>
      <anchor>aecfddc0d5d3b5cdd5354ea1a934cc625</anchor>
      <arglist>(Field field) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setReadOnly</name>
      <anchorfile>classWt_1_1WFormModel.html</anchorfile>
      <anchor>adfa51b8bcebd7a75db93b8e1293114e7</anchor>
      <arglist>(Field field, bool readOnly)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isReadOnly</name>
      <anchorfile>classWt_1_1WFormModel.html</anchorfile>
      <anchor>a2621c4e3d72b24b8bdb9a927d4d67e17</anchor>
      <arglist>(Field field) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WString</type>
      <name>label</name>
      <anchorfile>classWt_1_1WFormModel.html</anchorfile>
      <anchor>af42418cbc293bda86cdd4f0138a0301a</anchor>
      <arglist>(Field field) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setValue</name>
      <anchorfile>classWt_1_1WFormModel.html</anchorfile>
      <anchor>a4022980ed2f4bce8a544f197412fa895</anchor>
      <arglist>(Field field, const cpp17::any &amp;value)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const cpp17::any &amp;</type>
      <name>value</name>
      <anchorfile>classWt_1_1WFormModel.html</anchorfile>
      <anchor>ab738006b8f28dfee38fe1e2dc39e99bc</anchor>
      <arglist>(Field field) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WString</type>
      <name>valueText</name>
      <anchorfile>classWt_1_1WFormModel.html</anchorfile>
      <anchor>a45c7765980c35f69a2cf8437675d203b</anchor>
      <arglist>(Field field) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setValidator</name>
      <anchorfile>classWt_1_1WFormModel.html</anchorfile>
      <anchor>a9f9688c1f615e21de7af2ba57f88ba1e</anchor>
      <arglist>(Field field, const std::shared_ptr&lt; WValidator &gt; &amp;validator)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::shared_ptr&lt; WValidator &gt;</type>
      <name>validator</name>
      <anchorfile>classWt_1_1WFormModel.html</anchorfile>
      <anchor>ad51cb4dbf6049a72edc5e8d92c57d8b8</anchor>
      <arglist>(Field field) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>validateField</name>
      <anchorfile>classWt_1_1WFormModel.html</anchorfile>
      <anchor>aafc50707e6190e1f6b446cac3a187b98</anchor>
      <arglist>(Field field)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setValidated</name>
      <anchorfile>classWt_1_1WFormModel.html</anchorfile>
      <anchor>a11e027a120875249ab70428646abd0dc</anchor>
      <arglist>(Field field, bool validated)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isValidated</name>
      <anchorfile>classWt_1_1WFormModel.html</anchorfile>
      <anchor>a815ebc8c889c879d9c3389e7b3357d4e</anchor>
      <arglist>(Field field) const</arglist>
    </member>
    <member kind="function">
      <type>const WValidator::Result &amp;</type>
      <name>validation</name>
      <anchorfile>classWt_1_1WFormModel.html</anchorfile>
      <anchor>a44fc21cd80e0e8a169a4ee25b85b7a76</anchor>
      <arglist>(Field field) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setValidation</name>
      <anchorfile>classWt_1_1WFormModel.html</anchorfile>
      <anchor>afe186acdad8065d9e9275efba68a7079</anchor>
      <arglist>(Field field, const WValidator::Result &amp;result)</arglist>
    </member>
    <member kind="variable">
      <type>const typedef char *</type>
      <name>Field</name>
      <anchorfile>classWt_1_1WFormModel.html</anchorfile>
      <anchor>a9c5277450be796ecac1b7dcea1084603</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WFormWidget</name>
    <filename>classWt_1_1WFormWidget.html</filename>
    <base>Wt::WInteractWidget</base>
    <member kind="function">
      <type></type>
      <name>WFormWidget</name>
      <anchorfile>classWt_1_1WFormWidget.html</anchorfile>
      <anchor>a55fce4a09b58ae9d308cc9a2ad2e0265</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WFormWidget</name>
      <anchorfile>classWt_1_1WFormWidget.html</anchorfile>
      <anchor>af9027662449d08a70e361611f6fcf4c7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>WLabel *</type>
      <name>label</name>
      <anchorfile>classWt_1_1WFormWidget.html</anchorfile>
      <anchor>a71e7a278888ebe7857c89de55e16ee0e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setHidden</name>
      <anchorfile>classWt_1_1WFormWidget.html</anchorfile>
      <anchor>a100f119ac4ec3db49fbdd53ab50fff6b</anchor>
      <arglist>(bool hidden, const WAnimation &amp;animation=WAnimation()) override</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual WString</type>
      <name>valueText</name>
      <anchorfile>classWt_1_1WFormWidget.html</anchorfile>
      <anchor>a9e1ffd440abc07ce883d0a7b1a3883f6</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setValueText</name>
      <anchorfile>classWt_1_1WFormWidget.html</anchorfile>
      <anchor>a129d31b145f2614f608a852ca4e91731</anchor>
      <arglist>(const WString &amp;value)=0</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setValidator</name>
      <anchorfile>classWt_1_1WFormWidget.html</anchorfile>
      <anchor>a8b5fa8567e930691b95f1d0fa69359f1</anchor>
      <arglist>(const std::shared_ptr&lt; WValidator &gt; &amp;validator)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::shared_ptr&lt; WValidator &gt;</type>
      <name>validator</name>
      <anchorfile>classWt_1_1WFormWidget.html</anchorfile>
      <anchor>a0d362bbeea8f4da4617b24757772a996</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ValidationState</type>
      <name>validate</name>
      <anchorfile>classWt_1_1WFormWidget.html</anchorfile>
      <anchor>a1bf85706ce6af9324706457bf2f9ca83</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setEnabled</name>
      <anchorfile>classWt_1_1WFormWidget.html</anchorfile>
      <anchor>ad26d15f452d47832a4467608977f03f5</anchor>
      <arglist>(bool enabled)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setReadOnly</name>
      <anchorfile>classWt_1_1WFormWidget.html</anchorfile>
      <anchor>a353ae79a10748c870f1fa2ce1f174eaa</anchor>
      <arglist>(bool readOnly)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isReadOnly</name>
      <anchorfile>classWt_1_1WFormWidget.html</anchorfile>
      <anchor>a308ae2b05ee007bea4637b1539ce251e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setPlaceholderText</name>
      <anchorfile>classWt_1_1WFormWidget.html</anchorfile>
      <anchor>aabebd75188d1363c022925845f6b3269</anchor>
      <arglist>(const WString &amp;placeholder)</arglist>
    </member>
    <member kind="function">
      <type>const WString &amp;</type>
      <name>placeholderText</name>
      <anchorfile>classWt_1_1WFormWidget.html</anchorfile>
      <anchor>a75425fe7a19d61dbdf17492d3c7d4628</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>EventSignal &amp;</type>
      <name>changed</name>
      <anchorfile>classWt_1_1WFormWidget.html</anchorfile>
      <anchor>a5216ba1594b5dc525cc47cad593c7ba8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Signal&lt; WValidator::Result &gt; &amp;</type>
      <name>validated</name>
      <anchorfile>classWt_1_1WFormWidget.html</anchorfile>
      <anchor>af4c1e4155ed71cf5f147b77d4869dd2b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>refresh</name>
      <anchorfile>classWt_1_1WFormWidget.html</anchorfile>
      <anchor>aa71be064997c9cc132d6ea3dd9efa9bb</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setToolTip</name>
      <anchorfile>classWt_1_1WFormWidget.html</anchorfile>
      <anchor>add294e4a3073e58ea1362dda7e811955</anchor>
      <arglist>(const WString &amp;text, TextFormat textFormat=TextFormat::Plain) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>canReceiveFocus</name>
      <anchorfile>classWt_1_1WFormWidget.html</anchorfile>
      <anchor>abcee6fc98b3286d7416abbd588dbe993</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>tabIndex</name>
      <anchorfile>classWt_1_1WFormWidget.html</anchorfile>
      <anchor>a0bc8effeb6789cd9a01bafd07fd960ec</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>enableAjax</name>
      <anchorfile>classWt_1_1WFormWidget.html</anchorfile>
      <anchor>a4cdd4680976abe4408705625ebf37ad0</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>render</name>
      <anchorfile>classWt_1_1WFormWidget.html</anchorfile>
      <anchor>a8b77b520ef49ddfca230a90ccb6a1177</anchor>
      <arglist>(WFlags&lt; RenderFlag &gt; flags) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>propagateSetEnabled</name>
      <anchorfile>classWt_1_1WFormWidget.html</anchorfile>
      <anchor>aa5dd23286bad95c1f5fb5959f3e6894a</anchor>
      <arglist>(bool enabled) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WGenericMatrix</name>
    <filename>classWt_1_1WGenericMatrix.html</filename>
    <templarg></templarg>
    <templarg>Rows</templarg>
    <templarg>Cols</templarg>
    <member kind="function">
      <type></type>
      <name>WGenericMatrix</name>
      <anchorfile>classWt_1_1WGenericMatrix.html</anchorfile>
      <anchor>a5fc110fa4b41c04fd76318d8d30ce2f2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WGenericMatrix</name>
      <anchorfile>classWt_1_1WGenericMatrix.html</anchorfile>
      <anchor>ae63c07b13313cb5035e725e251d2be31</anchor>
      <arglist>(const WGenericMatrix&lt; T, Rows, Cols &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WGenericMatrix</name>
      <anchorfile>classWt_1_1WGenericMatrix.html</anchorfile>
      <anchor>a8752490de727d5ce6dd3120da518f49d</anchor>
      <arglist>(const T *elements)</arglist>
    </member>
    <member kind="function">
      <type>const ArrayType &amp;</type>
      <name>constData</name>
      <anchorfile>classWt_1_1WGenericMatrix.html</anchorfile>
      <anchor>ab9de6c54dacce35c34fe4f97312a50c8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copyDataTo</name>
      <anchorfile>classWt_1_1WGenericMatrix.html</anchorfile>
      <anchor>ade63e535a39caa2560a60dd7c969098d</anchor>
      <arglist>(T *data)</arglist>
    </member>
    <member kind="function">
      <type>ArrayType &amp;</type>
      <name>data</name>
      <anchorfile>classWt_1_1WGenericMatrix.html</anchorfile>
      <anchor>a4e9300685974b67610b9f6ad437a5ab4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const ArrayType &amp;</type>
      <name>data</name>
      <anchorfile>classWt_1_1WGenericMatrix.html</anchorfile>
      <anchor>a48a9ea1c86c951cca890f87e501f8fa2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fill</name>
      <anchorfile>classWt_1_1WGenericMatrix.html</anchorfile>
      <anchor>aaf623a4a2a09bc9c853774c77daca3b4</anchor>
      <arglist>(T value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isIdentity</name>
      <anchorfile>classWt_1_1WGenericMatrix.html</anchorfile>
      <anchor>a9dc23d4f0013584db75fb1019b533419</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setToIdentity</name>
      <anchorfile>classWt_1_1WGenericMatrix.html</anchorfile>
      <anchor>a665f5d9bb6ed06aabfacadbf27e9e8be</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>WGenericMatrix&lt; T, Cols, Rows &gt;</type>
      <name>transposed</name>
      <anchorfile>classWt_1_1WGenericMatrix.html</anchorfile>
      <anchor>adfec7b4863f000c5b0fa3c6e7df18867</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classWt_1_1WGenericMatrix.html</anchorfile>
      <anchor>a2a3d98bb322b67da650c97b2a7c6b12a</anchor>
      <arglist>(const WGenericMatrix&lt; T, Rows, Cols &gt; &amp;rhs) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classWt_1_1WGenericMatrix.html</anchorfile>
      <anchor>a0c37fe26d486f5da922ed42b76613fbb</anchor>
      <arglist>(const WGenericMatrix&lt; T, Rows, Cols &gt; &amp;rhs) const</arglist>
    </member>
    <member kind="function">
      <type>const T &amp;</type>
      <name>operator()</name>
      <anchorfile>classWt_1_1WGenericMatrix.html</anchorfile>
      <anchor>a6547f897526f07276f76841810e1b13f</anchor>
      <arglist>(int row, int column) const</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>operator()</name>
      <anchorfile>classWt_1_1WGenericMatrix.html</anchorfile>
      <anchor>a475533c4b5f89995053f2954557bde0b</anchor>
      <arglist>(int row, int column)</arglist>
    </member>
    <member kind="function">
      <type>const T &amp;</type>
      <name>at</name>
      <anchorfile>classWt_1_1WGenericMatrix.html</anchorfile>
      <anchor>a7e6f1b072eb43d4d36e5ba14eae9b80e</anchor>
      <arglist>(int row, int column) const</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>at</name>
      <anchorfile>classWt_1_1WGenericMatrix.html</anchorfile>
      <anchor>ae50f45593fa06e24b265302d6f15597b</anchor>
      <arglist>(int row, int column)</arglist>
    </member>
    <member kind="function">
      <type>WGenericMatrix&lt; T, Rows, Cols &gt; &amp;</type>
      <name>operator*=</name>
      <anchorfile>classWt_1_1WGenericMatrix.html</anchorfile>
      <anchor>acb15e0a9486e0986e3572e5fb5ce6f9f</anchor>
      <arglist>(const T &amp;factor)</arglist>
    </member>
    <member kind="function">
      <type>WGenericMatrix&lt; T, Rows, Cols &gt; &amp;</type>
      <name>operator/=</name>
      <anchorfile>classWt_1_1WGenericMatrix.html</anchorfile>
      <anchor>a23bd0e7f286f42c83a4c47cf6e857b57</anchor>
      <arglist>(const T &amp;factor)</arglist>
    </member>
    <member kind="function">
      <type>WGenericMatrix&lt; T, Rows, Cols &gt; &amp;</type>
      <name>operator+=</name>
      <anchorfile>classWt_1_1WGenericMatrix.html</anchorfile>
      <anchor>ab91384a67a371d98ba2b39abdefa5b03</anchor>
      <arglist>(const WGenericMatrix&lt; T, Rows, Cols &gt; &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>WGenericMatrix&lt; T, Rows, Cols &gt; &amp;</type>
      <name>operator-=</name>
      <anchorfile>classWt_1_1WGenericMatrix.html</anchorfile>
      <anchor>ace9cd1cfb0da44619c9a60abd5979b37</anchor>
      <arglist>(const WGenericMatrix&lt; T, Rows, Cols &gt; &amp;rhs)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>WGenericMatrix&lt; double, 3, 1 &gt;</name>
    <filename>classWt_1_1WGenericMatrix.html</filename>
    <member kind="function">
      <type></type>
      <name>WGenericMatrix</name>
      <anchorfile>classWt_1_1WGenericMatrix.html</anchorfile>
      <anchor>a5fc110fa4b41c04fd76318d8d30ce2f2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WGenericMatrix</name>
      <anchorfile>classWt_1_1WGenericMatrix.html</anchorfile>
      <anchor>ae63c07b13313cb5035e725e251d2be31</anchor>
      <arglist>(const WGenericMatrix&lt; double, Rows, Cols &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WGenericMatrix</name>
      <anchorfile>classWt_1_1WGenericMatrix.html</anchorfile>
      <anchor>a8752490de727d5ce6dd3120da518f49d</anchor>
      <arglist>(const double *elements)</arglist>
    </member>
    <member kind="function">
      <type>const ArrayType &amp;</type>
      <name>constData</name>
      <anchorfile>classWt_1_1WGenericMatrix.html</anchorfile>
      <anchor>ab9de6c54dacce35c34fe4f97312a50c8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copyDataTo</name>
      <anchorfile>classWt_1_1WGenericMatrix.html</anchorfile>
      <anchor>ade63e535a39caa2560a60dd7c969098d</anchor>
      <arglist>(double *data)</arglist>
    </member>
    <member kind="function">
      <type>ArrayType &amp;</type>
      <name>data</name>
      <anchorfile>classWt_1_1WGenericMatrix.html</anchorfile>
      <anchor>a4e9300685974b67610b9f6ad437a5ab4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const ArrayType &amp;</type>
      <name>data</name>
      <anchorfile>classWt_1_1WGenericMatrix.html</anchorfile>
      <anchor>a48a9ea1c86c951cca890f87e501f8fa2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fill</name>
      <anchorfile>classWt_1_1WGenericMatrix.html</anchorfile>
      <anchor>aaf623a4a2a09bc9c853774c77daca3b4</anchor>
      <arglist>(double value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isIdentity</name>
      <anchorfile>classWt_1_1WGenericMatrix.html</anchorfile>
      <anchor>a9dc23d4f0013584db75fb1019b533419</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setToIdentity</name>
      <anchorfile>classWt_1_1WGenericMatrix.html</anchorfile>
      <anchor>a665f5d9bb6ed06aabfacadbf27e9e8be</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>WGenericMatrix&lt; double, Cols, Rows &gt;</type>
      <name>transposed</name>
      <anchorfile>classWt_1_1WGenericMatrix.html</anchorfile>
      <anchor>adfec7b4863f000c5b0fa3c6e7df18867</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classWt_1_1WGenericMatrix.html</anchorfile>
      <anchor>a2a3d98bb322b67da650c97b2a7c6b12a</anchor>
      <arglist>(const WGenericMatrix&lt; double, Rows, Cols &gt; &amp;rhs) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classWt_1_1WGenericMatrix.html</anchorfile>
      <anchor>a0c37fe26d486f5da922ed42b76613fbb</anchor>
      <arglist>(const WGenericMatrix&lt; double, Rows, Cols &gt; &amp;rhs) const</arglist>
    </member>
    <member kind="function">
      <type>const double &amp;</type>
      <name>operator()</name>
      <anchorfile>classWt_1_1WGenericMatrix.html</anchorfile>
      <anchor>a6547f897526f07276f76841810e1b13f</anchor>
      <arglist>(int row, int column) const</arglist>
    </member>
    <member kind="function">
      <type>double &amp;</type>
      <name>operator()</name>
      <anchorfile>classWt_1_1WGenericMatrix.html</anchorfile>
      <anchor>a475533c4b5f89995053f2954557bde0b</anchor>
      <arglist>(int row, int column)</arglist>
    </member>
    <member kind="function">
      <type>const double &amp;</type>
      <name>at</name>
      <anchorfile>classWt_1_1WGenericMatrix.html</anchorfile>
      <anchor>a7e6f1b072eb43d4d36e5ba14eae9b80e</anchor>
      <arglist>(int row, int column) const</arglist>
    </member>
    <member kind="function">
      <type>double &amp;</type>
      <name>at</name>
      <anchorfile>classWt_1_1WGenericMatrix.html</anchorfile>
      <anchor>ae50f45593fa06e24b265302d6f15597b</anchor>
      <arglist>(int row, int column)</arglist>
    </member>
    <member kind="function">
      <type>WGenericMatrix&lt; double, Rows, Cols &gt; &amp;</type>
      <name>operator*=</name>
      <anchorfile>classWt_1_1WGenericMatrix.html</anchorfile>
      <anchor>acb15e0a9486e0986e3572e5fb5ce6f9f</anchor>
      <arglist>(const double &amp;factor)</arglist>
    </member>
    <member kind="function">
      <type>WGenericMatrix&lt; double, Rows, Cols &gt; &amp;</type>
      <name>operator/=</name>
      <anchorfile>classWt_1_1WGenericMatrix.html</anchorfile>
      <anchor>a23bd0e7f286f42c83a4c47cf6e857b57</anchor>
      <arglist>(const double &amp;factor)</arglist>
    </member>
    <member kind="function">
      <type>WGenericMatrix&lt; double, Rows, Cols &gt; &amp;</type>
      <name>operator+=</name>
      <anchorfile>classWt_1_1WGenericMatrix.html</anchorfile>
      <anchor>ab91384a67a371d98ba2b39abdefa5b03</anchor>
      <arglist>(const WGenericMatrix&lt; double, Rows, Cols &gt; &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>WGenericMatrix&lt; double, Rows, Cols &gt; &amp;</type>
      <name>operator-=</name>
      <anchorfile>classWt_1_1WGenericMatrix.html</anchorfile>
      <anchor>ace9cd1cfb0da44619c9a60abd5979b37</anchor>
      <arglist>(const WGenericMatrix&lt; double, Rows, Cols &gt; &amp;rhs)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>WGenericMatrix&lt; double, 4, 1 &gt;</name>
    <filename>classWt_1_1WGenericMatrix.html</filename>
    <member kind="function">
      <type></type>
      <name>WGenericMatrix</name>
      <anchorfile>classWt_1_1WGenericMatrix.html</anchorfile>
      <anchor>a5fc110fa4b41c04fd76318d8d30ce2f2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WGenericMatrix</name>
      <anchorfile>classWt_1_1WGenericMatrix.html</anchorfile>
      <anchor>ae63c07b13313cb5035e725e251d2be31</anchor>
      <arglist>(const WGenericMatrix&lt; double, Rows, Cols &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WGenericMatrix</name>
      <anchorfile>classWt_1_1WGenericMatrix.html</anchorfile>
      <anchor>a8752490de727d5ce6dd3120da518f49d</anchor>
      <arglist>(const double *elements)</arglist>
    </member>
    <member kind="function">
      <type>const ArrayType &amp;</type>
      <name>constData</name>
      <anchorfile>classWt_1_1WGenericMatrix.html</anchorfile>
      <anchor>ab9de6c54dacce35c34fe4f97312a50c8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copyDataTo</name>
      <anchorfile>classWt_1_1WGenericMatrix.html</anchorfile>
      <anchor>ade63e535a39caa2560a60dd7c969098d</anchor>
      <arglist>(double *data)</arglist>
    </member>
    <member kind="function">
      <type>ArrayType &amp;</type>
      <name>data</name>
      <anchorfile>classWt_1_1WGenericMatrix.html</anchorfile>
      <anchor>a4e9300685974b67610b9f6ad437a5ab4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const ArrayType &amp;</type>
      <name>data</name>
      <anchorfile>classWt_1_1WGenericMatrix.html</anchorfile>
      <anchor>a48a9ea1c86c951cca890f87e501f8fa2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fill</name>
      <anchorfile>classWt_1_1WGenericMatrix.html</anchorfile>
      <anchor>aaf623a4a2a09bc9c853774c77daca3b4</anchor>
      <arglist>(double value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isIdentity</name>
      <anchorfile>classWt_1_1WGenericMatrix.html</anchorfile>
      <anchor>a9dc23d4f0013584db75fb1019b533419</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setToIdentity</name>
      <anchorfile>classWt_1_1WGenericMatrix.html</anchorfile>
      <anchor>a665f5d9bb6ed06aabfacadbf27e9e8be</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>WGenericMatrix&lt; double, Cols, Rows &gt;</type>
      <name>transposed</name>
      <anchorfile>classWt_1_1WGenericMatrix.html</anchorfile>
      <anchor>adfec7b4863f000c5b0fa3c6e7df18867</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classWt_1_1WGenericMatrix.html</anchorfile>
      <anchor>a2a3d98bb322b67da650c97b2a7c6b12a</anchor>
      <arglist>(const WGenericMatrix&lt; double, Rows, Cols &gt; &amp;rhs) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classWt_1_1WGenericMatrix.html</anchorfile>
      <anchor>a0c37fe26d486f5da922ed42b76613fbb</anchor>
      <arglist>(const WGenericMatrix&lt; double, Rows, Cols &gt; &amp;rhs) const</arglist>
    </member>
    <member kind="function">
      <type>const double &amp;</type>
      <name>operator()</name>
      <anchorfile>classWt_1_1WGenericMatrix.html</anchorfile>
      <anchor>a6547f897526f07276f76841810e1b13f</anchor>
      <arglist>(int row, int column) const</arglist>
    </member>
    <member kind="function">
      <type>double &amp;</type>
      <name>operator()</name>
      <anchorfile>classWt_1_1WGenericMatrix.html</anchorfile>
      <anchor>a475533c4b5f89995053f2954557bde0b</anchor>
      <arglist>(int row, int column)</arglist>
    </member>
    <member kind="function">
      <type>const double &amp;</type>
      <name>at</name>
      <anchorfile>classWt_1_1WGenericMatrix.html</anchorfile>
      <anchor>a7e6f1b072eb43d4d36e5ba14eae9b80e</anchor>
      <arglist>(int row, int column) const</arglist>
    </member>
    <member kind="function">
      <type>double &amp;</type>
      <name>at</name>
      <anchorfile>classWt_1_1WGenericMatrix.html</anchorfile>
      <anchor>ae50f45593fa06e24b265302d6f15597b</anchor>
      <arglist>(int row, int column)</arglist>
    </member>
    <member kind="function">
      <type>WGenericMatrix&lt; double, Rows, Cols &gt; &amp;</type>
      <name>operator*=</name>
      <anchorfile>classWt_1_1WGenericMatrix.html</anchorfile>
      <anchor>acb15e0a9486e0986e3572e5fb5ce6f9f</anchor>
      <arglist>(const double &amp;factor)</arglist>
    </member>
    <member kind="function">
      <type>WGenericMatrix&lt; double, Rows, Cols &gt; &amp;</type>
      <name>operator/=</name>
      <anchorfile>classWt_1_1WGenericMatrix.html</anchorfile>
      <anchor>a23bd0e7f286f42c83a4c47cf6e857b57</anchor>
      <arglist>(const double &amp;factor)</arglist>
    </member>
    <member kind="function">
      <type>WGenericMatrix&lt; double, Rows, Cols &gt; &amp;</type>
      <name>operator+=</name>
      <anchorfile>classWt_1_1WGenericMatrix.html</anchorfile>
      <anchor>ab91384a67a371d98ba2b39abdefa5b03</anchor>
      <arglist>(const WGenericMatrix&lt; double, Rows, Cols &gt; &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>WGenericMatrix&lt; double, Rows, Cols &gt; &amp;</type>
      <name>operator-=</name>
      <anchorfile>classWt_1_1WGenericMatrix.html</anchorfile>
      <anchor>ace9cd1cfb0da44619c9a60abd5979b37</anchor>
      <arglist>(const WGenericMatrix&lt; double, Rows, Cols &gt; &amp;rhs)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>WGenericMatrix&lt; double, 4, 4 &gt;</name>
    <filename>classWt_1_1WGenericMatrix.html</filename>
    <member kind="function">
      <type></type>
      <name>WGenericMatrix</name>
      <anchorfile>classWt_1_1WGenericMatrix.html</anchorfile>
      <anchor>a5fc110fa4b41c04fd76318d8d30ce2f2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WGenericMatrix</name>
      <anchorfile>classWt_1_1WGenericMatrix.html</anchorfile>
      <anchor>ae63c07b13313cb5035e725e251d2be31</anchor>
      <arglist>(const WGenericMatrix&lt; double, Rows, Cols &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WGenericMatrix</name>
      <anchorfile>classWt_1_1WGenericMatrix.html</anchorfile>
      <anchor>a8752490de727d5ce6dd3120da518f49d</anchor>
      <arglist>(const double *elements)</arglist>
    </member>
    <member kind="function">
      <type>const ArrayType &amp;</type>
      <name>constData</name>
      <anchorfile>classWt_1_1WGenericMatrix.html</anchorfile>
      <anchor>ab9de6c54dacce35c34fe4f97312a50c8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copyDataTo</name>
      <anchorfile>classWt_1_1WGenericMatrix.html</anchorfile>
      <anchor>ade63e535a39caa2560a60dd7c969098d</anchor>
      <arglist>(double *data)</arglist>
    </member>
    <member kind="function">
      <type>ArrayType &amp;</type>
      <name>data</name>
      <anchorfile>classWt_1_1WGenericMatrix.html</anchorfile>
      <anchor>a4e9300685974b67610b9f6ad437a5ab4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const ArrayType &amp;</type>
      <name>data</name>
      <anchorfile>classWt_1_1WGenericMatrix.html</anchorfile>
      <anchor>a48a9ea1c86c951cca890f87e501f8fa2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fill</name>
      <anchorfile>classWt_1_1WGenericMatrix.html</anchorfile>
      <anchor>aaf623a4a2a09bc9c853774c77daca3b4</anchor>
      <arglist>(double value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isIdentity</name>
      <anchorfile>classWt_1_1WGenericMatrix.html</anchorfile>
      <anchor>a9dc23d4f0013584db75fb1019b533419</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setToIdentity</name>
      <anchorfile>classWt_1_1WGenericMatrix.html</anchorfile>
      <anchor>a665f5d9bb6ed06aabfacadbf27e9e8be</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>WGenericMatrix&lt; double, Cols, Rows &gt;</type>
      <name>transposed</name>
      <anchorfile>classWt_1_1WGenericMatrix.html</anchorfile>
      <anchor>adfec7b4863f000c5b0fa3c6e7df18867</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classWt_1_1WGenericMatrix.html</anchorfile>
      <anchor>a2a3d98bb322b67da650c97b2a7c6b12a</anchor>
      <arglist>(const WGenericMatrix&lt; double, Rows, Cols &gt; &amp;rhs) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classWt_1_1WGenericMatrix.html</anchorfile>
      <anchor>a0c37fe26d486f5da922ed42b76613fbb</anchor>
      <arglist>(const WGenericMatrix&lt; double, Rows, Cols &gt; &amp;rhs) const</arglist>
    </member>
    <member kind="function">
      <type>const double &amp;</type>
      <name>operator()</name>
      <anchorfile>classWt_1_1WGenericMatrix.html</anchorfile>
      <anchor>a6547f897526f07276f76841810e1b13f</anchor>
      <arglist>(int row, int column) const</arglist>
    </member>
    <member kind="function">
      <type>double &amp;</type>
      <name>operator()</name>
      <anchorfile>classWt_1_1WGenericMatrix.html</anchorfile>
      <anchor>a475533c4b5f89995053f2954557bde0b</anchor>
      <arglist>(int row, int column)</arglist>
    </member>
    <member kind="function">
      <type>const double &amp;</type>
      <name>at</name>
      <anchorfile>classWt_1_1WGenericMatrix.html</anchorfile>
      <anchor>a7e6f1b072eb43d4d36e5ba14eae9b80e</anchor>
      <arglist>(int row, int column) const</arglist>
    </member>
    <member kind="function">
      <type>double &amp;</type>
      <name>at</name>
      <anchorfile>classWt_1_1WGenericMatrix.html</anchorfile>
      <anchor>ae50f45593fa06e24b265302d6f15597b</anchor>
      <arglist>(int row, int column)</arglist>
    </member>
    <member kind="function">
      <type>WGenericMatrix&lt; double, Rows, Cols &gt; &amp;</type>
      <name>operator*=</name>
      <anchorfile>classWt_1_1WGenericMatrix.html</anchorfile>
      <anchor>acb15e0a9486e0986e3572e5fb5ce6f9f</anchor>
      <arglist>(const double &amp;factor)</arglist>
    </member>
    <member kind="function">
      <type>WGenericMatrix&lt; double, Rows, Cols &gt; &amp;</type>
      <name>operator/=</name>
      <anchorfile>classWt_1_1WGenericMatrix.html</anchorfile>
      <anchor>a23bd0e7f286f42c83a4c47cf6e857b57</anchor>
      <arglist>(const double &amp;factor)</arglist>
    </member>
    <member kind="function">
      <type>WGenericMatrix&lt; double, Rows, Cols &gt; &amp;</type>
      <name>operator+=</name>
      <anchorfile>classWt_1_1WGenericMatrix.html</anchorfile>
      <anchor>ab91384a67a371d98ba2b39abdefa5b03</anchor>
      <arglist>(const WGenericMatrix&lt; double, Rows, Cols &gt; &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>WGenericMatrix&lt; double, Rows, Cols &gt; &amp;</type>
      <name>operator-=</name>
      <anchorfile>classWt_1_1WGenericMatrix.html</anchorfile>
      <anchor>ace9cd1cfb0da44619c9a60abd5979b37</anchor>
      <arglist>(const WGenericMatrix&lt; double, Rows, Cols &gt; &amp;rhs)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WGestureEvent</name>
    <filename>classWt_1_1WGestureEvent.html</filename>
    <member kind="function">
      <type></type>
      <name>WGestureEvent</name>
      <anchorfile>classWt_1_1WGestureEvent.html</anchorfile>
      <anchor>ad2b17234b1545a852353281f9d82572a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>scale</name>
      <anchorfile>classWt_1_1WGestureEvent.html</anchorfile>
      <anchor>a5cc3bc8adf01f6a3d5feb7d9cba74adb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>rotation</name>
      <anchorfile>classWt_1_1WGestureEvent.html</anchorfile>
      <anchor>a1ccd553d5bc08b9ddc8c75f5ffe2981c</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WGLWidget</name>
    <filename>classWt_1_1WGLWidget.html</filename>
    <base>Wt::WInteractWidget</base>
    <class kind="class">Wt::WGLWidget::ArrayBuffer</class>
    <class kind="class">Wt::WGLWidget::AttribLocation</class>
    <class kind="class">Wt::WGLWidget::Buffer</class>
    <class kind="class">Wt::WGLWidget::Framebuffer</class>
    <class kind="class">Wt::WGLWidget::GlObject</class>
    <class kind="class">Wt::WGLWidget::JavaScriptMatrix4x4</class>
    <class kind="class">Wt::WGLWidget::JavaScriptVector</class>
    <class kind="class">Wt::WGLWidget::Program</class>
    <class kind="class">Wt::WGLWidget::Renderbuffer</class>
    <class kind="class">Wt::WGLWidget::Shader</class>
    <class kind="class">Wt::WGLWidget::Texture</class>
    <class kind="class">Wt::WGLWidget::Uint8Array</class>
    <class kind="class">Wt::WGLWidget::UniformLocation</class>
    <member kind="enumeration">
      <type></type>
      <name>GLenum</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>ae94560816975bedd91b9d63fc4b710a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>GLRenderOption</type>
      <name>RenderOption</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a87e9d5e540dd29f9f872a9ba706fa853</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>GLClientSideRenderer</type>
      <name>ClientSideRenderer</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a375631376e1d8af87cfb99b308adab80</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WGLWidget</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>ab3ead7326b392e599e525a25f5136480</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WGLWidget</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a0c763c5690e6486e97ba8491f8b62e38</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRenderOptions</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a7f13470fc3219f9069770d0ac127f338</anchor>
      <arglist>(WFlags&lt; GLRenderOption &gt; options)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>repaintGL</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a18d874bacc0cf315da7c9eff2867314a</anchor>
      <arglist>(WFlags&lt; GLClientSideRenderer &gt; which)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>restoringContext</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a95701ef1dc1da6a694da630daba35b5e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resize</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>abfb8a52fffd71072d98199ef0cd4cd37</anchor>
      <arglist>(const WLength &amp;width, const WLength &amp;height) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setClientSideMouseHandler</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>add02e88b9b5359167dbbf16883654bc6</anchor>
      <arglist>(const std::string &amp;handlerCode)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setClientSideLookAtHandler</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>ab48ffc7334fd340caa0fd48b6e77f067</anchor>
      <arglist>(const JavaScriptMatrix4x4 &amp;m, double lX, double lY, double lZ, double uX, double uY, double uZ, double pitchRate, double yawRate)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setClientSideWalkHandler</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a3525a486075289be5d9bc968b0d1fdd1</anchor>
      <arglist>(const JavaScriptMatrix4x4 &amp;m, double frontStep, double rotStep)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAlternativeContent</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a7e3971d0cf9271e270aae6d8efb24a47</anchor>
      <arglist>(std::unique_ptr&lt; WWidget &gt; alternative)</arglist>
    </member>
    <member kind="function">
      <type>JSlot &amp;</type>
      <name>repaintSlot</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>ab44c8692c63dd82a2b5bcf70961319c5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>enableClientErrorChecks</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>aa44db728be912f5ba9d85672637a3c60</anchor>
      <arglist>(bool enable=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>injectJS</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>abef0824d73fdca6ca415e96289e43d3a</anchor>
      <arglist>(const std::string &amp;jsString)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>activeTexture</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a38323e6c92162a55b478c5b871dec4f8</anchor>
      <arglist>(GLenum texture)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>attachShader</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>adf0be3425f753dc1cca94a4a8230db5a</anchor>
      <arglist>(Program program, Shader shader)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bindAttribLocation</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a558b6327611e0f9763551305ff734d2b</anchor>
      <arglist>(Program program, unsigned index, const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bindBuffer</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a8bb6cb0eb9be5283497d643a988ff3b7</anchor>
      <arglist>(GLenum target, Buffer buffer)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bindFramebuffer</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>abd7611f46d8a0579d1b110669a6daa5c</anchor>
      <arglist>(GLenum target, Framebuffer framebuffer)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bindRenderbuffer</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a87d00f84df324e75a5fb2275505bc458</anchor>
      <arglist>(GLenum target, Renderbuffer renderbuffer)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bindTexture</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>acc21809696232b3cf6ee23b98261fdd0</anchor>
      <arglist>(GLenum target, Texture texture)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>blendColor</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a9c025709d4f2941169900e5c460360ec</anchor>
      <arglist>(double red, double green, double blue, double alpha)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>blendEquation</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>aa7be4a77bde2c84d7b5c1ea8d8f93ef6</anchor>
      <arglist>(GLenum mode)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>blendEquationSeparate</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a5a902b9beec17219e5ac0a759efc9351</anchor>
      <arglist>(GLenum modeRGB, GLenum modeAlpha)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>blendFunc</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>ab18f5716e6624fb773cc1880266061fc</anchor>
      <arglist>(GLenum sfactor, GLenum dfactor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>blendFuncSeparate</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a949e6077f83ae6cbf5929954bf377641</anchor>
      <arglist>(GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bufferData</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>aa61eaf22f933605874c8e719e906a74b</anchor>
      <arglist>(GLenum target, int size, GLenum usage)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bufferData</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>acaba663e49e90e8404ec038a6a34f0f1</anchor>
      <arglist>(GLenum target, ArrayBuffer res, GLenum usage)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bufferData</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a09ebc44296cebd81d636d78ae8fa5a9d</anchor>
      <arglist>(GLenum target, ArrayBuffer res, unsigned arrayBufferOffset, unsigned arrayBufferSize, GLenum usage)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bufferSubData</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>aeb378d76425d319d8e2944b3762cfbea</anchor>
      <arglist>(GLenum target, unsigned offset, ArrayBuffer res)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bufferSubData</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>ab116d4a22c7c505c919ca152ab7e3b86</anchor>
      <arglist>(GLenum target, unsigned offset, ArrayBuffer res, unsigned arrayBufferOffset, unsigned size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bufferDatafv</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a2f58fba9828fe37c00dd393c37200c11</anchor>
      <arglist>(GLenum target, const Iterator begin, const Iterator end, GLenum usage, bool binary=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bufferDataiv</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a4b35550b474da3b408d2e18401ae87cd</anchor>
      <arglist>(GLenum target, const Iterator begin, const Iterator end, GLenum usage, GLenum type)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bufferSubDatafv</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a58a650023500ce33d1467a71a56e8ac3</anchor>
      <arglist>(GLenum target, unsigned offset, const Iterator begin, const Iterator end, bool binary=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bufferSubDataiv</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a003fec2da53a1a7c2130b54ebef3e2e4</anchor>
      <arglist>(GLenum target, unsigned offset, const Iterator begin, Iterator end, GLenum type)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bufferDatafv</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a6c9c9445925ae2ed49583750259ec49e</anchor>
      <arglist>(GLenum target, const std::vector&lt; float &gt; &amp;buffer, GLenum usage, bool binary=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearBinaryResources</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a63d0821e22a8519e347d2e21aa3bf0ab</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bufferDataiv</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a612a33ed0780b5117fcb75e3300f1c62</anchor>
      <arglist>(GLenum target, std::vector&lt; int &gt; &amp;buffer, GLenum usage, GLenum type)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bufferSubDatafv</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a09e1bb544cd822b466bcc78079fd715b</anchor>
      <arglist>(GLenum target, unsigned offset, const std::vector&lt; float &gt; &amp;buffer, bool binary=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bufferSubDataiv</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a00cd87a52bfa1881399697688c63a2fb</anchor>
      <arglist>(GLenum target, unsigned offset, std::vector&lt; int &gt; &amp;buffer, GLenum type)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a59836a129772ca0e18ce62816ca7e233</anchor>
      <arglist>(WFlags&lt; GLenum &gt; mask)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearColor</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a75296a47dc94ea8de2d7256ba179c0e9</anchor>
      <arglist>(double r, double g, double b, double a)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearDepth</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a3ab27166dfaf9155b153cec0804db72c</anchor>
      <arglist>(double depth)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearStencil</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a3968ef461626d634f3f5751a6fbd8cca</anchor>
      <arglist>(int s)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>colorMask</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a3ec883f2dab064f8fb377ace475b7b20</anchor>
      <arglist>(bool red, bool green, bool blue, bool alpha)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>compileShader</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a46d26ab668dfcd1de3eedc7bf968b47e</anchor>
      <arglist>(Shader shader)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copyTexImage2D</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a7fb57adb43dffa17ce9b08f625efdaab</anchor>
      <arglist>(GLenum target, int level, GLenum internalformat, int x, int y, unsigned width, unsigned height, int border)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copyTexSubImage2D</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a4b0ea694c342dcabf187ac2a4fecbe80</anchor>
      <arglist>(GLenum target, int level, int xoffset, int yoffset, int x, int y, unsigned width, unsigned height)</arglist>
    </member>
    <member kind="function">
      <type>Buffer</type>
      <name>createBuffer</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a1607fc00ff6fc9e40658ae54eea9eb1d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Framebuffer</type>
      <name>createFramebuffer</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>acd7b7d4ad39fd9265e6f67f14c1c85fc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Program</type>
      <name>createProgram</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a779ed48a41edab36dcbcff568c1abf67</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Renderbuffer</type>
      <name>createRenderbuffer</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>ae6da29e9ac8e4dea348cb0af15946664</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Shader</type>
      <name>createShader</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>ab0443851a028cfbcf9fa414fa5578226</anchor>
      <arglist>(GLenum shader)</arglist>
    </member>
    <member kind="function">
      <type>Texture</type>
      <name>createTexture</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a50a39725c481f0e58105ab121ef86793</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Texture</type>
      <name>createTextureAndLoad</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a4eeff8d45b72982e31566f3bc57a8a86</anchor>
      <arglist>(const std::string &amp;url)</arglist>
    </member>
    <member kind="function">
      <type>std::unique_ptr&lt; WPaintDevice &gt;</type>
      <name>createPaintDevice</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>afec08d49b7f38a6ef0f714a0771b6217</anchor>
      <arglist>(const WLength &amp;width, const WLength &amp;height)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>cullFace</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a6495a6c14bf1a93dbe26d4239422a683</anchor>
      <arglist>(GLenum mode)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deleteBuffer</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a9f9fd46b89b8e873496b20f86dc79b55</anchor>
      <arglist>(Buffer buffer)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deleteFramebuffer</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a0e5d20cdcac667f828f108a29543caf7</anchor>
      <arglist>(Framebuffer framebuffer)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deleteProgram</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a47733cccece4a84521f3baaf11ff3830</anchor>
      <arglist>(Program program)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deleteRenderbuffer</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>ad10f049fb190020d9035c86c2d9c38b7</anchor>
      <arglist>(Renderbuffer renderbuffer)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deleteShader</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a3c62b2d32318db5b3122ebf28a6a4851</anchor>
      <arglist>(Shader shader)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deleteTexture</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a84ba2c419c790c65059d7c3e5b6a130f</anchor>
      <arglist>(Texture texture)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>depthFunc</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>abb38c1f6fa43e90a69ce932763ab417e</anchor>
      <arglist>(GLenum func)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>depthMask</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a69be5af32571a4700d917cdeef22babf</anchor>
      <arglist>(bool flag)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>depthRange</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a510de91f345b291008d9e5b80f4cf308</anchor>
      <arglist>(double zNear, double zFar)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>detachShader</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a45b4a3da43968b6a6c3d576cead56f04</anchor>
      <arglist>(Program program, Shader shader)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>disable</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>ab2efcf8927f2838e4700a15f9e9fd787</anchor>
      <arglist>(GLenum cap)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>disableVertexAttribArray</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a5340745fea23d6e9a3953520dd91bb7b</anchor>
      <arglist>(AttribLocation index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawArrays</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a2d2b5b28a4d5f1e2217753d65216853b</anchor>
      <arglist>(GLenum mode, int first, unsigned count)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawElements</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a1db24a9400c48aff8d7371522d147516</anchor>
      <arglist>(GLenum mode, unsigned count, GLenum type, unsigned offset)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>enable</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>add2b7d208c17554c80351bbaa0a276f4</anchor>
      <arglist>(GLenum cap)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>enableVertexAttribArray</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a0cd5dd8da88aa9ba942d0ff778edacb4</anchor>
      <arglist>(AttribLocation index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>finish</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a79ae1947bb0d66bc856d7f4b601a6ece</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>flush</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a23d74c12770a295e5f39c15d289fccaf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>framebufferRenderbuffer</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>af121509cd7f4c2f24299170d1aad86ee</anchor>
      <arglist>(GLenum target, GLenum attachment, GLenum renderbuffertarget, Renderbuffer renderbuffer)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>framebufferTexture2D</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a3071bbd61253263bd423a0840b7c5b8c</anchor>
      <arglist>(GLenum target, GLenum attachment, GLenum textarget, Texture texture, int level)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>frontFace</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a34b1f998eae1608fa6436445adbac517</anchor>
      <arglist>(GLenum mode)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>generateMipmap</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a41fec9fe7eef03ff03662a090e8ab7f2</anchor>
      <arglist>(GLenum target)</arglist>
    </member>
    <member kind="function">
      <type>AttribLocation</type>
      <name>getAttribLocation</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a5e51e798c4b92985ce94b74d31a41a4d</anchor>
      <arglist>(Program program, const std::string &amp;attrib)</arglist>
    </member>
    <member kind="function">
      <type>UniformLocation</type>
      <name>getUniformLocation</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a0dfe14dab86dca0a26d60cebcead8d15</anchor>
      <arglist>(Program program, const std::string &amp;location)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>hint</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a3f32ca5347dd97c3411afe2836fcf766</anchor>
      <arglist>(GLenum target, GLenum mode)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>lineWidth</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>aadba3567ce195cd11829855b19818be9</anchor>
      <arglist>(double width)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>linkProgram</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a705e68095282e5cbb6019ab4d217e26a</anchor>
      <arglist>(Program program)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pixelStorei</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a232ef15851eb0c3b9c202ec9ab851fb4</anchor>
      <arglist>(GLenum pname, int param)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>polygonOffset</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a227f722fd7e7dd3a65e5c222ebfcd012</anchor>
      <arglist>(double factor, double units)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>renderbufferStorage</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a59045f8e5af350a4de8b1db9e00b8bb2</anchor>
      <arglist>(GLenum target, GLenum internalformat, unsigned width, unsigned height)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sampleCoverage</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a2012be49a803d5cc28d9c98a4bc8a713</anchor>
      <arglist>(double value, bool invert)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scissor</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a9d566eabc8c8d000ee5be52f00b4384c</anchor>
      <arglist>(int x, int y, unsigned width, unsigned height)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>shaderSource</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a00f56995d0377c8c757ae59cf1127ab9</anchor>
      <arglist>(Shader shader, const std::string &amp;src)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stencilFunc</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a494f8e59bd117661e1bf8c1d9fc0877e</anchor>
      <arglist>(GLenum func, int ref, unsigned mask)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stencilFuncSeparate</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>aa75d76db6c0b6e251fb5d40482dffcb7</anchor>
      <arglist>(GLenum face, GLenum func, int ref, unsigned mask)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stencilMask</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>aa09a2c8d6ad7770d62790d7f79324104</anchor>
      <arglist>(unsigned mask)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stencilMaskSeparate</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a53b0734bfc6b1705b5cfc65547b6b350</anchor>
      <arglist>(GLenum face, unsigned mask)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stencilOp</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a58c9fc257090d4e1c71c05de70b9fc6e</anchor>
      <arglist>(GLenum fail, GLenum zfail, GLenum zpass)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stencilOpSeparate</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a7ce5811a8a1b76ed019b3a7c447b4b22</anchor>
      <arglist>(GLenum face, GLenum fail, GLenum zfail, GLenum zpass)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>texImage2D</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>ab8c94e0f95c11a7f6131fa3c50d6025a</anchor>
      <arglist>(GLenum target, int level, GLenum internalformat, unsigned width, unsigned height, int border, GLenum format)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>texImage2D</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>ab6bc77de1c1161d3a37564b65c5f6782</anchor>
      <arglist>(GLenum target, int level, GLenum internalformat, unsigned width, unsigned height, int border, GLenum format, GLenum type, WImage *image)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>texImage2D</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a2df4c86a12097fda968cf30cca3938ff</anchor>
      <arglist>(GLenum target, int level, GLenum internalformat, GLenum format, GLenum type, WVideo *video)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>texImage2D</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>ae7c22bdee39eee0e15c67c44bb05a855</anchor>
      <arglist>(GLenum target, int level, GLenum internalformat, GLenum format, GLenum type, std::string filename)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>texImage2D</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a8908f11850a6a5172e7cd975423e59b2</anchor>
      <arglist>(GLenum target, int level, GLenum internalformat, GLenum format, GLenum type, WPaintDevice *paintdevice)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>texImage2D</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a134d2f5cefaa5272a5cd17176f580787</anchor>
      <arglist>(GLenum target, int level, GLenum internalformat, GLenum format, GLenum type, Texture texture)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>texImage3D</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a1cf2b749fdfac8c969d8348c1b3cc072</anchor>
      <arglist>(GLenum target, int level, GLenum internalformat, unsigned width, unsigned height, unsigned depth, int border, GLenum format, WGLWidget::GLenum type)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>texImage3D</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a9718a1d1517df4e8643dbdeb9d921df5</anchor>
      <arglist>(GLenum target, int level, GLenum internalformat, unsigned width, unsigned height, unsigned depth, int border, GLenum format, GLenum type, std::string image)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>texImage3D</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a1cb40e76eee577c723e8bef538d711ff</anchor>
      <arglist>(GLenum target, int level, GLenum internalformat, GLenum format, GLenum type, Texture texture)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>texParameteri</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a13f5947600ca36f0f7c887dfbd64f4d3</anchor>
      <arglist>(GLenum target, GLenum pname, GLenum param)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>uniform1f</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a6b02c6a2aaa1aaf6802f42ced843cef4</anchor>
      <arglist>(const UniformLocation &amp;location, double x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>uniform1fv</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>aa8e2609502d9ce20493825123f9292db</anchor>
      <arglist>(const UniformLocation &amp;location, const FloatArray *value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>uniform1fv</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a77df282089c69a6626f5f37b6ed139e8</anchor>
      <arglist>(const UniformLocation &amp;location, const JavaScriptVector &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>uniform1i</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a16adc3005430e229621e80b20d8bd3b8</anchor>
      <arglist>(const UniformLocation &amp;location, int x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>uniform1iv</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a2c1bfbe622f977ed1b77d5845b43879c</anchor>
      <arglist>(const UniformLocation &amp;location, const IntArray *value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>uniform2f</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a0e99527c91dcb5b580e7eaa22113011f</anchor>
      <arglist>(const UniformLocation &amp;location, double x, double y)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>uniform2fv</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a619d9679f87883826cfa048a4b2ca42f</anchor>
      <arglist>(const UniformLocation &amp;location, const FloatArray *value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>uniform2fv</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>aae1e0ab6377b93c1d2d02193f9f22d59</anchor>
      <arglist>(const UniformLocation &amp;location, const JavaScriptVector &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>uniform2i</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>ac05c454c7f4ce41e3aed8495f27ee322</anchor>
      <arglist>(const UniformLocation &amp;location, int x, int y)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>uniform2iv</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a5b9da7311363f37e81b012742f47adcf</anchor>
      <arglist>(const UniformLocation &amp;location, const IntArray *value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>uniform3f</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a4f6a054f4902cd574b357944fa4205af</anchor>
      <arglist>(const UniformLocation &amp;location, double x, double y, double z)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>uniform3fv</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>afac6a1531ce5049bedcdbaa540fa77ea</anchor>
      <arglist>(const UniformLocation &amp;location, const FloatArray *value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>uniform3fv</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a60a9d3b3db29c8d0cd97e542e1b08118</anchor>
      <arglist>(const UniformLocation &amp;location, const JavaScriptVector &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>uniform3i</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>af389d5e9bcd3e0c7af205e6fa4e5c96c</anchor>
      <arglist>(const UniformLocation &amp;location, int x, int y, int z)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>uniform3iv</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>aa78d55767605ea26c613c915604e1aa6</anchor>
      <arglist>(const UniformLocation &amp;location, const IntArray *value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>uniform4f</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a7ba3292d9578808b90c11ff8bb5d6d4e</anchor>
      <arglist>(const UniformLocation &amp;location, double x, double y, double z, double w)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>uniform4fv</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>afa86be8fe545aa0d79edcf30cf889081</anchor>
      <arglist>(const UniformLocation &amp;location, const FloatArray *value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>uniform4fv</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a0aaf2dd2eda1d541fe7df6ade33a12df</anchor>
      <arglist>(const UniformLocation &amp;location, const JavaScriptVector &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>uniform4i</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>ad201c7a916796921e52b74c79a19f43e</anchor>
      <arglist>(const UniformLocation &amp;location, int x, int y, int z, int w)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>uniform4iv</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a6bf087dbdd59de318c1752ecd179c051</anchor>
      <arglist>(const UniformLocation &amp;location, const IntArray *value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>uniformMatrix2fv</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>ae548ac7038de5d0c2136ff228e74d0be</anchor>
      <arglist>(const UniformLocation &amp;location, bool transpose, const MatrixType *value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>uniformMatrix2</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>acc1e03838c2b8aff741e1c4690a8ecca</anchor>
      <arglist>(const UniformLocation &amp;location, const WGenericMatrix&lt; MatrixType, 2, 2 &gt; &amp;m)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>uniformMatrix3fv</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a01aac130c2ecbeb1ba94c09c8d7b5d62</anchor>
      <arglist>(const UniformLocation &amp;location, bool transpose, const MatrixType *value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>uniformMatrix3</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a6fc7311f655ef1b2a29113d57dcfeea8</anchor>
      <arglist>(const UniformLocation &amp;location, const WGenericMatrix&lt; MatrixType, 3, 3 &gt; &amp;m)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>uniformMatrix4fv</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>abcecdccd5af839abbc3d8096eb01af19</anchor>
      <arglist>(const UniformLocation &amp;location, bool transpose, const MatrixType *value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>uniformMatrix4</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a3b7d52cacabb0c51631a8c1a61a0f009</anchor>
      <arglist>(const UniformLocation &amp;location, const WGenericMatrix&lt; MatrixType, 4, 4 &gt; &amp;m)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>uniformMatrix4</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>aa63161958fe1fb5ab60d22b84bec09f5</anchor>
      <arglist>(const UniformLocation &amp;location, const JavaScriptMatrix4x4 &amp;m)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>useProgram</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>aa641f713613e44cffe3ef6958bde4e59</anchor>
      <arglist>(Program program)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>validateProgram</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>aeba6695f76a76823c53a84ca9ae51148</anchor>
      <arglist>(Program program)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vertexAttrib1f</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>abe8a985b723658b7a3ab145b27dea772</anchor>
      <arglist>(AttribLocation location, double x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vertexAttrib1fv</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a8a08c117af0848b30f825de23a9f7391</anchor>
      <arglist>(AttribLocation location, const FloatArray *values)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vertexAttrib2f</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>af987f03a08db04a7ba2592a3d11d4d9b</anchor>
      <arglist>(AttribLocation location, double x, double y)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vertexAttrib2fv</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>af319073c4633473da07e2e91105728c7</anchor>
      <arglist>(AttribLocation location, const FloatArray *values)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vertexAttrib3f</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>ac9ce062f8afa522c395946e18b08cfd4</anchor>
      <arglist>(AttribLocation location, double x, double y, double z)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vertexAttrib3fv</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a37158d65dc737da90c042c28a75aeaf5</anchor>
      <arglist>(AttribLocation location, const FloatArray *values)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vertexAttrib4f</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>af0de2acadf10f24274e1c1fb91b09857</anchor>
      <arglist>(AttribLocation location, double x, double y, double z, double w)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vertexAttrib4fv</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a6e2c2914dcb25fa1e69115d5128f15f6</anchor>
      <arglist>(AttribLocation location, const FloatArray *values)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vertexAttribPointer</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>ad104da2e4cb761b770d1fac6be02bd55</anchor>
      <arglist>(AttribLocation location, int size, GLenum type, bool normalized, unsigned stride, unsigned offset)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>viewport</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>aa7eef06c55522565ae86d9d84ebcbf79</anchor>
      <arglist>(int x, int y, unsigned width, unsigned height)</arglist>
    </member>
    <member kind="function">
      <type>JavaScriptMatrix4x4</type>
      <name>createJavaScriptMatrix4</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a6826de3acf5f436996b55e89ea8b69d7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addJavaScriptMatrix4</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>afef90a99c00f67d4bc79a85f8cbca37c</anchor>
      <arglist>(JavaScriptMatrix4x4 &amp;m)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initJavaScriptMatrix4</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>af0385d9142506e255147397eef8d4170</anchor>
      <arglist>(JavaScriptMatrix4x4 &amp;m)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setJavaScriptMatrix4</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a8e0252508f0807f60980f64be0ea8702</anchor>
      <arglist>(JavaScriptMatrix4x4 &amp;jsm, const WGenericMatrix&lt; MatrixType, 4, 4 &gt; &amp;m)</arglist>
    </member>
    <member kind="function">
      <type>JavaScriptVector</type>
      <name>createJavaScriptVector</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>aa78a9fbdbca4b2b55dcb0599cc7a98ba</anchor>
      <arglist>(unsigned length)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addJavaScriptVector</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>ae926f757a2d9f134e4d1e8bf38364d60</anchor>
      <arglist>(JavaScriptVector &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initJavaScriptVector</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a0641829db6e4a27077fd72f1c9e543b1</anchor>
      <arglist>(JavaScriptVector &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setJavaScriptVector</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a618e4960fe754ddb885f276a1cebebc3</anchor>
      <arglist>(JavaScriptVector &amp;jsv, const std::vector&lt; float &gt; &amp;v)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>initializeGL</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>aca3e1f8f832c6f567aecb49b8b281886</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>resizeGL</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a244472459b677bdf0a675ef1d15ae53b</anchor>
      <arglist>(int width, int height)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>paintGL</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>aa65455464635d333b58fd725c4e97256</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>updateGL</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>ae43cdb781a06bcae6cda954aa1924a27</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>render</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>ab600dae25435fed390e3403c54335b54</anchor>
      <arglist>(WFlags&lt; RenderFlag &gt; flags) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>layoutSizeChanged</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a723d29562646082890be93cedaaa6def</anchor>
      <arglist>(int width, int height) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>activeTexture</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a38323e6c92162a55b478c5b871dec4f8</anchor>
      <arglist>(GLenum texture)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>attachShader</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>adf0be3425f753dc1cca94a4a8230db5a</anchor>
      <arglist>(Program program, Shader shader)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bindAttribLocation</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a558b6327611e0f9763551305ff734d2b</anchor>
      <arglist>(Program program, unsigned index, const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bindBuffer</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a8bb6cb0eb9be5283497d643a988ff3b7</anchor>
      <arglist>(GLenum target, Buffer buffer)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bindFramebuffer</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>abd7611f46d8a0579d1b110669a6daa5c</anchor>
      <arglist>(GLenum target, Framebuffer framebuffer)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bindRenderbuffer</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a87d00f84df324e75a5fb2275505bc458</anchor>
      <arglist>(GLenum target, Renderbuffer renderbuffer)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bindTexture</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>acc21809696232b3cf6ee23b98261fdd0</anchor>
      <arglist>(GLenum target, Texture texture)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>blendColor</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a9c025709d4f2941169900e5c460360ec</anchor>
      <arglist>(double red, double green, double blue, double alpha)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>blendEquation</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>aa7be4a77bde2c84d7b5c1ea8d8f93ef6</anchor>
      <arglist>(GLenum mode)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>blendEquationSeparate</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a5a902b9beec17219e5ac0a759efc9351</anchor>
      <arglist>(GLenum modeRGB, GLenum modeAlpha)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>blendFunc</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>ab18f5716e6624fb773cc1880266061fc</anchor>
      <arglist>(GLenum sfactor, GLenum dfactor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>blendFuncSeparate</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a949e6077f83ae6cbf5929954bf377641</anchor>
      <arglist>(GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bufferData</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>aa61eaf22f933605874c8e719e906a74b</anchor>
      <arglist>(GLenum target, int size, GLenum usage)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bufferData</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>acaba663e49e90e8404ec038a6a34f0f1</anchor>
      <arglist>(GLenum target, ArrayBuffer res, GLenum usage)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bufferData</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a09ebc44296cebd81d636d78ae8fa5a9d</anchor>
      <arglist>(GLenum target, ArrayBuffer res, unsigned arrayBufferOffset, unsigned arrayBufferSize, GLenum usage)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bufferSubData</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>aeb378d76425d319d8e2944b3762cfbea</anchor>
      <arglist>(GLenum target, unsigned offset, ArrayBuffer res)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bufferSubData</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>ab116d4a22c7c505c919ca152ab7e3b86</anchor>
      <arglist>(GLenum target, unsigned offset, ArrayBuffer res, unsigned arrayBufferOffset, unsigned size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bufferDatafv</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a2f58fba9828fe37c00dd393c37200c11</anchor>
      <arglist>(GLenum target, const Iterator begin, const Iterator end, GLenum usage, bool binary=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bufferDataiv</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a4b35550b474da3b408d2e18401ae87cd</anchor>
      <arglist>(GLenum target, const Iterator begin, const Iterator end, GLenum usage, GLenum type)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bufferSubDatafv</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a58a650023500ce33d1467a71a56e8ac3</anchor>
      <arglist>(GLenum target, unsigned offset, const Iterator begin, const Iterator end, bool binary=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bufferSubDataiv</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a003fec2da53a1a7c2130b54ebef3e2e4</anchor>
      <arglist>(GLenum target, unsigned offset, const Iterator begin, Iterator end, GLenum type)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bufferDatafv</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a6c9c9445925ae2ed49583750259ec49e</anchor>
      <arglist>(GLenum target, const std::vector&lt; float &gt; &amp;buffer, GLenum usage, bool binary=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearBinaryResources</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a63d0821e22a8519e347d2e21aa3bf0ab</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bufferDataiv</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a612a33ed0780b5117fcb75e3300f1c62</anchor>
      <arglist>(GLenum target, std::vector&lt; int &gt; &amp;buffer, GLenum usage, GLenum type)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bufferSubDatafv</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a09e1bb544cd822b466bcc78079fd715b</anchor>
      <arglist>(GLenum target, unsigned offset, const std::vector&lt; float &gt; &amp;buffer, bool binary=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bufferSubDataiv</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a00cd87a52bfa1881399697688c63a2fb</anchor>
      <arglist>(GLenum target, unsigned offset, std::vector&lt; int &gt; &amp;buffer, GLenum type)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a59836a129772ca0e18ce62816ca7e233</anchor>
      <arglist>(WFlags&lt; GLenum &gt; mask)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearColor</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a75296a47dc94ea8de2d7256ba179c0e9</anchor>
      <arglist>(double r, double g, double b, double a)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearDepth</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a3ab27166dfaf9155b153cec0804db72c</anchor>
      <arglist>(double depth)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearStencil</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a3968ef461626d634f3f5751a6fbd8cca</anchor>
      <arglist>(int s)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>colorMask</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a3ec883f2dab064f8fb377ace475b7b20</anchor>
      <arglist>(bool red, bool green, bool blue, bool alpha)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>compileShader</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a46d26ab668dfcd1de3eedc7bf968b47e</anchor>
      <arglist>(Shader shader)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copyTexImage2D</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a7fb57adb43dffa17ce9b08f625efdaab</anchor>
      <arglist>(GLenum target, int level, GLenum internalformat, int x, int y, unsigned width, unsigned height, int border)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copyTexSubImage2D</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a4b0ea694c342dcabf187ac2a4fecbe80</anchor>
      <arglist>(GLenum target, int level, int xoffset, int yoffset, int x, int y, unsigned width, unsigned height)</arglist>
    </member>
    <member kind="function">
      <type>Buffer</type>
      <name>createBuffer</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a1607fc00ff6fc9e40658ae54eea9eb1d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Framebuffer</type>
      <name>createFramebuffer</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>acd7b7d4ad39fd9265e6f67f14c1c85fc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Program</type>
      <name>createProgram</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a779ed48a41edab36dcbcff568c1abf67</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Renderbuffer</type>
      <name>createRenderbuffer</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>ae6da29e9ac8e4dea348cb0af15946664</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Shader</type>
      <name>createShader</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>ab0443851a028cfbcf9fa414fa5578226</anchor>
      <arglist>(GLenum shader)</arglist>
    </member>
    <member kind="function">
      <type>Texture</type>
      <name>createTexture</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a50a39725c481f0e58105ab121ef86793</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Texture</type>
      <name>createTextureAndLoad</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a4eeff8d45b72982e31566f3bc57a8a86</anchor>
      <arglist>(const std::string &amp;url)</arglist>
    </member>
    <member kind="function">
      <type>std::unique_ptr&lt; WPaintDevice &gt;</type>
      <name>createPaintDevice</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>afec08d49b7f38a6ef0f714a0771b6217</anchor>
      <arglist>(const WLength &amp;width, const WLength &amp;height)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>cullFace</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a6495a6c14bf1a93dbe26d4239422a683</anchor>
      <arglist>(GLenum mode)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deleteBuffer</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a9f9fd46b89b8e873496b20f86dc79b55</anchor>
      <arglist>(Buffer buffer)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deleteFramebuffer</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a0e5d20cdcac667f828f108a29543caf7</anchor>
      <arglist>(Framebuffer framebuffer)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deleteProgram</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a47733cccece4a84521f3baaf11ff3830</anchor>
      <arglist>(Program program)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deleteRenderbuffer</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>ad10f049fb190020d9035c86c2d9c38b7</anchor>
      <arglist>(Renderbuffer renderbuffer)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deleteShader</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a3c62b2d32318db5b3122ebf28a6a4851</anchor>
      <arglist>(Shader shader)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deleteTexture</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a84ba2c419c790c65059d7c3e5b6a130f</anchor>
      <arglist>(Texture texture)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>depthFunc</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>abb38c1f6fa43e90a69ce932763ab417e</anchor>
      <arglist>(GLenum func)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>depthMask</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a69be5af32571a4700d917cdeef22babf</anchor>
      <arglist>(bool flag)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>depthRange</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a510de91f345b291008d9e5b80f4cf308</anchor>
      <arglist>(double zNear, double zFar)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>detachShader</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a45b4a3da43968b6a6c3d576cead56f04</anchor>
      <arglist>(Program program, Shader shader)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>disable</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>ab2efcf8927f2838e4700a15f9e9fd787</anchor>
      <arglist>(GLenum cap)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>disableVertexAttribArray</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a5340745fea23d6e9a3953520dd91bb7b</anchor>
      <arglist>(AttribLocation index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawArrays</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a2d2b5b28a4d5f1e2217753d65216853b</anchor>
      <arglist>(GLenum mode, int first, unsigned count)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawElements</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a1db24a9400c48aff8d7371522d147516</anchor>
      <arglist>(GLenum mode, unsigned count, GLenum type, unsigned offset)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>enable</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>add2b7d208c17554c80351bbaa0a276f4</anchor>
      <arglist>(GLenum cap)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>enableVertexAttribArray</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a0cd5dd8da88aa9ba942d0ff778edacb4</anchor>
      <arglist>(AttribLocation index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>finish</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a79ae1947bb0d66bc856d7f4b601a6ece</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>flush</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a23d74c12770a295e5f39c15d289fccaf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>framebufferRenderbuffer</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>af121509cd7f4c2f24299170d1aad86ee</anchor>
      <arglist>(GLenum target, GLenum attachment, GLenum renderbuffertarget, Renderbuffer renderbuffer)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>framebufferTexture2D</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a3071bbd61253263bd423a0840b7c5b8c</anchor>
      <arglist>(GLenum target, GLenum attachment, GLenum textarget, Texture texture, int level)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>frontFace</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a34b1f998eae1608fa6436445adbac517</anchor>
      <arglist>(GLenum mode)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>generateMipmap</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a41fec9fe7eef03ff03662a090e8ab7f2</anchor>
      <arglist>(GLenum target)</arglist>
    </member>
    <member kind="function">
      <type>AttribLocation</type>
      <name>getAttribLocation</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a5e51e798c4b92985ce94b74d31a41a4d</anchor>
      <arglist>(Program program, const std::string &amp;attrib)</arglist>
    </member>
    <member kind="function">
      <type>UniformLocation</type>
      <name>getUniformLocation</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a0dfe14dab86dca0a26d60cebcead8d15</anchor>
      <arglist>(Program program, const std::string &amp;location)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>hint</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a3f32ca5347dd97c3411afe2836fcf766</anchor>
      <arglist>(GLenum target, GLenum mode)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>lineWidth</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>aadba3567ce195cd11829855b19818be9</anchor>
      <arglist>(double width)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>linkProgram</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a705e68095282e5cbb6019ab4d217e26a</anchor>
      <arglist>(Program program)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pixelStorei</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a232ef15851eb0c3b9c202ec9ab851fb4</anchor>
      <arglist>(GLenum pname, int param)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>polygonOffset</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a227f722fd7e7dd3a65e5c222ebfcd012</anchor>
      <arglist>(double factor, double units)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>renderbufferStorage</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a59045f8e5af350a4de8b1db9e00b8bb2</anchor>
      <arglist>(GLenum target, GLenum internalformat, unsigned width, unsigned height)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sampleCoverage</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a2012be49a803d5cc28d9c98a4bc8a713</anchor>
      <arglist>(double value, bool invert)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scissor</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a9d566eabc8c8d000ee5be52f00b4384c</anchor>
      <arglist>(int x, int y, unsigned width, unsigned height)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>shaderSource</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a00f56995d0377c8c757ae59cf1127ab9</anchor>
      <arglist>(Shader shader, const std::string &amp;src)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stencilFunc</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a494f8e59bd117661e1bf8c1d9fc0877e</anchor>
      <arglist>(GLenum func, int ref, unsigned mask)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stencilFuncSeparate</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>aa75d76db6c0b6e251fb5d40482dffcb7</anchor>
      <arglist>(GLenum face, GLenum func, int ref, unsigned mask)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stencilMask</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>aa09a2c8d6ad7770d62790d7f79324104</anchor>
      <arglist>(unsigned mask)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stencilMaskSeparate</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a53b0734bfc6b1705b5cfc65547b6b350</anchor>
      <arglist>(GLenum face, unsigned mask)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stencilOp</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a58c9fc257090d4e1c71c05de70b9fc6e</anchor>
      <arglist>(GLenum fail, GLenum zfail, GLenum zpass)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stencilOpSeparate</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a7ce5811a8a1b76ed019b3a7c447b4b22</anchor>
      <arglist>(GLenum face, GLenum fail, GLenum zfail, GLenum zpass)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>texImage2D</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>ab8c94e0f95c11a7f6131fa3c50d6025a</anchor>
      <arglist>(GLenum target, int level, GLenum internalformat, unsigned width, unsigned height, int border, GLenum format)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>texImage2D</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>ab6bc77de1c1161d3a37564b65c5f6782</anchor>
      <arglist>(GLenum target, int level, GLenum internalformat, unsigned width, unsigned height, int border, GLenum format, GLenum type, WImage *image)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>texImage2D</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a2df4c86a12097fda968cf30cca3938ff</anchor>
      <arglist>(GLenum target, int level, GLenum internalformat, GLenum format, GLenum type, WVideo *video)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>texImage2D</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>ae7c22bdee39eee0e15c67c44bb05a855</anchor>
      <arglist>(GLenum target, int level, GLenum internalformat, GLenum format, GLenum type, std::string filename)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>texImage2D</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a8908f11850a6a5172e7cd975423e59b2</anchor>
      <arglist>(GLenum target, int level, GLenum internalformat, GLenum format, GLenum type, WPaintDevice *paintdevice)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>texImage2D</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a134d2f5cefaa5272a5cd17176f580787</anchor>
      <arglist>(GLenum target, int level, GLenum internalformat, GLenum format, GLenum type, Texture texture)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>texImage3D</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a1cf2b749fdfac8c969d8348c1b3cc072</anchor>
      <arglist>(GLenum target, int level, GLenum internalformat, unsigned width, unsigned height, unsigned depth, int border, GLenum format, WGLWidget::GLenum type)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>texImage3D</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a9718a1d1517df4e8643dbdeb9d921df5</anchor>
      <arglist>(GLenum target, int level, GLenum internalformat, unsigned width, unsigned height, unsigned depth, int border, GLenum format, GLenum type, std::string image)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>texImage3D</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a1cb40e76eee577c723e8bef538d711ff</anchor>
      <arglist>(GLenum target, int level, GLenum internalformat, GLenum format, GLenum type, Texture texture)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>texParameteri</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a13f5947600ca36f0f7c887dfbd64f4d3</anchor>
      <arglist>(GLenum target, GLenum pname, GLenum param)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>uniform1f</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a6b02c6a2aaa1aaf6802f42ced843cef4</anchor>
      <arglist>(const UniformLocation &amp;location, double x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>uniform1fv</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>aa8e2609502d9ce20493825123f9292db</anchor>
      <arglist>(const UniformLocation &amp;location, const FloatArray *value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>uniform1fv</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a77df282089c69a6626f5f37b6ed139e8</anchor>
      <arglist>(const UniformLocation &amp;location, const JavaScriptVector &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>uniform1i</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a16adc3005430e229621e80b20d8bd3b8</anchor>
      <arglist>(const UniformLocation &amp;location, int x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>uniform1iv</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a2c1bfbe622f977ed1b77d5845b43879c</anchor>
      <arglist>(const UniformLocation &amp;location, const IntArray *value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>uniform2f</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a0e99527c91dcb5b580e7eaa22113011f</anchor>
      <arglist>(const UniformLocation &amp;location, double x, double y)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>uniform2fv</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a619d9679f87883826cfa048a4b2ca42f</anchor>
      <arglist>(const UniformLocation &amp;location, const FloatArray *value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>uniform2fv</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>aae1e0ab6377b93c1d2d02193f9f22d59</anchor>
      <arglist>(const UniformLocation &amp;location, const JavaScriptVector &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>uniform2i</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>ac05c454c7f4ce41e3aed8495f27ee322</anchor>
      <arglist>(const UniformLocation &amp;location, int x, int y)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>uniform2iv</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a5b9da7311363f37e81b012742f47adcf</anchor>
      <arglist>(const UniformLocation &amp;location, const IntArray *value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>uniform3f</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a4f6a054f4902cd574b357944fa4205af</anchor>
      <arglist>(const UniformLocation &amp;location, double x, double y, double z)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>uniform3fv</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>afac6a1531ce5049bedcdbaa540fa77ea</anchor>
      <arglist>(const UniformLocation &amp;location, const FloatArray *value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>uniform3fv</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a60a9d3b3db29c8d0cd97e542e1b08118</anchor>
      <arglist>(const UniformLocation &amp;location, const JavaScriptVector &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>uniform3i</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>af389d5e9bcd3e0c7af205e6fa4e5c96c</anchor>
      <arglist>(const UniformLocation &amp;location, int x, int y, int z)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>uniform3iv</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>aa78d55767605ea26c613c915604e1aa6</anchor>
      <arglist>(const UniformLocation &amp;location, const IntArray *value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>uniform4f</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a7ba3292d9578808b90c11ff8bb5d6d4e</anchor>
      <arglist>(const UniformLocation &amp;location, double x, double y, double z, double w)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>uniform4fv</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>afa86be8fe545aa0d79edcf30cf889081</anchor>
      <arglist>(const UniformLocation &amp;location, const FloatArray *value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>uniform4fv</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a0aaf2dd2eda1d541fe7df6ade33a12df</anchor>
      <arglist>(const UniformLocation &amp;location, const JavaScriptVector &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>uniform4i</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>ad201c7a916796921e52b74c79a19f43e</anchor>
      <arglist>(const UniformLocation &amp;location, int x, int y, int z, int w)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>uniform4iv</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a6bf087dbdd59de318c1752ecd179c051</anchor>
      <arglist>(const UniformLocation &amp;location, const IntArray *value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>uniformMatrix2fv</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>ae548ac7038de5d0c2136ff228e74d0be</anchor>
      <arglist>(const UniformLocation &amp;location, bool transpose, const MatrixType *value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>uniformMatrix2</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>acc1e03838c2b8aff741e1c4690a8ecca</anchor>
      <arglist>(const UniformLocation &amp;location, const WGenericMatrix&lt; MatrixType, 2, 2 &gt; &amp;m)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>uniformMatrix3fv</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a01aac130c2ecbeb1ba94c09c8d7b5d62</anchor>
      <arglist>(const UniformLocation &amp;location, bool transpose, const MatrixType *value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>uniformMatrix3</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a6fc7311f655ef1b2a29113d57dcfeea8</anchor>
      <arglist>(const UniformLocation &amp;location, const WGenericMatrix&lt; MatrixType, 3, 3 &gt; &amp;m)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>uniformMatrix4fv</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>abcecdccd5af839abbc3d8096eb01af19</anchor>
      <arglist>(const UniformLocation &amp;location, bool transpose, const MatrixType *value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>uniformMatrix4</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a3b7d52cacabb0c51631a8c1a61a0f009</anchor>
      <arglist>(const UniformLocation &amp;location, const WGenericMatrix&lt; MatrixType, 4, 4 &gt; &amp;m)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>uniformMatrix4</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>aa63161958fe1fb5ab60d22b84bec09f5</anchor>
      <arglist>(const UniformLocation &amp;location, const JavaScriptMatrix4x4 &amp;m)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>useProgram</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>aa641f713613e44cffe3ef6958bde4e59</anchor>
      <arglist>(Program program)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>validateProgram</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>aeba6695f76a76823c53a84ca9ae51148</anchor>
      <arglist>(Program program)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vertexAttrib1f</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>abe8a985b723658b7a3ab145b27dea772</anchor>
      <arglist>(AttribLocation location, double x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vertexAttrib1fv</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a8a08c117af0848b30f825de23a9f7391</anchor>
      <arglist>(AttribLocation location, const FloatArray *values)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vertexAttrib2f</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>af987f03a08db04a7ba2592a3d11d4d9b</anchor>
      <arglist>(AttribLocation location, double x, double y)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vertexAttrib2fv</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>af319073c4633473da07e2e91105728c7</anchor>
      <arglist>(AttribLocation location, const FloatArray *values)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vertexAttrib3f</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>ac9ce062f8afa522c395946e18b08cfd4</anchor>
      <arglist>(AttribLocation location, double x, double y, double z)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vertexAttrib3fv</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a37158d65dc737da90c042c28a75aeaf5</anchor>
      <arglist>(AttribLocation location, const FloatArray *values)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vertexAttrib4f</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>af0de2acadf10f24274e1c1fb91b09857</anchor>
      <arglist>(AttribLocation location, double x, double y, double z, double w)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vertexAttrib4fv</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a6e2c2914dcb25fa1e69115d5128f15f6</anchor>
      <arglist>(AttribLocation location, const FloatArray *values)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vertexAttribPointer</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>ad104da2e4cb761b770d1fac6be02bd55</anchor>
      <arglist>(AttribLocation location, int size, GLenum type, bool normalized, unsigned stride, unsigned offset)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>viewport</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>aa7eef06c55522565ae86d9d84ebcbf79</anchor>
      <arglist>(int x, int y, unsigned width, unsigned height)</arglist>
    </member>
    <member kind="function">
      <type>JavaScriptMatrix4x4</type>
      <name>createJavaScriptMatrix4</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a6826de3acf5f436996b55e89ea8b69d7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addJavaScriptMatrix4</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>afef90a99c00f67d4bc79a85f8cbca37c</anchor>
      <arglist>(JavaScriptMatrix4x4 &amp;m)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initJavaScriptMatrix4</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>af0385d9142506e255147397eef8d4170</anchor>
      <arglist>(JavaScriptMatrix4x4 &amp;m)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setJavaScriptMatrix4</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a8e0252508f0807f60980f64be0ea8702</anchor>
      <arglist>(JavaScriptMatrix4x4 &amp;jsm, const WGenericMatrix&lt; MatrixType, 4, 4 &gt; &amp;m)</arglist>
    </member>
    <member kind="function">
      <type>JavaScriptVector</type>
      <name>createJavaScriptVector</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>aa78a9fbdbca4b2b55dcb0599cc7a98ba</anchor>
      <arglist>(unsigned length)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addJavaScriptVector</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>ae926f757a2d9f134e4d1e8bf38364d60</anchor>
      <arglist>(JavaScriptVector &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initJavaScriptVector</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a0641829db6e4a27077fd72f1c9e543b1</anchor>
      <arglist>(JavaScriptVector &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setJavaScriptVector</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a618e4960fe754ddb885f276a1cebebc3</anchor>
      <arglist>(JavaScriptVector &amp;jsv, const std::vector&lt; float &gt; &amp;v)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WGoogleMap</name>
    <filename>classWt_1_1WGoogleMap.html</filename>
    <base>Wt::WCompositeWidget</base>
    <class kind="class">Wt::WGoogleMap::Coordinate</class>
    <member kind="typedef">
      <type>GoogleMapsVersion</type>
      <name>Version</name>
      <anchorfile>classWt_1_1WGoogleMap.html</anchorfile>
      <anchor>a3c33f8a5b4ca882860a7111a0222879d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WGoogleMap</name>
      <anchorfile>classWt_1_1WGoogleMap.html</anchorfile>
      <anchor>a16e74d1c8ba1e7b7c2b52f25d94dcfa7</anchor>
      <arglist>(GoogleMapsVersion version=GoogleMapsVersion::v3)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~WGoogleMap</name>
      <anchorfile>classWt_1_1WGoogleMap.html</anchorfile>
      <anchor>ad7b54de74f2db00d4b71be6071af0be3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addMarker</name>
      <anchorfile>classWt_1_1WGoogleMap.html</anchorfile>
      <anchor>ad80935926cc2a08f6dff26de3480dcc6</anchor>
      <arglist>(const Coordinate &amp;pos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addPolyline</name>
      <anchorfile>classWt_1_1WGoogleMap.html</anchorfile>
      <anchor>aae6ed201b6eb206469d77576e9b52360</anchor>
      <arglist>(const std::vector&lt; Coordinate &gt; &amp;points, const WColor &amp;color=WColor(StandardColor::Red), int width=2, double opacity=1.0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addCircle</name>
      <anchorfile>classWt_1_1WGoogleMap.html</anchorfile>
      <anchor>a9e8be8d6d2edea9b3357ff00aeb0ffdc</anchor>
      <arglist>(const Coordinate &amp;center, double radius, const WColor &amp;strokeColor, int strokeWidth, const WColor &amp;fillColor=WColor())</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addIconMarker</name>
      <anchorfile>classWt_1_1WGoogleMap.html</anchorfile>
      <anchor>a727702768884cdfa1c46c0160f51310a</anchor>
      <arglist>(const Coordinate &amp;pos, const std::string &amp;iconURL)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearOverlays</name>
      <anchorfile>classWt_1_1WGoogleMap.html</anchorfile>
      <anchor>a77204daba9840d892e3621b129e742d4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>openInfoWindow</name>
      <anchorfile>classWt_1_1WGoogleMap.html</anchorfile>
      <anchor>a90b58b02052aa788efcf0b9d92335112</anchor>
      <arglist>(const Coordinate &amp;pos, const Wt::WString &amp;myHtml)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCenter</name>
      <anchorfile>classWt_1_1WGoogleMap.html</anchorfile>
      <anchor>aa9f62ed546a090cc9dbcf3d10769bc80</anchor>
      <arglist>(const Coordinate &amp;center)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCenter</name>
      <anchorfile>classWt_1_1WGoogleMap.html</anchorfile>
      <anchor>a34df0d680b54a956342d2e095229f9fe</anchor>
      <arglist>(const Coordinate &amp;center, int zoom)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>panTo</name>
      <anchorfile>classWt_1_1WGoogleMap.html</anchorfile>
      <anchor>ac1d54272ff541cc54b29ed4fee288931</anchor>
      <arglist>(const Coordinate &amp;center)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>zoomWindow</name>
      <anchorfile>classWt_1_1WGoogleMap.html</anchorfile>
      <anchor>a6b08ef4a408d75d10d71d005d3c65783</anchor>
      <arglist>(const std::pair&lt; Coordinate, Coordinate &gt; &amp;bbox)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>zoomWindow</name>
      <anchorfile>classWt_1_1WGoogleMap.html</anchorfile>
      <anchor>a66cf38a3c31b97c08321c5ac9bf71270</anchor>
      <arglist>(const Coordinate &amp;topLeft, const Coordinate &amp;bottomRight)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setZoom</name>
      <anchorfile>classWt_1_1WGoogleMap.html</anchorfile>
      <anchor>a9b4583c4557d756ba1cecab1ab00bf9b</anchor>
      <arglist>(int level)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>zoomIn</name>
      <anchorfile>classWt_1_1WGoogleMap.html</anchorfile>
      <anchor>afbd9cf2dc56673f4870aa91a71c3301c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>zoomOut</name>
      <anchorfile>classWt_1_1WGoogleMap.html</anchorfile>
      <anchor>a74363a089b5b1dcbbd644ab810c94464</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>savePosition</name>
      <anchorfile>classWt_1_1WGoogleMap.html</anchorfile>
      <anchor>af6addd98268d64aa33834280b8819d65</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>returnToSavedPosition</name>
      <anchorfile>classWt_1_1WGoogleMap.html</anchorfile>
      <anchor>ae6abfd1d0942d0559e511caa5f2f5c97</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>enableDragging</name>
      <anchorfile>classWt_1_1WGoogleMap.html</anchorfile>
      <anchor>a83be42bcd7f4be38e04fbaec72a95b8e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>disableDragging</name>
      <anchorfile>classWt_1_1WGoogleMap.html</anchorfile>
      <anchor>a9b8b0c3f121f498e4cf5256390880ae6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>enableDoubleClickZoom</name>
      <anchorfile>classWt_1_1WGoogleMap.html</anchorfile>
      <anchor>ae4993bd2e7baf017183a4ff3b554c53b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>disableDoubleClickZoom</name>
      <anchorfile>classWt_1_1WGoogleMap.html</anchorfile>
      <anchor>a5cfa10ca7087f3a7f032bdbdcc422e67</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>enableGoogleBar</name>
      <anchorfile>classWt_1_1WGoogleMap.html</anchorfile>
      <anchor>aed48586350d3e4908459a47ce0822348</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>disableGoogleBar</name>
      <anchorfile>classWt_1_1WGoogleMap.html</anchorfile>
      <anchor>a3982558cba9768c4815e7fbb6c23d92f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>enableScrollWheelZoom</name>
      <anchorfile>classWt_1_1WGoogleMap.html</anchorfile>
      <anchor>a39dc1da1fe51f1c285dac04e565fdfa5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>disableScrollWheelZoom</name>
      <anchorfile>classWt_1_1WGoogleMap.html</anchorfile>
      <anchor>a90462279e5092088aba4e79c2f4eaab9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMapTypeControl</name>
      <anchorfile>classWt_1_1WGoogleMap.html</anchorfile>
      <anchor>ad5b1aabd260b3b05e9888718264c40e2</anchor>
      <arglist>(MapTypeControl type)</arglist>
    </member>
    <member kind="function">
      <type>JSignal&lt; Coordinate &gt; &amp;</type>
      <name>clicked</name>
      <anchorfile>classWt_1_1WGoogleMap.html</anchorfile>
      <anchor>a3b1b5e513502222e89d8fbcfb79a9198</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>JSignal&lt; Coordinate &gt; &amp;</type>
      <name>doubleClicked</name>
      <anchorfile>classWt_1_1WGoogleMap.html</anchorfile>
      <anchor>aa81efcc86e7ab1b6a6701e97d9e3fb02</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>JSignal&lt; Coordinate &gt; &amp;</type>
      <name>mouseMoved</name>
      <anchorfile>classWt_1_1WGoogleMap.html</anchorfile>
      <anchor>a7a34346d51b2030f44f4adb6eaadba07</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>GoogleMapsVersion</type>
      <name>apiVersion</name>
      <anchorfile>classWt_1_1WGoogleMap.html</anchorfile>
      <anchor>a57762ff84541014abc2f67ba6b9b7c7f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>render</name>
      <anchorfile>classWt_1_1WGoogleMap.html</anchorfile>
      <anchor>ad15cb60f21e781fda6c78d1afdfb0212</anchor>
      <arglist>(WFlags&lt; RenderFlag &gt; flags) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doGmJavaScript</name>
      <anchorfile>classWt_1_1WGoogleMap.html</anchorfile>
      <anchor>a34f1028b2e8f8fb3b6c56fcf6d878779</anchor>
      <arglist>(const std::string &amp;jscode)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WGradient</name>
    <filename>classWt_1_1WGradient.html</filename>
    <class kind="class">Wt::WGradient::ColorStop</class>
    <member kind="function">
      <type></type>
      <name>WGradient</name>
      <anchorfile>classWt_1_1WGradient.html</anchorfile>
      <anchor>ad5ecd0c5d62a3372d651415be1cb0c29</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>GradientStyle</type>
      <name>style</name>
      <anchorfile>classWt_1_1WGradient.html</anchorfile>
      <anchor>a7fc7306dc93af31cb1e489e4309afece</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEmpty</name>
      <anchorfile>classWt_1_1WGradient.html</anchorfile>
      <anchor>a19ef5c18af50fd8c9e1c28e5c2f82135</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLinearGradient</name>
      <anchorfile>classWt_1_1WGradient.html</anchorfile>
      <anchor>a5b040127633d03999af47aae1e9924cd</anchor>
      <arglist>(double x0, double y0, double x1, double y1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRadialGradient</name>
      <anchorfile>classWt_1_1WGradient.html</anchorfile>
      <anchor>a1f754c99ba22137cc0b12d0c6a6aa338</anchor>
      <arglist>(double cx, double cy, double r, double fx, double fy)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addColorStop</name>
      <anchorfile>classWt_1_1WGradient.html</anchorfile>
      <anchor>aae1b2e9cc187b9ad7ec0946fa18263be</anchor>
      <arglist>(double position, const WColor &amp;color)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addColorStop</name>
      <anchorfile>classWt_1_1WGradient.html</anchorfile>
      <anchor>acea4e4ddc957fba0d0bc500249a03d3f</anchor>
      <arglist>(const ColorStop &amp;colorstop)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearColorStops</name>
      <anchorfile>classWt_1_1WGradient.html</anchorfile>
      <anchor>a2f5abd58b196cfe3e109e83295497602</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; ColorStop &gt; &amp;</type>
      <name>colorstops</name>
      <anchorfile>classWt_1_1WGradient.html</anchorfile>
      <anchor>a09ec47fb431442980fc887f4133a8203</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const WLineF &amp;</type>
      <name>linearGradientVector</name>
      <anchorfile>classWt_1_1WGradient.html</anchorfile>
      <anchor>a1329e2e983d47bc8a8a7c74d02e5c982</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const WPointF &amp;</type>
      <name>radialCenterPoint</name>
      <anchorfile>classWt_1_1WGradient.html</anchorfile>
      <anchor>ad4d4450fa9142d4472ab27233ae0ff2e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const WPointF &amp;</type>
      <name>radialFocalPoint</name>
      <anchorfile>classWt_1_1WGradient.html</anchorfile>
      <anchor>a2c9f5fff543ecb042e7cd8958f4460f8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>radialRadius</name>
      <anchorfile>classWt_1_1WGradient.html</anchorfile>
      <anchor>ab73d65cc3832dcf5be1c0fb15c028f03</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classWt_1_1WGradient.html</anchorfile>
      <anchor>a0688ef682d74c2d2c3361f68be496fc5</anchor>
      <arglist>(const WGradient &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classWt_1_1WGradient.html</anchorfile>
      <anchor>a8d382b79234d3b47a8fbd5db871d25aa</anchor>
      <arglist>(const WGradient &amp;other) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Chart::WGridData</name>
    <filename>classWt_1_1Chart_1_1WGridData.html</filename>
    <base>Wt::Chart::WAbstractGridData</base>
    <member kind="function">
      <type></type>
      <name>WGridData</name>
      <anchorfile>classWt_1_1Chart_1_1WGridData.html</anchorfile>
      <anchor>a9593ecbd8c86b8c0fab2ce8cce0071c8</anchor>
      <arglist>(std::shared_ptr&lt; WAbstractItemModel &gt; model)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>minimum</name>
      <anchorfile>classWt_1_1Chart_1_1WGridData.html</anchorfile>
      <anchor>a0a55fe85a73d179305070cd058b1d19e</anchor>
      <arglist>(Axis axis) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>maximum</name>
      <anchorfile>classWt_1_1Chart_1_1WGridData.html</anchorfile>
      <anchor>aba6fcdbae1201829d0b005d2ed4ee0b3</anchor>
      <arglist>(Axis axis) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setXSeriesColumn</name>
      <anchorfile>classWt_1_1Chart_1_1WGridData.html</anchorfile>
      <anchor>a78561d3f0542eca56e74fa5ffdbf9c21</anchor>
      <arglist>(int modelColumn)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>XSeriesColumn</name>
      <anchorfile>classWt_1_1Chart_1_1WGridData.html</anchorfile>
      <anchor>a8c40ced9e3da992e32f9a1a7d1d10a4c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setYSeriesRow</name>
      <anchorfile>classWt_1_1Chart_1_1WGridData.html</anchorfile>
      <anchor>a5b8459e53be345a1bd434064af830ecb</anchor>
      <arglist>(int modelRow)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>YSeriesRow</name>
      <anchorfile>classWt_1_1Chart_1_1WGridData.html</anchorfile>
      <anchor>acfe945335bdd4a50ca92af9e17c58cf5</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WGridLayout</name>
    <filename>classWt_1_1WGridLayout.html</filename>
    <base>Wt::WLayout</base>
    <member kind="function">
      <type></type>
      <name>WGridLayout</name>
      <anchorfile>classWt_1_1WGridLayout.html</anchorfile>
      <anchor>ab96fa2a381e1f8207c1b9bc06da50c2a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>addItem</name>
      <anchorfile>classWt_1_1WGridLayout.html</anchorfile>
      <anchor>a4af42e354d83a82d32130a0ae3f802b2</anchor>
      <arglist>(std::unique_ptr&lt; WLayoutItem &gt; item) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::unique_ptr&lt; WLayoutItem &gt;</type>
      <name>removeItem</name>
      <anchorfile>classWt_1_1WGridLayout.html</anchorfile>
      <anchor>aedf50cbe7a4dfeb59ca8b65cee33d4ee</anchor>
      <arglist>(WLayoutItem *item) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WLayoutItem *</type>
      <name>itemAt</name>
      <anchorfile>classWt_1_1WGridLayout.html</anchorfile>
      <anchor>a77fef7a57e94c094ca88105874db028b</anchor>
      <arglist>(int index) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>count</name>
      <anchorfile>classWt_1_1WGridLayout.html</anchorfile>
      <anchor>a34baa2b28fd3231e3a350d935b8cf3f7</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addItem</name>
      <anchorfile>classWt_1_1WGridLayout.html</anchorfile>
      <anchor>af0b566bd4ad753cbf5030fdbf459858a</anchor>
      <arglist>(std::unique_ptr&lt; WLayoutItem &gt; item, int row, int column, int rowSpan=1, int columnSpan=1, WFlags&lt; AlignmentFlag &gt; alignment=None)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addLayout</name>
      <anchorfile>classWt_1_1WGridLayout.html</anchorfile>
      <anchor>a685ac487eea6fd0be0d2d335eb238955</anchor>
      <arglist>(std::unique_ptr&lt; WLayout &gt; layout, int row, int column, WFlags&lt; AlignmentFlag &gt; alignment=None)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addLayout</name>
      <anchorfile>classWt_1_1WGridLayout.html</anchorfile>
      <anchor>a7eadd1f6814e62e97478b87b2bc7267c</anchor>
      <arglist>(std::unique_ptr&lt; WLayout &gt; layout, int row, int column, int rowSpan, int columnSpan, WFlags&lt; AlignmentFlag &gt; alignment=None)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addWidget</name>
      <anchorfile>classWt_1_1WGridLayout.html</anchorfile>
      <anchor>a0ca5456998423bc561e7c715b014a66f</anchor>
      <arglist>(std::unique_ptr&lt; WWidget &gt; widget, int row, int column, WFlags&lt; AlignmentFlag &gt; alignment)</arglist>
    </member>
    <member kind="function">
      <type>Widget *</type>
      <name>addWidget</name>
      <anchorfile>classWt_1_1WGridLayout.html</anchorfile>
      <anchor>a6275c45b28aab01598df5479a4a9a2a4</anchor>
      <arglist>(std::unique_ptr&lt; Widget &gt; widget, int row, int column, WFlags&lt; AlignmentFlag &gt; alignment=None)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addWidget</name>
      <anchorfile>classWt_1_1WGridLayout.html</anchorfile>
      <anchor>a016cb220678f049304e9a455b3b37387</anchor>
      <arglist>(std::unique_ptr&lt; WWidget &gt; widget, int row, int column, int rowSpan, int columnSpan, WFlags&lt; AlignmentFlag &gt; alignment)</arglist>
    </member>
    <member kind="function">
      <type>Widget *</type>
      <name>addWidget</name>
      <anchorfile>classWt_1_1WGridLayout.html</anchorfile>
      <anchor>a22e29749a6ee27612a22724da9efe9f7</anchor>
      <arglist>(std::unique_ptr&lt; Widget &gt; widget, int row, int column, int rowSpan, int columnSpan, WFlags&lt; AlignmentFlag &gt; alignment=None)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setHorizontalSpacing</name>
      <anchorfile>classWt_1_1WGridLayout.html</anchorfile>
      <anchor>a60713a99ab98907fe5c9f99417fb6493</anchor>
      <arglist>(int size)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>horizontalSpacing</name>
      <anchorfile>classWt_1_1WGridLayout.html</anchorfile>
      <anchor>abee301db82ba753b7ba55aaa2965a501</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVerticalSpacing</name>
      <anchorfile>classWt_1_1WGridLayout.html</anchorfile>
      <anchor>ad2a2188bece8a47628dae340108962ae</anchor>
      <arglist>(int size)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>verticalSpacing</name>
      <anchorfile>classWt_1_1WGridLayout.html</anchorfile>
      <anchor>a12684a98429394e50b3afdf44fc66aaa</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>columnCount</name>
      <anchorfile>classWt_1_1WGridLayout.html</anchorfile>
      <anchor>ae381972d1f5c0226c2bfe07d19bb2753</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>rowCount</name>
      <anchorfile>classWt_1_1WGridLayout.html</anchorfile>
      <anchor>a520017c6b21a1056485d4bd9d92f39d7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setColumnStretch</name>
      <anchorfile>classWt_1_1WGridLayout.html</anchorfile>
      <anchor>a4605de0523f5613096b6cbd983123c8b</anchor>
      <arglist>(int column, int stretch)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>columnStretch</name>
      <anchorfile>classWt_1_1WGridLayout.html</anchorfile>
      <anchor>a08d6d587d8022e73c25074bacfd5b8bb</anchor>
      <arglist>(int column) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRowStretch</name>
      <anchorfile>classWt_1_1WGridLayout.html</anchorfile>
      <anchor>ad8d1199b57063fb7286be6dab13c998c</anchor>
      <arglist>(int row, int stretch)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>rowStretch</name>
      <anchorfile>classWt_1_1WGridLayout.html</anchorfile>
      <anchor>af409fc47b820d8258f67f599ef3e0aaa</anchor>
      <arglist>(int row) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setColumnResizable</name>
      <anchorfile>classWt_1_1WGridLayout.html</anchorfile>
      <anchor>a4bf1c12862c45548c6cf9ca2dabdb971</anchor>
      <arglist>(int column, bool enabled=true, const WLength &amp;initialSize=WLength::Auto)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>columnIsResizable</name>
      <anchorfile>classWt_1_1WGridLayout.html</anchorfile>
      <anchor>a3f3dd32c5ab42fb2bcf58ddcaa093103</anchor>
      <arglist>(int column) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRowResizable</name>
      <anchorfile>classWt_1_1WGridLayout.html</anchorfile>
      <anchor>afe6f079d377ff1046dfdbc2d939da784</anchor>
      <arglist>(int row, bool enabled=true, const WLength &amp;initialSize=WLength::Auto)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>rowIsResizable</name>
      <anchorfile>classWt_1_1WGridLayout.html</anchorfile>
      <anchor>ad1654a0d86bdda665dd4bccc8026361a</anchor>
      <arglist>(int row) const</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual void</type>
      <name>setParentWidget</name>
      <anchorfile>classWt_1_1WGridLayout.html</anchorfile>
      <anchor>a5ce793eb3be0b5c6661fa97e738f1185</anchor>
      <arglist>(WWidget *parent) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WGroupBox</name>
    <filename>classWt_1_1WGroupBox.html</filename>
    <base>Wt::WContainerWidget</base>
    <member kind="function">
      <type></type>
      <name>WGroupBox</name>
      <anchorfile>classWt_1_1WGroupBox.html</anchorfile>
      <anchor>a2ea8cb12cfd4e9dae6f13de754bc537e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WGroupBox</name>
      <anchorfile>classWt_1_1WGroupBox.html</anchorfile>
      <anchor>a3e8a42763b8ca0ff73f32524bd6fd92d</anchor>
      <arglist>(const WString &amp;title)</arglist>
    </member>
    <member kind="function">
      <type>const WString &amp;</type>
      <name>title</name>
      <anchorfile>classWt_1_1WGroupBox.html</anchorfile>
      <anchor>a0b385483c6fc89dc3b0034a893ea6b70</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTitle</name>
      <anchorfile>classWt_1_1WGroupBox.html</anchorfile>
      <anchor>a369081aa62b840875cac9ee5d24bd64e</anchor>
      <arglist>(const WString &amp;title)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>refresh</name>
      <anchorfile>classWt_1_1WGroupBox.html</anchorfile>
      <anchor>a18451200d3be85422ce7a844f4dce832</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WHBoxLayout</name>
    <filename>classWt_1_1WHBoxLayout.html</filename>
    <base>Wt::WBoxLayout</base>
    <member kind="function">
      <type></type>
      <name>WHBoxLayout</name>
      <anchorfile>classWt_1_1WHBoxLayout.html</anchorfile>
      <anchor>a2fe6516127bf1ea6580884e88c658e07</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WIconPair</name>
    <filename>classWt_1_1WIconPair.html</filename>
    <base>Wt::WCompositeWidget</base>
    <member kind="function">
      <type></type>
      <name>WIconPair</name>
      <anchorfile>classWt_1_1WIconPair.html</anchorfile>
      <anchor>abd95ac1d99a0f3a95879ebefa1e7978d</anchor>
      <arglist>(const std::string &amp;icon1URL, const std::string &amp;icon2URL, bool clickIsSwitch=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setState</name>
      <anchorfile>classWt_1_1WIconPair.html</anchorfile>
      <anchor>a84029cf28869da70946b078841518e54</anchor>
      <arglist>(int num)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>state</name>
      <anchorfile>classWt_1_1WIconPair.html</anchorfile>
      <anchor>af670efdc577d573ea448f2a9106b054e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WImage *</type>
      <name>icon1</name>
      <anchorfile>classWt_1_1WIconPair.html</anchorfile>
      <anchor>a2cb1d36dea7c7f0a145a0ac2e6c2ac0b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WImage *</type>
      <name>icon2</name>
      <anchorfile>classWt_1_1WIconPair.html</anchorfile>
      <anchor>ab3a373c00c3ba582790c31f02f6caf6b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>showIcon1</name>
      <anchorfile>classWt_1_1WIconPair.html</anchorfile>
      <anchor>a97187962ca2272b1665aa2ca267c6d7f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>showIcon2</name>
      <anchorfile>classWt_1_1WIconPair.html</anchorfile>
      <anchor>a774952e5c30f47d0b1d213e01448325d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EventSignal&lt; WMouseEvent &gt; &amp;</type>
      <name>icon1Clicked</name>
      <anchorfile>classWt_1_1WIconPair.html</anchorfile>
      <anchor>ab5bbb66929dfbdf8918c7ddbf70639eb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EventSignal&lt; WMouseEvent &gt; &amp;</type>
      <name>icon2Clicked</name>
      <anchorfile>classWt_1_1WIconPair.html</anchorfile>
      <anchor>a9dabd7d16e62298ebab6a95054e50321</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WIdentityProxyModel</name>
    <filename>classWt_1_1WIdentityProxyModel.html</filename>
    <base>Wt::WAbstractProxyModel</base>
    <member kind="function">
      <type></type>
      <name>WIdentityProxyModel</name>
      <anchorfile>classWt_1_1WIdentityProxyModel.html</anchorfile>
      <anchor>a472e92e60f4ba49ba8450e90f4e46356</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>columnCount</name>
      <anchorfile>classWt_1_1WIdentityProxyModel.html</anchorfile>
      <anchor>ac4a3aee195019b5d3400de667ea0ea26</anchor>
      <arglist>(const WModelIndex &amp;parent=WModelIndex()) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>rowCount</name>
      <anchorfile>classWt_1_1WIdentityProxyModel.html</anchorfile>
      <anchor>ab0501e7af35151162a855c3a23a824ff</anchor>
      <arglist>(const WModelIndex &amp;parent=WModelIndex()) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WModelIndex</type>
      <name>parent</name>
      <anchorfile>classWt_1_1WIdentityProxyModel.html</anchorfile>
      <anchor>a6594249585e7f40c483a7a98642f900f</anchor>
      <arglist>(const WModelIndex &amp;child) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WModelIndex</type>
      <name>index</name>
      <anchorfile>classWt_1_1WIdentityProxyModel.html</anchorfile>
      <anchor>a42ef2fc53b8785495a59d678235a7dee</anchor>
      <arglist>(int row, int column, const WModelIndex &amp;parent=WModelIndex()) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WModelIndex</type>
      <name>mapFromSource</name>
      <anchorfile>classWt_1_1WIdentityProxyModel.html</anchorfile>
      <anchor>a4a26c1087bcef27550aa92cc2043f7f6</anchor>
      <arglist>(const WModelIndex &amp;sourceIndex) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WModelIndex</type>
      <name>mapToSource</name>
      <anchorfile>classWt_1_1WIdentityProxyModel.html</anchorfile>
      <anchor>add819b73498bc4d12b6fdf1b59ac0547</anchor>
      <arglist>(const WModelIndex &amp;proxyIndex) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setSourceModel</name>
      <anchorfile>classWt_1_1WIdentityProxyModel.html</anchorfile>
      <anchor>a669511e09002895a2842f7975c8d1c38</anchor>
      <arglist>(const std::shared_ptr&lt; WAbstractItemModel &gt; &amp;sourceModel) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>insertColumns</name>
      <anchorfile>classWt_1_1WIdentityProxyModel.html</anchorfile>
      <anchor>a48878af51c318e0de92a68d7ba0ba741</anchor>
      <arglist>(int column, int count, const WModelIndex &amp;parent=WModelIndex()) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>insertRows</name>
      <anchorfile>classWt_1_1WIdentityProxyModel.html</anchorfile>
      <anchor>aa23fbcbef469ecb500ba8434ea2dcbd9</anchor>
      <arglist>(int row, int count, const WModelIndex &amp;parent=WModelIndex()) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>removeColumns</name>
      <anchorfile>classWt_1_1WIdentityProxyModel.html</anchorfile>
      <anchor>a137e0fde6709e76ab573a020a73085e4</anchor>
      <arglist>(int column, int count, const WModelIndex &amp;parent=WModelIndex()) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>removeRows</name>
      <anchorfile>classWt_1_1WIdentityProxyModel.html</anchorfile>
      <anchor>ab918e1ed584e0d194a16303aacf55613</anchor>
      <arglist>(int row, int count, const WModelIndex &amp;parent=WModelIndex()) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setHeaderData</name>
      <anchorfile>classWt_1_1WIdentityProxyModel.html</anchorfile>
      <anchor>acfa2c2b201f8919e462e1a2d498b75ab</anchor>
      <arglist>(int section, Orientation orientation, const cpp17::any &amp;value, ItemDataRole role=ItemDataRole::Edit)</arglist>
    </member>
    <member kind="function">
      <type>virtual bool</type>
      <name>setHeaderData</name>
      <anchorfile>classWt_1_1WIdentityProxyModel.html</anchorfile>
      <anchor>abd4f1baf6088c2cc4847d3b384cddbd2</anchor>
      <arglist>(int section, Orientation orientation, const cpp17::any &amp;value, ItemDataRole role=ItemDataRole::Edit)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setHeaderData</name>
      <anchorfile>classWt_1_1WIdentityProxyModel.html</anchorfile>
      <anchor>a0bccbb4373b4c1e8bce85573b933d53d</anchor>
      <arglist>(int section, const cpp17::any &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WLeafletMap::WidgetMarker</name>
    <filename>classWt_1_1WLeafletMap_1_1WidgetMarker.html</filename>
    <base>Wt::WLeafletMap::Marker</base>
    <member kind="function">
      <type></type>
      <name>WidgetMarker</name>
      <anchorfile>classWt_1_1WLeafletMap_1_1WidgetMarker.html</anchorfile>
      <anchor>a0929af7d2bc7f5f1055e02889cb6910a</anchor>
      <arglist>(const Coordinate &amp;pos, std::unique_ptr&lt; WWidget &gt; widget)</arglist>
    </member>
    <member kind="function">
      <type>WWidget *</type>
      <name>widget</name>
      <anchorfile>classWt_1_1WLeafletMap_1_1WidgetMarker.html</anchorfile>
      <anchor>aeabd0e7a48c621b72b741fdb04723974</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const WWidget *</type>
      <name>widget</name>
      <anchorfile>classWt_1_1WLeafletMap_1_1WidgetMarker.html</anchorfile>
      <anchor>a9c01efaaa2a313edf6cbb08a1fd4db02</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAnchorPoint</name>
      <anchorfile>classWt_1_1WLeafletMap_1_1WidgetMarker.html</anchorfile>
      <anchor>aa2c293395e8294cbc57e119bd4a07d6f</anchor>
      <arglist>(double x, double y)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WImage</name>
    <filename>classWt_1_1WImage.html</filename>
    <base>Wt::WInteractWidget</base>
    <member kind="function">
      <type></type>
      <name>WImage</name>
      <anchorfile>classWt_1_1WImage.html</anchorfile>
      <anchor>a7d6bcf1d5ff91162ab39905b493b4988</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WImage</name>
      <anchorfile>classWt_1_1WImage.html</anchorfile>
      <anchor>a8a90eb8e50b2bcb52ee9946cdde58813</anchor>
      <arglist>(const WLink &amp;imageLink)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WImage</name>
      <anchorfile>classWt_1_1WImage.html</anchorfile>
      <anchor>aa31caaeff56f5b5b3ef7c9e508ca0167</anchor>
      <arglist>(const WLink &amp;imageLink, const WString &amp;altText)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAlternateText</name>
      <anchorfile>classWt_1_1WImage.html</anchorfile>
      <anchor>afa619104c48e0152f5847d72a5397fc3</anchor>
      <arglist>(const WString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>const WString &amp;</type>
      <name>alternateText</name>
      <anchorfile>classWt_1_1WImage.html</anchorfile>
      <anchor>a2a331f8c2b1ab88e2ef8a698de7b34ab</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setImageLink</name>
      <anchorfile>classWt_1_1WImage.html</anchorfile>
      <anchor>ab3b0e9034aefca28cbda7d8943738aca</anchor>
      <arglist>(const WLink &amp;link)</arglist>
    </member>
    <member kind="function">
      <type>const WLink &amp;</type>
      <name>imageLink</name>
      <anchorfile>classWt_1_1WImage.html</anchorfile>
      <anchor>a2dbdf6d8027d9913c8ac0696043ef257</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addArea</name>
      <anchorfile>classWt_1_1WImage.html</anchorfile>
      <anchor>a11305acf84fc3c3bf69ae8812f29649d</anchor>
      <arglist>(std::unique_ptr&lt; WAbstractArea &gt; area)</arglist>
    </member>
    <member kind="function">
      <type>Area *</type>
      <name>addArea</name>
      <anchorfile>classWt_1_1WImage.html</anchorfile>
      <anchor>a40ea993065e92c32479b6cfaada84a57</anchor>
      <arglist>(std::unique_ptr&lt; Area &gt; area)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertArea</name>
      <anchorfile>classWt_1_1WImage.html</anchorfile>
      <anchor>a160602e837eac02372a88eceb5fb26d7</anchor>
      <arglist>(int index, std::unique_ptr&lt; WAbstractArea &gt; area)</arglist>
    </member>
    <member kind="function">
      <type>Area *</type>
      <name>insertArea</name>
      <anchorfile>classWt_1_1WImage.html</anchorfile>
      <anchor>afbe712b5189aa3b5c97d66458fc932b7</anchor>
      <arglist>(int index, std::unique_ptr&lt; Area &gt; area)</arglist>
    </member>
    <member kind="function">
      <type>std::unique_ptr&lt; WAbstractArea &gt;</type>
      <name>removeArea</name>
      <anchorfile>classWt_1_1WImage.html</anchorfile>
      <anchor>af1e79b2deb64472866b46cf7d76d32f8</anchor>
      <arglist>(WAbstractArea *area)</arglist>
    </member>
    <member kind="function">
      <type>WAbstractArea *</type>
      <name>area</name>
      <anchorfile>classWt_1_1WImage.html</anchorfile>
      <anchor>a6ac2bda4ffdaf953576ed95d4ca64eaa</anchor>
      <arglist>(int index) const</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; WAbstractArea * &gt;</type>
      <name>areas</name>
      <anchorfile>classWt_1_1WImage.html</anchorfile>
      <anchor>ac01dd945f2083bf577720be73c4095d4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>EventSignal &amp;</type>
      <name>imageLoaded</name>
      <anchorfile>classWt_1_1WImage.html</anchorfile>
      <anchor>a54258a16b4ff221694fd79701ce8cd98</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>render</name>
      <anchorfile>classWt_1_1WImage.html</anchorfile>
      <anchor>afd60bfb6fa9e3e42f8a8d273e70ebe3d</anchor>
      <arglist>(WFlags&lt; RenderFlag &gt; flags) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WInPlaceEdit</name>
    <filename>classWt_1_1WInPlaceEdit.html</filename>
    <base>Wt::WCompositeWidget</base>
    <member kind="function">
      <type></type>
      <name>WInPlaceEdit</name>
      <anchorfile>classWt_1_1WInPlaceEdit.html</anchorfile>
      <anchor>a733305393ec1927210d815dbb7206be2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WInPlaceEdit</name>
      <anchorfile>classWt_1_1WInPlaceEdit.html</anchorfile>
      <anchor>a09076b8c607b66f6f9e8165de7f078a0</anchor>
      <arglist>(const WString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WInPlaceEdit</name>
      <anchorfile>classWt_1_1WInPlaceEdit.html</anchorfile>
      <anchor>a13827589de6b82df98276c49a768b90e</anchor>
      <arglist>(bool buttons, const WString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>const WString &amp;</type>
      <name>text</name>
      <anchorfile>classWt_1_1WInPlaceEdit.html</anchorfile>
      <anchor>adfb8804c2adb9a69b7676f2c082830af</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setText</name>
      <anchorfile>classWt_1_1WInPlaceEdit.html</anchorfile>
      <anchor>ac45af87bce6ad792a9f9aa3d3b829701</anchor>
      <arglist>(const WString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPlaceholderText</name>
      <anchorfile>classWt_1_1WInPlaceEdit.html</anchorfile>
      <anchor>a99dc3844aa5fe2589f0baa9d152766d0</anchor>
      <arglist>(const WString &amp;placeholder)</arglist>
    </member>
    <member kind="function">
      <type>const WString &amp;</type>
      <name>placeholderText</name>
      <anchorfile>classWt_1_1WInPlaceEdit.html</anchorfile>
      <anchor>a9f1cb1e93791171d045b6861c50b53ac</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WLineEdit *</type>
      <name>lineEdit</name>
      <anchorfile>classWt_1_1WInPlaceEdit.html</anchorfile>
      <anchor>a9a68da796c6b1c7a0ab56d0d34467e20</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WText *</type>
      <name>textWidget</name>
      <anchorfile>classWt_1_1WInPlaceEdit.html</anchorfile>
      <anchor>aa7d0d1fb5b70691d0c71155a21085ea5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WPushButton *</type>
      <name>saveButton</name>
      <anchorfile>classWt_1_1WInPlaceEdit.html</anchorfile>
      <anchor>a2d2daa7c2d44d27b968ea784546e6e53</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WPushButton *</type>
      <name>cancelButton</name>
      <anchorfile>classWt_1_1WInPlaceEdit.html</anchorfile>
      <anchor>aa47ba54b326d8b3c39fabf2b2b235a20</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Signal&lt; WString &gt; &amp;</type>
      <name>valueChanged</name>
      <anchorfile>classWt_1_1WInPlaceEdit.html</anchorfile>
      <anchor>a9c060014e820680fa242e051ebb77595</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setButtonsEnabled</name>
      <anchorfile>classWt_1_1WInPlaceEdit.html</anchorfile>
      <anchor>aac994b226bc2c33ecb36032b8f488933</anchor>
      <arglist>(bool enabled=true)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>render</name>
      <anchorfile>classWt_1_1WInPlaceEdit.html</anchorfile>
      <anchor>af0b10f2a3096c7856f3d91de6250825d</anchor>
      <arglist>(WFlags&lt; RenderFlag &gt; flags) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WInteractWidget</name>
    <filename>classWt_1_1WInteractWidget.html</filename>
    <base>Wt::WWebWidget</base>
    <member kind="function">
      <type></type>
      <name>WInteractWidget</name>
      <anchorfile>classWt_1_1WInteractWidget.html</anchorfile>
      <anchor>a2bd1f11970a4c4aaa79a5d12e3ab07ae</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EventSignal&lt; WKeyEvent &gt; &amp;</type>
      <name>keyWentDown</name>
      <anchorfile>classWt_1_1WInteractWidget.html</anchorfile>
      <anchor>a8669f2d35aad5091837b97bd00f25223</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EventSignal&lt; WKeyEvent &gt; &amp;</type>
      <name>keyPressed</name>
      <anchorfile>classWt_1_1WInteractWidget.html</anchorfile>
      <anchor>a6d4c957a92eb6ffec59a638dd384c6c9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EventSignal&lt; WKeyEvent &gt; &amp;</type>
      <name>keyWentUp</name>
      <anchorfile>classWt_1_1WInteractWidget.html</anchorfile>
      <anchor>a7602bfbe38090d4acca674afc02f15c8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EventSignal &amp;</type>
      <name>enterPressed</name>
      <anchorfile>classWt_1_1WInteractWidget.html</anchorfile>
      <anchor>a38f06d1ad95e7599b055f49931236c10</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EventSignal &amp;</type>
      <name>escapePressed</name>
      <anchorfile>classWt_1_1WInteractWidget.html</anchorfile>
      <anchor>ab581bba7f0ce02380e9339198bac2f78</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EventSignal&lt; WMouseEvent &gt; &amp;</type>
      <name>clicked</name>
      <anchorfile>classWt_1_1WInteractWidget.html</anchorfile>
      <anchor>ae11e050cce0d4a8f742afa3ef92bfe8c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EventSignal&lt; WMouseEvent &gt; &amp;</type>
      <name>doubleClicked</name>
      <anchorfile>classWt_1_1WInteractWidget.html</anchorfile>
      <anchor>a8865f4bb679e5c3ff2c946ef83248e19</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EventSignal&lt; WMouseEvent &gt; &amp;</type>
      <name>mouseWentDown</name>
      <anchorfile>classWt_1_1WInteractWidget.html</anchorfile>
      <anchor>ad29946ac46183ca238229327479084ca</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EventSignal&lt; WMouseEvent &gt; &amp;</type>
      <name>mouseWentUp</name>
      <anchorfile>classWt_1_1WInteractWidget.html</anchorfile>
      <anchor>a318d761e35388a52eeb3406e6717b28f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EventSignal&lt; WMouseEvent &gt; &amp;</type>
      <name>mouseWentOut</name>
      <anchorfile>classWt_1_1WInteractWidget.html</anchorfile>
      <anchor>a0511484098ce87ed0038b2881ab316bd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EventSignal&lt; WMouseEvent &gt; &amp;</type>
      <name>mouseWentOver</name>
      <anchorfile>classWt_1_1WInteractWidget.html</anchorfile>
      <anchor>a89a46ebf7fbcea5a494c4dac13f1dc15</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EventSignal&lt; WMouseEvent &gt; &amp;</type>
      <name>mouseMoved</name>
      <anchorfile>classWt_1_1WInteractWidget.html</anchorfile>
      <anchor>a40c3643603fa861b1ec797eec794aa4c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EventSignal&lt; WMouseEvent &gt; &amp;</type>
      <name>mouseDragged</name>
      <anchorfile>classWt_1_1WInteractWidget.html</anchorfile>
      <anchor>a1ea435a0495d652f36d84f3656cbb8b3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EventSignal&lt; WMouseEvent &gt; &amp;</type>
      <name>mouseWheel</name>
      <anchorfile>classWt_1_1WInteractWidget.html</anchorfile>
      <anchor>a656a0e4d5af72af0190d84dedf0093c6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EventSignal&lt; WTouchEvent &gt; &amp;</type>
      <name>touchStarted</name>
      <anchorfile>classWt_1_1WInteractWidget.html</anchorfile>
      <anchor>ac7d10a6cae1e23a791b44c0682a3c627</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EventSignal&lt; WTouchEvent &gt; &amp;</type>
      <name>touchEnded</name>
      <anchorfile>classWt_1_1WInteractWidget.html</anchorfile>
      <anchor>ad378d76c2d222e1ad72f8967b7c2d1a5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EventSignal&lt; WTouchEvent &gt; &amp;</type>
      <name>touchMoved</name>
      <anchorfile>classWt_1_1WInteractWidget.html</anchorfile>
      <anchor>ac1ea20c5d68b3219612af9d1171b9252</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EventSignal&lt; WGestureEvent &gt; &amp;</type>
      <name>gestureStarted</name>
      <anchorfile>classWt_1_1WInteractWidget.html</anchorfile>
      <anchor>a3c568c747c955aba9967e41aac8ddb9b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EventSignal&lt; WGestureEvent &gt; &amp;</type>
      <name>gestureChanged</name>
      <anchorfile>classWt_1_1WInteractWidget.html</anchorfile>
      <anchor>a700a49b63018898968ac59aeba50a691</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EventSignal&lt; WGestureEvent &gt; &amp;</type>
      <name>gestureEnded</name>
      <anchorfile>classWt_1_1WInteractWidget.html</anchorfile>
      <anchor>a0e4cba113eacf8d1047977c407e7dfad</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDraggable</name>
      <anchorfile>classWt_1_1WInteractWidget.html</anchorfile>
      <anchor>ae9f41b3e4c04f7537d1eb4ee9adb34e9</anchor>
      <arglist>(const std::string &amp;mimeType, WWidget *dragWidget=nullptr, bool isDragWidgetOnly=false, WObject *sourceWidget=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unsetDraggable</name>
      <anchorfile>classWt_1_1WInteractWidget.html</anchorfile>
      <anchor>a1b5739630e8ec22204c0aad643cfff79</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMouseOverDelay</name>
      <anchorfile>classWt_1_1WInteractWidget.html</anchorfile>
      <anchor>a60423e777cffa89e6d1373fd25754099</anchor>
      <arglist>(int delay)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>mouseOverDelay</name>
      <anchorfile>classWt_1_1WInteractWidget.html</anchorfile>
      <anchor>a578faf3b7d34734ff2669c655f57a092</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setPopup</name>
      <anchorfile>classWt_1_1WInteractWidget.html</anchorfile>
      <anchor>aba92970595a151526e200bab48706abc</anchor>
      <arglist>(bool popup) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>load</name>
      <anchorfile>classWt_1_1WInteractWidget.html</anchorfile>
      <anchor>af08e23a573fd4ec8182e8c7830ef7634</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isEnabled</name>
      <anchorfile>classWt_1_1WInteractWidget.html</anchorfile>
      <anchor>a109a042dc369d1cc6e583118619cc6aa</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>propagateSetEnabled</name>
      <anchorfile>classWt_1_1WInteractWidget.html</anchorfile>
      <anchor>a0427844c6e945129ad6bd5c9500b1e58</anchor>
      <arglist>(bool enabled) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WIntValidator</name>
    <filename>classWt_1_1WIntValidator.html</filename>
    <base>Wt::WValidator</base>
    <member kind="function">
      <type></type>
      <name>WIntValidator</name>
      <anchorfile>classWt_1_1WIntValidator.html</anchorfile>
      <anchor>a2199959846cf72aeed3e50f64ba9bf97</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WIntValidator</name>
      <anchorfile>classWt_1_1WIntValidator.html</anchorfile>
      <anchor>a69587e19a1587e994b03b6366367e598</anchor>
      <arglist>(int minimum, int maximum)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>bottom</name>
      <anchorfile>classWt_1_1WIntValidator.html</anchorfile>
      <anchor>a06bcd1a8afaa4c7c99d0f0b3b47f7030</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBottom</name>
      <anchorfile>classWt_1_1WIntValidator.html</anchorfile>
      <anchor>a365500d492560d016b3ba7f263ce282c</anchor>
      <arglist>(int bottom)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>top</name>
      <anchorfile>classWt_1_1WIntValidator.html</anchorfile>
      <anchor>a58ab079c61ef1afee01d214f29388328</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTop</name>
      <anchorfile>classWt_1_1WIntValidator.html</anchorfile>
      <anchor>a8a804c3ea0811b5c32de974592a1c88c</anchor>
      <arglist>(int top)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setRange</name>
      <anchorfile>classWt_1_1WIntValidator.html</anchorfile>
      <anchor>afe180f56f061c98fcc9de6be20effe38</anchor>
      <arglist>(int bottom, int top)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Result</type>
      <name>validate</name>
      <anchorfile>classWt_1_1WIntValidator.html</anchorfile>
      <anchor>a521188380f33536d9dd9acd4c7dcc280</anchor>
      <arglist>(const WString &amp;input) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInvalidNotANumberText</name>
      <anchorfile>classWt_1_1WIntValidator.html</anchorfile>
      <anchor>a9bc399a9536652c9ab52301669909b6a</anchor>
      <arglist>(const WString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>WString</type>
      <name>invalidNotANumberText</name>
      <anchorfile>classWt_1_1WIntValidator.html</anchorfile>
      <anchor>a923df29c8e3280f5e02afd18b5050213</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInvalidTooSmallText</name>
      <anchorfile>classWt_1_1WIntValidator.html</anchorfile>
      <anchor>a680b57bde8dacfe52e8e65d4abbcf4c6</anchor>
      <arglist>(const WString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>WString</type>
      <name>invalidTooSmallText</name>
      <anchorfile>classWt_1_1WIntValidator.html</anchorfile>
      <anchor>ad9a2b21712f6728a1e2a9b66576db9ec</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInvalidTooLargeText</name>
      <anchorfile>classWt_1_1WIntValidator.html</anchorfile>
      <anchor>a2e474c6f5ffecff9c8d7cc27810b211f</anchor>
      <arglist>(const WString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>WString</type>
      <name>invalidTooLargeText</name>
      <anchorfile>classWt_1_1WIntValidator.html</anchorfile>
      <anchor>aa042b318cb884cd025b6e276a09dd3cb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setIgnoreTrailingSpaces</name>
      <anchorfile>classWt_1_1WIntValidator.html</anchorfile>
      <anchor>a4bb97a5a8edd7755f7afd1841c57b805</anchor>
      <arglist>(bool b)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ignoreTrailingSpaces</name>
      <anchorfile>classWt_1_1WIntValidator.html</anchorfile>
      <anchor>acd3f095b5e9eb11ea1347fa3718a4ddc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>javaScriptValidate</name>
      <anchorfile>classWt_1_1WIntValidator.html</anchorfile>
      <anchor>a6daad08c2896cc54b62a847b99319eff</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>inputFilter</name>
      <anchorfile>classWt_1_1WIntValidator.html</anchorfile>
      <anchor>a01301893003a849939fe9c6c46c39e26</anchor>
      <arglist>() const override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WIOService</name>
    <filename>classWt_1_1WIOService.html</filename>
    <member kind="function">
      <type></type>
      <name>WIOService</name>
      <anchorfile>classWt_1_1WIOService.html</anchorfile>
      <anchor>a5ee1bf87cdc2eb1ff5fcc35dd8cddea4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setThreadCount</name>
      <anchorfile>classWt_1_1WIOService.html</anchorfile>
      <anchor>a4f79e83a51a786a9c22f431c11e7854d</anchor>
      <arglist>(int number)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>threadCount</name>
      <anchorfile>classWt_1_1WIOService.html</anchorfile>
      <anchor>ad6700130fe7724e98b335aa6306d775e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>start</name>
      <anchorfile>classWt_1_1WIOService.html</anchorfile>
      <anchor>a5816e47cc1c8a493f63dee8c5db8e7b3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stop</name>
      <anchorfile>classWt_1_1WIOService.html</anchorfile>
      <anchor>a9780f76f0e6f0159de0a57c78c2f1fad</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>post</name>
      <anchorfile>classWt_1_1WIOService.html</anchorfile>
      <anchor>ae5a4cffe1ef2ccd3fbe441cebff3f019</anchor>
      <arglist>(const std::function&lt; void()&gt; &amp;function)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>schedule</name>
      <anchorfile>classWt_1_1WIOService.html</anchorfile>
      <anchor>a5e445e207ee36f75cea4ba7ae321d7dc</anchor>
      <arglist>(std::chrono::steady_clock::duration millis, const std::function&lt; void()&gt; &amp;function)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>initializeThread</name>
      <anchorfile>classWt_1_1WIOService.html</anchorfile>
      <anchor>a168ebe4ff00a8e9dbf8c303296d6ae2f</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WItemDelegate</name>
    <filename>classWt_1_1WItemDelegate.html</filename>
    <base>Wt::WAbstractItemDelegate</base>
    <member kind="function">
      <type></type>
      <name>WItemDelegate</name>
      <anchorfile>classWt_1_1WItemDelegate.html</anchorfile>
      <anchor>a3044007aebd0aa59cd5c64f9b192d876</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::unique_ptr&lt; WWidget &gt;</type>
      <name>update</name>
      <anchorfile>classWt_1_1WItemDelegate.html</anchorfile>
      <anchor>a8c15f05387be2b7b4e3f6c5560243f3f</anchor>
      <arglist>(WWidget *widget, const WModelIndex &amp;index, WFlags&lt; ViewItemRenderFlag &gt; flags) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>updateModelIndex</name>
      <anchorfile>classWt_1_1WItemDelegate.html</anchorfile>
      <anchor>a62f6685b524e335f8a6640c89608424b</anchor>
      <arglist>(WWidget *widget, const WModelIndex &amp;index) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTextFormat</name>
      <anchorfile>classWt_1_1WItemDelegate.html</anchorfile>
      <anchor>ad886d265dc00b95d9fb90c022a6322f9</anchor>
      <arglist>(const WString &amp;format)</arglist>
    </member>
    <member kind="function">
      <type>const WString &amp;</type>
      <name>textFormat</name>
      <anchorfile>classWt_1_1WItemDelegate.html</anchorfile>
      <anchor>aad8187807bc2717cde5f4b2c7df6e597</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setModelData</name>
      <anchorfile>classWt_1_1WItemDelegate.html</anchorfile>
      <anchor>af0ebbc67a0d661cde08721d3d6404e0f</anchor>
      <arglist>(const cpp17::any &amp;editState, WAbstractItemModel *model, const WModelIndex &amp;index) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual cpp17::any</type>
      <name>editState</name>
      <anchorfile>classWt_1_1WItemDelegate.html</anchorfile>
      <anchor>ad846a8933d846fc43394bb6d5fd78d7e</anchor>
      <arglist>(WWidget *editor, const WModelIndex &amp;index) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setEditState</name>
      <anchorfile>classWt_1_1WItemDelegate.html</anchorfile>
      <anchor>aa1519431acb606b62b9d4f8faf279d03</anchor>
      <arglist>(WWidget *editor, const WModelIndex &amp;index, const cpp17::any &amp;value) const override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual std::unique_ptr&lt; WWidget &gt;</type>
      <name>createEditor</name>
      <anchorfile>classWt_1_1WItemDelegate.html</anchorfile>
      <anchor>a132efafa82978b13a4ef7003165fa676</anchor>
      <arglist>(const WModelIndex &amp;index, WFlags&lt; ViewItemRenderFlag &gt; flags) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WItemSelectionModel</name>
    <filename>classWt_1_1WItemSelectionModel.html</filename>
    <base>Wt::WObject</base>
    <member kind="function">
      <type>std::shared_ptr&lt; WAbstractItemModel &gt;</type>
      <name>model</name>
      <anchorfile>classWt_1_1WItemSelectionModel.html</anchorfile>
      <anchor>a651408f7ae8c6e966800b5d280b7aba2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WModelIndexSet</type>
      <name>selectedIndexes</name>
      <anchorfile>classWt_1_1WItemSelectionModel.html</anchorfile>
      <anchor>a3ad1aa1ccf20b951faf41b1952bb0a7b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSelected</name>
      <anchorfile>classWt_1_1WItemSelectionModel.html</anchorfile>
      <anchor>a37479a9a4eb273e32a7fc7b76f1e24d7</anchor>
      <arglist>(const WModelIndex &amp;index) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSelectionBehavior</name>
      <anchorfile>classWt_1_1WItemSelectionModel.html</anchorfile>
      <anchor>acbf2a0659f9b5f04becbf5dd02aff9b3</anchor>
      <arglist>(SelectionBehavior behavior)</arglist>
    </member>
    <member kind="function">
      <type>SelectionBehavior</type>
      <name>selectionBehavior</name>
      <anchorfile>classWt_1_1WItemSelectionModel.html</anchorfile>
      <anchor>a57e97d726f168432f79199ba6186d455</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>mimeType</name>
      <anchorfile>classWt_1_1WItemSelectionModel.html</anchorfile>
      <anchor>a36e3f0be90d7b31e2b8a2ed317472d29</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WJavaScriptExposableObject</name>
    <filename>classWt_1_1WJavaScriptExposableObject.html</filename>
    <member kind="function">
      <type>bool</type>
      <name>isJavaScriptBound</name>
      <anchorfile>classWt_1_1WJavaScriptExposableObject.html</anchorfile>
      <anchor>a4e121ccbb14715c33dc1b019b6636156</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>jsValue</name>
      <anchorfile>classWt_1_1WJavaScriptExposableObject.html</anchorfile>
      <anchor>a629c537a37b1c669c96d519360b53d14</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>jsRef</name>
      <anchorfile>classWt_1_1WJavaScriptExposableObject.html</anchorfile>
      <anchor>aee9bb7156b269529a7a750745c1a4690</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WJavaScriptHandle</name>
    <filename>classWt_1_1WJavaScriptHandle.html</filename>
    <templarg></templarg>
    <member kind="function">
      <type></type>
      <name>WJavaScriptHandle</name>
      <anchorfile>classWt_1_1WJavaScriptHandle.html</anchorfile>
      <anchor>ab0a758e635281579c250d78c541f3169</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WJavaScriptHandle</name>
      <anchorfile>classWt_1_1WJavaScriptHandle.html</anchorfile>
      <anchor>a9a4c55088dfbb671c07ed5d31ab2c387</anchor>
      <arglist>(const WJavaScriptHandle &amp;handle) noexcept</arglist>
    </member>
    <member kind="function">
      <type>WJavaScriptHandle &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1WJavaScriptHandle.html</anchorfile>
      <anchor>aa79004823ff6b42279aa5d84ad33b5e7</anchor>
      <arglist>(const WJavaScriptHandle &amp;handle) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WJavaScriptHandle</name>
      <anchorfile>classWt_1_1WJavaScriptHandle.html</anchorfile>
      <anchor>a9acc1f72941aba2c5083388d9ffbda9a</anchor>
      <arglist>(WJavaScriptHandle &amp;&amp;handle) noexcept</arglist>
    </member>
    <member kind="function">
      <type>WJavaScriptHandle &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1WJavaScriptHandle.html</anchorfile>
      <anchor>ad599d7915b59730a890237629b0a458b</anchor>
      <arglist>(WJavaScriptHandle &amp;&amp;handle) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WJavaScriptHandle</name>
      <anchorfile>classWt_1_1WJavaScriptHandle.html</anchorfile>
      <anchor>a13e91f717570ac9b3c6ac69d38d75716</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isValid</name>
      <anchorfile>classWt_1_1WJavaScriptHandle.html</anchorfile>
      <anchor>a40f6c5ac6e0709226935f5bf8152a94f</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>jsRef</name>
      <anchorfile>classWt_1_1WJavaScriptHandle.html</anchorfile>
      <anchor>a0d0bc00f0bcafb596c3f6c96c4241ded</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setValue</name>
      <anchorfile>classWt_1_1WJavaScriptHandle.html</anchorfile>
      <anchor>ac1e446a7ac75a19e14d1019b8011499b</anchor>
      <arglist>(const T &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>const T &amp;</type>
      <name>value</name>
      <anchorfile>classWt_1_1WJavaScriptHandle.html</anchorfile>
      <anchor>a8084d9b7795f2e27ee71b18fccb2f5d7</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>WJavaScriptHandle&lt; WPainterPath &gt;</name>
    <filename>classWt_1_1WJavaScriptHandle.html</filename>
    <member kind="function">
      <type></type>
      <name>WJavaScriptHandle</name>
      <anchorfile>classWt_1_1WJavaScriptHandle.html</anchorfile>
      <anchor>ab0a758e635281579c250d78c541f3169</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WJavaScriptHandle</name>
      <anchorfile>classWt_1_1WJavaScriptHandle.html</anchorfile>
      <anchor>a9a4c55088dfbb671c07ed5d31ab2c387</anchor>
      <arglist>(const WJavaScriptHandle &amp;handle) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WJavaScriptHandle</name>
      <anchorfile>classWt_1_1WJavaScriptHandle.html</anchorfile>
      <anchor>a9acc1f72941aba2c5083388d9ffbda9a</anchor>
      <arglist>(WJavaScriptHandle &amp;&amp;handle) noexcept</arglist>
    </member>
    <member kind="function">
      <type>WJavaScriptHandle &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1WJavaScriptHandle.html</anchorfile>
      <anchor>aa79004823ff6b42279aa5d84ad33b5e7</anchor>
      <arglist>(const WJavaScriptHandle &amp;handle) noexcept</arglist>
    </member>
    <member kind="function">
      <type>WJavaScriptHandle &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1WJavaScriptHandle.html</anchorfile>
      <anchor>ad599d7915b59730a890237629b0a458b</anchor>
      <arglist>(WJavaScriptHandle &amp;&amp;handle) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WJavaScriptHandle</name>
      <anchorfile>classWt_1_1WJavaScriptHandle.html</anchorfile>
      <anchor>a13e91f717570ac9b3c6ac69d38d75716</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isValid</name>
      <anchorfile>classWt_1_1WJavaScriptHandle.html</anchorfile>
      <anchor>a40f6c5ac6e0709226935f5bf8152a94f</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>jsRef</name>
      <anchorfile>classWt_1_1WJavaScriptHandle.html</anchorfile>
      <anchor>a0d0bc00f0bcafb596c3f6c96c4241ded</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setValue</name>
      <anchorfile>classWt_1_1WJavaScriptHandle.html</anchorfile>
      <anchor>ac1e446a7ac75a19e14d1019b8011499b</anchor>
      <arglist>(const WPainterPath &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>const WPainterPath &amp;</type>
      <name>value</name>
      <anchorfile>classWt_1_1WJavaScriptHandle.html</anchorfile>
      <anchor>a8084d9b7795f2e27ee71b18fccb2f5d7</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>WJavaScriptHandle&lt; Wt::WPainterPath &gt;</name>
    <filename>classWt_1_1WJavaScriptHandle.html</filename>
    <member kind="function">
      <type></type>
      <name>WJavaScriptHandle</name>
      <anchorfile>classWt_1_1WJavaScriptHandle.html</anchorfile>
      <anchor>ab0a758e635281579c250d78c541f3169</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WJavaScriptHandle</name>
      <anchorfile>classWt_1_1WJavaScriptHandle.html</anchorfile>
      <anchor>a9a4c55088dfbb671c07ed5d31ab2c387</anchor>
      <arglist>(const WJavaScriptHandle &amp;handle) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WJavaScriptHandle</name>
      <anchorfile>classWt_1_1WJavaScriptHandle.html</anchorfile>
      <anchor>a9acc1f72941aba2c5083388d9ffbda9a</anchor>
      <arglist>(WJavaScriptHandle &amp;&amp;handle) noexcept</arglist>
    </member>
    <member kind="function">
      <type>WJavaScriptHandle &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1WJavaScriptHandle.html</anchorfile>
      <anchor>aa79004823ff6b42279aa5d84ad33b5e7</anchor>
      <arglist>(const WJavaScriptHandle &amp;handle) noexcept</arglist>
    </member>
    <member kind="function">
      <type>WJavaScriptHandle &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1WJavaScriptHandle.html</anchorfile>
      <anchor>ad599d7915b59730a890237629b0a458b</anchor>
      <arglist>(WJavaScriptHandle &amp;&amp;handle) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WJavaScriptHandle</name>
      <anchorfile>classWt_1_1WJavaScriptHandle.html</anchorfile>
      <anchor>a13e91f717570ac9b3c6ac69d38d75716</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isValid</name>
      <anchorfile>classWt_1_1WJavaScriptHandle.html</anchorfile>
      <anchor>a40f6c5ac6e0709226935f5bf8152a94f</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>jsRef</name>
      <anchorfile>classWt_1_1WJavaScriptHandle.html</anchorfile>
      <anchor>a0d0bc00f0bcafb596c3f6c96c4241ded</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setValue</name>
      <anchorfile>classWt_1_1WJavaScriptHandle.html</anchorfile>
      <anchor>ac1e446a7ac75a19e14d1019b8011499b</anchor>
      <arglist>(const Wt::WPainterPath &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>const Wt::WPainterPath &amp;</type>
      <name>value</name>
      <anchorfile>classWt_1_1WJavaScriptHandle.html</anchorfile>
      <anchor>a8084d9b7795f2e27ee71b18fccb2f5d7</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>WJavaScriptHandle&lt; Wt::WPen &gt;</name>
    <filename>classWt_1_1WJavaScriptHandle.html</filename>
    <member kind="function">
      <type></type>
      <name>WJavaScriptHandle</name>
      <anchorfile>classWt_1_1WJavaScriptHandle.html</anchorfile>
      <anchor>ab0a758e635281579c250d78c541f3169</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WJavaScriptHandle</name>
      <anchorfile>classWt_1_1WJavaScriptHandle.html</anchorfile>
      <anchor>a9a4c55088dfbb671c07ed5d31ab2c387</anchor>
      <arglist>(const WJavaScriptHandle &amp;handle) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WJavaScriptHandle</name>
      <anchorfile>classWt_1_1WJavaScriptHandle.html</anchorfile>
      <anchor>a9acc1f72941aba2c5083388d9ffbda9a</anchor>
      <arglist>(WJavaScriptHandle &amp;&amp;handle) noexcept</arglist>
    </member>
    <member kind="function">
      <type>WJavaScriptHandle &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1WJavaScriptHandle.html</anchorfile>
      <anchor>aa79004823ff6b42279aa5d84ad33b5e7</anchor>
      <arglist>(const WJavaScriptHandle &amp;handle) noexcept</arglist>
    </member>
    <member kind="function">
      <type>WJavaScriptHandle &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1WJavaScriptHandle.html</anchorfile>
      <anchor>ad599d7915b59730a890237629b0a458b</anchor>
      <arglist>(WJavaScriptHandle &amp;&amp;handle) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WJavaScriptHandle</name>
      <anchorfile>classWt_1_1WJavaScriptHandle.html</anchorfile>
      <anchor>a13e91f717570ac9b3c6ac69d38d75716</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isValid</name>
      <anchorfile>classWt_1_1WJavaScriptHandle.html</anchorfile>
      <anchor>a40f6c5ac6e0709226935f5bf8152a94f</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>jsRef</name>
      <anchorfile>classWt_1_1WJavaScriptHandle.html</anchorfile>
      <anchor>a0d0bc00f0bcafb596c3f6c96c4241ded</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setValue</name>
      <anchorfile>classWt_1_1WJavaScriptHandle.html</anchorfile>
      <anchor>ac1e446a7ac75a19e14d1019b8011499b</anchor>
      <arglist>(const Wt::WPen &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>const Wt::WPen &amp;</type>
      <name>value</name>
      <anchorfile>classWt_1_1WJavaScriptHandle.html</anchorfile>
      <anchor>a8084d9b7795f2e27ee71b18fccb2f5d7</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>WJavaScriptHandle&lt; Wt::WTransform &gt;</name>
    <filename>classWt_1_1WJavaScriptHandle.html</filename>
    <member kind="function">
      <type></type>
      <name>WJavaScriptHandle</name>
      <anchorfile>classWt_1_1WJavaScriptHandle.html</anchorfile>
      <anchor>ab0a758e635281579c250d78c541f3169</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WJavaScriptHandle</name>
      <anchorfile>classWt_1_1WJavaScriptHandle.html</anchorfile>
      <anchor>a9a4c55088dfbb671c07ed5d31ab2c387</anchor>
      <arglist>(const WJavaScriptHandle &amp;handle) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WJavaScriptHandle</name>
      <anchorfile>classWt_1_1WJavaScriptHandle.html</anchorfile>
      <anchor>a9acc1f72941aba2c5083388d9ffbda9a</anchor>
      <arglist>(WJavaScriptHandle &amp;&amp;handle) noexcept</arglist>
    </member>
    <member kind="function">
      <type>WJavaScriptHandle &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1WJavaScriptHandle.html</anchorfile>
      <anchor>aa79004823ff6b42279aa5d84ad33b5e7</anchor>
      <arglist>(const WJavaScriptHandle &amp;handle) noexcept</arglist>
    </member>
    <member kind="function">
      <type>WJavaScriptHandle &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1WJavaScriptHandle.html</anchorfile>
      <anchor>ad599d7915b59730a890237629b0a458b</anchor>
      <arglist>(WJavaScriptHandle &amp;&amp;handle) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WJavaScriptHandle</name>
      <anchorfile>classWt_1_1WJavaScriptHandle.html</anchorfile>
      <anchor>a13e91f717570ac9b3c6ac69d38d75716</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isValid</name>
      <anchorfile>classWt_1_1WJavaScriptHandle.html</anchorfile>
      <anchor>a40f6c5ac6e0709226935f5bf8152a94f</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>jsRef</name>
      <anchorfile>classWt_1_1WJavaScriptHandle.html</anchorfile>
      <anchor>a0d0bc00f0bcafb596c3f6c96c4241ded</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setValue</name>
      <anchorfile>classWt_1_1WJavaScriptHandle.html</anchorfile>
      <anchor>ac1e446a7ac75a19e14d1019b8011499b</anchor>
      <arglist>(const Wt::WTransform &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>const Wt::WTransform &amp;</type>
      <name>value</name>
      <anchorfile>classWt_1_1WJavaScriptHandle.html</anchorfile>
      <anchor>a8084d9b7795f2e27ee71b18fccb2f5d7</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>WJavaScriptHandle&lt; WTransform &gt;</name>
    <filename>classWt_1_1WJavaScriptHandle.html</filename>
    <member kind="function">
      <type></type>
      <name>WJavaScriptHandle</name>
      <anchorfile>classWt_1_1WJavaScriptHandle.html</anchorfile>
      <anchor>ab0a758e635281579c250d78c541f3169</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WJavaScriptHandle</name>
      <anchorfile>classWt_1_1WJavaScriptHandle.html</anchorfile>
      <anchor>a9a4c55088dfbb671c07ed5d31ab2c387</anchor>
      <arglist>(const WJavaScriptHandle &amp;handle) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WJavaScriptHandle</name>
      <anchorfile>classWt_1_1WJavaScriptHandle.html</anchorfile>
      <anchor>a9acc1f72941aba2c5083388d9ffbda9a</anchor>
      <arglist>(WJavaScriptHandle &amp;&amp;handle) noexcept</arglist>
    </member>
    <member kind="function">
      <type>WJavaScriptHandle &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1WJavaScriptHandle.html</anchorfile>
      <anchor>aa79004823ff6b42279aa5d84ad33b5e7</anchor>
      <arglist>(const WJavaScriptHandle &amp;handle) noexcept</arglist>
    </member>
    <member kind="function">
      <type>WJavaScriptHandle &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1WJavaScriptHandle.html</anchorfile>
      <anchor>ad599d7915b59730a890237629b0a458b</anchor>
      <arglist>(WJavaScriptHandle &amp;&amp;handle) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WJavaScriptHandle</name>
      <anchorfile>classWt_1_1WJavaScriptHandle.html</anchorfile>
      <anchor>a13e91f717570ac9b3c6ac69d38d75716</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isValid</name>
      <anchorfile>classWt_1_1WJavaScriptHandle.html</anchorfile>
      <anchor>a40f6c5ac6e0709226935f5bf8152a94f</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>jsRef</name>
      <anchorfile>classWt_1_1WJavaScriptHandle.html</anchorfile>
      <anchor>a0d0bc00f0bcafb596c3f6c96c4241ded</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setValue</name>
      <anchorfile>classWt_1_1WJavaScriptHandle.html</anchorfile>
      <anchor>ac1e446a7ac75a19e14d1019b8011499b</anchor>
      <arglist>(const WTransform &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>const WTransform &amp;</type>
      <name>value</name>
      <anchorfile>classWt_1_1WJavaScriptHandle.html</anchorfile>
      <anchor>a8084d9b7795f2e27ee71b18fccb2f5d7</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WKeyEvent</name>
    <filename>classWt_1_1WKeyEvent.html</filename>
    <member kind="function">
      <type></type>
      <name>WKeyEvent</name>
      <anchorfile>classWt_1_1WKeyEvent.html</anchorfile>
      <anchor>a93efdf1091659752a18f107f2c7612e8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Key</type>
      <name>key</name>
      <anchorfile>classWt_1_1WKeyEvent.html</anchorfile>
      <anchor>ad69f2c0f6ea4f4189e2db028be031254</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; KeyboardModifier &gt;</type>
      <name>modifiers</name>
      <anchorfile>classWt_1_1WKeyEvent.html</anchorfile>
      <anchor>abbb3876c3e1f91e07dfd905e206caafc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>charCode</name>
      <anchorfile>classWt_1_1WKeyEvent.html</anchorfile>
      <anchor>a0685e315762ae3641c13e5e211a7af67</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WString</type>
      <name>text</name>
      <anchorfile>classWt_1_1WKeyEvent.html</anchorfile>
      <anchor>abdb605e1e0261847eae075b672eacd6a</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WLabel</name>
    <filename>classWt_1_1WLabel.html</filename>
    <base>Wt::WInteractWidget</base>
    <member kind="function">
      <type></type>
      <name>WLabel</name>
      <anchorfile>classWt_1_1WLabel.html</anchorfile>
      <anchor>a3de9208754db559624a537a0978afc06</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WLabel</name>
      <anchorfile>classWt_1_1WLabel.html</anchorfile>
      <anchor>a888bb540c7e88d29ad84984f60760731</anchor>
      <arglist>(const WString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WLabel</name>
      <anchorfile>classWt_1_1WLabel.html</anchorfile>
      <anchor>ae98a49a4d94404c3ebe88a0ab185471b</anchor>
      <arglist>(std::unique_ptr&lt; WImage &gt; image)</arglist>
    </member>
    <member kind="function">
      <type>WFormWidget *</type>
      <name>buddy</name>
      <anchorfile>classWt_1_1WLabel.html</anchorfile>
      <anchor>a3f8d34ddb5a5354765934386bab37bbf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBuddy</name>
      <anchorfile>classWt_1_1WLabel.html</anchorfile>
      <anchor>af468c613eab7d184c68fd6ae20978de5</anchor>
      <arglist>(WFormWidget *buddy)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setText</name>
      <anchorfile>classWt_1_1WLabel.html</anchorfile>
      <anchor>aad258cec78e988d24cb457500de2b8a4</anchor>
      <arglist>(const WString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>WString</type>
      <name>text</name>
      <anchorfile>classWt_1_1WLabel.html</anchorfile>
      <anchor>a7465e02cab11dfd6ad9baa6020fc93fe</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setTextFormat</name>
      <anchorfile>classWt_1_1WLabel.html</anchorfile>
      <anchor>ac5d5a8e2bcd02c95f3acb18eaeb72f18</anchor>
      <arglist>(TextFormat format)</arglist>
    </member>
    <member kind="function">
      <type>TextFormat</type>
      <name>textFormat</name>
      <anchorfile>classWt_1_1WLabel.html</anchorfile>
      <anchor>ac42968aa45c02680813b3c1d99674014</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setImage</name>
      <anchorfile>classWt_1_1WLabel.html</anchorfile>
      <anchor>a46eaa79b4b4c95953b3d49b9318e1edb</anchor>
      <arglist>(std::unique_ptr&lt; WImage &gt; image, Side side=Side::Left)</arglist>
    </member>
    <member kind="function">
      <type>WImage *</type>
      <name>image</name>
      <anchorfile>classWt_1_1WLabel.html</anchorfile>
      <anchor>aac967a7a909521b384b5ca3794a0af15</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setWordWrap</name>
      <anchorfile>classWt_1_1WLabel.html</anchorfile>
      <anchor>a50e413fa171f301129b39a4d4ed6d2fd</anchor>
      <arglist>(bool wordWrap)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>wordWrap</name>
      <anchorfile>classWt_1_1WLabel.html</anchorfile>
      <anchor>a6f2cceba5fe36327f6dfa5da2e32e23d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>propagateSetEnabled</name>
      <anchorfile>classWt_1_1WLabel.html</anchorfile>
      <anchor>a1afc9be3546267ac3156414f69e7127e</anchor>
      <arglist>(bool enabled) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WLayout</name>
    <filename>classWt_1_1WLayout.html</filename>
    <base>Wt::WLayoutItem</base>
    <base>Wt::WObject</base>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~WLayout</name>
      <anchorfile>classWt_1_1WLayout.html</anchorfile>
      <anchor>afee1a345112b107158765695fc6837eb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPreferredImplementation</name>
      <anchorfile>classWt_1_1WLayout.html</anchorfile>
      <anchor>a9cd0547c710e357e4c688ccfdb790d8f</anchor>
      <arglist>(LayoutImplementation implementation)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>addItem</name>
      <anchorfile>classWt_1_1WLayout.html</anchorfile>
      <anchor>a8cd69b5eb41376e6e7ab0dd97a2ab2b5</anchor>
      <arglist>(std::unique_ptr&lt; WLayoutItem &gt; item)=0</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addWidget</name>
      <anchorfile>classWt_1_1WLayout.html</anchorfile>
      <anchor>a0346e81ecebed58c0b11bf037c6fdd73</anchor>
      <arglist>(std::unique_ptr&lt; WWidget &gt; widget)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::unique_ptr&lt; WLayoutItem &gt;</type>
      <name>removeItem</name>
      <anchorfile>classWt_1_1WLayout.html</anchorfile>
      <anchor>a0647c62081611a0ef0135ff2e62341be</anchor>
      <arglist>(WLayoutItem *item)=0</arglist>
    </member>
    <member kind="function">
      <type>std::unique_ptr&lt; WWidget &gt;</type>
      <name>removeWidget</name>
      <anchorfile>classWt_1_1WLayout.html</anchorfile>
      <anchor>ab429c7765d8e4f197ecdf8d84386dfca</anchor>
      <arglist>(WWidget *widget)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>count</name>
      <anchorfile>classWt_1_1WLayout.html</anchorfile>
      <anchor>a799b3cce5c1717b18e54c14471e84033</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual WLayoutItem *</type>
      <name>itemAt</name>
      <anchorfile>classWt_1_1WLayout.html</anchorfile>
      <anchor>a3d48e5e4f56ad5d1b0e60180ebc91442</anchor>
      <arglist>(int index) const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>indexOf</name>
      <anchorfile>classWt_1_1WLayout.html</anchorfile>
      <anchor>a4c0b3fc32c4b805c3b1ef13e56f53334</anchor>
      <arglist>(WLayoutItem *item) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WWidgetItem *</type>
      <name>findWidgetItem</name>
      <anchorfile>classWt_1_1WLayout.html</anchorfile>
      <anchor>a0ffd0144243e34ed82c2b473545ccca8</anchor>
      <arglist>(WWidget *widget) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WWidget *</type>
      <name>widget</name>
      <anchorfile>classWt_1_1WLayout.html</anchorfile>
      <anchor>a7ba01f6297c03ffaf48acce34b99e400</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WLayout *</type>
      <name>layout</name>
      <anchorfile>classWt_1_1WLayout.html</anchorfile>
      <anchor>aa880d7b97d507600941ed6d782c2cccd</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WLayout *</type>
      <name>parentLayout</name>
      <anchorfile>classWt_1_1WLayout.html</anchorfile>
      <anchor>ad04305bf1b26b68e25071eb4341d806c</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setContentsMargins</name>
      <anchorfile>classWt_1_1WLayout.html</anchorfile>
      <anchor>af18bae8c743c9f9a5cabee58826ffb45</anchor>
      <arglist>(int left, int top, int right, int bottom)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getContentsMargins</name>
      <anchorfile>classWt_1_1WLayout.html</anchorfile>
      <anchor>abda27c67ec678ea3bb1407c70d003322</anchor>
      <arglist>(int *left, int *top, int *right, int *bottom) const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setDefaultImplementation</name>
      <anchorfile>classWt_1_1WLayout.html</anchorfile>
      <anchor>adcefa1eeb199ab534e121100fc7fcfe1</anchor>
      <arglist>(LayoutImplementation implementation)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>WLayout</name>
      <anchorfile>classWt_1_1WLayout.html</anchorfile>
      <anchor>a7ea1c353ac9d38a94ad08fc0cb8d6c25</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>update</name>
      <anchorfile>classWt_1_1WLayout.html</anchorfile>
      <anchor>af4588f6cbff4de7abf77d1cc7b5a8d19</anchor>
      <arglist>(WLayoutItem *item=nullptr)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>setParentWidget</name>
      <anchorfile>classWt_1_1WLayout.html</anchorfile>
      <anchor>a7a8df204ec8a7078bd93de8acf738a23</anchor>
      <arglist>(WWidget *parent) override</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual void</type>
      <name>setParentLayout</name>
      <anchorfile>classWt_1_1WLayout.html</anchorfile>
      <anchor>ab780d607df23bd20ff47a1c6b045f301</anchor>
      <arglist>(WLayout *parentLayout) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WLayoutImpl</name>
    <filename>classWt_1_1WLayoutImpl.html</filename>
    <base>Wt::WLayoutItemImpl</base>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~WLayoutImpl</name>
      <anchorfile>classWt_1_1WLayoutImpl.html</anchorfile>
      <anchor>a4fd29708d833eddc092589d368888f33</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>itemAdded</name>
      <anchorfile>classWt_1_1WLayoutImpl.html</anchorfile>
      <anchor>ab7cc7b32089d8eb6fd8c7aaca8359f42</anchor>
      <arglist>(WLayoutItem *item)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>itemRemoved</name>
      <anchorfile>classWt_1_1WLayoutImpl.html</anchorfile>
      <anchor>a1abc63ed78aa2e5a3ab4235f6bf3b3b5</anchor>
      <arglist>(WLayoutItem *item)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>update</name>
      <anchorfile>classWt_1_1WLayoutImpl.html</anchorfile>
      <anchor>ae077a8b21faa0dc164d159c53d11282b</anchor>
      <arglist>()=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WLayoutItem</name>
    <filename>classWt_1_1WLayoutItem.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~WLayoutItem</name>
      <anchorfile>classWt_1_1WLayoutItem.html</anchorfile>
      <anchor>a40dd93ac8deba8535e0e5e6645f64ad4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual WWidgetItem *</type>
      <name>findWidgetItem</name>
      <anchorfile>classWt_1_1WLayoutItem.html</anchorfile>
      <anchor>a95f14880009c9121d2f2d06cdf3204f0</anchor>
      <arglist>(WWidget *widget)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual WLayout *</type>
      <name>layout</name>
      <anchorfile>classWt_1_1WLayoutItem.html</anchorfile>
      <anchor>a3f81b4d198401ae493276a61be6784cf</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual WWidget *</type>
      <name>widget</name>
      <anchorfile>classWt_1_1WLayoutItem.html</anchorfile>
      <anchor>a06b127060eaf8a0b87a994b483d493e1</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual WLayout *</type>
      <name>parentLayout</name>
      <anchorfile>classWt_1_1WLayoutItem.html</anchorfile>
      <anchor>a05a18a6a59ef9e36bcb5d47199b18ba1</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" protection="private" virtualness="pure">
      <type>virtual void</type>
      <name>setParentWidget</name>
      <anchorfile>classWt_1_1WLayoutItem.html</anchorfile>
      <anchor>a4d2c60ec55048746b9f197d9b5de2a0f</anchor>
      <arglist>(WWidget *parent)=0</arglist>
    </member>
    <member kind="function" protection="private" virtualness="pure">
      <type>virtual void</type>
      <name>setParentLayout</name>
      <anchorfile>classWt_1_1WLayoutItem.html</anchorfile>
      <anchor>ad810fbebeb2dce998e538eb31c060430</anchor>
      <arglist>(WLayout *parentLayout)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WLayoutItemImpl</name>
    <filename>classWt_1_1WLayoutItemImpl.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~WLayoutItemImpl</name>
      <anchorfile>classWt_1_1WLayoutItemImpl.html</anchorfile>
      <anchor>ad558805de90c6edc63aa7603f64d4c68</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WLeafletMap</name>
    <filename>classWt_1_1WLeafletMap.html</filename>
    <base>Wt::WCompositeWidget</base>
    <class kind="class">Wt::WLeafletMap::Coordinate</class>
    <class kind="class">Wt::WLeafletMap::LeafletMarker</class>
    <class kind="class">Wt::WLeafletMap::Marker</class>
    <class kind="class">Wt::WLeafletMap::WidgetMarker</class>
    <member kind="function">
      <type></type>
      <name>WLeafletMap</name>
      <anchorfile>classWt_1_1WLeafletMap.html</anchorfile>
      <anchor>a1065c3da27515f91acb4068c4c61d09a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WLeafletMap</name>
      <anchorfile>classWt_1_1WLeafletMap.html</anchorfile>
      <anchor>a424706a0c3a3acf6d2f5e5cc36a23187</anchor>
      <arglist>(const Json::Object &amp;options)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setOptions</name>
      <anchorfile>classWt_1_1WLeafletMap.html</anchorfile>
      <anchor>a1c2c19b8d81b28df613797c3f14dd0c4</anchor>
      <arglist>(const Json::Object &amp;options)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addTileLayer</name>
      <anchorfile>classWt_1_1WLeafletMap.html</anchorfile>
      <anchor>aac20cb822be7e2198bc868b397cd36c0</anchor>
      <arglist>(const std::string &amp;urlTemplate, const Json::Object &amp;options)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addMarker</name>
      <anchorfile>classWt_1_1WLeafletMap.html</anchorfile>
      <anchor>a1d75431893349d8b9d707a0cdb1d41ec</anchor>
      <arglist>(std::unique_ptr&lt; Marker &gt; marker)</arglist>
    </member>
    <member kind="function">
      <type>std::unique_ptr&lt; Marker &gt;</type>
      <name>removeMarker</name>
      <anchorfile>classWt_1_1WLeafletMap.html</anchorfile>
      <anchor>a9263f7ce85484a91034c39484c68fda5</anchor>
      <arglist>(Marker *marker)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addPolyline</name>
      <anchorfile>classWt_1_1WLeafletMap.html</anchorfile>
      <anchor>ae5e2a7e46673fe5e4b5573bf73de6bcc</anchor>
      <arglist>(const std::vector&lt; Coordinate &gt; &amp;points, const WPen &amp;pen)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addCircle</name>
      <anchorfile>classWt_1_1WLeafletMap.html</anchorfile>
      <anchor>a9440572f6ab695ee520d231fb239c39b</anchor>
      <arglist>(const Coordinate &amp;center, double radius, const WPen &amp;stroke, const WBrush &amp;fill)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setZoomLevel</name>
      <anchorfile>classWt_1_1WLeafletMap.html</anchorfile>
      <anchor>aacec0a28b4d3ecabe3396ecae16e1135</anchor>
      <arglist>(int level)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>zoomLevel</name>
      <anchorfile>classWt_1_1WLeafletMap.html</anchorfile>
      <anchor>a3e11af34f0495257e7cc41e85a7014ac</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>panTo</name>
      <anchorfile>classWt_1_1WLeafletMap.html</anchorfile>
      <anchor>a758032b5706101ae0769c4485d6c18ca</anchor>
      <arglist>(const Coordinate &amp;center)</arglist>
    </member>
    <member kind="function">
      <type>Coordinate</type>
      <name>position</name>
      <anchorfile>classWt_1_1WLeafletMap.html</anchorfile>
      <anchor>a7f6615b3032cff803bb2abd7b3446ab6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>JSignal&lt; int &gt; &amp;</type>
      <name>zoomLevelChanged</name>
      <anchorfile>classWt_1_1WLeafletMap.html</anchorfile>
      <anchor>a7af8c16e8966cf2273ab91ead5736eb1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>JSignal&lt; double, double &gt; &amp;</type>
      <name>panChanged</name>
      <anchorfile>classWt_1_1WLeafletMap.html</anchorfile>
      <anchor>a742f7becd470bc9d9d3a9eda91a42212</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>mapJsRef</name>
      <anchorfile>classWt_1_1WLeafletMap.html</anchorfile>
      <anchor>a95ca6d831a1cb60a6c8b44f3cc177b0e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>render</name>
      <anchorfile>classWt_1_1WLeafletMap.html</anchorfile>
      <anchor>a67055ddd698f79d010d0a1051fe90a2a</anchor>
      <arglist>(WFlags&lt; RenderFlag &gt; flags) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WLength</name>
    <filename>classWt_1_1WLength.html</filename>
    <member kind="typedef">
      <type>LengthUnit</type>
      <name>Unit</name>
      <anchorfile>classWt_1_1WLength.html</anchorfile>
      <anchor>a0f36c6a2629539028aa408d8ab78af2c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WLength</name>
      <anchorfile>classWt_1_1WLength.html</anchorfile>
      <anchor>ad2a8e7901084735819bc1b29fdb9a930</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WLength</name>
      <anchorfile>classWt_1_1WLength.html</anchorfile>
      <anchor>a50a79a9d83ab4511599eeea46c6be405</anchor>
      <arglist>(const char(&amp;str)[N])</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WLength</name>
      <anchorfile>classWt_1_1WLength.html</anchorfile>
      <anchor>a1f63978dbfaa8745e7ec85042fd93ce8</anchor>
      <arglist>(const std::string &amp;str)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WLength</name>
      <anchorfile>classWt_1_1WLength.html</anchorfile>
      <anchor>a3ad511f1679450115841cdc28cb264c4</anchor>
      <arglist>(double value, LengthUnit unit=LengthUnit::Pixel)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isAuto</name>
      <anchorfile>classWt_1_1WLength.html</anchorfile>
      <anchor>a23c44582e1d5820c6e4c944babfa2c07</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>value</name>
      <anchorfile>classWt_1_1WLength.html</anchorfile>
      <anchor>ad89a6b3dc0ba4fbf29296f3978868477</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>LengthUnit</type>
      <name>unit</name>
      <anchorfile>classWt_1_1WLength.html</anchorfile>
      <anchor>ae6c986634a22c01f487f9f6f7c475f12</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::string</type>
      <name>cssText</name>
      <anchorfile>classWt_1_1WLength.html</anchorfile>
      <anchor>a4a6fa3862a476dcbb3abe30a45fde3c8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classWt_1_1WLength.html</anchorfile>
      <anchor>ab446ae7dd0ea64dd1a6240e7a42eb362</anchor>
      <arglist>(const WLength &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classWt_1_1WLength.html</anchorfile>
      <anchor>a63213b3eab440ecc6e41b2e27965a11a</anchor>
      <arglist>(const WLength &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>toPixels</name>
      <anchorfile>classWt_1_1WLength.html</anchorfile>
      <anchor>aaf99a272a8d659135742246212cdb473</anchor>
      <arglist>(double fontSize=16.0) const</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static WLength</type>
      <name>Auto</name>
      <anchorfile>classWt_1_1WLength.html</anchorfile>
      <anchor>a0cf39ca4225776879d56ade60320c31a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WLengthValidator</name>
    <filename>classWt_1_1WLengthValidator.html</filename>
    <base>Wt::WValidator</base>
    <member kind="function">
      <type></type>
      <name>WLengthValidator</name>
      <anchorfile>classWt_1_1WLengthValidator.html</anchorfile>
      <anchor>afd64f9187558b670e3b16d521d9b38e6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WLengthValidator</name>
      <anchorfile>classWt_1_1WLengthValidator.html</anchorfile>
      <anchor>a9142d0590d826bc6217822344233430c</anchor>
      <arglist>(int minLength, int maxLength)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMinimumLength</name>
      <anchorfile>classWt_1_1WLengthValidator.html</anchorfile>
      <anchor>a6a772dfac01805c714374fd290ff6e6d</anchor>
      <arglist>(int minimum)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>minimumLength</name>
      <anchorfile>classWt_1_1WLengthValidator.html</anchorfile>
      <anchor>aa9629d6af5957195759155decdb89638</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMaximumLength</name>
      <anchorfile>classWt_1_1WLengthValidator.html</anchorfile>
      <anchor>a1f1742e015228319a10dd42a38ef79f4</anchor>
      <arglist>(int maximum)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>maximumLength</name>
      <anchorfile>classWt_1_1WLengthValidator.html</anchorfile>
      <anchor>adc4ed6f39b0366fce069f2d2c6a6d426</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Result</type>
      <name>validate</name>
      <anchorfile>classWt_1_1WLengthValidator.html</anchorfile>
      <anchor>ac157881c573b1d25041aa66dfa520b64</anchor>
      <arglist>(const WString &amp;input) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInvalidTooShortText</name>
      <anchorfile>classWt_1_1WLengthValidator.html</anchorfile>
      <anchor>a61299b45c89e93a8d7aa7f2570242286</anchor>
      <arglist>(const WString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>WString</type>
      <name>invalidTooShortText</name>
      <anchorfile>classWt_1_1WLengthValidator.html</anchorfile>
      <anchor>aed1ec0ff27915c846e4450705a1f2b35</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInvalidTooLongText</name>
      <anchorfile>classWt_1_1WLengthValidator.html</anchorfile>
      <anchor>aa24dd0a946f937e0dde081003bf30fec</anchor>
      <arglist>(const WString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>WString</type>
      <name>invalidTooLongText</name>
      <anchorfile>classWt_1_1WLengthValidator.html</anchorfile>
      <anchor>a9fdc2bf6c322a71215dcee85d77b4484</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>javaScriptValidate</name>
      <anchorfile>classWt_1_1WLengthValidator.html</anchorfile>
      <anchor>ace50db85c368ebba0e3b7a7a6e2414fb</anchor>
      <arglist>() const override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WLineEdit</name>
    <filename>classWt_1_1WLineEdit.html</filename>
    <base>Wt::WFormWidget</base>
    <member kind="function">
      <type></type>
      <name>WLineEdit</name>
      <anchorfile>classWt_1_1WLineEdit.html</anchorfile>
      <anchor>a2d9e90f25d02ef95711d4e63a06c8f80</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WLineEdit</name>
      <anchorfile>classWt_1_1WLineEdit.html</anchorfile>
      <anchor>a23d76f03bf5382138959caf6c6ec18b1</anchor>
      <arglist>(const WString &amp;content)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTextSize</name>
      <anchorfile>classWt_1_1WLineEdit.html</anchorfile>
      <anchor>a4c6c5a52deefa5a246e0638f1572d0d8</anchor>
      <arglist>(int chars)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>textSize</name>
      <anchorfile>classWt_1_1WLineEdit.html</anchorfile>
      <anchor>a55bdc89327923f865d024f59541c20d0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setText</name>
      <anchorfile>classWt_1_1WLineEdit.html</anchorfile>
      <anchor>addb99c6ab5483836adf44a2706a410af</anchor>
      <arglist>(const WString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>const WString &amp;</type>
      <name>text</name>
      <anchorfile>classWt_1_1WLineEdit.html</anchorfile>
      <anchor>a8dc5388e16ed625a7ddb1a68d81f8f57</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WString</type>
      <name>displayText</name>
      <anchorfile>classWt_1_1WLineEdit.html</anchorfile>
      <anchor>a496146733c3d5fa0105b485bf9304e35</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMaxLength</name>
      <anchorfile>classWt_1_1WLineEdit.html</anchorfile>
      <anchor>aaeca334d8a47be029b6a44912b01ed5d</anchor>
      <arglist>(int length)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>maxLength</name>
      <anchorfile>classWt_1_1WLineEdit.html</anchorfile>
      <anchor>a14d707a8577685eb33588539305f3b78</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setEchoMode</name>
      <anchorfile>classWt_1_1WLineEdit.html</anchorfile>
      <anchor>a27c9bc232bea0ab76ee266be3325a10e</anchor>
      <arglist>(EchoMode echoMode)</arglist>
    </member>
    <member kind="function">
      <type>EchoMode</type>
      <name>echoMode</name>
      <anchorfile>classWt_1_1WLineEdit.html</anchorfile>
      <anchor>a906ed01bcd06a2f5b5dcbc102b29fa66</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAutoComplete</name>
      <anchorfile>classWt_1_1WLineEdit.html</anchorfile>
      <anchor>a67ea9e169101e96837e53cc9cc600a67</anchor>
      <arglist>(bool enabled)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>autoComplete</name>
      <anchorfile>classWt_1_1WLineEdit.html</anchorfile>
      <anchor>aa8fc3164b23ebce987cc1f21641c549e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>selectionStart</name>
      <anchorfile>classWt_1_1WLineEdit.html</anchorfile>
      <anchor>abd05e3f58ac768ddc41cfe77e5a8a45f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WString</type>
      <name>selectedText</name>
      <anchorfile>classWt_1_1WLineEdit.html</anchorfile>
      <anchor>aa571d1f8c525822d820b188fc167160a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasSelectedText</name>
      <anchorfile>classWt_1_1WLineEdit.html</anchorfile>
      <anchor>a58f3ab53d913b5859059d2784e69a1f8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSelection</name>
      <anchorfile>classWt_1_1WLineEdit.html</anchorfile>
      <anchor>a5998d0a1c9f842fdf4561ebb71292378</anchor>
      <arglist>(int start, int length)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>cursorPosition</name>
      <anchorfile>classWt_1_1WLineEdit.html</anchorfile>
      <anchor>a6e9fe523757e4e2cd0531cd4b48c1560</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WString</type>
      <name>valueText</name>
      <anchorfile>classWt_1_1WLineEdit.html</anchorfile>
      <anchor>a5d99b416b458b7fb5fbe0f73b1c5fe7e</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setValueText</name>
      <anchorfile>classWt_1_1WLineEdit.html</anchorfile>
      <anchor>af24caa7b5618d12c6638012d15ab5296</anchor>
      <arglist>(const WString &amp;value) override</arglist>
    </member>
    <member kind="function">
      <type>WString</type>
      <name>inputMask</name>
      <anchorfile>classWt_1_1WLineEdit.html</anchorfile>
      <anchor>a15a01f7030b64f7ac8dc2e363d5ce9e9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInputMask</name>
      <anchorfile>classWt_1_1WLineEdit.html</anchorfile>
      <anchor>a0639ec7e420ba32ffb148303a79fb969</anchor>
      <arglist>(const WString &amp;mask=&quot;&quot;, WFlags&lt; InputMaskFlag &gt; flags=None)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ValidationState</type>
      <name>validate</name>
      <anchorfile>classWt_1_1WLineEdit.html</anchorfile>
      <anchor>a500cfde61dad0df1bb4dd0f3b7115f8a</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>EventSignal &amp;</type>
      <name>textInput</name>
      <anchorfile>classWt_1_1WLineEdit.html</anchorfile>
      <anchor>a0b1824c15b82b513176cf0a9f0adcf29</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual int</type>
      <name>boxPadding</name>
      <anchorfile>classWt_1_1WLineEdit.html</anchorfile>
      <anchor>a613aa8f82dd92f1a1523565eeaf30e2f</anchor>
      <arglist>(Orientation orientation) const override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual int</type>
      <name>boxBorder</name>
      <anchorfile>classWt_1_1WLineEdit.html</anchorfile>
      <anchor>ab8fc52bb0178b8b5f13c59a1f458289e</anchor>
      <arglist>(Orientation orientation) const override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>render</name>
      <anchorfile>classWt_1_1WLineEdit.html</anchorfile>
      <anchor>a6e607fe0d4634597d970b2c696f0bab2</anchor>
      <arglist>(WFlags&lt; RenderFlag &gt; flags) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WLineF</name>
    <filename>classWt_1_1WLineF.html</filename>
    <member kind="function">
      <type></type>
      <name>WLineF</name>
      <anchorfile>classWt_1_1WLineF.html</anchorfile>
      <anchor>ab533503505006e748bf0681e7f673ec4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WLineF</name>
      <anchorfile>classWt_1_1WLineF.html</anchorfile>
      <anchor>af5c42eaf0f3bf07d59be34c5c1a8d3cc</anchor>
      <arglist>(const WPointF &amp;p1, const WPointF &amp;p2)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WLineF</name>
      <anchorfile>classWt_1_1WLineF.html</anchorfile>
      <anchor>a76ec4074899bddcd5f5f7c98b325aa9e</anchor>
      <arglist>(double x1, double y1, double x2, double y2)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>x1</name>
      <anchorfile>classWt_1_1WLineF.html</anchorfile>
      <anchor>a2d91e47bfc94ff459cea4a048520a456</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>y1</name>
      <anchorfile>classWt_1_1WLineF.html</anchorfile>
      <anchor>a09b0ad694d81c1b1ff922de02e440fdf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>x2</name>
      <anchorfile>classWt_1_1WLineF.html</anchorfile>
      <anchor>a1665f816d79d1dd3a5a160530740b22d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>y2</name>
      <anchorfile>classWt_1_1WLineF.html</anchorfile>
      <anchor>ac52def30c87418b34317660707bef962</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WPointF</type>
      <name>p1</name>
      <anchorfile>classWt_1_1WLineF.html</anchorfile>
      <anchor>ae3e3a7b7c4c0280b4ea80ac00263bc6b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WPointF</type>
      <name>p2</name>
      <anchorfile>classWt_1_1WLineF.html</anchorfile>
      <anchor>aba848c8c99903d68bbb1e02152f4ab1f</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WLink</name>
    <filename>classWt_1_1WLink.html</filename>
    <member kind="typedef">
      <type>LinkType</type>
      <name>Type</name>
      <anchorfile>classWt_1_1WLink.html</anchorfile>
      <anchor>a7b009e46c0d3baee772c2919b30baa3e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>LinkTarget</type>
      <name>Target</name>
      <anchorfile>classWt_1_1WLink.html</anchorfile>
      <anchor>a0836501b3d29fed97b99bbbefd9c64c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WLink</name>
      <anchorfile>classWt_1_1WLink.html</anchorfile>
      <anchor>aaec0b340cc60cbf581b9c426914c1d85</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WLink</name>
      <anchorfile>classWt_1_1WLink.html</anchorfile>
      <anchor>af85b88ba42324590423ff44f38b1d53f</anchor>
      <arglist>(const char *url)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WLink</name>
      <anchorfile>classWt_1_1WLink.html</anchorfile>
      <anchor>a4c658922cb15b17c5dc9014a9be5f119</anchor>
      <arglist>(const std::string &amp;url)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WLink</name>
      <anchorfile>classWt_1_1WLink.html</anchorfile>
      <anchor>a01bddbf88cebda0cf7aa59fd30531718</anchor>
      <arglist>(LinkType type, const std::string &amp;value)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WLink</name>
      <anchorfile>classWt_1_1WLink.html</anchorfile>
      <anchor>af7cb3ce95e08899d2201a8e58cb002a8</anchor>
      <arglist>(const std::shared_ptr&lt; WResource &gt; &amp;resource)</arglist>
    </member>
    <member kind="function">
      <type>LinkType</type>
      <name>type</name>
      <anchorfile>classWt_1_1WLink.html</anchorfile>
      <anchor>abb6a3f29c1c005c8d1be48b3db20bd65</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isNull</name>
      <anchorfile>classWt_1_1WLink.html</anchorfile>
      <anchor>afa2ef1fce6d63ab5fffa1e3e0a983894</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setUrl</name>
      <anchorfile>classWt_1_1WLink.html</anchorfile>
      <anchor>ab20c36d4457ffd3ee9f5da4f27389e11</anchor>
      <arglist>(const std::string &amp;url)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>url</name>
      <anchorfile>classWt_1_1WLink.html</anchorfile>
      <anchor>ac66d6bba5fc99308d8b981d2af1febfa</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setResource</name>
      <anchorfile>classWt_1_1WLink.html</anchorfile>
      <anchor>a7fe058274d036d331cc940fd7b969c1b</anchor>
      <arglist>(const std::shared_ptr&lt; WResource &gt; &amp;resource)</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; WResource &gt;</type>
      <name>resource</name>
      <anchorfile>classWt_1_1WLink.html</anchorfile>
      <anchor>aa2addc3283d1c9730c421e1a6f05d73d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInternalPath</name>
      <anchorfile>classWt_1_1WLink.html</anchorfile>
      <anchor>a71f09afcd367a99896d77cb4fe3480f3</anchor>
      <arglist>(const WString &amp;internalPath)</arglist>
    </member>
    <member kind="function">
      <type>WString</type>
      <name>internalPath</name>
      <anchorfile>classWt_1_1WLink.html</anchorfile>
      <anchor>aa1d68490c082ab63f9e3620907d3886f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTarget</name>
      <anchorfile>classWt_1_1WLink.html</anchorfile>
      <anchor>a515da3ed731dba3c1ac365fc8671654e</anchor>
      <arglist>(LinkTarget target)</arglist>
    </member>
    <member kind="function">
      <type>LinkTarget</type>
      <name>target</name>
      <anchorfile>classWt_1_1WLink.html</anchorfile>
      <anchor>a2ddda1ed017296e5e88c697d95399673</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classWt_1_1WLink.html</anchorfile>
      <anchor>a5ccd8a93aa96628e66618f3f67572290</anchor>
      <arglist>(const WLink &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classWt_1_1WLink.html</anchorfile>
      <anchor>a3be9a8cc0187e4ff7139c13efa229533</anchor>
      <arglist>(const WLink &amp;other) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WLinkedCssStyleSheet</name>
    <filename>classWt_1_1WLinkedCssStyleSheet.html</filename>
    <member kind="function">
      <type></type>
      <name>WLinkedCssStyleSheet</name>
      <anchorfile>classWt_1_1WLinkedCssStyleSheet.html</anchorfile>
      <anchor>aa29b1b3d0ca2a129435191d65b9ccc29</anchor>
      <arglist>(const WLink &amp;link, const std::string &amp;media=&quot;all&quot;)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WLoadingIndicator</name>
    <filename>classWt_1_1WLoadingIndicator.html</filename>
    <base>Wt::WCompositeWidget</base>
    <member kind="function">
      <type></type>
      <name>WLoadingIndicator</name>
      <anchorfile>classWt_1_1WLoadingIndicator.html</anchorfile>
      <anchor>ae8e332a25243ef8d6d9ab800a44f65d3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~WLoadingIndicator</name>
      <anchorfile>classWt_1_1WLoadingIndicator.html</anchorfile>
      <anchor>a760be320d6a5ca3d8035606d0803ed36</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setMessage</name>
      <anchorfile>classWt_1_1WLoadingIndicator.html</anchorfile>
      <anchor>a33f6df2d9f56e8431874b2a0efc70ab0</anchor>
      <arglist>(const WString &amp;text)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WLocalDateTime</name>
    <filename>classWt_1_1WLocalDateTime.html</filename>
    <member kind="function">
      <type></type>
      <name>WLocalDateTime</name>
      <anchorfile>classWt_1_1WLocalDateTime.html</anchorfile>
      <anchor>ae594198d671bb256a8cc3a594f42bee5</anchor>
      <arglist>(const WLocale &amp;locale=WLocale::currentLocale())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WLocalDateTime</name>
      <anchorfile>classWt_1_1WLocalDateTime.html</anchorfile>
      <anchor>ad5d913597e5939e49c1f52f4d8078ad9</anchor>
      <arglist>(const WDate &amp;date, const WTime &amp;time, const WLocale &amp;locale=WLocale::currentLocale())</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isNull</name>
      <anchorfile>classWt_1_1WLocalDateTime.html</anchorfile>
      <anchor>a768e47aff513e57c195df231a68f0231</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isValid</name>
      <anchorfile>classWt_1_1WLocalDateTime.html</anchorfile>
      <anchor>a481559de5e776e978a48b1ab42ea8ec7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDateTime</name>
      <anchorfile>classWt_1_1WLocalDateTime.html</anchorfile>
      <anchor>a3286c777f608c08631779a15371fe89b</anchor>
      <arglist>(const WDate &amp;date, const WTime &amp;time)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDateTime</name>
      <anchorfile>classWt_1_1WLocalDateTime.html</anchorfile>
      <anchor>abcc31354d11450720bf6ece761cb5149</anchor>
      <arglist>(const WDate &amp;date, const WTime &amp;time, bool dst)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDate</name>
      <anchorfile>classWt_1_1WLocalDateTime.html</anchorfile>
      <anchor>acbf7fb55e4c512168729db209dc1896c</anchor>
      <arglist>(const WDate &amp;date)</arglist>
    </member>
    <member kind="function">
      <type>WDate</type>
      <name>date</name>
      <anchorfile>classWt_1_1WLocalDateTime.html</anchorfile>
      <anchor>aa8327b958d02b391de42a9fc30f4a980</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTime</name>
      <anchorfile>classWt_1_1WLocalDateTime.html</anchorfile>
      <anchor>a96ef129a1d3f57b7d256649c86ebc869</anchor>
      <arglist>(const WTime &amp;time)</arglist>
    </member>
    <member kind="function">
      <type>WTime</type>
      <name>time</name>
      <anchorfile>classWt_1_1WLocalDateTime.html</anchorfile>
      <anchor>a7ab3baabe84209fc039e71c8d4d0b0a8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>timeZoneOffset</name>
      <anchorfile>classWt_1_1WLocalDateTime.html</anchorfile>
      <anchor>a08aaccd32fd329f4f696b07a060bcca1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const date::time_zone *</type>
      <name>timeZone</name>
      <anchorfile>classWt_1_1WLocalDateTime.html</anchorfile>
      <anchor>ac8c6f81e3fc9b1651c6c025983a2a2e2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WDateTime</type>
      <name>toUTC</name>
      <anchorfile>classWt_1_1WLocalDateTime.html</anchorfile>
      <anchor>aaab0a8ac590e8135083a418c64c1286a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WString</type>
      <name>toString</name>
      <anchorfile>classWt_1_1WLocalDateTime.html</anchorfile>
      <anchor>ae24b3d1b79d332fb34e4f71bf68d9a82</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WString</type>
      <name>toString</name>
      <anchorfile>classWt_1_1WLocalDateTime.html</anchorfile>
      <anchor>a818a2475bc51a9630c3b58a2bec73ba0</anchor>
      <arglist>(const WString &amp;format) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>classWt_1_1WLocalDateTime.html</anchorfile>
      <anchor>ac17026e2b19ba2ce37a88b7ac97b0089</anchor>
      <arglist>(const WLocalDateTime &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classWt_1_1WLocalDateTime.html</anchorfile>
      <anchor>a23226b7380526a874f43fbf82df320cc</anchor>
      <arglist>(const WLocalDateTime &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classWt_1_1WLocalDateTime.html</anchorfile>
      <anchor>aef1b77f5bcfa898cd64dba7b0bf0a31e</anchor>
      <arglist>(const WLocalDateTime &amp;other) const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static WLocalDateTime</type>
      <name>fromString</name>
      <anchorfile>classWt_1_1WLocalDateTime.html</anchorfile>
      <anchor>a5318b7e2b142d1329184a8cb85926598</anchor>
      <arglist>(const WString &amp;s, const WLocale &amp;locale=WLocale::currentLocale())</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static WLocalDateTime</type>
      <name>currentDateTime</name>
      <anchorfile>classWt_1_1WLocalDateTime.html</anchorfile>
      <anchor>a4e09ecba6364a6a392d3e606d96f40b2</anchor>
      <arglist>(const WLocale &amp;locale=WLocale::currentLocale())</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static WLocalDateTime</type>
      <name>currentServerDateTime</name>
      <anchorfile>classWt_1_1WLocalDateTime.html</anchorfile>
      <anchor>ace6b9930daf3357e46235f43b21d5fda</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WLocale</name>
    <filename>classWt_1_1WLocale.html</filename>
    <member kind="function">
      <type></type>
      <name>WLocale</name>
      <anchorfile>classWt_1_1WLocale.html</anchorfile>
      <anchor>a1af11b6221d84c8c5c072451cc146a4b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WLocale</name>
      <anchorfile>classWt_1_1WLocale.html</anchorfile>
      <anchor>acffbd23d82af9fc5745ac730634c4f3b</anchor>
      <arglist>(const Wt::WLocale &amp;locale)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WLocale</name>
      <anchorfile>classWt_1_1WLocale.html</anchorfile>
      <anchor>a12870c21a839acb38306dbf807e3722d</anchor>
      <arglist>(const std::string &amp;locale)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WLocale</name>
      <anchorfile>classWt_1_1WLocale.html</anchorfile>
      <anchor>abb298d76288d260d728ccc8cb361dda0</anchor>
      <arglist>(const char *locale)</arglist>
    </member>
    <member kind="function">
      <type>WLocale &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1WLocale.html</anchorfile>
      <anchor>a0ea2ed89e7fd48ef7ef5aa56738c0f47</anchor>
      <arglist>(const WLocale &amp;locale)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDecimalPoint</name>
      <anchorfile>classWt_1_1WLocale.html</anchorfile>
      <anchor>a816cb41590f2dacefbf9ca291b4bc79a</anchor>
      <arglist>(std::string c)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>decimalPoint</name>
      <anchorfile>classWt_1_1WLocale.html</anchorfile>
      <anchor>a41d9fd7e560ed34b44efe5bd7e8f5f35</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setGroupSeparator</name>
      <anchorfile>classWt_1_1WLocale.html</anchorfile>
      <anchor>a7eb30c2a29837e2206be51327d39fc64</anchor>
      <arglist>(std::string c)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>groupSeparator</name>
      <anchorfile>classWt_1_1WLocale.html</anchorfile>
      <anchor>a5bb7be42c31799d57056dbb4ffd434b5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTimeZone</name>
      <anchorfile>classWt_1_1WLocale.html</anchorfile>
      <anchor>a5b1961702289e8dc6f9e2c293f9f8aa5</anchor>
      <arglist>(const date::time_zone *zone)</arglist>
    </member>
    <member kind="function">
      <type>const date::time_zone *</type>
      <name>timeZone</name>
      <anchorfile>classWt_1_1WLocale.html</anchorfile>
      <anchor>a8f327772e7a011ab10f1787efdf480d4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDateFormat</name>
      <anchorfile>classWt_1_1WLocale.html</anchorfile>
      <anchor>ab79e343188cddda3d208db4c1c1e4f3c</anchor>
      <arglist>(const WString &amp;format)</arglist>
    </member>
    <member kind="function">
      <type>WString</type>
      <name>dateFormat</name>
      <anchorfile>classWt_1_1WLocale.html</anchorfile>
      <anchor>a27a01036517d4e1746ee26028b38cf4d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTimeFormat</name>
      <anchorfile>classWt_1_1WLocale.html</anchorfile>
      <anchor>a96af855e196e4d6c9d99800b550506b1</anchor>
      <arglist>(const WString &amp;format)</arglist>
    </member>
    <member kind="function">
      <type>WString</type>
      <name>timeFormat</name>
      <anchorfile>classWt_1_1WLocale.html</anchorfile>
      <anchor>ae8ffa466d55ef4e12d83e49e3b7e0fa4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDateTimeFormat</name>
      <anchorfile>classWt_1_1WLocale.html</anchorfile>
      <anchor>a346bd36227d53cb3df29325e094a2817</anchor>
      <arglist>(const WString &amp;format)</arglist>
    </member>
    <member kind="function">
      <type>WString</type>
      <name>dateTimeFormat</name>
      <anchorfile>classWt_1_1WLocale.html</anchorfile>
      <anchor>a166fddc7fab365b48b17be952512959a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>name</name>
      <anchorfile>classWt_1_1WLocale.html</anchorfile>
      <anchor>aa0d986a53d1fac375e2c614c392d01be</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>toDouble</name>
      <anchorfile>classWt_1_1WLocale.html</anchorfile>
      <anchor>a9677046c49d1db2f3f01d04ad9dcd09d</anchor>
      <arglist>(const WString &amp;value) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>toInt</name>
      <anchorfile>classWt_1_1WLocale.html</anchorfile>
      <anchor>a4c4925ce18ed4a2a7649299875f70ff7</anchor>
      <arglist>(const WString &amp;value) const</arglist>
    </member>
    <member kind="function">
      <type>WString</type>
      <name>toString</name>
      <anchorfile>classWt_1_1WLocale.html</anchorfile>
      <anchor>a7b4859b294f097b39075158f7c568dfd</anchor>
      <arglist>(int value) const</arglist>
    </member>
    <member kind="function">
      <type>WString</type>
      <name>toString</name>
      <anchorfile>classWt_1_1WLocale.html</anchorfile>
      <anchor>a37cec8f70557e927f2d02444d12f3a4a</anchor>
      <arglist>(unsigned int value) const</arglist>
    </member>
    <member kind="function">
      <type>WString</type>
      <name>toString</name>
      <anchorfile>classWt_1_1WLocale.html</anchorfile>
      <anchor>ae0c7af2d31a4d6c9a7b37f4e13353a10</anchor>
      <arglist>(long value) const</arglist>
    </member>
    <member kind="function">
      <type>WString</type>
      <name>toString</name>
      <anchorfile>classWt_1_1WLocale.html</anchorfile>
      <anchor>af83713cc520b492060e58c6f6b15ecc5</anchor>
      <arglist>(unsigned long value) const</arglist>
    </member>
    <member kind="function">
      <type>WString</type>
      <name>toString</name>
      <anchorfile>classWt_1_1WLocale.html</anchorfile>
      <anchor>a325b758433b014c59e994678ebe92290</anchor>
      <arglist>(long long value) const</arglist>
    </member>
    <member kind="function">
      <type>WString</type>
      <name>toString</name>
      <anchorfile>classWt_1_1WLocale.html</anchorfile>
      <anchor>a19f11ca98a31ad78ec4c7540cd1fb819</anchor>
      <arglist>(unsigned long long value) const</arglist>
    </member>
    <member kind="function">
      <type>WString</type>
      <name>toString</name>
      <anchorfile>classWt_1_1WLocale.html</anchorfile>
      <anchor>a3bb1e9171913c9dee6afde988aa195fd</anchor>
      <arglist>(double value) const</arglist>
    </member>
    <member kind="function">
      <type>WString</type>
      <name>toFixedString</name>
      <anchorfile>classWt_1_1WLocale.html</anchorfile>
      <anchor>a9a74a2a82044c4382259b32527a110ee</anchor>
      <arglist>(double value, int precision) const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const WLocale &amp;</type>
      <name>currentLocale</name>
      <anchorfile>classWt_1_1WLocale.html</anchorfile>
      <anchor>a9b8345a66eef23d06bcede432121975e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setCurrentLocale</name>
      <anchorfile>classWt_1_1WLocale.html</anchorfile>
      <anchor>a6a5cc849ae490e007be315687b5941f0</anchor>
      <arglist>(const WLocale &amp;locale)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WLocalizedStrings</name>
    <filename>classWt_1_1WLocalizedStrings.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~WLocalizedStrings</name>
      <anchorfile>classWt_1_1WLocalizedStrings.html</anchorfile>
      <anchor>a04d2e40e52b9827bb5eb4759b9928f66</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>hibernate</name>
      <anchorfile>classWt_1_1WLocalizedStrings.html</anchorfile>
      <anchor>a2ea29ba180ed9af25cf561f0df6a995d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual LocalizedString</type>
      <name>resolveKey</name>
      <anchorfile>classWt_1_1WLocalizedStrings.html</anchorfile>
      <anchor>a5dec0a1491724fac1e174f9c0f2651bd</anchor>
      <arglist>(const WLocale &amp;locale, const std::string &amp;key)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual LocalizedString</type>
      <name>resolvePluralKey</name>
      <anchorfile>classWt_1_1WLocalizedStrings.html</anchorfile>
      <anchor>a91dbabae9018431e2a14cf3bcceb5da9</anchor>
      <arglist>(const WLocale &amp;locale, const std::string &amp;key, ::uint64_t amount)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>evaluatePluralExpression</name>
      <anchorfile>classWt_1_1WLocalizedStrings.html</anchorfile>
      <anchor>a2f50fd381c0757539a635a9992eebdab</anchor>
      <arglist>(const std::string &amp;expression, ::uint64_t n)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WLogEntry</name>
    <filename>classWt_1_1WLogEntry.html</filename>
    <member kind="function">
      <type></type>
      <name>WLogEntry</name>
      <anchorfile>classWt_1_1WLogEntry.html</anchorfile>
      <anchor>a6886604803d8e06bc88c78e8d51d650d</anchor>
      <arglist>(WLogEntry &amp;&amp;from)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WLogEntry</name>
      <anchorfile>classWt_1_1WLogEntry.html</anchorfile>
      <anchor>ac67d1795817f894bdc6f27d07083f37e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>WLogEntry &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classWt_1_1WLogEntry.html</anchorfile>
      <anchor>af8046b0ecb69a59ae7beb9c45996f2a3</anchor>
      <arglist>(const WLogger::Sep &amp;)</arglist>
    </member>
    <member kind="function">
      <type>WLogEntry &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classWt_1_1WLogEntry.html</anchorfile>
      <anchor>aba127b67d182be2f88d292dd65706faf</anchor>
      <arglist>(const WLogger::TimeStamp &amp;)</arglist>
    </member>
    <member kind="function">
      <type>WLogEntry &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classWt_1_1WLogEntry.html</anchorfile>
      <anchor>acee453e6fa56712d4930cf4a172eaff8</anchor>
      <arglist>(const char *)</arglist>
    </member>
    <member kind="function">
      <type>WLogEntry &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classWt_1_1WLogEntry.html</anchorfile>
      <anchor>a90e49944bd11d007e86adaf7391450cb</anchor>
      <arglist>(const std::string &amp;)</arglist>
    </member>
    <member kind="function">
      <type>WLogEntry &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classWt_1_1WLogEntry.html</anchorfile>
      <anchor>a8e0c68b4b7892ae6fcb524c057703314</anchor>
      <arglist>(const WString &amp;)</arglist>
    </member>
    <member kind="function">
      <type>WLogEntry &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classWt_1_1WLogEntry.html</anchorfile>
      <anchor>abdf5f29bde8216258d9ada4fd8da45e5</anchor>
      <arglist>(char)</arglist>
    </member>
    <member kind="function">
      <type>WLogEntry &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classWt_1_1WLogEntry.html</anchorfile>
      <anchor>ac484357d147419848b0850a07ae3243a</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>WLogEntry &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classWt_1_1WLogEntry.html</anchorfile>
      <anchor>a819c4ed36c9140fb9418d0ef7738c6d0</anchor>
      <arglist>(long long)</arglist>
    </member>
    <member kind="function">
      <type>WLogEntry &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classWt_1_1WLogEntry.html</anchorfile>
      <anchor>a53a120b1bdf642508a76f3cb6dc37927</anchor>
      <arglist>(double)</arglist>
    </member>
    <member kind="function">
      <type>WLogEntry &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classWt_1_1WLogEntry.html</anchorfile>
      <anchor>a82a7212360215a70e455b1ba152486bc</anchor>
      <arglist>(T *t)</arglist>
    </member>
    <member kind="function">
      <type>WLogEntry &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classWt_1_1WLogEntry.html</anchorfile>
      <anchor>a78fc8be39925da0e181c1dc8cb1967f6</anchor>
      <arglist>(T t)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WLogger</name>
    <filename>classWt_1_1WLogger.html</filename>
    <class kind="class">Wt::WLogger::Field</class>
    <class kind="struct">Wt::WLogger::Sep</class>
    <class kind="struct">Wt::WLogger::TimeStamp</class>
    <member kind="function">
      <type></type>
      <name>WLogger</name>
      <anchorfile>classWt_1_1WLogger.html</anchorfile>
      <anchor>aa2eef50d172fa9766e3500675c814535</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WLogger</name>
      <anchorfile>classWt_1_1WLogger.html</anchorfile>
      <anchor>acb96bbbeede82e03a9489f0fb1c43e38</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setStream</name>
      <anchorfile>classWt_1_1WLogger.html</anchorfile>
      <anchor>ae851860f76c299bca96321b7d867a503</anchor>
      <arglist>(std::ostream &amp;o)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFile</name>
      <anchorfile>classWt_1_1WLogger.html</anchorfile>
      <anchor>a6d8a07bc92824fe32a123094e7516544</anchor>
      <arglist>(const std::string &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>configure</name>
      <anchorfile>classWt_1_1WLogger.html</anchorfile>
      <anchor>a567c5b28fee703e37523898d30016f40</anchor>
      <arglist>(const std::string &amp;config)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addField</name>
      <anchorfile>classWt_1_1WLogger.html</anchorfile>
      <anchor>a8287b40a0699797f63de2fe5deaaae9a</anchor>
      <arglist>(const std::string &amp;name, bool isString)</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; Field &gt; &amp;</type>
      <name>fields</name>
      <anchorfile>classWt_1_1WLogger.html</anchorfile>
      <anchor>ab533581fd76bad1b63615729ab78d432</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WLogEntry</type>
      <name>entry</name>
      <anchorfile>classWt_1_1WLogger.html</anchorfile>
      <anchor>ad807be272b8acd4d01f5be3a601386b6</anchor>
      <arglist>(const std::string &amp;type) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>logging</name>
      <anchorfile>classWt_1_1WLogger.html</anchorfile>
      <anchor>a36eaf24e5c4dbd7c6238c371ef3aeb06</anchor>
      <arglist>(const std::string &amp;type) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>logging</name>
      <anchorfile>classWt_1_1WLogger.html</anchorfile>
      <anchor>ad76f7d996e44a8f0227efa0571f3af21</anchor>
      <arglist>(const char *type) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>logging</name>
      <anchorfile>classWt_1_1WLogger.html</anchorfile>
      <anchor>a900c63d94155a20b8a8863ab9bbc3f04</anchor>
      <arglist>(const std::string &amp;type, const std::string &amp;scope) const</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const Sep</type>
      <name>sep</name>
      <anchorfile>classWt_1_1WLogger.html</anchorfile>
      <anchor>ac368dcce6c4605855bce2807aad0d267</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const TimeStamp</type>
      <name>timestamp</name>
      <anchorfile>classWt_1_1WLogger.html</anchorfile>
      <anchor>a96559cbf73a0d3647aeeac6d45bcc6b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>WLogEntry</type>
      <name>log</name>
      <anchorfile>classWt_1_1WLogger.html</anchorfile>
      <anchor>a0d505163b2293b1a852955ce9b54f66f</anchor>
      <arglist>(const std::string &amp;type)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WLogSink</name>
    <filename>classWt_1_1WLogSink.html</filename>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>log</name>
      <anchorfile>classWt_1_1WLogSink.html</anchorfile>
      <anchor>a490245f5970f579b608706532732fff4</anchor>
      <arglist>(const std::string &amp;type, const std::string &amp;scope, const std::string &amp;message) const noexcept=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>logging</name>
      <anchorfile>classWt_1_1WLogSink.html</anchorfile>
      <anchor>a161a4d69c61426909cab25c1f1f0fc52</anchor>
      <arglist>(const std::string &amp;type, const std::string &amp;scope) const noexcept</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WMatrix4x4</name>
    <filename>classWt_1_1WMatrix4x4.html</filename>
    <base>WGenericMatrix&lt; double, 4, 4 &gt;</base>
    <member kind="function">
      <type></type>
      <name>WMatrix4x4</name>
      <anchorfile>classWt_1_1WMatrix4x4.html</anchorfile>
      <anchor>a989ef27996161180803a98c50dea9266</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WMatrix4x4</name>
      <anchorfile>classWt_1_1WMatrix4x4.html</anchorfile>
      <anchor>ae77c04a6aa9e59a5dce8a8a2391d4f20</anchor>
      <arglist>(const WMatrix4x4 &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WMatrix4x4</name>
      <anchorfile>classWt_1_1WMatrix4x4.html</anchorfile>
      <anchor>ae63ceabe43103997431e95fa4fe022f8</anchor>
      <arglist>(const WGenericMatrix&lt; double, 4, 4 &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WMatrix4x4</name>
      <anchorfile>classWt_1_1WMatrix4x4.html</anchorfile>
      <anchor>a49dcc0772b1d6b7e15e77b12c118841f</anchor>
      <arglist>(double *d)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WMatrix4x4</name>
      <anchorfile>classWt_1_1WMatrix4x4.html</anchorfile>
      <anchor>abc555ba105f1be5d1cce2359a058bf64</anchor>
      <arglist>(double m11, double m12, double m13, double m14, double m21, double m22, double m23, double m24, double m31, double m32, double m33, double m34, double m41, double m42, double m43, double m44)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>determinant</name>
      <anchorfile>classWt_1_1WMatrix4x4.html</anchorfile>
      <anchor>ac12d3ddf9877de02c3a5884dab9375cf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>flipCoordinates</name>
      <anchorfile>classWt_1_1WMatrix4x4.html</anchorfile>
      <anchor>a46daba3833e1f3b04515410cedb38b01</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>frustum</name>
      <anchorfile>classWt_1_1WMatrix4x4.html</anchorfile>
      <anchor>abbb11b872a9a639d0ad3e0cf3c3805e8</anchor>
      <arglist>(double left, double right, double bottom, double top, double nearPlane, double farPlane)</arglist>
    </member>
    <member kind="function">
      <type>WMatrix4x4</type>
      <name>inverted</name>
      <anchorfile>classWt_1_1WMatrix4x4.html</anchorfile>
      <anchor>ad040dca7affcd2b47c742d7344f56922</anchor>
      <arglist>(bool *invertible=nullptr) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>lookAt</name>
      <anchorfile>classWt_1_1WMatrix4x4.html</anchorfile>
      <anchor>acb4c9b4aa55dd43b373040a1bfcf1f8e</anchor>
      <arglist>(double eyeX, double eyeY, double eyeZ, double centerX, double centerY, double centerZ, double upX, double upY, double upZ)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ortho</name>
      <anchorfile>classWt_1_1WMatrix4x4.html</anchorfile>
      <anchor>a0ae53db291e88e127b70a1740c9059a0</anchor>
      <arglist>(double left, double right, double bottom, double top, double nearPlane, double farPlane)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>perspective</name>
      <anchorfile>classWt_1_1WMatrix4x4.html</anchorfile>
      <anchor>ac9c8d84355bc6bc825ee6465b0f83bbb</anchor>
      <arglist>(double angle, double aspect, double nearPlane, double farPlane)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>rotate</name>
      <anchorfile>classWt_1_1WMatrix4x4.html</anchorfile>
      <anchor>a3bc112a0a610646f7596cf389b37d81c</anchor>
      <arglist>(double angle, double x, double y, double z)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scale</name>
      <anchorfile>classWt_1_1WMatrix4x4.html</anchorfile>
      <anchor>a2cd4dd1510fd69374b8a6bdf4cdffebd</anchor>
      <arglist>(double xFactor, double yFactor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scale</name>
      <anchorfile>classWt_1_1WMatrix4x4.html</anchorfile>
      <anchor>a8074ced26218dd52541abd094faf9815</anchor>
      <arglist>(double x, double y, double z)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scale</name>
      <anchorfile>classWt_1_1WMatrix4x4.html</anchorfile>
      <anchor>adba26fe582056591d246e8cbea8cdba7</anchor>
      <arglist>(double factor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>translate</name>
      <anchorfile>classWt_1_1WMatrix4x4.html</anchorfile>
      <anchor>a65cea270b294bcf2db233d1f6113cdd0</anchor>
      <arglist>(double x, double y)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>translate</name>
      <anchorfile>classWt_1_1WMatrix4x4.html</anchorfile>
      <anchor>a990ea98caa09d5a8e132eece1daa95de</anchor>
      <arglist>(double x, double y, double z)</arglist>
    </member>
    <member kind="function">
      <type>WMatrix4x4</type>
      <name>operator*</name>
      <anchorfile>classWt_1_1WMatrix4x4.html</anchorfile>
      <anchor>a80b1f25ccc98c1c97dd79bb9f7e56209</anchor>
      <arglist>(const WGenericMatrix&lt; double, 4, 4 &gt; &amp;r) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WMeasurePaintDevice</name>
    <filename>classWt_1_1WMeasurePaintDevice.html</filename>
    <base>Wt::WPaintDevice</base>
    <member kind="function">
      <type></type>
      <name>WMeasurePaintDevice</name>
      <anchorfile>classWt_1_1WMeasurePaintDevice.html</anchorfile>
      <anchor>a02ecca41e123bdad07bd13666fd12932</anchor>
      <arglist>(WPaintDevice *paintDevice)</arglist>
    </member>
    <member kind="function">
      <type>WRectF</type>
      <name>boundingRect</name>
      <anchorfile>classWt_1_1WMeasurePaintDevice.html</anchorfile>
      <anchor>a777927ed43e4d82a7518370e361734f7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WFlags&lt; PaintDeviceFeatureFlag &gt;</type>
      <name>features</name>
      <anchorfile>classWt_1_1WMeasurePaintDevice.html</anchorfile>
      <anchor>adf1ffe76c273ff27505c0f3b5209a1fa</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setChanged</name>
      <anchorfile>classWt_1_1WMeasurePaintDevice.html</anchorfile>
      <anchor>a49f09b01a25a28bac1f1de559676c165</anchor>
      <arglist>(WFlags&lt; PainterChangeFlag &gt; flags) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>drawArc</name>
      <anchorfile>classWt_1_1WMeasurePaintDevice.html</anchorfile>
      <anchor>af97d4b323a57ec25d24ce0f69023192c</anchor>
      <arglist>(const WRectF &amp;rect, double startAngle, double spanAngle) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>drawImage</name>
      <anchorfile>classWt_1_1WMeasurePaintDevice.html</anchorfile>
      <anchor>aef6f3a415f1a2b2484fd20ce5b1179df</anchor>
      <arglist>(const WRectF &amp;rect, const std::string &amp;imgUri, int imgWidth, int imgHeight, const WRectF &amp;sourceRect) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>drawLine</name>
      <anchorfile>classWt_1_1WMeasurePaintDevice.html</anchorfile>
      <anchor>ad8f48e9220f87e17590ecf24d94828d5</anchor>
      <arglist>(double x1, double y1, double x2, double y2) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>drawRect</name>
      <anchorfile>classWt_1_1WMeasurePaintDevice.html</anchorfile>
      <anchor>aaeeee5c0674c21c4b8260ba7d3e89d18</anchor>
      <arglist>(const WRectF &amp;rectangle) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>drawPath</name>
      <anchorfile>classWt_1_1WMeasurePaintDevice.html</anchorfile>
      <anchor>afc13c82dd5ab28f7cc5b6e858fc920ce</anchor>
      <arglist>(const WPainterPath &amp;path) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>drawText</name>
      <anchorfile>classWt_1_1WMeasurePaintDevice.html</anchorfile>
      <anchor>adf74ee12a36f50f03024ffdb93ad7cdd</anchor>
      <arglist>(const WRectF &amp;rect, WFlags&lt; AlignmentFlag &gt; alignmentFlags, TextFlag textFlag, const WString &amp;text, const WPointF *clipPoint) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WTextItem</type>
      <name>measureText</name>
      <anchorfile>classWt_1_1WMeasurePaintDevice.html</anchorfile>
      <anchor>a114df26cfffe1e58f460b5a648e0cc9f</anchor>
      <arglist>(const WString &amp;text, double maxWidth=-1, bool wordWrap=false) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WFontMetrics</type>
      <name>fontMetrics</name>
      <anchorfile>classWt_1_1WMeasurePaintDevice.html</anchorfile>
      <anchor>ae1e5e9990132bb3148ab440b62e0116d</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>init</name>
      <anchorfile>classWt_1_1WMeasurePaintDevice.html</anchorfile>
      <anchor>aee82a30f3c3de3823a8ae11cee1734b0</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>done</name>
      <anchorfile>classWt_1_1WMeasurePaintDevice.html</anchorfile>
      <anchor>a47e21c73fdf401869d384557a0e4e28c</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>paintActive</name>
      <anchorfile>classWt_1_1WMeasurePaintDevice.html</anchorfile>
      <anchor>aec56becd3e5c70f6ad3b8cab13302635</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WLength</type>
      <name>width</name>
      <anchorfile>classWt_1_1WMeasurePaintDevice.html</anchorfile>
      <anchor>a577cee84861f2a75828a7383e1de28ab</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WLength</type>
      <name>height</name>
      <anchorfile>classWt_1_1WMeasurePaintDevice.html</anchorfile>
      <anchor>a8deb235d48e22251c40d6f203da22b89</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual WPainter *</type>
      <name>painter</name>
      <anchorfile>classWt_1_1WMeasurePaintDevice.html</anchorfile>
      <anchor>aefa41e0fe493809a044ca95052691fc1</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>setPainter</name>
      <anchorfile>classWt_1_1WMeasurePaintDevice.html</anchorfile>
      <anchor>a1315dd9bd5d5002c1003ea2f22e83053</anchor>
      <arglist>(WPainter *painter) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WMediaPlayer</name>
    <filename>classWt_1_1WMediaPlayer.html</filename>
    <base>Wt::WCompositeWidget</base>
    <member kind="typedef">
      <type>MediaEncoding</type>
      <name>Encoding</name>
      <anchorfile>classWt_1_1WMediaPlayer.html</anchorfile>
      <anchor>a2a3417c4e083851a5c1db523ba07c10e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MediaType</type>
      <name>Type</name>
      <anchorfile>classWt_1_1WMediaPlayer.html</anchorfile>
      <anchor>a3012845ba1cf68a67d3a88b4d7eed392</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MediaPlayerButtonId</type>
      <name>ButtonId</name>
      <anchorfile>classWt_1_1WMediaPlayer.html</anchorfile>
      <anchor>a9c4ceab863a05e3fd0c431e6adfec94e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MediaPlayerProgressBarId</type>
      <name>ProgressBarId</name>
      <anchorfile>classWt_1_1WMediaPlayer.html</anchorfile>
      <anchor>ac2069693da268ca50c6ae6560b650f6c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MediaPlayerTextId</type>
      <name>TextId</name>
      <anchorfile>classWt_1_1WMediaPlayer.html</anchorfile>
      <anchor>ab5e8be4c0685ea709275fa440bd63f03</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WMediaPlayer</name>
      <anchorfile>classWt_1_1WMediaPlayer.html</anchorfile>
      <anchor>ae0f6b2127d74dca6fbf5b7f74a954443</anchor>
      <arglist>(MediaType mediaType)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WMediaPlayer</name>
      <anchorfile>classWt_1_1WMediaPlayer.html</anchorfile>
      <anchor>a5a40aba527d215d090ff910b8a3478a7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVideoSize</name>
      <anchorfile>classWt_1_1WMediaPlayer.html</anchorfile>
      <anchor>ab2921ceed64c9ffcb9ed35efc6b62360</anchor>
      <arglist>(int width, int height)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>videoWidth</name>
      <anchorfile>classWt_1_1WMediaPlayer.html</anchorfile>
      <anchor>a0f14a39e0ad96ff1b1c0e2b0377eada2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>videoHeight</name>
      <anchorfile>classWt_1_1WMediaPlayer.html</anchorfile>
      <anchor>a0f40f7d8b4fb106c303070a380f884c0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setControlsWidget</name>
      <anchorfile>classWt_1_1WMediaPlayer.html</anchorfile>
      <anchor>a813e663fb1dcb86faf2dc6a3108001e4</anchor>
      <arglist>(std::unique_ptr&lt; WWidget &gt; controls)</arglist>
    </member>
    <member kind="function">
      <type>WWidget *</type>
      <name>controlsWidget</name>
      <anchorfile>classWt_1_1WMediaPlayer.html</anchorfile>
      <anchor>a9ab96dad6ed788713b7a57ff5e2f78b9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTitle</name>
      <anchorfile>classWt_1_1WMediaPlayer.html</anchorfile>
      <anchor>ab368a41acaae3c5e81ff9c4b40e3ab61</anchor>
      <arglist>(const WString &amp;title)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addSource</name>
      <anchorfile>classWt_1_1WMediaPlayer.html</anchorfile>
      <anchor>af52516d46668627d6e96153e447cb7d0</anchor>
      <arglist>(MediaEncoding encoding, const WLink &amp;link)</arglist>
    </member>
    <member kind="function">
      <type>WLink</type>
      <name>getSource</name>
      <anchorfile>classWt_1_1WMediaPlayer.html</anchorfile>
      <anchor>a79cf51b5cc6cce78e7fb6e9784629b4e</anchor>
      <arglist>(MediaEncoding encoding) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearSources</name>
      <anchorfile>classWt_1_1WMediaPlayer.html</anchorfile>
      <anchor>a36fd95ade10cebb2d8224c67daf42db6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setButton</name>
      <anchorfile>classWt_1_1WMediaPlayer.html</anchorfile>
      <anchor>ac407d84acd2fbf02ec5480d54f29c23b</anchor>
      <arglist>(MediaPlayerButtonId id, WInteractWidget *btn)</arglist>
    </member>
    <member kind="function">
      <type>WInteractWidget *</type>
      <name>button</name>
      <anchorfile>classWt_1_1WMediaPlayer.html</anchorfile>
      <anchor>a35afac273e8f43a89c64719432e53b44</anchor>
      <arglist>(MediaPlayerButtonId id) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProgressBar</name>
      <anchorfile>classWt_1_1WMediaPlayer.html</anchorfile>
      <anchor>a39410099f75b2f513cea614cd7c78f69</anchor>
      <arglist>(MediaPlayerProgressBarId id, WProgressBar *progressBar)</arglist>
    </member>
    <member kind="function">
      <type>WProgressBar *</type>
      <name>progressBar</name>
      <anchorfile>classWt_1_1WMediaPlayer.html</anchorfile>
      <anchor>a4a5f20b4ef4fd81760fcc5245b0cd168</anchor>
      <arglist>(MediaPlayerProgressBarId id) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setText</name>
      <anchorfile>classWt_1_1WMediaPlayer.html</anchorfile>
      <anchor>aac59b9a6d80005ab4734fe3d16ad2816</anchor>
      <arglist>(MediaPlayerTextId id, WText *text)</arglist>
    </member>
    <member kind="function">
      <type>WText *</type>
      <name>text</name>
      <anchorfile>classWt_1_1WMediaPlayer.html</anchorfile>
      <anchor>ac5665585afbecd326e898ab3f770c01d</anchor>
      <arglist>(MediaPlayerTextId id) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pause</name>
      <anchorfile>classWt_1_1WMediaPlayer.html</anchorfile>
      <anchor>a9b43763daf33982d282c0ca1b1db11d3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>play</name>
      <anchorfile>classWt_1_1WMediaPlayer.html</anchorfile>
      <anchor>a0376bcf1f43687626583acbdd153c06e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stop</name>
      <anchorfile>classWt_1_1WMediaPlayer.html</anchorfile>
      <anchor>a0f1cd10b3a27817ab37811232979bedb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>seek</name>
      <anchorfile>classWt_1_1WMediaPlayer.html</anchorfile>
      <anchor>a19a8feddecb6c470470558f59230f6cd</anchor>
      <arglist>(double time)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPlaybackRate</name>
      <anchorfile>classWt_1_1WMediaPlayer.html</anchorfile>
      <anchor>a0a1be9b0bf768d16e5a85cba6e9e57f0</anchor>
      <arglist>(double rate)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVolume</name>
      <anchorfile>classWt_1_1WMediaPlayer.html</anchorfile>
      <anchor>acf7af79ae6289631954d1b6759326852</anchor>
      <arglist>(double volume)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>volume</name>
      <anchorfile>classWt_1_1WMediaPlayer.html</anchorfile>
      <anchor>ad9901a2b701c0151cefdf8b5567452ba</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>mute</name>
      <anchorfile>classWt_1_1WMediaPlayer.html</anchorfile>
      <anchor>a5991198f006562b9062ae01923cd65c8</anchor>
      <arglist>(bool mute)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>playing</name>
      <anchorfile>classWt_1_1WMediaPlayer.html</anchorfile>
      <anchor>afbe8138b5523ff19a8bcf783a1d79932</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>MediaReadyState</type>
      <name>readyState</name>
      <anchorfile>classWt_1_1WMediaPlayer.html</anchorfile>
      <anchor>a390ac969917834f4cd0c63869f460a10</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>duration</name>
      <anchorfile>classWt_1_1WMediaPlayer.html</anchorfile>
      <anchor>ae01565569e2fa8087421d2e7e00e70bd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>currentTime</name>
      <anchorfile>classWt_1_1WMediaPlayer.html</anchorfile>
      <anchor>a2f6748788304a879ab6ee11d945b7a5e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>playbackRate</name>
      <anchorfile>classWt_1_1WMediaPlayer.html</anchorfile>
      <anchor>af79ca5ed1b7b564981e51208f8ea9992</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>JSignal&lt; double &gt; &amp;</type>
      <name>timeUpdated</name>
      <anchorfile>classWt_1_1WMediaPlayer.html</anchorfile>
      <anchor>afcaacde601f09c7d7d025ecb69c445e1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>JSignal &amp;</type>
      <name>playbackStarted</name>
      <anchorfile>classWt_1_1WMediaPlayer.html</anchorfile>
      <anchor>ac3a723667cf95cc750a9eacf31a81abc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>JSignal &amp;</type>
      <name>playbackPaused</name>
      <anchorfile>classWt_1_1WMediaPlayer.html</anchorfile>
      <anchor>aa38aa01ef2d63e8402864de66f568dc3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>JSignal &amp;</type>
      <name>ended</name>
      <anchorfile>classWt_1_1WMediaPlayer.html</anchorfile>
      <anchor>afc3013c882565fcd5981b85b805b2e42</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>JSignal&lt; double &gt; &amp;</type>
      <name>volumeChanged</name>
      <anchorfile>classWt_1_1WMediaPlayer.html</anchorfile>
      <anchor>ac77d50c0466e385541b61c24ffba6a2c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>refresh</name>
      <anchorfile>classWt_1_1WMediaPlayer.html</anchorfile>
      <anchor>a51af9a7e091c747d011ca5100e596403</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>render</name>
      <anchorfile>classWt_1_1WMediaPlayer.html</anchorfile>
      <anchor>a80df2f8b8a622e3aebadaaa35e694a0b</anchor>
      <arglist>(WFlags&lt; RenderFlag &gt; flags) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WMemoryResource</name>
    <filename>classWt_1_1WMemoryResource.html</filename>
    <base>Wt::WResource</base>
    <member kind="function">
      <type></type>
      <name>WMemoryResource</name>
      <anchorfile>classWt_1_1WMemoryResource.html</anchorfile>
      <anchor>ae0816b2da9995cd905937a7b4a25af5e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WMemoryResource</name>
      <anchorfile>classWt_1_1WMemoryResource.html</anchorfile>
      <anchor>af82a9e5381c340c3cd4d456525cd27c2</anchor>
      <arglist>(const std::string &amp;mimeType)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WMemoryResource</name>
      <anchorfile>classWt_1_1WMemoryResource.html</anchorfile>
      <anchor>a3c94cb2b1a9c6af76968bb6ad891d048</anchor>
      <arglist>(const std::string &amp;mimeType, const std::vector&lt; unsigned char &gt; &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setData</name>
      <anchorfile>classWt_1_1WMemoryResource.html</anchorfile>
      <anchor>a330bf924bd2d01de7dfce15778b56d48</anchor>
      <arglist>(const std::vector&lt; unsigned char &gt; &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setData</name>
      <anchorfile>classWt_1_1WMemoryResource.html</anchorfile>
      <anchor>a9ad4324110014390132405e941c9c87c</anchor>
      <arglist>(const unsigned char *data, int count)</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; unsigned char &gt;</type>
      <name>data</name>
      <anchorfile>classWt_1_1WMemoryResource.html</anchorfile>
      <anchor>aeaa0a1a76cf170a49528adc0dd3edc86</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::string</type>
      <name>mimeType</name>
      <anchorfile>classWt_1_1WMemoryResource.html</anchorfile>
      <anchor>af6e9c0043442f08ac6e8ad2d248f6c71</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMimeType</name>
      <anchorfile>classWt_1_1WMemoryResource.html</anchorfile>
      <anchor>a057ea5ac18daacf2894c28e5bfbbde60</anchor>
      <arglist>(const std::string &amp;mimeType)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>handleRequest</name>
      <anchorfile>classWt_1_1WMemoryResource.html</anchorfile>
      <anchor>a61376b88794bc0a548c5db6d0159f7fe</anchor>
      <arglist>(const Http::Request &amp;request, Http::Response &amp;response) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WMenu</name>
    <filename>classWt_1_1WMenu.html</filename>
    <base>Wt::WCompositeWidget</base>
    <member kind="function">
      <type></type>
      <name>WMenu</name>
      <anchorfile>classWt_1_1WMenu.html</anchorfile>
      <anchor>ac994130e2d23d9417d6a056b4f59ce58</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WMenu</name>
      <anchorfile>classWt_1_1WMenu.html</anchorfile>
      <anchor>a0ea8b9520b10daa61c0866fbb622c6df</anchor>
      <arglist>(WStackedWidget *contentsStack)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WMenu</name>
      <anchorfile>classWt_1_1WMenu.html</anchorfile>
      <anchor>a7e2fef60ee49edaa9056b3284964576e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>WMenuItem *</type>
      <name>addItem</name>
      <anchorfile>classWt_1_1WMenu.html</anchorfile>
      <anchor>a7494fdf4f6b76db6244a1fd4a37088bf</anchor>
      <arglist>(const WString &amp;label, std::unique_ptr&lt; WWidget &gt; contents=nullptr, ContentLoading policy=ContentLoading::Lazy)</arglist>
    </member>
    <member kind="function">
      <type>WMenuItem *</type>
      <name>addItem</name>
      <anchorfile>classWt_1_1WMenu.html</anchorfile>
      <anchor>a99cf2d73c8b1aebbc8fa4863780cb107</anchor>
      <arglist>(const std::string &amp;iconPath, const WString &amp;label, std::unique_ptr&lt; WWidget &gt; contents=nullptr, ContentLoading policy=ContentLoading::Lazy)</arglist>
    </member>
    <member kind="function">
      <type>WMenuItem *</type>
      <name>addItem</name>
      <anchorfile>classWt_1_1WMenu.html</anchorfile>
      <anchor>afeefebc3d03d683f75598ac98acab58f</anchor>
      <arglist>(const WString &amp;text, T *target, void(V::*method)())</arglist>
    </member>
    <member kind="function">
      <type>WMenuItem *</type>
      <name>addItem</name>
      <anchorfile>classWt_1_1WMenu.html</anchorfile>
      <anchor>a100e8367f489fff8258db2e1c35c69a4</anchor>
      <arglist>(const std::string &amp;iconPath, const WString &amp;text, T *target, void(V::*method)())</arglist>
    </member>
    <member kind="function">
      <type>WMenuItem *</type>
      <name>addMenu</name>
      <anchorfile>classWt_1_1WMenu.html</anchorfile>
      <anchor>a792efe0a20114142b568a3e0f25dbcb2</anchor>
      <arglist>(const WString &amp;text, std::unique_ptr&lt; WMenu &gt; menu)</arglist>
    </member>
    <member kind="function">
      <type>WMenuItem *</type>
      <name>addMenu</name>
      <anchorfile>classWt_1_1WMenu.html</anchorfile>
      <anchor>a81b8fae77794402332ee783dc6d698f9</anchor>
      <arglist>(const std::string &amp;iconPath, const WString &amp;text, std::unique_ptr&lt; WMenu &gt; menu)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WMenuItem *</type>
      <name>addItem</name>
      <anchorfile>classWt_1_1WMenu.html</anchorfile>
      <anchor>ac86cb3742529f5564681351e0e451594</anchor>
      <arglist>(std::unique_ptr&lt; WMenuItem &gt; item)</arglist>
    </member>
    <member kind="function">
      <type>WMenuItem *</type>
      <name>insertItem</name>
      <anchorfile>classWt_1_1WMenu.html</anchorfile>
      <anchor>ac75b738873fb44e1595393b85210f68c</anchor>
      <arglist>(int index, const WString &amp;label, std::unique_ptr&lt; WWidget &gt; contents=nullptr, ContentLoading policy=ContentLoading::Lazy)</arglist>
    </member>
    <member kind="function">
      <type>WMenuItem *</type>
      <name>insertItem</name>
      <anchorfile>classWt_1_1WMenu.html</anchorfile>
      <anchor>a404ec7ce61eadc63bc539ae7ba9bfe25</anchor>
      <arglist>(int index, const std::string &amp;iconPath, const WString &amp;label, std::unique_ptr&lt; WWidget &gt; contents=nullptr, ContentLoading policy=ContentLoading::Lazy)</arglist>
    </member>
    <member kind="function">
      <type>WMenuItem *</type>
      <name>insertItem</name>
      <anchorfile>classWt_1_1WMenu.html</anchorfile>
      <anchor>a7040ba0b3ad01c5a3d2106524a1ff4ff</anchor>
      <arglist>(int index, const WString &amp;text, T *target, void(V::*method)())</arglist>
    </member>
    <member kind="function">
      <type>WMenuItem *</type>
      <name>insertItem</name>
      <anchorfile>classWt_1_1WMenu.html</anchorfile>
      <anchor>a4d8be714110f263ae069dce160c86a7e</anchor>
      <arglist>(int index, const std::string &amp;iconPath, const WString &amp;text, T *target, void(V::*method)())</arglist>
    </member>
    <member kind="function">
      <type>WMenuItem *</type>
      <name>insertMenu</name>
      <anchorfile>classWt_1_1WMenu.html</anchorfile>
      <anchor>a7d06c15ba2bb13a1596f14f7e5e07e2b</anchor>
      <arglist>(int index, const WString &amp;text, std::unique_ptr&lt; WMenu &gt; menu)</arglist>
    </member>
    <member kind="function">
      <type>WMenuItem *</type>
      <name>insertMenu</name>
      <anchorfile>classWt_1_1WMenu.html</anchorfile>
      <anchor>a3b0b92d9b17f82297d84f4edeeff6591</anchor>
      <arglist>(int index, const std::string &amp;iconPath, const WString &amp;text, std::unique_ptr&lt; WMenu &gt; menu)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WMenuItem *</type>
      <name>insertItem</name>
      <anchorfile>classWt_1_1WMenu.html</anchorfile>
      <anchor>a905e57554db116cf4dc95367453e50de</anchor>
      <arglist>(int index, std::unique_ptr&lt; WMenuItem &gt; item)</arglist>
    </member>
    <member kind="function">
      <type>WMenuItem *</type>
      <name>addSeparator</name>
      <anchorfile>classWt_1_1WMenu.html</anchorfile>
      <anchor>a92e4b0124610afda2f48a126ebed3b66</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>WMenuItem *</type>
      <name>addSectionHeader</name>
      <anchorfile>classWt_1_1WMenu.html</anchorfile>
      <anchor>a5905b0d07e38a9dd7245e2e4638ee559</anchor>
      <arglist>(const WString &amp;text)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::unique_ptr&lt; WMenuItem &gt;</type>
      <name>removeItem</name>
      <anchorfile>classWt_1_1WMenu.html</anchorfile>
      <anchor>a05c16fe91e011dd9a04775749fd8d417</anchor>
      <arglist>(WMenuItem *item)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>select</name>
      <anchorfile>classWt_1_1WMenu.html</anchorfile>
      <anchor>a7bafc33564cb06d980d75e2f4d89f28d</anchor>
      <arglist>(WMenuItem *item)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>select</name>
      <anchorfile>classWt_1_1WMenu.html</anchorfile>
      <anchor>aec1801d047dc0f150d1cc12b801aa6c2</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>Signal&lt; WMenuItem * &gt; &amp;</type>
      <name>itemSelected</name>
      <anchorfile>classWt_1_1WMenu.html</anchorfile>
      <anchor>a0303879705bcdd8dbffc2d1528670d20</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Signal&lt; WMenuItem * &gt; &amp;</type>
      <name>itemSelectRendered</name>
      <anchorfile>classWt_1_1WMenu.html</anchorfile>
      <anchor>a8737f262f99d0db0a0f4b7aeb01cfe2e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>close</name>
      <anchorfile>classWt_1_1WMenu.html</anchorfile>
      <anchor>a97c9be1df48cb0d27e2e4b904b51e184</anchor>
      <arglist>(WMenuItem *item)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>close</name>
      <anchorfile>classWt_1_1WMenu.html</anchorfile>
      <anchor>a1040233afcd0372468faff230c685825</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; WMenuItem * &gt;</type>
      <name>items</name>
      <anchorfile>classWt_1_1WMenu.html</anchorfile>
      <anchor>ac6fa0a6c670ee1356e854bd3db6dfb07</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Signal&lt; WMenuItem * &gt; &amp;</type>
      <name>itemClosed</name>
      <anchorfile>classWt_1_1WMenu.html</anchorfile>
      <anchor>ab9fa68e381972fb5385478b1e9eb6c78</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setItemHidden</name>
      <anchorfile>classWt_1_1WMenu.html</anchorfile>
      <anchor>ab3d880e2b089bb084d5634130d61f4d7</anchor>
      <arglist>(WMenuItem *item, bool hidden)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setItemHidden</name>
      <anchorfile>classWt_1_1WMenu.html</anchorfile>
      <anchor>a20e921974ecea341bdcfd5df9596ed53</anchor>
      <arglist>(int index, bool hidden)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isItemHidden</name>
      <anchorfile>classWt_1_1WMenu.html</anchorfile>
      <anchor>a849ba79d03adc2e654a53b03d3847611</anchor>
      <arglist>(WMenuItem *item) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isItemHidden</name>
      <anchorfile>classWt_1_1WMenu.html</anchorfile>
      <anchor>a11f4e02c2f25f09ec9389ccc9b716ef9</anchor>
      <arglist>(int index) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setItemDisabled</name>
      <anchorfile>classWt_1_1WMenu.html</anchorfile>
      <anchor>a294d53469b71cb5d35fa59865c3b75cb</anchor>
      <arglist>(WMenuItem *item, bool disabled)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setItemDisabled</name>
      <anchorfile>classWt_1_1WMenu.html</anchorfile>
      <anchor>ac647478bd0bf0086a52a9e572755b3a2</anchor>
      <arglist>(int index, bool disabled)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isItemDisabled</name>
      <anchorfile>classWt_1_1WMenu.html</anchorfile>
      <anchor>a91f08dd5674b639d76a034090b713529</anchor>
      <arglist>(WMenuItem *item) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isItemDisabled</name>
      <anchorfile>classWt_1_1WMenu.html</anchorfile>
      <anchor>ad3f312ee8e0e5655e791a710585417c2</anchor>
      <arglist>(int index) const</arglist>
    </member>
    <member kind="function">
      <type>WMenuItem *</type>
      <name>currentItem</name>
      <anchorfile>classWt_1_1WMenu.html</anchorfile>
      <anchor>a9ec3141ec8b1e09feae6ba6820310971</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>currentIndex</name>
      <anchorfile>classWt_1_1WMenu.html</anchorfile>
      <anchor>a4b8a02fead9c195d99a3fab1e70a4f65</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInternalPathEnabled</name>
      <anchorfile>classWt_1_1WMenu.html</anchorfile>
      <anchor>ae1807eba0b1002808dbec779d00a79dc</anchor>
      <arglist>(const std::string &amp;basePath=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>internalPathEnabled</name>
      <anchorfile>classWt_1_1WMenu.html</anchorfile>
      <anchor>a8828d34b081eb921398c81d2a3a7064a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInternalBasePath</name>
      <anchorfile>classWt_1_1WMenu.html</anchorfile>
      <anchor>aa5cf3b5b9919d2f130c8acd156447132</anchor>
      <arglist>(const std::string &amp;basePath)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>internalBasePath</name>
      <anchorfile>classWt_1_1WMenu.html</anchorfile>
      <anchor>a534df522539f1f7c5a1a224acda48d56</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WStackedWidget *</type>
      <name>contentsStack</name>
      <anchorfile>classWt_1_1WMenu.html</anchorfile>
      <anchor>aa16aef4cf01e7bf095e2b868dfd0b565</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>count</name>
      <anchorfile>classWt_1_1WMenu.html</anchorfile>
      <anchor>a6f71a85a08d91fc0e5e107e870449527</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WMenuItem *</type>
      <name>itemAt</name>
      <anchorfile>classWt_1_1WMenu.html</anchorfile>
      <anchor>aced469aa7a2a0bc372e675d6aa25a150</anchor>
      <arglist>(int index) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>indexOf</name>
      <anchorfile>classWt_1_1WMenu.html</anchorfile>
      <anchor>a4fa3b33c6abc30c207fcef69685f899f</anchor>
      <arglist>(WMenuItem *item) const</arglist>
    </member>
    <member kind="function">
      <type>WMenuItem *</type>
      <name>parentItem</name>
      <anchorfile>classWt_1_1WMenu.html</anchorfile>
      <anchor>ad723178ea350996a217dd7c46866dd38</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>load</name>
      <anchorfile>classWt_1_1WMenu.html</anchorfile>
      <anchor>ad8c55ba77b7cef8985a333cedc7e7492</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>render</name>
      <anchorfile>classWt_1_1WMenu.html</anchorfile>
      <anchor>a3662476fa1f1eab60c4aa9bebfa1b78c</anchor>
      <arglist>(WFlags&lt; RenderFlag &gt; flags) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>internalPathChanged</name>
      <anchorfile>classWt_1_1WMenu.html</anchorfile>
      <anchor>a1b4eb0bd90bb2b9a0661fd04ec35224a</anchor>
      <arglist>(const std::string &amp;path)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual int</type>
      <name>nextAfterHide</name>
      <anchorfile>classWt_1_1WMenu.html</anchorfile>
      <anchor>ae7e3b026c0275dcb0ea62d4449e36468</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>select</name>
      <anchorfile>classWt_1_1WMenu.html</anchorfile>
      <anchor>a11132171e5a8e8798ccc9304b37ce73a</anchor>
      <arglist>(int index, bool changePath)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WMenuItem</name>
    <filename>classWt_1_1WMenuItem.html</filename>
    <base>Wt::WContainerWidget</base>
    <member kind="function">
      <type></type>
      <name>WMenuItem</name>
      <anchorfile>classWt_1_1WMenuItem.html</anchorfile>
      <anchor>a693f13d84e82901162952ce1a89276fb</anchor>
      <arglist>(const WString &amp;label, std::unique_ptr&lt; WWidget &gt; contents=nullptr, ContentLoading policy=ContentLoading::Lazy)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setText</name>
      <anchorfile>classWt_1_1WMenuItem.html</anchorfile>
      <anchor>ae9f4792069fcf2f3410c002fdab2d2f1</anchor>
      <arglist>(const WString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>WString</type>
      <name>text</name>
      <anchorfile>classWt_1_1WMenuItem.html</anchorfile>
      <anchor>acc7baf68f04e05ff1af7caaf1da33202</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setIcon</name>
      <anchorfile>classWt_1_1WMenuItem.html</anchorfile>
      <anchor>a9ce09c90e5044ef581c46a3a3abad3d2</anchor>
      <arglist>(const std::string &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>icon</name>
      <anchorfile>classWt_1_1WMenuItem.html</anchorfile>
      <anchor>a74a45744f55b4c7cd1d8f4f200abe956</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCheckable</name>
      <anchorfile>classWt_1_1WMenuItem.html</anchorfile>
      <anchor>af99508668e57432c90e1b9bf5d8fadcb</anchor>
      <arglist>(bool checkable)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isCheckable</name>
      <anchorfile>classWt_1_1WMenuItem.html</anchorfile>
      <anchor>a68887c5fcd07eec2d2b935fe70c9f9ac</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setPathComponent</name>
      <anchorfile>classWt_1_1WMenuItem.html</anchorfile>
      <anchor>a4291756303dbf128b718679cdb907a5a</anchor>
      <arglist>(const std::string &amp;path)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>pathComponent</name>
      <anchorfile>classWt_1_1WMenuItem.html</anchorfile>
      <anchor>a7ed10e994274a4033e546bb346a13488</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setInternalPathEnabled</name>
      <anchorfile>classWt_1_1WMenuItem.html</anchorfile>
      <anchor>a422ff78dfde58d4ba5fffa5da6c3b644</anchor>
      <arglist>(bool enabled)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>internalPathEnabled</name>
      <anchorfile>classWt_1_1WMenuItem.html</anchorfile>
      <anchor>a900905d7ec4580f08ad1fa96d445fb91</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLink</name>
      <anchorfile>classWt_1_1WMenuItem.html</anchorfile>
      <anchor>ae5bc878a2caa2461f063bccbea0ce4e0</anchor>
      <arglist>(const WLink &amp;link)</arglist>
    </member>
    <member kind="function">
      <type>WLink</type>
      <name>link</name>
      <anchorfile>classWt_1_1WMenuItem.html</anchorfile>
      <anchor>a41230bd7fe8303b58ab98ef58225e25a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMenu</name>
      <anchorfile>classWt_1_1WMenuItem.html</anchorfile>
      <anchor>a747bfc63335118decbf6085d0d61b6e4</anchor>
      <arglist>(std::unique_ptr&lt; WMenu &gt; menu)</arglist>
    </member>
    <member kind="function">
      <type>WMenu *</type>
      <name>menu</name>
      <anchorfile>classWt_1_1WMenuItem.html</anchorfile>
      <anchor>a6f4d08f75031cb3a95875a5494cf7640</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setChecked</name>
      <anchorfile>classWt_1_1WMenuItem.html</anchorfile>
      <anchor>ac5c1314f003fa987335e3d9919bc42fc</anchor>
      <arglist>(bool checked)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isChecked</name>
      <anchorfile>classWt_1_1WMenuItem.html</anchorfile>
      <anchor>a8ee7ddb1371380d3c8f97b703b35099a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSelectable</name>
      <anchorfile>classWt_1_1WMenuItem.html</anchorfile>
      <anchor>a0474c427d515fa4caee5e3d555a711ef</anchor>
      <arglist>(bool selectable) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSelectable</name>
      <anchorfile>classWt_1_1WMenuItem.html</anchorfile>
      <anchor>ab2ca2fd8a6281e1347120bb7d630b3ac</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setData</name>
      <anchorfile>classWt_1_1WMenuItem.html</anchorfile>
      <anchor>a4857378a84c34edc405086337b24835e</anchor>
      <arglist>(void *data)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>data</name>
      <anchorfile>classWt_1_1WMenuItem.html</anchorfile>
      <anchor>a00021189dd72f7e15e75d1d6612d2edf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WCheckBox *</type>
      <name>checkBox</name>
      <anchorfile>classWt_1_1WMenuItem.html</anchorfile>
      <anchor>a044ce4035832451da050665014a210db</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCloseable</name>
      <anchorfile>classWt_1_1WMenuItem.html</anchorfile>
      <anchor>a59b6dee6c95ae958f0c3b76d5ef7272d</anchor>
      <arglist>(bool closeable)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isCloseable</name>
      <anchorfile>classWt_1_1WMenuItem.html</anchorfile>
      <anchor>ad2b9115e5ba70a9aaf0aefc1df196749</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>close</name>
      <anchorfile>classWt_1_1WMenuItem.html</anchorfile>
      <anchor>a9da31eaf6a40078207bbf484d21b9285</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>WMenu *</type>
      <name>parentMenu</name>
      <anchorfile>classWt_1_1WMenuItem.html</anchorfile>
      <anchor>a2da837936877d3950c1090b02c2aff88</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setContents</name>
      <anchorfile>classWt_1_1WMenuItem.html</anchorfile>
      <anchor>a26dd38b32a52ec57a0d0ffaf82291825</anchor>
      <arglist>(std::unique_ptr&lt; WWidget &gt; contents, ContentLoading policy=ContentLoading::Lazy)</arglist>
    </member>
    <member kind="function">
      <type>WWidget *</type>
      <name>contents</name>
      <anchorfile>classWt_1_1WMenuItem.html</anchorfile>
      <anchor>a6f3028261f5e555a71edbb90660cbea6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::unique_ptr&lt; WWidget &gt;</type>
      <name>removeContents</name>
      <anchorfile>classWt_1_1WMenuItem.html</anchorfile>
      <anchor>a6bcc672a56ed9258202baffe94d4763e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>select</name>
      <anchorfile>classWt_1_1WMenuItem.html</anchorfile>
      <anchor>a9acd8465249e221093f87d9a726c33af</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Signal&lt; WMenuItem * &gt; &amp;</type>
      <name>triggered</name>
      <anchorfile>classWt_1_1WMenuItem.html</anchorfile>
      <anchor>a06ceec38d6a866c0a1305f236bd712ef</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSeparator</name>
      <anchorfile>classWt_1_1WMenuItem.html</anchorfile>
      <anchor>a1d4f636181b2573d0c11b45a55d29063</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSectionHeader</name>
      <anchorfile>classWt_1_1WMenuItem.html</anchorfile>
      <anchor>ae6d32320f29d85cf62bcca31d8efab1d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WAnchor *</type>
      <name>anchor</name>
      <anchorfile>classWt_1_1WMenuItem.html</anchorfile>
      <anchor>a0726b7abb6780284b5c98004be8b6ec8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>renderSelected</name>
      <anchorfile>classWt_1_1WMenuItem.html</anchorfile>
      <anchor>a3af62f2a97827c844e021ad2dd3f6085</anchor>
      <arglist>(bool selected)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>enableAjax</name>
      <anchorfile>classWt_1_1WMenuItem.html</anchorfile>
      <anchor>aa365e8b5ec892477d55852bc3a474eb4</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setHidden</name>
      <anchorfile>classWt_1_1WMenuItem.html</anchorfile>
      <anchor>a3c5002d435dd4ddc767f22240eb80795</anchor>
      <arglist>(bool hidden, const WAnimation &amp;animation=WAnimation()) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setDisabled</name>
      <anchorfile>classWt_1_1WMenuItem.html</anchorfile>
      <anchor>ab10f5ab6950e391a6dc6ca3333e59501</anchor>
      <arglist>(bool disabled) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>render</name>
      <anchorfile>classWt_1_1WMenuItem.html</anchorfile>
      <anchor>a5a0bead426843bac2347f04a87da9943</anchor>
      <arglist>(WFlags&lt; RenderFlag &gt; flags) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WMessageBox</name>
    <filename>classWt_1_1WMessageBox.html</filename>
    <base>Wt::WDialog</base>
    <member kind="function">
      <type></type>
      <name>WMessageBox</name>
      <anchorfile>classWt_1_1WMessageBox.html</anchorfile>
      <anchor>a02fe68c3f577dad4438c85564418292f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WMessageBox</name>
      <anchorfile>classWt_1_1WMessageBox.html</anchorfile>
      <anchor>aa77b55235ca91e331c8574171caabfbb</anchor>
      <arglist>(const WString &amp;caption, const WString &amp;text, Icon icon, WFlags&lt; StandardButton &gt; buttons)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setText</name>
      <anchorfile>classWt_1_1WMessageBox.html</anchorfile>
      <anchor>aef66b54dc12ec478e218d561880254e8</anchor>
      <arglist>(const WString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>const WString &amp;</type>
      <name>text</name>
      <anchorfile>classWt_1_1WMessageBox.html</anchorfile>
      <anchor>a1fa42458495e15a18795f9630437c880</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WText *</type>
      <name>textWidget</name>
      <anchorfile>classWt_1_1WMessageBox.html</anchorfile>
      <anchor>a7a20ebbf27e37d5ab26002a641670971</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setIcon</name>
      <anchorfile>classWt_1_1WMessageBox.html</anchorfile>
      <anchor>a194dc23e212770e494d459f2426f9ae8</anchor>
      <arglist>(Icon icon)</arglist>
    </member>
    <member kind="function">
      <type>Icon</type>
      <name>icon</name>
      <anchorfile>classWt_1_1WMessageBox.html</anchorfile>
      <anchor>ac6ad8ead99abbef8382349c4d5425881</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addButton</name>
      <anchorfile>classWt_1_1WMessageBox.html</anchorfile>
      <anchor>a8a8db9e09e33716ae14be0317bf7ca67</anchor>
      <arglist>(std::unique_ptr&lt; WPushButton &gt; button, const StandardButton result)</arglist>
    </member>
    <member kind="function">
      <type>WPushButton *</type>
      <name>addButton</name>
      <anchorfile>classWt_1_1WMessageBox.html</anchorfile>
      <anchor>a9d07bb99d17c38128c79f9c7ecd42963</anchor>
      <arglist>(const WString &amp;text, StandardButton result)</arglist>
    </member>
    <member kind="function">
      <type>WPushButton *</type>
      <name>addButton</name>
      <anchorfile>classWt_1_1WMessageBox.html</anchorfile>
      <anchor>a67f1db29bc8c064222d240907412df0b</anchor>
      <arglist>(StandardButton result)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setStandardButtons</name>
      <anchorfile>classWt_1_1WMessageBox.html</anchorfile>
      <anchor>a914774b34db1a75d578366336ad73c01</anchor>
      <arglist>(WFlags&lt; StandardButton &gt; buttons)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; StandardButton &gt;</type>
      <name>standardButtons</name>
      <anchorfile>classWt_1_1WMessageBox.html</anchorfile>
      <anchor>a1ef34d123c96894aa3dc9a29d603eff0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; WPushButton * &gt;</type>
      <name>buttons</name>
      <anchorfile>classWt_1_1WMessageBox.html</anchorfile>
      <anchor>a7f587538972cb92bbdb7e0fc67b59d1a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WPushButton *</type>
      <name>button</name>
      <anchorfile>classWt_1_1WMessageBox.html</anchorfile>
      <anchor>af5c9d4221d2e1225b3fe9985072c80c6</anchor>
      <arglist>(StandardButton button)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDefaultButton</name>
      <anchorfile>classWt_1_1WMessageBox.html</anchorfile>
      <anchor>ab3e3b2aa68e821c71854eb9519839a1f</anchor>
      <arglist>(WPushButton *button)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDefaultButton</name>
      <anchorfile>classWt_1_1WMessageBox.html</anchorfile>
      <anchor>ac6086eac59d8c1acf021da5d3129edc8</anchor>
      <arglist>(StandardButton button)</arglist>
    </member>
    <member kind="function">
      <type>WPushButton *</type>
      <name>defaultButton</name>
      <anchorfile>classWt_1_1WMessageBox.html</anchorfile>
      <anchor>a311203d2f38160b9b98f7c8c4ad04d45</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setEscapeButton</name>
      <anchorfile>classWt_1_1WMessageBox.html</anchorfile>
      <anchor>afbd69b548c0d670f5de1df478a0f90c3</anchor>
      <arglist>(WPushButton *button)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setEscapeButton</name>
      <anchorfile>classWt_1_1WMessageBox.html</anchorfile>
      <anchor>aabecfe54501a8ebae1f85e55e34b6d0c</anchor>
      <arglist>(StandardButton button)</arglist>
    </member>
    <member kind="function">
      <type>WPushButton *</type>
      <name>escapeButton</name>
      <anchorfile>classWt_1_1WMessageBox.html</anchorfile>
      <anchor>ae79e9075181f6c845b23ba31314179f0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>StandardButton</type>
      <name>buttonResult</name>
      <anchorfile>classWt_1_1WMessageBox.html</anchorfile>
      <anchor>ac07ce4dd360c8305cdc1e08642e32a7c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Signal&lt; StandardButton &gt; &amp;</type>
      <name>buttonClicked</name>
      <anchorfile>classWt_1_1WMessageBox.html</anchorfile>
      <anchor>ae9d2caaa82244b2b195e9d3e011bc740</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setHidden</name>
      <anchorfile>classWt_1_1WMessageBox.html</anchorfile>
      <anchor>a4ae22bbef0f909a893bdc33c09884ed4</anchor>
      <arglist>(bool hidden, const WAnimation &amp;animation=WAnimation()) override</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static StandardButton</type>
      <name>show</name>
      <anchorfile>classWt_1_1WMessageBox.html</anchorfile>
      <anchor>ab856f77f4e4369b5864390a1192c252d</anchor>
      <arglist>(const WString &amp;caption, const WString &amp;text, WFlags&lt; StandardButton &gt; buttons, const WAnimation &amp;animation=WAnimation())</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WMessageResourceBundle</name>
    <filename>classWt_1_1WMessageResourceBundle.html</filename>
    <base>Wt::WLocalizedStrings</base>
    <member kind="function">
      <type></type>
      <name>WMessageResourceBundle</name>
      <anchorfile>classWt_1_1WMessageResourceBundle.html</anchorfile>
      <anchor>aecfe527e2123bf7793d926f71dc2ed23</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>use</name>
      <anchorfile>classWt_1_1WMessageResourceBundle.html</anchorfile>
      <anchor>a01368946b2a2aaceab3a64cddb1cb1e2</anchor>
      <arglist>(const std::string &amp;path, bool loadInMemory=true)</arglist>
    </member>
    <member kind="function">
      <type>const std::set&lt; std::string &gt;</type>
      <name>keys</name>
      <anchorfile>classWt_1_1WMessageResourceBundle.html</anchorfile>
      <anchor>aa8f88a26e6a446edb7e708f0610d935a</anchor>
      <arglist>(const WLocale &amp;locale) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>hibernate</name>
      <anchorfile>classWt_1_1WMessageResourceBundle.html</anchorfile>
      <anchor>a49ab76f26e9543dd81c3adc6e888f380</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual LocalizedString</type>
      <name>resolveKey</name>
      <anchorfile>classWt_1_1WMessageResourceBundle.html</anchorfile>
      <anchor>a226e12c90753a9543f0f18376bed7957</anchor>
      <arglist>(const WLocale &amp;locale, const std::string &amp;key) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual LocalizedString</type>
      <name>resolvePluralKey</name>
      <anchorfile>classWt_1_1WMessageResourceBundle.html</anchorfile>
      <anchor>a783dbc2d9a282d22d6932819cc99995b</anchor>
      <arglist>(const WLocale &amp;locale, const std::string &amp;key, ::uint64_t amount) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WModelIndex</name>
    <filename>classWt_1_1WModelIndex.html</filename>
    <member kind="function">
      <type></type>
      <name>WModelIndex</name>
      <anchorfile>classWt_1_1WModelIndex.html</anchorfile>
      <anchor>a29431c83f8ed71654e213ec4aae21813</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>column</name>
      <anchorfile>classWt_1_1WModelIndex.html</anchorfile>
      <anchor>ad963ed55141a0363e667ec0634b19815</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>row</name>
      <anchorfile>classWt_1_1WModelIndex.html</anchorfile>
      <anchor>a25cdcbdc2d1a0030ec37c08b39618f13</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>internalPointer</name>
      <anchorfile>classWt_1_1WModelIndex.html</anchorfile>
      <anchor>a870e6637b7beebef4f4dfaec9f08e0a2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>::uint64_t</type>
      <name>internalId</name>
      <anchorfile>classWt_1_1WModelIndex.html</anchorfile>
      <anchor>aa1373ac26110e15238bd8379fdb04c3b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WModelIndex</type>
      <name>child</name>
      <anchorfile>classWt_1_1WModelIndex.html</anchorfile>
      <anchor>a9ff7915a9594dd3e48b55341e20c9c2a</anchor>
      <arglist>(int row, int column) const</arglist>
    </member>
    <member kind="function">
      <type>WModelIndex</type>
      <name>parent</name>
      <anchorfile>classWt_1_1WModelIndex.html</anchorfile>
      <anchor>ad115129ae47879654639e6cc8c4f0f08</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>cpp17::any</type>
      <name>data</name>
      <anchorfile>classWt_1_1WModelIndex.html</anchorfile>
      <anchor>ada1e81484925d24df6081bf4fa6b7dc4</anchor>
      <arglist>(ItemDataRole role=ItemDataRole::Display) const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; ItemFlag &gt;</type>
      <name>flags</name>
      <anchorfile>classWt_1_1WModelIndex.html</anchorfile>
      <anchor>a78891aea36fddd7086016764a79c9c87</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isValid</name>
      <anchorfile>classWt_1_1WModelIndex.html</anchorfile>
      <anchor>a7abfa7fbb4385511da8cfd40c7c6838a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const WAbstractItemModel *</type>
      <name>model</name>
      <anchorfile>classWt_1_1WModelIndex.html</anchorfile>
      <anchor>a64cc420f610e1c6cae01863448f50439</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classWt_1_1WModelIndex.html</anchorfile>
      <anchor>a930100eea844de84e91bfecd0a87f601</anchor>
      <arglist>(const WModelIndex &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classWt_1_1WModelIndex.html</anchorfile>
      <anchor>a91eaf9d3c9702f0da47be0abe611bcc9</anchor>
      <arglist>(const WModelIndex &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>classWt_1_1WModelIndex.html</anchorfile>
      <anchor>aa237b853e56c535f0d0a8f95913e0847</anchor>
      <arglist>(const WModelIndex &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>encodeAsRawIndex</name>
      <anchorfile>classWt_1_1WModelIndex.html</anchorfile>
      <anchor>a93c11e136a0fdc596eb745cc7fce7033</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>WModelIndex</type>
      <name>decodeFromRawIndex</name>
      <anchorfile>classWt_1_1WModelIndex.html</anchorfile>
      <anchor>a068d2232b5ed7d2dcd9560305f82c0fe</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>depth</name>
      <anchorfile>classWt_1_1WModelIndex.html</anchorfile>
      <anchor>a6ad090ee45a97c74746397c3d937437c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>encodeAsRawIndexes</name>
      <anchorfile>classWt_1_1WModelIndex.html</anchorfile>
      <anchor>a7626f089fcd0440dff3f91a4b3ecb04e</anchor>
      <arglist>(WModelIndexSet &amp;indexes)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>encodeAsRawIndexes</name>
      <anchorfile>classWt_1_1WModelIndex.html</anchorfile>
      <anchor>afb0c3f640b43f4bca862b6cab6b3d097</anchor>
      <arglist>(std::unordered_set&lt; WModelIndex &gt; &amp;indexes)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static WModelIndexSet</type>
      <name>decodeFromRawIndexes</name>
      <anchorfile>classWt_1_1WModelIndex.html</anchorfile>
      <anchor>a14760130fe8b1abb354c6bba3d60f07b</anchor>
      <arglist>(const WModelIndexSet &amp;encodedIndexes)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::unordered_set&lt; WModelIndex &gt;</type>
      <name>decodeFromRawIndexes</name>
      <anchorfile>classWt_1_1WModelIndex.html</anchorfile>
      <anchor>a4d1a0ec7968d499def12ba31a8a16f20</anchor>
      <arglist>(const std::unordered_set&lt; WModelIndex &gt; &amp;encodedIndexes)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>isAncestor</name>
      <anchorfile>classWt_1_1WModelIndex.html</anchorfile>
      <anchor>abe65ea47581a12a7db6caa9c0b2f8bec</anchor>
      <arglist>(const Wt::WModelIndex &amp;i1, const Wt::WModelIndex &amp;i2)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WMouseEvent</name>
    <filename>classWt_1_1WMouseEvent.html</filename>
    <member kind="typedef">
      <type>MouseButton</type>
      <name>Button</name>
      <anchorfile>classWt_1_1WMouseEvent.html</anchorfile>
      <anchor>a3a4f453ea78d622f49ea511a76619bfd</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WMouseEvent</name>
      <anchorfile>classWt_1_1WMouseEvent.html</anchorfile>
      <anchor>ad99367bf6494aea5f92869d32aaecf1d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>MouseButton</type>
      <name>button</name>
      <anchorfile>classWt_1_1WMouseEvent.html</anchorfile>
      <anchor>ab4b8f7e843155aa332286fa68adbe368</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; KeyboardModifier &gt;</type>
      <name>modifiers</name>
      <anchorfile>classWt_1_1WMouseEvent.html</anchorfile>
      <anchor>a546499e074ae403057f5acda1da1be0f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Coordinates</type>
      <name>document</name>
      <anchorfile>classWt_1_1WMouseEvent.html</anchorfile>
      <anchor>ab65542f4ee6329fe594944954976bb25</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Coordinates</type>
      <name>window</name>
      <anchorfile>classWt_1_1WMouseEvent.html</anchorfile>
      <anchor>abfa7be0f3e499485d4bc53bb64d5c606</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Coordinates</type>
      <name>screen</name>
      <anchorfile>classWt_1_1WMouseEvent.html</anchorfile>
      <anchor>a98d2965cb3dd83548a33f967d7d4ebb9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Coordinates</type>
      <name>widget</name>
      <anchorfile>classWt_1_1WMouseEvent.html</anchorfile>
      <anchor>a8c61277b23c16c218761cadbb78e4964</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Coordinates</type>
      <name>dragDelta</name>
      <anchorfile>classWt_1_1WMouseEvent.html</anchorfile>
      <anchor>ae9de259c35eb22c4f70573305aa35d8a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>wheelDelta</name>
      <anchorfile>classWt_1_1WMouseEvent.html</anchorfile>
      <anchor>a717d7edf23c9445d53cfa4bb19784e55</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WNavigationBar</name>
    <filename>classWt_1_1WNavigationBar.html</filename>
    <base>Wt::WTemplate</base>
    <member kind="function">
      <type></type>
      <name>WNavigationBar</name>
      <anchorfile>classWt_1_1WNavigationBar.html</anchorfile>
      <anchor>a29599e067a48031ecb4a5422d6ce651f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTitle</name>
      <anchorfile>classWt_1_1WNavigationBar.html</anchorfile>
      <anchor>a6628aa230d167803d3ea182b383c3e86</anchor>
      <arglist>(const WString &amp;title, const WLink &amp;link=WLink())</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setResponsive</name>
      <anchorfile>classWt_1_1WNavigationBar.html</anchorfile>
      <anchor>af5cb03ab2009b350f857693735c0c7da</anchor>
      <arglist>(bool responsive)</arglist>
    </member>
    <member kind="function">
      <type>WMenu *</type>
      <name>addMenu</name>
      <anchorfile>classWt_1_1WNavigationBar.html</anchorfile>
      <anchor>a7483b0b6255cc116b15abf90cb5f2e10</anchor>
      <arglist>(std::unique_ptr&lt; WMenu &gt; menu, AlignmentFlag alignment=AlignmentFlag::Left)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addFormField</name>
      <anchorfile>classWt_1_1WNavigationBar.html</anchorfile>
      <anchor>ac1ee02c6fe9c180209c9ef0599660fb2</anchor>
      <arglist>(std::unique_ptr&lt; WWidget &gt; widget, AlignmentFlag alignment=AlignmentFlag::Left)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addSearch</name>
      <anchorfile>classWt_1_1WNavigationBar.html</anchorfile>
      <anchor>ac14172d9ee5578f7b14d7f6e49dcfbd9</anchor>
      <arglist>(std::unique_ptr&lt; WLineEdit &gt; field, AlignmentFlag alignment=AlignmentFlag::Left)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addWidget</name>
      <anchorfile>classWt_1_1WNavigationBar.html</anchorfile>
      <anchor>a8e0eda8817e9fff024cedd1b56508d0b</anchor>
      <arglist>(std::unique_ptr&lt; WWidget &gt; widget, AlignmentFlag alignment=AlignmentFlag::Left)</arglist>
    </member>
    <member kind="function">
      <type>Widget *</type>
      <name>addWidget</name>
      <anchorfile>classWt_1_1WNavigationBar.html</anchorfile>
      <anchor>a140ff85c695f9bc64728814a36e6e02e</anchor>
      <arglist>(std::unique_ptr&lt; Widget &gt; widget)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WObject</name>
    <filename>classWt_1_1WObject.html</filename>
    <base>Wt::Core::observable</base>
    <member kind="typedef">
      <type>void(WObject::*</type>
      <name>Method</name>
      <anchorfile>classWt_1_1WObject.html</anchorfile>
      <anchor>aec904644d278b09d3f7e568fd2efd400</anchor>
      <arglist>)()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addChild</name>
      <anchorfile>classWt_1_1WObject.html</anchorfile>
      <anchor>a3de0f0baf35f42aa4e77a90d427f2e11</anchor>
      <arglist>(std::unique_ptr&lt; WObject &gt; child)</arglist>
    </member>
    <member kind="function">
      <type>Child *</type>
      <name>addChild</name>
      <anchorfile>classWt_1_1WObject.html</anchorfile>
      <anchor>a73777218b9a77b674e15a62d14eab734</anchor>
      <arglist>(std::unique_ptr&lt; Child &gt; child)</arglist>
    </member>
    <member kind="function">
      <type>std::unique_ptr&lt; WObject &gt;</type>
      <name>removeChild</name>
      <anchorfile>classWt_1_1WObject.html</anchorfile>
      <anchor>aefa0be99eb16e31e54e554750079609d</anchor>
      <arglist>(WObject *child)</arglist>
    </member>
    <member kind="function">
      <type>std::unique_ptr&lt; Child &gt;</type>
      <name>removeChild</name>
      <anchorfile>classWt_1_1WObject.html</anchorfile>
      <anchor>a00f32a263b742f42b73a9353eaa3c7ca</anchor>
      <arglist>(Child *child)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const std::string</type>
      <name>id</name>
      <anchorfile>classWt_1_1WObject.html</anchorfile>
      <anchor>a5cc0bb93481aed2fe895b01a85fe8ee0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setObjectName</name>
      <anchorfile>classWt_1_1WObject.html</anchorfile>
      <anchor>a64ce31cadb378c4eba81224f43bf493d</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>objectName</name>
      <anchorfile>classWt_1_1WObject.html</anchorfile>
      <anchor>a00e53a4012944b9c0156581d7940674b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetLearnedSlots</name>
      <anchorfile>classWt_1_1WObject.html</anchorfile>
      <anchor>a92d8b00edc79b7a60d41d7c088f50436</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetLearnedSlot</name>
      <anchorfile>classWt_1_1WObject.html</anchorfile>
      <anchor>a5c7dcd5a60c88e5b36f0c8e0f9117698</anchor>
      <arglist>(void(T::*method)())</arglist>
    </member>
    <member kind="function">
      <type>WStatelessSlot *</type>
      <name>implementStateless</name>
      <anchorfile>classWt_1_1WObject.html</anchorfile>
      <anchor>adaa163b9e92933f3b2ff4ec58e2734c6</anchor>
      <arglist>(void(T::*method)())</arglist>
    </member>
    <member kind="function">
      <type>WStatelessSlot *</type>
      <name>implementStateless</name>
      <anchorfile>classWt_1_1WObject.html</anchorfile>
      <anchor>a7bf46fd1437f07150a9dd95bd95c266d</anchor>
      <arglist>(void(T::*method)(), void(T::*undoMethod)())</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>isNotStateless</name>
      <anchorfile>classWt_1_1WObject.html</anchorfile>
      <anchor>a6dde4ce1e833a9966709daf3c0dedc9f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>WStatelessSlot *</type>
      <name>implementJavaScript</name>
      <anchorfile>classWt_1_1WObject.html</anchorfile>
      <anchor>a214deee5d7324b9afd4ce44534daa782</anchor>
      <arglist>(void(T::*method)(), const std::string &amp;jsCode)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual WStatelessSlot *</type>
      <name>getStateless</name>
      <anchorfile>classWt_1_1WObject.html</anchorfile>
      <anchor>aae1e4d3444723814adfc9717e14b693a</anchor>
      <arglist>(Method method)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WOverlayLoadingIndicator</name>
    <filename>classWt_1_1WOverlayLoadingIndicator.html</filename>
    <base>Wt::WLoadingIndicator</base>
    <member kind="function">
      <type></type>
      <name>WOverlayLoadingIndicator</name>
      <anchorfile>classWt_1_1WOverlayLoadingIndicator.html</anchorfile>
      <anchor>a1070617b610083d12d150d5a7c3f37a3</anchor>
      <arglist>(const WString &amp;styleClass=WString(), const WString &amp;backgroundStyleClass=WString(), const WString &amp;textStyleClass=WString())</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setMessage</name>
      <anchorfile>classWt_1_1WOverlayLoadingIndicator.html</anchorfile>
      <anchor>a8dcfb6886cfeb9e8216aebcd04a262f4</anchor>
      <arglist>(const WString &amp;text) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WPaintDevice</name>
    <filename>classWt_1_1WPaintDevice.html</filename>
    <member kind="typedef">
      <type>PaintDeviceFeatureFlag</type>
      <name>FeatureFlag</name>
      <anchorfile>classWt_1_1WPaintDevice.html</anchorfile>
      <anchor>a759e4f5ee1b494134b709c8320f1fd9f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~WPaintDevice</name>
      <anchorfile>classWt_1_1WPaintDevice.html</anchorfile>
      <anchor>a239035e9459e17407da0c8e2d28715bd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual WFlags&lt; PaintDeviceFeatureFlag &gt;</type>
      <name>features</name>
      <anchorfile>classWt_1_1WPaintDevice.html</anchorfile>
      <anchor>ac820523c39d0007e6ac83166aab10b2d</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual WLength</type>
      <name>width</name>
      <anchorfile>classWt_1_1WPaintDevice.html</anchorfile>
      <anchor>a9a0d38acb408d4520d0dd520c93d47e0</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual WLength</type>
      <name>height</name>
      <anchorfile>classWt_1_1WPaintDevice.html</anchorfile>
      <anchor>a24c7e1363440e6994b44381ebf443157</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setChanged</name>
      <anchorfile>classWt_1_1WPaintDevice.html</anchorfile>
      <anchor>ae79cffac9e666ec6a62d96b73fd2a996</anchor>
      <arglist>(WFlags&lt; PainterChangeFlag &gt; flags)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>drawArc</name>
      <anchorfile>classWt_1_1WPaintDevice.html</anchorfile>
      <anchor>a605316797b1aa4be60c24d95fc5a1ab4</anchor>
      <arglist>(const WRectF &amp;rect, double startAngle, double spanAngle)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>drawImage</name>
      <anchorfile>classWt_1_1WPaintDevice.html</anchorfile>
      <anchor>af92ff3c6d2f5c351c6931306d9cc1162</anchor>
      <arglist>(const WRectF &amp;rect, const std::string &amp;imageUri, int imgWidth, int imgHeight, const WRectF &amp;sourceRect)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>drawLine</name>
      <anchorfile>classWt_1_1WPaintDevice.html</anchorfile>
      <anchor>abd267ca3adb6c394079042810864ac9a</anchor>
      <arglist>(double x1, double y1, double x2, double y2)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>drawPath</name>
      <anchorfile>classWt_1_1WPaintDevice.html</anchorfile>
      <anchor>ab3c368b79fef8bc53681821610dd2077</anchor>
      <arglist>(const WPainterPath &amp;path)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>drawRect</name>
      <anchorfile>classWt_1_1WPaintDevice.html</anchorfile>
      <anchor>a1ef00ae9ef4506ab8a151810fc01b10c</anchor>
      <arglist>(const WRectF &amp;rectangle)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>drawText</name>
      <anchorfile>classWt_1_1WPaintDevice.html</anchorfile>
      <anchor>a970d7bcaa7d6b26c0134b7479626aea3</anchor>
      <arglist>(const WRectF &amp;rect, WFlags&lt; AlignmentFlag &gt; alignmentFlags, TextFlag textFlag, const WString &amp;text, const WPointF *clipPoint)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual WTextItem</type>
      <name>measureText</name>
      <anchorfile>classWt_1_1WPaintDevice.html</anchorfile>
      <anchor>a21d005287f1973348357e089d6d18df1</anchor>
      <arglist>(const WString &amp;text, double maxWidth=-1, bool wordWrap=false)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual WFontMetrics</type>
      <name>fontMetrics</name>
      <anchorfile>classWt_1_1WPaintDevice.html</anchorfile>
      <anchor>a468ec8684106f8e24b3c46876ee86ff7</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>init</name>
      <anchorfile>classWt_1_1WPaintDevice.html</anchorfile>
      <anchor>a04d6f9e0653a9785662c1e987b597cc6</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>done</name>
      <anchorfile>classWt_1_1WPaintDevice.html</anchorfile>
      <anchor>a75827be2076716985533dbc75dfdc512</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>paintActive</name>
      <anchorfile>classWt_1_1WPaintDevice.html</anchorfile>
      <anchor>a7dc74a2c7c98e38c7851277313d313f6</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual WPainter *</type>
      <name>painter</name>
      <anchorfile>classWt_1_1WPaintDevice.html</anchorfile>
      <anchor>ae1c75c6bc0e5a2d6322b176f6f13403c</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>setPainter</name>
      <anchorfile>classWt_1_1WPaintDevice.html</anchorfile>
      <anchor>a8ac85385056ee15548f50f0ba4f94837</anchor>
      <arglist>(WPainter *painter)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WPaintedWidget</name>
    <filename>classWt_1_1WPaintedWidget.html</filename>
    <base>Wt::WInteractWidget</base>
    <member kind="function">
      <type></type>
      <name>WPaintedWidget</name>
      <anchorfile>classWt_1_1WPaintedWidget.html</anchorfile>
      <anchor>a8ef1657d6f14984dcfd62fa540cbf91d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WPaintedWidget</name>
      <anchorfile>classWt_1_1WPaintedWidget.html</anchorfile>
      <anchor>a3e28c52034a50cb9c2c2e7a9e979a90c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPreferredMethod</name>
      <anchorfile>classWt_1_1WPaintedWidget.html</anchorfile>
      <anchor>a18d1ee409a269274335d377fb17ba74d</anchor>
      <arglist>(RenderMethod method)</arglist>
    </member>
    <member kind="function">
      <type>RenderMethod</type>
      <name>preferredMethod</name>
      <anchorfile>classWt_1_1WPaintedWidget.html</anchorfile>
      <anchor>acb362c868d76b506aff5a2b3b794dcc5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update</name>
      <anchorfile>classWt_1_1WPaintedWidget.html</anchorfile>
      <anchor>ab4bcfb99b24bcc629be79750fa98f983</anchor>
      <arglist>(WFlags&lt; PaintFlag &gt; flags=None)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>resize</name>
      <anchorfile>classWt_1_1WPaintedWidget.html</anchorfile>
      <anchor>a679f0f1db2d9f1cbc4cbede44ea14b57</anchor>
      <arglist>(const WLength &amp;width, const WLength &amp;height) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addArea</name>
      <anchorfile>classWt_1_1WPaintedWidget.html</anchorfile>
      <anchor>aeb55926a5ab07a9db69ac3992c9328cc</anchor>
      <arglist>(std::unique_ptr&lt; WAbstractArea &gt; area)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertArea</name>
      <anchorfile>classWt_1_1WPaintedWidget.html</anchorfile>
      <anchor>a8ee3528550957d913e0f2f3740a31fe7</anchor>
      <arglist>(int index, std::unique_ptr&lt; WAbstractArea &gt; area)</arglist>
    </member>
    <member kind="function">
      <type>std::unique_ptr&lt; WAbstractArea &gt;</type>
      <name>removeArea</name>
      <anchorfile>classWt_1_1WPaintedWidget.html</anchorfile>
      <anchor>ac2e4e8af470aad95ffd0381f4909bc6b</anchor>
      <arglist>(WAbstractArea *area)</arglist>
    </member>
    <member kind="function">
      <type>WAbstractArea *</type>
      <name>area</name>
      <anchorfile>classWt_1_1WPaintedWidget.html</anchorfile>
      <anchor>a9777a2ca5bde613a605b3d79787f1a71</anchor>
      <arglist>(int index) const</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; WAbstractArea * &gt;</type>
      <name>areas</name>
      <anchorfile>classWt_1_1WPaintedWidget.html</anchorfile>
      <anchor>a6eccdf73e5e0f5157287e9001620aff8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>JSlot &amp;</type>
      <name>repaintSlot</name>
      <anchorfile>classWt_1_1WPaintedWidget.html</anchorfile>
      <anchor>a4b36f95fcbc263c99fc92d24d2df8560</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>WJavaScriptHandle&lt; WTransform &gt;</type>
      <name>createJSTransform</name>
      <anchorfile>classWt_1_1WPaintedWidget.html</anchorfile>
      <anchor>a6265ca89479e850f56e4f478c8bfc4fe</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>WJavaScriptHandle&lt; WBrush &gt;</type>
      <name>createJSBrush</name>
      <anchorfile>classWt_1_1WPaintedWidget.html</anchorfile>
      <anchor>ab1d9987d6c2c5e9487f1f3aece22e17f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>WJavaScriptHandle&lt; WPen &gt;</type>
      <name>createJSPen</name>
      <anchorfile>classWt_1_1WPaintedWidget.html</anchorfile>
      <anchor>a0d7f896e233e22476f322915116fd8ed</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>WJavaScriptHandle&lt; WPainterPath &gt;</type>
      <name>createJSPainterPath</name>
      <anchorfile>classWt_1_1WPaintedWidget.html</anchorfile>
      <anchor>afc5e4a3344e33ff3e1c8b91b14b87b75</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>WJavaScriptHandle&lt; WRectF &gt;</type>
      <name>createJSRect</name>
      <anchorfile>classWt_1_1WPaintedWidget.html</anchorfile>
      <anchor>aa3186345896b99c6fa926b8826149c40</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>WJavaScriptHandle&lt; WPointF &gt;</type>
      <name>createJSPoint</name>
      <anchorfile>classWt_1_1WPaintedWidget.html</anchorfile>
      <anchor>ad96b6ee6dffa9ad4cf54c179dcdc1445</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>layoutSizeChanged</name>
      <anchorfile>classWt_1_1WPaintedWidget.html</anchorfile>
      <anchor>a553d034d2c1930d4ac437f662bf3abdd</anchor>
      <arglist>(int width, int height) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual RenderMethod</type>
      <name>getMethod</name>
      <anchorfile>classWt_1_1WPaintedWidget.html</anchorfile>
      <anchor>a81a53e0d997e0799286183eb965489e0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>paintEvent</name>
      <anchorfile>classWt_1_1WPaintedWidget.html</anchorfile>
      <anchor>ad8ce22eff41754c8616f45851f57fb1a</anchor>
      <arglist>(WPaintDevice *paintDevice)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual std::unique_ptr&lt; WPaintDevice &gt;</type>
      <name>createPaintDevice</name>
      <anchorfile>classWt_1_1WPaintedWidget.html</anchorfile>
      <anchor>ad419e65a542dfbb9b317011dd03315a6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>enableAjax</name>
      <anchorfile>classWt_1_1WPaintedWidget.html</anchorfile>
      <anchor>aed27fce7e583709d6d4866ed780b7e52</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>render</name>
      <anchorfile>classWt_1_1WPaintedWidget.html</anchorfile>
      <anchor>aaacfd5e5cc2e10d6c76d95536dbad502</anchor>
      <arglist>(WFlags&lt; RenderFlag &gt; flags) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::string</type>
      <name>objJsRef</name>
      <anchorfile>classWt_1_1WPaintedWidget.html</anchorfile>
      <anchor>af4b78fffd072fbdeea178bb865cec036</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WPainter</name>
    <filename>classWt_1_1WPainter.html</filename>
    <class kind="class">Wt::WPainter::Image</class>
    <member kind="typedef">
      <type>PainterChangeFlag</type>
      <name>ChangeFlag</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>acf45aaa7e1b9acc391a19f4ec8dadc92</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WPainter</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>a420b1e54536d4815534f31208a825b54</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WPainter</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>aa9e93aac4be32b5c0943360d9cf8c1cc</anchor>
      <arglist>(WPaintDevice *device)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WPainter</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>a611557a8722bc49df70a1a2dd79628c7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>begin</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>a6b81663b5599f0736ae5099ac7325d44</anchor>
      <arglist>(WPaintDevice *device)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isActive</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>a778dd28ce072446a3fed66abec04abc6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>end</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>a50beb0c8cb77c12e2dee807e4fe4bcb4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>WPaintDevice *</type>
      <name>device</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>aae6b14e85ec1926aa60f603cb422ffc8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRenderHint</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>af859825a00ff428e773c2abeb328f078</anchor>
      <arglist>(RenderHint hint, bool on=true)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; RenderHint &gt;</type>
      <name>renderHints</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>a2aebe42c09c957d70069e487fb71f11a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawArc</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>aa79220ed9456f67a393009e5c5eea27e</anchor>
      <arglist>(const WRectF &amp;rectangle, int startAngle, int spanAngle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawArc</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>a96c03e411d46cd720f454504f53491bd</anchor>
      <arglist>(double x, double y, double width, double height, int startAngle, int spanAngle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawChord</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>aa34b0972745692d55bc03ff1c57f1f4c</anchor>
      <arglist>(const WRectF &amp;rectangle, int startAngle, int spanAngle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawChord</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>ac8735155d03ab0332a66880e251b0fc2</anchor>
      <arglist>(double x, double y, double width, double height, int startAngle, int spanAngle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawEllipse</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>a5a1969356a8edae0cdd3abfc141082a7</anchor>
      <arglist>(const WRectF &amp;rectangle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawEllipse</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>ac46f725e54280bd6ace0e941eced790c</anchor>
      <arglist>(double x, double y, double width, double height)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawImage</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>ae36e5ce0c6a324ec83ebbc397a513202</anchor>
      <arglist>(const WPointF &amp;point, const Image &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawImage</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>ad69c06dbcb10d8f12bce1c369ae34c31</anchor>
      <arglist>(const WPointF &amp;point, const Image &amp;image, const WRectF &amp;sourceRect)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawImage</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>aaf6ea6a37b0fd8244d1b7afa3c24b55c</anchor>
      <arglist>(const WRectF &amp;rect, const Image &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawImage</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>a58a14d4610582eed6c76e0bda6117e3d</anchor>
      <arglist>(const WRectF &amp;rect, const Image &amp;image, const WRectF &amp;sourceRect)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawImage</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>a508b7828bbbf5805838a30a830c34f36</anchor>
      <arglist>(double x, double y, const Image &amp;image, double sx=0, double sy=0, double sw=-1, double sh=-1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawLine</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>a259601487cb2ec23a2f6f3d64c0c5913</anchor>
      <arglist>(const WLineF &amp;line)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawLine</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>a1c9ad3f225f7ca93800431adfc5731f0</anchor>
      <arglist>(const WPointF &amp;p1, const WPointF &amp;p2)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawLine</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>ab596b1cfa230d37e9c429adde84d5985</anchor>
      <arglist>(double x1, double y1, double x2, double y2)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawLines</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>a3b25c4144914fe09ca3b3cb63979bd69</anchor>
      <arglist>(const WLineF *lines, int lineCount)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawLines</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>ae1ac3c9c64907e53817ca5a28ead70d2</anchor>
      <arglist>(const WPointF *pointPairs, int lineCount)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawLines</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>aebfb0fc62a58789f7b21650485ef9985</anchor>
      <arglist>(const std::vector&lt; WLineF &gt; &amp;lines)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawLines</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>a762442b01f5603492e9673cb84081596</anchor>
      <arglist>(const std::vector&lt; WPointF &gt; &amp;pointPairs)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawPath</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>a2ef57868d6fbf99a901cbe1f29723b50</anchor>
      <arglist>(const WPainterPath &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawStencilAlongPath</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>abccad19493d7461ca08c9e50ad7326f1</anchor>
      <arglist>(const WPainterPath &amp;stencil, const WPainterPath &amp;path, bool softClipping=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawPie</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>a5c46ed008445a80feb258774a3af3b62</anchor>
      <arglist>(const WRectF &amp;rectangle, int startAngle, int spanAngle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawPie</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>a3d8bc8608db5dad5e8d499b0fed58b85</anchor>
      <arglist>(double x, double y, double width, double height, int startAngle, int spanAngle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawPoint</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>aca2e989c3cd9bc635e6d13786cc73119</anchor>
      <arglist>(const WPointF &amp;position)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawPoint</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>a9159b8ae72494b4973642143296daa96</anchor>
      <arglist>(double x, double y)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawPoints</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>abe40c21da61567a23b04c81c9ea038b2</anchor>
      <arglist>(const WPointF *points, int pointCount)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawPolygon</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>a82600053c72a0f939eb37ab45f2c1f3e</anchor>
      <arglist>(const WPointF *points, int pointCount)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawPolyline</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>abbc6b39bef49d5fc67e09953fbcd4faa</anchor>
      <arglist>(const WPointF *points, int pointCount)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawRect</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>ad1fcb68312327194b3dccc67adc3bd33</anchor>
      <arglist>(const WRectF &amp;rectangle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawRect</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>a368289c57968343089d82c26acc62ca6</anchor>
      <arglist>(double x, double y, double width, double height)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawRects</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>a14fa5d0d5f3a05f8279bb0b4a06a8671</anchor>
      <arglist>(const WRectF *rectangles, int rectCount)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawRects</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>a36818dd1aea0c8f50dc0385dca39a6b8</anchor>
      <arglist>(const std::vector&lt; WRectF &gt; &amp;rectangles)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawText</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>afc7fee7dc4d839f78c1c99244da4f486</anchor>
      <arglist>(const WRectF &amp;rect, WFlags&lt; AlignmentFlag &gt; alignmentFlags, TextFlag textFlag, const WString &amp;text, const WPointF *clipPoint=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawText</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>a8565a90a75207b318a2ff608e19df806</anchor>
      <arglist>(const WRectF &amp;rectangle, WFlags&lt; AlignmentFlag &gt; flags, const WString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawText</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>ae2a04838933687fd0791e1187b28fdca</anchor>
      <arglist>(double x, double y, double width, double height, WFlags&lt; AlignmentFlag &gt; flags, const WString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawText</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>aa6a327223e1b5b09db4dfb20bd00ce99</anchor>
      <arglist>(double x, double y, double width, double height, WFlags&lt; AlignmentFlag &gt; alignmentFlags, TextFlag textFlag, const WString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fillPath</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>a761f8f85d14fe171fcc91823bc4dab5c</anchor>
      <arglist>(const WPainterPath &amp;path, const WBrush &amp;brush)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fillRect</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>a4b9ce79b5abd8584fd2cf85876ab140f</anchor>
      <arglist>(const WRectF &amp;rectangle, const WBrush &amp;brush)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fillRect</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>ac99ee3d64df9742e167c01d750c899be</anchor>
      <arglist>(double x, double y, double width, double height, const WBrush &amp;brush)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>strokePath</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>a93cb3a37591c6dde4f006e8eada2d1f8</anchor>
      <arglist>(const WPainterPath &amp;path, const WPen &amp;pen)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setShadow</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>a9c727b82879ab055f3fcf4c9cdfc1f8d</anchor>
      <arglist>(const WShadow &amp;shadow)</arglist>
    </member>
    <member kind="function">
      <type>const WShadow &amp;</type>
      <name>shadow</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>aaa5aed8b454e39316c4b78e0ffe57dff</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBrush</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>ad63f01349e9163992d440e9aa85f916b</anchor>
      <arglist>(const WBrush &amp;brush)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFont</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>ad9cac6c8eaba94226f54343cde9676ea</anchor>
      <arglist>(const WFont &amp;font)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPen</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>a159ebf24df790e409d4060f7bd4aa725</anchor>
      <arglist>(const WPen &amp;pen)</arglist>
    </member>
    <member kind="function">
      <type>const WBrush &amp;</type>
      <name>brush</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>aab2962a34bb1fe9bf9cd4328999203fe</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const WFont &amp;</type>
      <name>font</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>a4d4278fb25293129d93b20cdab059827</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const WPen &amp;</type>
      <name>pen</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>a990bd8bef109cb8d97768b50975ca832</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setClipping</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>a4163898f999d4ecafec52c3f8890f380</anchor>
      <arglist>(bool enable)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasClipping</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>a98d222b9577e75b17fc4629e4caeb387</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setClipPath</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>a65be44d995c5f06f065f68d15c8889a5</anchor>
      <arglist>(const WPainterPath &amp;clipPath)</arglist>
    </member>
    <member kind="function">
      <type>WPainterPath</type>
      <name>clipPath</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>a255605d5f7c6425192cdd33ef64904b6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetTransform</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>ac0cc4dedd2cf8801e12d7550bce2a2c1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>rotate</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>ab6d68d362e43f8e8df7e4400e2324d8e</anchor>
      <arglist>(double angle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scale</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>a0167a7c8c8d72ee0cca6f735b65a7938</anchor>
      <arglist>(double sx, double sy)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>translate</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>aaf5755eca15cb6e73fc24edf3bbd5758</anchor>
      <arglist>(const WPointF &amp;offset)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>translate</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>aef98cc3b4fa2da57efc9721a8bd2a6e5</anchor>
      <arglist>(double dx, double dy)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setWorldTransform</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>ac0aa03db16f695b9bec3ef38588a5f3e</anchor>
      <arglist>(const WTransform &amp;matrix, bool combine=false)</arglist>
    </member>
    <member kind="function">
      <type>const WTransform &amp;</type>
      <name>worldTransform</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>a0a509496b00579ec993d91850c44e05d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>save</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>a0262e162bb4be43f800c6c7b784c8d7a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>restore</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>a3fd8699e88d695cfd10043d18a666991</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setViewPort</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>a70dcfbed2b7bdeb39ddbc7f213b5a9ce</anchor>
      <arglist>(const WRectF &amp;viewPort)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setViewPort</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>afd9272b6a583b273a64105e88fb65e42</anchor>
      <arglist>(double x, double y, double width, double height)</arglist>
    </member>
    <member kind="function">
      <type>WRectF</type>
      <name>viewPort</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>a08c013cf3c07170319c48318bc586dc0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setWindow</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>af223eea7db8164e404f6725705569fa6</anchor>
      <arglist>(const WRectF &amp;window)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setWindow</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>a7d56a3fb66457c02584aa4bed8ce6023</anchor>
      <arglist>(double x, double y, double width, double height)</arglist>
    </member>
    <member kind="function">
      <type>WRectF</type>
      <name>window</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>a8d3d36b7be094fad53559c44239543dc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WTransform</type>
      <name>combinedTransform</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>a4e330319179120cb1e7dea582a39ebc3</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WPainterPath</name>
    <filename>classWt_1_1WPainterPath.html</filename>
    <base>Wt::WJavaScriptExposableObject</base>
    <class kind="class">Wt::WPainterPath::Segment</class>
    <member kind="function">
      <type></type>
      <name>WPainterPath</name>
      <anchorfile>classWt_1_1WPainterPath.html</anchorfile>
      <anchor>ace0add71a1ebc8b45a821aa8d70d3e3f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WPainterPath</name>
      <anchorfile>classWt_1_1WPainterPath.html</anchorfile>
      <anchor>a364b46c7a45bcb18e235ec0b41268a15</anchor>
      <arglist>(const WPointF &amp;startPoint)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WPainterPath</name>
      <anchorfile>classWt_1_1WPainterPath.html</anchorfile>
      <anchor>abea96512cd12bc8630f81b2ed91deb80</anchor>
      <arglist>(const WPainterPath &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>WPainterPath &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1WPainterPath.html</anchorfile>
      <anchor>ab9efa54a1626d775bc208bf3caef10db</anchor>
      <arglist>(const WPainterPath &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>WPointF</type>
      <name>currentPosition</name>
      <anchorfile>classWt_1_1WPainterPath.html</anchorfile>
      <anchor>a48d9c7a609c89586994417781958d562</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEmpty</name>
      <anchorfile>classWt_1_1WPainterPath.html</anchorfile>
      <anchor>a1b52e2020b3bd8cd5c8920435d95162a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classWt_1_1WPainterPath.html</anchorfile>
      <anchor>a6bea4a60141e2fa67182e4f43432bcf6</anchor>
      <arglist>(const WPainterPath &amp;path) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classWt_1_1WPainterPath.html</anchorfile>
      <anchor>a3628947c19c248bb6b498fc872430eb0</anchor>
      <arglist>(const WPainterPath &amp;path) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>closeSubPath</name>
      <anchorfile>classWt_1_1WPainterPath.html</anchorfile>
      <anchor>a9db15664f1cea3f12a2c7ab1337a343b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>moveTo</name>
      <anchorfile>classWt_1_1WPainterPath.html</anchorfile>
      <anchor>a9801a3988b2a57c412ba175142d2e3ff</anchor>
      <arglist>(const WPointF &amp;point)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>moveTo</name>
      <anchorfile>classWt_1_1WPainterPath.html</anchorfile>
      <anchor>a2cdd1952ade53cc4b2f2a0146fc8c00f</anchor>
      <arglist>(double x, double y)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>lineTo</name>
      <anchorfile>classWt_1_1WPainterPath.html</anchorfile>
      <anchor>ac52bacd9bb3b07043e56be2af56f7f66</anchor>
      <arglist>(const WPointF &amp;point)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>lineTo</name>
      <anchorfile>classWt_1_1WPainterPath.html</anchorfile>
      <anchor>aafdba97cf01c017fa9e8f18169c7a205</anchor>
      <arglist>(double x, double y)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>cubicTo</name>
      <anchorfile>classWt_1_1WPainterPath.html</anchorfile>
      <anchor>ac5a13ec3faf642cd05a57988366e005f</anchor>
      <arglist>(const WPointF &amp;c1, const WPointF &amp;c2, const WPointF &amp;endPoint)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>cubicTo</name>
      <anchorfile>classWt_1_1WPainterPath.html</anchorfile>
      <anchor>ad751c7f66795ecdbe1fc7098dc11977b</anchor>
      <arglist>(double c1x, double c1y, double c2x, double c2y, double endPointx, double endPointy)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>arcTo</name>
      <anchorfile>classWt_1_1WPainterPath.html</anchorfile>
      <anchor>aa32b8c9d89712a5cad37325cbba099c0</anchor>
      <arglist>(double cx, double cy, double radius, double startAngle, double spanAngle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>arcMoveTo</name>
      <anchorfile>classWt_1_1WPainterPath.html</anchorfile>
      <anchor>a6e4d29695685a08198be2c2dff53e49c</anchor>
      <arglist>(double cx, double cy, double radius, double angle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>arcMoveTo</name>
      <anchorfile>classWt_1_1WPainterPath.html</anchorfile>
      <anchor>a366810aa107d35409f9fbd33b8e91dbb</anchor>
      <arglist>(double x, double y, double width, double height, double angle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>quadTo</name>
      <anchorfile>classWt_1_1WPainterPath.html</anchorfile>
      <anchor>a5cf7125271a74e15a52db05876b8c878</anchor>
      <arglist>(const WPointF &amp;c, const WPointF &amp;endPoint)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>quadTo</name>
      <anchorfile>classWt_1_1WPainterPath.html</anchorfile>
      <anchor>a2eaf3d30b6cf1590a3f368b8b94d49ca</anchor>
      <arglist>(double cx, double cy, double endPointx, double endPointy)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addEllipse</name>
      <anchorfile>classWt_1_1WPainterPath.html</anchorfile>
      <anchor>ae8783aad1c538e0180b2323a3a926999</anchor>
      <arglist>(const WRectF &amp;boundingRectangle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addEllipse</name>
      <anchorfile>classWt_1_1WPainterPath.html</anchorfile>
      <anchor>a3dadfaa8235becb01221431d1f1a97d6</anchor>
      <arglist>(double x, double y, double width, double height)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addRect</name>
      <anchorfile>classWt_1_1WPainterPath.html</anchorfile>
      <anchor>a52f1c2008c15cd133e8fb405d8b0466b</anchor>
      <arglist>(const WRectF &amp;rectangle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addRect</name>
      <anchorfile>classWt_1_1WPainterPath.html</anchorfile>
      <anchor>ab5b658698acf7a87948e7c0adf6c1151</anchor>
      <arglist>(double x, double y, double width, double height)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addPolygon</name>
      <anchorfile>classWt_1_1WPainterPath.html</anchorfile>
      <anchor>abb60a8df2d09df52f8ece78be06bda14</anchor>
      <arglist>(const std::vector&lt; WPointF &gt; &amp;points)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addPath</name>
      <anchorfile>classWt_1_1WPainterPath.html</anchorfile>
      <anchor>a8f2e9933f699b967fe5776c98080a410</anchor>
      <arglist>(const WPainterPath &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>connectPath</name>
      <anchorfile>classWt_1_1WPainterPath.html</anchorfile>
      <anchor>a7a5d7f8d62eda600ab05926c8f8014be</anchor>
      <arglist>(const WPainterPath &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>WRectF</type>
      <name>controlPointRect</name>
      <anchorfile>classWt_1_1WPainterPath.html</anchorfile>
      <anchor>a7cb87a938181fa55f248725853108c9d</anchor>
      <arglist>(const WTransform &amp;transform=WTransform::Identity) const</arglist>
    </member>
    <member kind="function">
      <type>WPainterPath</type>
      <name>crisp</name>
      <anchorfile>classWt_1_1WPainterPath.html</anchorfile>
      <anchor>a8d6ae1ecfa27a32c7f313a18e68478fd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setOpenSubPathsEnabled</name>
      <anchorfile>classWt_1_1WPainterPath.html</anchorfile>
      <anchor>a7485cf1701e51823d1f4a6f689425ac1</anchor>
      <arglist>(bool enabled=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>openSubPathsEnabled</name>
      <anchorfile>classWt_1_1WPainterPath.html</anchorfile>
      <anchor>a22b738f79b130b5867bd93cb2b79c7b8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>jsValue</name>
      <anchorfile>classWt_1_1WPainterPath.html</anchorfile>
      <anchor>a9588ed911fc264326429ec69d5a21555</anchor>
      <arglist>() const override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WPanel</name>
    <filename>classWt_1_1WPanel.html</filename>
    <base>Wt::WCompositeWidget</base>
    <member kind="function">
      <type></type>
      <name>WPanel</name>
      <anchorfile>classWt_1_1WPanel.html</anchorfile>
      <anchor>a8bfcafbda18880bfd8e043ac2413c97e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTitle</name>
      <anchorfile>classWt_1_1WPanel.html</anchorfile>
      <anchor>a3e2feec27482003f4abd921c22b1b0c3</anchor>
      <arglist>(const WString &amp;title)</arglist>
    </member>
    <member kind="function">
      <type>WString</type>
      <name>title</name>
      <anchorfile>classWt_1_1WPanel.html</anchorfile>
      <anchor>a35a57122a4e7e3deeb8ed1c5c0d673ca</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTitleBar</name>
      <anchorfile>classWt_1_1WPanel.html</anchorfile>
      <anchor>a9671893042605eb936c7301f6de09d3f</anchor>
      <arglist>(bool enable)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>titleBar</name>
      <anchorfile>classWt_1_1WPanel.html</anchorfile>
      <anchor>ac53ac0dd4637146c8257da07869d640d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WContainerWidget *</type>
      <name>titleBarWidget</name>
      <anchorfile>classWt_1_1WPanel.html</anchorfile>
      <anchor>acc96760636a4a95600e0929e5307933f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCollapsible</name>
      <anchorfile>classWt_1_1WPanel.html</anchorfile>
      <anchor>ace945a192f671220a5a2cda671dc37ca</anchor>
      <arglist>(bool on)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isCollapsible</name>
      <anchorfile>classWt_1_1WPanel.html</anchorfile>
      <anchor>aa5a758ffdd0168e14b4605c8d1a83e98</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCollapsed</name>
      <anchorfile>classWt_1_1WPanel.html</anchorfile>
      <anchor>acbb49b380277b5b78b18902a671abcb4</anchor>
      <arglist>(bool on)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isCollapsed</name>
      <anchorfile>classWt_1_1WPanel.html</anchorfile>
      <anchor>a29120b8d5d082d9fbc7b14bc889fca60</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>collapse</name>
      <anchorfile>classWt_1_1WPanel.html</anchorfile>
      <anchor>aefd66ff6dd8e2a1108e70efec4eab1b5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>expand</name>
      <anchorfile>classWt_1_1WPanel.html</anchorfile>
      <anchor>a2ac9a05172675559b6f988083a4fd666</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAnimation</name>
      <anchorfile>classWt_1_1WPanel.html</anchorfile>
      <anchor>a403b8136db73a55813f78f3a5c909479</anchor>
      <arglist>(const WAnimation &amp;transition)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCentralWidget</name>
      <anchorfile>classWt_1_1WPanel.html</anchorfile>
      <anchor>ab08803599aaa211ea36af801d1aae740</anchor>
      <arglist>(std::unique_ptr&lt; WWidget &gt; widget)</arglist>
    </member>
    <member kind="function">
      <type>WWidget *</type>
      <name>centralWidget</name>
      <anchorfile>classWt_1_1WPanel.html</anchorfile>
      <anchor>ad4f330c14d7170e87d77a8aa645d6b67</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Signal &amp;</type>
      <name>collapsed</name>
      <anchorfile>classWt_1_1WPanel.html</anchorfile>
      <anchor>ac0926907f1ce9da82dcdc114aeda6e6c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Signal &amp;</type>
      <name>expanded</name>
      <anchorfile>classWt_1_1WPanel.html</anchorfile>
      <anchor>ac5c430375eae4b14e46214fd8a103062</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WPdfImage</name>
    <filename>classWt_1_1WPdfImage.html</filename>
    <base>Wt::WResource</base>
    <base>Wt::WPaintDevice</base>
    <member kind="function">
      <type></type>
      <name>WPdfImage</name>
      <anchorfile>classWt_1_1WPdfImage.html</anchorfile>
      <anchor>a23df934767b93880993e9ee02e3fbe0d</anchor>
      <arglist>(const WLength &amp;width, const WLength &amp;height)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WPdfImage</name>
      <anchorfile>classWt_1_1WPdfImage.html</anchorfile>
      <anchor>a804c91c84fa751dd489a8e4b142a9094</anchor>
      <arglist>(HPDF_Doc pdf, HPDF_Page page, HPDF_REAL x, HPDF_REAL y, HPDF_REAL width, HPDF_REAL height)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WPdfImage</name>
      <anchorfile>classWt_1_1WPdfImage.html</anchorfile>
      <anchor>a86fde83dd116371ab099f79b83199145</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addFontCollection</name>
      <anchorfile>classWt_1_1WPdfImage.html</anchorfile>
      <anchor>a479b8988ba6d379088ef097b894cbc22</anchor>
      <arglist>(const std::string &amp;directory, bool recursive=true)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WFlags&lt; PaintDeviceFeatureFlag &gt;</type>
      <name>features</name>
      <anchorfile>classWt_1_1WPdfImage.html</anchorfile>
      <anchor>ab5757bd94b70595e03998e22a67ca0bf</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setChanged</name>
      <anchorfile>classWt_1_1WPdfImage.html</anchorfile>
      <anchor>a333f0e6af7e23fc37bdd0c4a2612a5ed</anchor>
      <arglist>(WFlags&lt; PainterChangeFlag &gt; flags) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>drawArc</name>
      <anchorfile>classWt_1_1WPdfImage.html</anchorfile>
      <anchor>a030a41e3663d4619de8d951601bb1015</anchor>
      <arglist>(const WRectF &amp;rect, double startAngle, double spanAngle) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>drawImage</name>
      <anchorfile>classWt_1_1WPdfImage.html</anchorfile>
      <anchor>aa48a9333ca4b4ee0a49f9d32150cd838</anchor>
      <arglist>(const WRectF &amp;rect, const std::string &amp;imgUri, int imgWidth, int imgHeight, const WRectF &amp;sourceRect) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>drawLine</name>
      <anchorfile>classWt_1_1WPdfImage.html</anchorfile>
      <anchor>a038bfb52e9d9adcb562a3a11355e5fa4</anchor>
      <arglist>(double x1, double y1, double x2, double y2) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>drawRect</name>
      <anchorfile>classWt_1_1WPdfImage.html</anchorfile>
      <anchor>a8871d2825ea5e8b1ab13ffb14b917e18</anchor>
      <arglist>(const WRectF &amp;rect) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>drawPath</name>
      <anchorfile>classWt_1_1WPdfImage.html</anchorfile>
      <anchor>a4ae5ddf0f92fe2efd3fa9b37122384f7</anchor>
      <arglist>(const WPainterPath &amp;path) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>drawText</name>
      <anchorfile>classWt_1_1WPdfImage.html</anchorfile>
      <anchor>a000df2dc1fda7ffa5f2cb53ca8cf8fba</anchor>
      <arglist>(const WRectF &amp;rect, WFlags&lt; AlignmentFlag &gt; alignmentFlags, TextFlag textFlag, const WString &amp;text, const WPointF *clipPoint) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WTextItem</type>
      <name>measureText</name>
      <anchorfile>classWt_1_1WPdfImage.html</anchorfile>
      <anchor>a068f89b0ed0ca76b59b2554697c69b49</anchor>
      <arglist>(const WString &amp;text, double maxWidth=-1, bool wordWrap=false) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WFontMetrics</type>
      <name>fontMetrics</name>
      <anchorfile>classWt_1_1WPdfImage.html</anchorfile>
      <anchor>aaaa8886beb3375a5aca92a13f8027874</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>init</name>
      <anchorfile>classWt_1_1WPdfImage.html</anchorfile>
      <anchor>a09020302cece9b662bdcbbfe0376e99f</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>done</name>
      <anchorfile>classWt_1_1WPdfImage.html</anchorfile>
      <anchor>ad510abe7f5cdbb1aaee89b13ef4b3921</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>paintActive</name>
      <anchorfile>classWt_1_1WPdfImage.html</anchorfile>
      <anchor>a204d3fb9ea869b8937f5ba19f4bb4a81</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WLength</type>
      <name>width</name>
      <anchorfile>classWt_1_1WPdfImage.html</anchorfile>
      <anchor>a3874d729a32d779e06199ab88cbe1e80</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WLength</type>
      <name>height</name>
      <anchorfile>classWt_1_1WPdfImage.html</anchorfile>
      <anchor>a32c6801df55df08684187dcc33a06a6e</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>handleRequest</name>
      <anchorfile>classWt_1_1WPdfImage.html</anchorfile>
      <anchor>a5e4ecc954ab155fd281991a42e88aa4a</anchor>
      <arglist>(const Http::Request &amp;request, Http::Response &amp;response) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual WPainter *</type>
      <name>painter</name>
      <anchorfile>classWt_1_1WPdfImage.html</anchorfile>
      <anchor>a669c832f31c25fff8c72b7a3fc7cf6b6</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>setPainter</name>
      <anchorfile>classWt_1_1WPdfImage.html</anchorfile>
      <anchor>ad4f474570298b8b4df95acff167dae80</anchor>
      <arglist>(WPainter *painter) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Render::WPdfRenderer</name>
    <filename>classWt_1_1Render_1_1WPdfRenderer.html</filename>
    <base>Wt::Render::WTextRenderer</base>
    <member kind="function">
      <type></type>
      <name>WPdfRenderer</name>
      <anchorfile>classWt_1_1Render_1_1WPdfRenderer.html</anchorfile>
      <anchor>a0afdb54370cd863d857562a717ee19d6</anchor>
      <arglist>(HPDF_Doc pdf, HPDF_Page page=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMargin</name>
      <anchorfile>classWt_1_1Render_1_1WPdfRenderer.html</anchorfile>
      <anchor>a606d6060bcf324dc3911e51f3945e7b5</anchor>
      <arglist>(double cm, WFlags&lt; Side &gt; sides=AllSides)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDpi</name>
      <anchorfile>classWt_1_1Render_1_1WPdfRenderer.html</anchorfile>
      <anchor>aca6980c07406506c5c59b51ad4d3f555</anchor>
      <arglist>(int dpi)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addFontCollection</name>
      <anchorfile>classWt_1_1Render_1_1WPdfRenderer.html</anchorfile>
      <anchor>abc2ad902bd0575905297db8479ad51b6</anchor>
      <arglist>(const std::string &amp;directory, bool recursive=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCurrentPage</name>
      <anchorfile>classWt_1_1Render_1_1WPdfRenderer.html</anchorfile>
      <anchor>ac3268e5c5028aa40bd404ed72c4f7fde</anchor>
      <arglist>(HPDF_Page page)</arglist>
    </member>
    <member kind="function">
      <type>HPDF_Page</type>
      <name>currentPage</name>
      <anchorfile>classWt_1_1Render_1_1WPdfRenderer.html</anchorfile>
      <anchor>a6add1c5f0318dce17adbbcea62a8097b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>pageWidth</name>
      <anchorfile>classWt_1_1Render_1_1WPdfRenderer.html</anchorfile>
      <anchor>a6cbcfa0d4c092214eb3efd2f93a26086</anchor>
      <arglist>(int page) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>pageHeight</name>
      <anchorfile>classWt_1_1Render_1_1WPdfRenderer.html</anchorfile>
      <anchor>afa8e9e6a37511a5e8dae7c5a2e57ba47</anchor>
      <arglist>(int page) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>margin</name>
      <anchorfile>classWt_1_1Render_1_1WPdfRenderer.html</anchorfile>
      <anchor>a48f02d4306de351ba82f3de6c226e06e</anchor>
      <arglist>(Side side) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WPaintDevice *</type>
      <name>startPage</name>
      <anchorfile>classWt_1_1Render_1_1WPdfRenderer.html</anchorfile>
      <anchor>a65cceecaf4cd749cb9a49dc4a74cc032</anchor>
      <arglist>(int page) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>endPage</name>
      <anchorfile>classWt_1_1Render_1_1WPdfRenderer.html</anchorfile>
      <anchor>aff552e4557b94d309c3e32fb22d0c115</anchor>
      <arglist>(WPaintDevice *device) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WPainter *</type>
      <name>getPainter</name>
      <anchorfile>classWt_1_1Render_1_1WPdfRenderer.html</anchorfile>
      <anchor>a0aeca31304177b897ae42c825335f07f</anchor>
      <arglist>(WPaintDevice *device) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual HPDF_Page</type>
      <name>createPage</name>
      <anchorfile>classWt_1_1Render_1_1WPdfRenderer.html</anchorfile>
      <anchor>aeeac1ad4a419695909257e5de6d1f6a4</anchor>
      <arglist>(int page)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WPen</name>
    <filename>classWt_1_1WPen.html</filename>
    <base>Wt::WJavaScriptExposableObject</base>
    <member kind="typedef">
      <type>PenStyle</type>
      <name>Style</name>
      <anchorfile>classWt_1_1WPen.html</anchorfile>
      <anchor>a7258531d60e7eda214bfadb1aac44e1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>PenCapStyle</type>
      <name>CapStyle</name>
      <anchorfile>classWt_1_1WPen.html</anchorfile>
      <anchor>a96246fed09c155a8da1691b7e8cb1d59</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>PenJoinStyle</type>
      <name>JoinStyle</name>
      <anchorfile>classWt_1_1WPen.html</anchorfile>
      <anchor>ad5aece769e1a50f0609223139a7b6873</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WPen</name>
      <anchorfile>classWt_1_1WPen.html</anchorfile>
      <anchor>ab83dc2d8e9289a528b1ea53c3dbd0a16</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WPen</name>
      <anchorfile>classWt_1_1WPen.html</anchorfile>
      <anchor>ab7d789ec2c036b9e9f2dc79a93bb2102</anchor>
      <arglist>(PenStyle style)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WPen</name>
      <anchorfile>classWt_1_1WPen.html</anchorfile>
      <anchor>aef30d1dd75f1e36ee96838d669c6d465</anchor>
      <arglist>(const WColor &amp;color)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WPen</name>
      <anchorfile>classWt_1_1WPen.html</anchorfile>
      <anchor>a1d41f868a274d548c38e960541b65dda</anchor>
      <arglist>(StandardColor color)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WPen</name>
      <anchorfile>classWt_1_1WPen.html</anchorfile>
      <anchor>a70ff0e92745234bf91ac2a0c3920eca0</anchor>
      <arglist>(const WGradient &amp;gradient)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classWt_1_1WPen.html</anchorfile>
      <anchor>a8c8c719290b34bc1aa216fe42cc8a3f9</anchor>
      <arglist>(const WPen &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classWt_1_1WPen.html</anchorfile>
      <anchor>a1f8d8786db4200e6cfdfd54661441c1e</anchor>
      <arglist>(const WPen &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setStyle</name>
      <anchorfile>classWt_1_1WPen.html</anchorfile>
      <anchor>aa8e1366df77b346d0250878d64ae81a5</anchor>
      <arglist>(PenStyle style)</arglist>
    </member>
    <member kind="function">
      <type>PenStyle</type>
      <name>style</name>
      <anchorfile>classWt_1_1WPen.html</anchorfile>
      <anchor>acbeb2476e04c091458d8d3f8e2eba0dc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCapStyle</name>
      <anchorfile>classWt_1_1WPen.html</anchorfile>
      <anchor>ab4f231f9c2ca03455d59457fe4e564c5</anchor>
      <arglist>(PenCapStyle style)</arglist>
    </member>
    <member kind="function">
      <type>PenCapStyle</type>
      <name>capStyle</name>
      <anchorfile>classWt_1_1WPen.html</anchorfile>
      <anchor>ab13054c0d65fd55c34be1eea1619206c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setJoinStyle</name>
      <anchorfile>classWt_1_1WPen.html</anchorfile>
      <anchor>a11848f3d7c2c73bc630c2c7da83f3671</anchor>
      <arglist>(PenJoinStyle style)</arglist>
    </member>
    <member kind="function">
      <type>PenJoinStyle</type>
      <name>joinStyle</name>
      <anchorfile>classWt_1_1WPen.html</anchorfile>
      <anchor>a672dbf4df080343ee02b573a2538f23a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setWidth</name>
      <anchorfile>classWt_1_1WPen.html</anchorfile>
      <anchor>a8d175a6438c8251c2c5440f9cd085954</anchor>
      <arglist>(const WLength &amp;width)</arglist>
    </member>
    <member kind="function">
      <type>const WLength &amp;</type>
      <name>width</name>
      <anchorfile>classWt_1_1WPen.html</anchorfile>
      <anchor>a8fdc3fc9526a452144340c60760bb18a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setColor</name>
      <anchorfile>classWt_1_1WPen.html</anchorfile>
      <anchor>a4296a360d3853c46e68e20a574c1f8b6</anchor>
      <arglist>(const WColor &amp;color)</arglist>
    </member>
    <member kind="function">
      <type>const WColor &amp;</type>
      <name>color</name>
      <anchorfile>classWt_1_1WPen.html</anchorfile>
      <anchor>a580615277eacb0bd1c6796d04c09bb09</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setGradient</name>
      <anchorfile>classWt_1_1WPen.html</anchorfile>
      <anchor>ac96110880124d3b426ef660d69d2b7bb</anchor>
      <arglist>(const WGradient &amp;gradient)</arglist>
    </member>
    <member kind="function">
      <type>const WGradient &amp;</type>
      <name>gradient</name>
      <anchorfile>classWt_1_1WPen.html</anchorfile>
      <anchor>adc23cb7171b7fc92434b8b6e9704faa4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>jsValue</name>
      <anchorfile>classWt_1_1WPen.html</anchorfile>
      <anchor>a4cc90e226e911e48cd8edadb70e13507</anchor>
      <arglist>() const override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Chart::WPieChart</name>
    <filename>classWt_1_1Chart_1_1WPieChart.html</filename>
    <base>Wt::Chart::WAbstractChart</base>
    <member kind="function">
      <type></type>
      <name>WPieChart</name>
      <anchorfile>classWt_1_1Chart_1_1WPieChart.html</anchorfile>
      <anchor>a703d52dcf5c576a4e76de683247a1fe5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLabelsColumn</name>
      <anchorfile>classWt_1_1Chart_1_1WPieChart.html</anchorfile>
      <anchor>aa40bfd3f2095106f8081596b235de4c6</anchor>
      <arglist>(int column)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>labelsColumn</name>
      <anchorfile>classWt_1_1Chart_1_1WPieChart.html</anchorfile>
      <anchor>aa0af4581b2fd350bb5c16feff0d710bb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDataColumn</name>
      <anchorfile>classWt_1_1Chart_1_1WPieChart.html</anchorfile>
      <anchor>a3692ea22a1417e599e9358b0ed5a723d</anchor>
      <arglist>(int modelColumn)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>dataColumn</name>
      <anchorfile>classWt_1_1Chart_1_1WPieChart.html</anchorfile>
      <anchor>ad429038e7eef422e1eaf691078f61899</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBrush</name>
      <anchorfile>classWt_1_1Chart_1_1WPieChart.html</anchorfile>
      <anchor>af0fc06d47e2b717f1faeae80926d068c</anchor>
      <arglist>(int modelRow, const WBrush &amp;brush)</arglist>
    </member>
    <member kind="function">
      <type>WBrush</type>
      <name>brush</name>
      <anchorfile>classWt_1_1Chart_1_1WPieChart.html</anchorfile>
      <anchor>a8bbafaa7cfa6f343d7d6ed1d8f479c2d</anchor>
      <arglist>(int modelRow) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setExplode</name>
      <anchorfile>classWt_1_1Chart_1_1WPieChart.html</anchorfile>
      <anchor>a4a2bfe0c147b5433d340d49351b5032c</anchor>
      <arglist>(int modelRow, double factor)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>explode</name>
      <anchorfile>classWt_1_1Chart_1_1WPieChart.html</anchorfile>
      <anchor>a357859131ed3e6b66ea8197aac06e973</anchor>
      <arglist>(int modelRow) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPerspectiveEnabled</name>
      <anchorfile>classWt_1_1Chart_1_1WPieChart.html</anchorfile>
      <anchor>ae36d57f4c2801cb8599a1bc99e340a24</anchor>
      <arglist>(bool enabled, double height=1.0)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isPerspectiveEnabled</name>
      <anchorfile>classWt_1_1Chart_1_1WPieChart.html</anchorfile>
      <anchor>a900a273a58ccecf4b33547b79b6cb9ba</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setShadowEnabled</name>
      <anchorfile>classWt_1_1Chart_1_1WPieChart.html</anchorfile>
      <anchor>a74b91c0514247ba9ea91b53fbae795f7</anchor>
      <arglist>(bool enabled)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isShadowEnabled</name>
      <anchorfile>classWt_1_1Chart_1_1WPieChart.html</anchorfile>
      <anchor>a0aaaa25882ee708b32d58f17e11c7cdb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setStartAngle</name>
      <anchorfile>classWt_1_1Chart_1_1WPieChart.html</anchorfile>
      <anchor>a407707a2ab0b2c56500e35da85e619a5</anchor>
      <arglist>(double degrees)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>startAngle</name>
      <anchorfile>classWt_1_1Chart_1_1WPieChart.html</anchorfile>
      <anchor>ad49abe0f3b9b7c133252ea102e7e3926</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAvoidLabelRendering</name>
      <anchorfile>classWt_1_1Chart_1_1WPieChart.html</anchorfile>
      <anchor>aa573182ef1ba641315f3d2bf5899784f</anchor>
      <arglist>(double percent)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>avoidLabelRendering</name>
      <anchorfile>classWt_1_1Chart_1_1WPieChart.html</anchorfile>
      <anchor>ae152b936baea3f547129e946e745d45c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDisplayLabels</name>
      <anchorfile>classWt_1_1Chart_1_1WPieChart.html</anchorfile>
      <anchor>a89324f6159e5893e1ddd368718d00e5d</anchor>
      <arglist>(WFlags&lt; LabelOption &gt; options)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; LabelOption &gt;</type>
      <name>displayLabels</name>
      <anchorfile>classWt_1_1Chart_1_1WPieChart.html</anchorfile>
      <anchor>a7f78aab3ac52de2fdbac7896c554f6d6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLabelFormat</name>
      <anchorfile>classWt_1_1Chart_1_1WPieChart.html</anchorfile>
      <anchor>abc5813d4350dc86ba93adcfd0821773a</anchor>
      <arglist>(const WString &amp;format)</arglist>
    </member>
    <member kind="function">
      <type>WString</type>
      <name>labelFormat</name>
      <anchorfile>classWt_1_1Chart_1_1WPieChart.html</anchorfile>
      <anchor>abd860638f39919242810df62c3d3a59e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::unique_ptr&lt; WWidget &gt;</type>
      <name>createLegendItemWidget</name>
      <anchorfile>classWt_1_1Chart_1_1WPieChart.html</anchorfile>
      <anchor>a299bcaf1f9093a29d24190bc6152725d</anchor>
      <arglist>(int index, WFlags&lt; LabelOption &gt; options)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>addDataPointArea</name>
      <anchorfile>classWt_1_1Chart_1_1WPieChart.html</anchorfile>
      <anchor>a0186d9a0901a565b2254959ee87b4d84</anchor>
      <arglist>(int row, int column, std::unique_ptr&lt; WAbstractArea &gt; area) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::unique_ptr&lt; WContainerWidget &gt;</type>
      <name>createLabelWidget</name>
      <anchorfile>classWt_1_1Chart_1_1WPieChart.html</anchorfile>
      <anchor>a075be70154a65688f9e5783a81a38c64</anchor>
      <arglist>(std::unique_ptr&lt; WWidget &gt; textWidget, WPainter *painter, const WRectF &amp;rect, Wt::WFlags&lt; AlignmentFlag &gt; alignmentFlags) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>paint</name>
      <anchorfile>classWt_1_1Chart_1_1WPieChart.html</anchorfile>
      <anchor>a8578d638e8c2adf5d99bfabcef9baca3</anchor>
      <arglist>(WPainter &amp;painter, const WRectF &amp;rectangle=WRectF()) const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>paintEvent</name>
      <anchorfile>classWt_1_1Chart_1_1WPieChart.html</anchorfile>
      <anchor>a572e1f2e6cf48efee839bffef33de286</anchor>
      <arglist>(Wt::WPaintDevice *paintDevice) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>drawLabel</name>
      <anchorfile>classWt_1_1Chart_1_1WPieChart.html</anchorfile>
      <anchor>af23b74c6d735cc87c54ac20e0bb88163</anchor>
      <arglist>(WPainter *painter, const WRectF &amp;rect, WFlags&lt; AlignmentFlag &gt; alignmentFlags, const WString &amp;text, int row) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WPoint</name>
    <filename>classWt_1_1WPoint.html</filename>
    <member kind="function">
      <type></type>
      <name>WPoint</name>
      <anchorfile>classWt_1_1WPoint.html</anchorfile>
      <anchor>aef6bc93627e0db21cc0729716b6f06d1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WPoint</name>
      <anchorfile>classWt_1_1WPoint.html</anchorfile>
      <anchor>ac38958b7d00843fdc9983f149d0511f9</anchor>
      <arglist>(int x, int y)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setX</name>
      <anchorfile>classWt_1_1WPoint.html</anchorfile>
      <anchor>a4f78a5aa9dd51cc346e8cfeb077c9716</anchor>
      <arglist>(int x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setY</name>
      <anchorfile>classWt_1_1WPoint.html</anchorfile>
      <anchor>a663e99c2f8f021aec35ad8392c375731</anchor>
      <arglist>(int y)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>x</name>
      <anchorfile>classWt_1_1WPoint.html</anchorfile>
      <anchor>aa1b2714fd3a65b35936524a0f25df2be</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>y</name>
      <anchorfile>classWt_1_1WPoint.html</anchorfile>
      <anchor>a9643d6a897a97ef7bda8f7fc0f774474</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classWt_1_1WPoint.html</anchorfile>
      <anchor>a2759c0027b41a05eec11cac53e5492bb</anchor>
      <arglist>(const WPoint &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classWt_1_1WPoint.html</anchorfile>
      <anchor>a1ecebde12bf5d041b1974861627a5c43</anchor>
      <arglist>(const WPoint &amp;other) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WPointF</name>
    <filename>classWt_1_1WPointF.html</filename>
    <base>Wt::WJavaScriptExposableObject</base>
    <member kind="function">
      <type></type>
      <name>WPointF</name>
      <anchorfile>classWt_1_1WPointF.html</anchorfile>
      <anchor>acb4536b133ba1a6ec010a7d489ba9d52</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WPointF</name>
      <anchorfile>classWt_1_1WPointF.html</anchorfile>
      <anchor>a5287bb6bfa0fa598be6433aca25cbd5e</anchor>
      <arglist>(double x, double y)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WPointF</name>
      <anchorfile>classWt_1_1WPointF.html</anchorfile>
      <anchor>accedc0584f923309397c08691094ac26</anchor>
      <arglist>(const WPointF &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WPointF</name>
      <anchorfile>classWt_1_1WPointF.html</anchorfile>
      <anchor>af60198c7a6d0ddd30d73e6c0a7fa6784</anchor>
      <arglist>(const Coordinates &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setX</name>
      <anchorfile>classWt_1_1WPointF.html</anchorfile>
      <anchor>a07f37f26155b5b1d7c44cb4f7c572064</anchor>
      <arglist>(double x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setY</name>
      <anchorfile>classWt_1_1WPointF.html</anchorfile>
      <anchor>aa7910f613cfe0b89caed7b6991ae1e9c</anchor>
      <arglist>(double y)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>x</name>
      <anchorfile>classWt_1_1WPointF.html</anchorfile>
      <anchor>a934d4412242581304be3f47a72d42b76</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>y</name>
      <anchorfile>classWt_1_1WPointF.html</anchorfile>
      <anchor>afe376c8e7b7654615fda3ff577036c3e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classWt_1_1WPointF.html</anchorfile>
      <anchor>a1ef2073f5d86589d56e52c36739ba7ca</anchor>
      <arglist>(const WPointF &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classWt_1_1WPointF.html</anchorfile>
      <anchor>a0da864516cec814ad4d409ad26b81697</anchor>
      <arglist>(const WPointF &amp;other) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>jsValue</name>
      <anchorfile>classWt_1_1WPointF.html</anchorfile>
      <anchor>a0720a7701a449ddda09b5b2aec6491c1</anchor>
      <arglist>() const override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Chart::WPointSelection</name>
    <filename>classWt_1_1Chart_1_1WPointSelection.html</filename>
    <base>Wt::Chart::WSelection</base>
    <member kind="variable">
      <type>int</type>
      <name>rowNumber</name>
      <anchorfile>classWt_1_1Chart_1_1WPointSelection.html</anchorfile>
      <anchor>a20ad233c140dc057b2ae82a9fd4eee6b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WPolygonArea</name>
    <filename>classWt_1_1WPolygonArea.html</filename>
    <base>Wt::WAbstractArea</base>
    <member kind="function">
      <type></type>
      <name>WPolygonArea</name>
      <anchorfile>classWt_1_1WPolygonArea.html</anchorfile>
      <anchor>afa52a76e46a98a1fcec1d5bdfa816d6d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WPolygonArea</name>
      <anchorfile>classWt_1_1WPolygonArea.html</anchorfile>
      <anchor>a27b4a6851ec95b3716084d745e04b383</anchor>
      <arglist>(const std::vector&lt; WPoint &gt; &amp;points)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WPolygonArea</name>
      <anchorfile>classWt_1_1WPolygonArea.html</anchorfile>
      <anchor>a1d32a9af6194e2b3ecf357816e2d90c7</anchor>
      <arglist>(const std::vector&lt; WPointF &gt; &amp;points)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addPoint</name>
      <anchorfile>classWt_1_1WPolygonArea.html</anchorfile>
      <anchor>af6876fcbc964c2322008bc40eb1542ce</anchor>
      <arglist>(int x, int y)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addPoint</name>
      <anchorfile>classWt_1_1WPolygonArea.html</anchorfile>
      <anchor>a870b19dc309ab6386a91d2742463088a</anchor>
      <arglist>(double x, double y)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addPoint</name>
      <anchorfile>classWt_1_1WPolygonArea.html</anchorfile>
      <anchor>a42ec8b148f31ddd30ea2df8da1456d94</anchor>
      <arglist>(const WPoint &amp;point)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addPoint</name>
      <anchorfile>classWt_1_1WPolygonArea.html</anchorfile>
      <anchor>a73d7505c0ceb966de94b1f7cd2a1491f</anchor>
      <arglist>(const WPointF &amp;point)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPoints</name>
      <anchorfile>classWt_1_1WPolygonArea.html</anchorfile>
      <anchor>af69651570f280e4f647a32108712940c</anchor>
      <arglist>(const std::vector&lt; WPoint &gt; &amp;points)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPoints</name>
      <anchorfile>classWt_1_1WPolygonArea.html</anchorfile>
      <anchor>a9e036986557cab012105947f07cf5d13</anchor>
      <arglist>(const std::vector&lt; WPointF &gt; &amp;points)</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; WPointF &gt; &amp;</type>
      <name>pointFs</name>
      <anchorfile>classWt_1_1WPolygonArea.html</anchorfile>
      <anchor>a9cf0245aac2668166a95cf35a254af05</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; WPoint &gt; &amp;</type>
      <name>points</name>
      <anchorfile>classWt_1_1WPolygonArea.html</anchorfile>
      <anchor>a1e863b8dfc7c870d68183a9f7ab04374</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WPopupMenu</name>
    <filename>classWt_1_1WPopupMenu.html</filename>
    <base>Wt::WMenu</base>
    <member kind="function">
      <type></type>
      <name>WPopupMenu</name>
      <anchorfile>classWt_1_1WPopupMenu.html</anchorfile>
      <anchor>ae0ceeeda3539d8a906c7059a73100f2b</anchor>
      <arglist>(WStackedWidget *contentsStack=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>popup</name>
      <anchorfile>classWt_1_1WPopupMenu.html</anchorfile>
      <anchor>a9da2dff4c6de6845a5a15b1a7c22572c</anchor>
      <arglist>(const WPoint &amp;point)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>popup</name>
      <anchorfile>classWt_1_1WPopupMenu.html</anchorfile>
      <anchor>a8b63c8824aa820d8d3669e563b6f57f4</anchor>
      <arglist>(const WMouseEvent &amp;event)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>popup</name>
      <anchorfile>classWt_1_1WPopupMenu.html</anchorfile>
      <anchor>a939da393356e060b4eebbfe08f56f691</anchor>
      <arglist>(WWidget *location, Orientation orientation=Orientation::Vertical)</arglist>
    </member>
    <member kind="function">
      <type>WMenuItem *</type>
      <name>exec</name>
      <anchorfile>classWt_1_1WPopupMenu.html</anchorfile>
      <anchor>ac2600fb27634ffee18baaac3b21acf6f</anchor>
      <arglist>(const WPoint &amp;point)</arglist>
    </member>
    <member kind="function">
      <type>WMenuItem *</type>
      <name>exec</name>
      <anchorfile>classWt_1_1WPopupMenu.html</anchorfile>
      <anchor>a3c0095bb6706cb41f2db14f998723e2c</anchor>
      <arglist>(const WMouseEvent &amp;event)</arglist>
    </member>
    <member kind="function">
      <type>WMenuItem *</type>
      <name>exec</name>
      <anchorfile>classWt_1_1WPopupMenu.html</anchorfile>
      <anchor>aab71c13a611c9993122c77bf2d7a334c</anchor>
      <arglist>(WWidget *location, Orientation orientation=Orientation::Vertical)</arglist>
    </member>
    <member kind="function">
      <type>WMenuItem *</type>
      <name>result</name>
      <anchorfile>classWt_1_1WPopupMenu.html</anchorfile>
      <anchor>a4105a2717e2c4797043e3b9bbafd2f01</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setHidden</name>
      <anchorfile>classWt_1_1WPopupMenu.html</anchorfile>
      <anchor>a751796d0d8d3983a4a23562ec5a3a9f2</anchor>
      <arglist>(bool hidden, const WAnimation &amp;animation=WAnimation()) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setMaximumSize</name>
      <anchorfile>classWt_1_1WPopupMenu.html</anchorfile>
      <anchor>a22ad912be3e9e6d5a99130759d2a7454</anchor>
      <arglist>(const WLength &amp;width, const WLength &amp;height) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setMinimumSize</name>
      <anchorfile>classWt_1_1WPopupMenu.html</anchorfile>
      <anchor>a25b6056e6f93745d5643ffd07f41cd92</anchor>
      <arglist>(const WLength &amp;width, const WLength &amp;height) override</arglist>
    </member>
    <member kind="function">
      <type>Signal &amp;</type>
      <name>aboutToHide</name>
      <anchorfile>classWt_1_1WPopupMenu.html</anchorfile>
      <anchor>a6e8aadc13b909ea3bad826515560d504</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Signal&lt; WMenuItem * &gt; &amp;</type>
      <name>triggered</name>
      <anchorfile>classWt_1_1WPopupMenu.html</anchorfile>
      <anchor>a4bab7622553aaf6b050976e0f140a27f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAutoHide</name>
      <anchorfile>classWt_1_1WPopupMenu.html</anchorfile>
      <anchor>a5f65e7578883ecad37e9b1aae6a6cfe5</anchor>
      <arglist>(bool enabled, int autoHideDelay=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setHideOnSelect</name>
      <anchorfile>classWt_1_1WPopupMenu.html</anchorfile>
      <anchor>a6008d156d49f480995fbe7e0b324daeb</anchor>
      <arglist>(bool enabled=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hideOnSelect</name>
      <anchorfile>classWt_1_1WPopupMenu.html</anchorfile>
      <anchor>a58ef80c88da32df073af9c766bfb2ce3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>render</name>
      <anchorfile>classWt_1_1WPopupMenu.html</anchorfile>
      <anchor>aa0f3697f6b7465ce4dcfa2a4ee3ff988</anchor>
      <arglist>(WFlags&lt; RenderFlag &gt; flags) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WPopupWidget</name>
    <filename>classWt_1_1WPopupWidget.html</filename>
    <base>Wt::WCompositeWidget</base>
    <member kind="function">
      <type></type>
      <name>WPopupWidget</name>
      <anchorfile>classWt_1_1WPopupWidget.html</anchorfile>
      <anchor>af546196b580e8f6323bdb28c8d851311</anchor>
      <arglist>(std::unique_ptr&lt; WWidget &gt; impl)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~WPopupWidget</name>
      <anchorfile>classWt_1_1WPopupWidget.html</anchorfile>
      <anchor>a44fdb33be6285fd98e7e8c3bf1b05641</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAnchorWidget</name>
      <anchorfile>classWt_1_1WPopupWidget.html</anchorfile>
      <anchor>ab22b6a3a99836210a8d37c547c30f99b</anchor>
      <arglist>(WWidget *widget, Orientation orientation=Orientation::Vertical)</arglist>
    </member>
    <member kind="function">
      <type>Orientation</type>
      <name>orientation</name>
      <anchorfile>classWt_1_1WPopupWidget.html</anchorfile>
      <anchor>a2b8f99b08bf43dd8c199b7d57cd9d850</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTransient</name>
      <anchorfile>classWt_1_1WPopupWidget.html</anchorfile>
      <anchor>a4ced57e1c76e26ab6fe023d8ebf2b6cd</anchor>
      <arglist>(bool transient, int autoHideDelay=0)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isTransient</name>
      <anchorfile>classWt_1_1WPopupWidget.html</anchorfile>
      <anchor>a34fc38644999a134bedf3466cb9007ed</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>autoHideDelay</name>
      <anchorfile>classWt_1_1WPopupWidget.html</anchorfile>
      <anchor>a249f0b8ae77d270c578ec42934cbedbe</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setHidden</name>
      <anchorfile>classWt_1_1WPopupWidget.html</anchorfile>
      <anchor>aa06b0e211259f75fcd71d2a338db6742</anchor>
      <arglist>(bool hidden, const WAnimation &amp;animation=WAnimation()) override</arglist>
    </member>
    <member kind="function">
      <type>Signal &amp;</type>
      <name>hidden</name>
      <anchorfile>classWt_1_1WPopupWidget.html</anchorfile>
      <anchor>ae7a830eb0047a72ac973d4e7ee40c6f1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Signal &amp;</type>
      <name>shown</name>
      <anchorfile>classWt_1_1WPopupWidget.html</anchorfile>
      <anchor>aff7845cb5dcfd57ac997827b9f886c62</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>render</name>
      <anchorfile>classWt_1_1WPopupWidget.html</anchorfile>
      <anchor>a211a1f91a3131c12f9331c9c4b54e280</anchor>
      <arglist>(WFlags&lt; RenderFlag &gt; flags) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WProgressBar</name>
    <filename>classWt_1_1WProgressBar.html</filename>
    <base>Wt::WInteractWidget</base>
    <member kind="function">
      <type></type>
      <name>WProgressBar</name>
      <anchorfile>classWt_1_1WProgressBar.html</anchorfile>
      <anchor>ab2d5d3505e4c201156b053ce004d453f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMinimum</name>
      <anchorfile>classWt_1_1WProgressBar.html</anchorfile>
      <anchor>aff1c1c21642bc4f2d3f9405fc2491ce9</anchor>
      <arglist>(double minimum)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>minimum</name>
      <anchorfile>classWt_1_1WProgressBar.html</anchorfile>
      <anchor>ad04a9b303d8a34cdda15e55683c22575</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMaximum</name>
      <anchorfile>classWt_1_1WProgressBar.html</anchorfile>
      <anchor>a1925aa3e7aed457e7b80dd91f728afe1</anchor>
      <arglist>(double maximum)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>maximum</name>
      <anchorfile>classWt_1_1WProgressBar.html</anchorfile>
      <anchor>a5f197a685a505aeb067200f2f0c3cb22</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRange</name>
      <anchorfile>classWt_1_1WProgressBar.html</anchorfile>
      <anchor>ab16ba89c58804410f4080bcc76f8d4aa</anchor>
      <arglist>(double minimum, double maximum)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setValue</name>
      <anchorfile>classWt_1_1WProgressBar.html</anchorfile>
      <anchor>ac0cf5ad1588716d0ef9501fddc421b8c</anchor>
      <arglist>(double value)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>value</name>
      <anchorfile>classWt_1_1WProgressBar.html</anchorfile>
      <anchor>a0563fbd3a8d7f9c9293d618dd1117437</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFormat</name>
      <anchorfile>classWt_1_1WProgressBar.html</anchorfile>
      <anchor>a6fb308103fbdad5d58c90450c657678a</anchor>
      <arglist>(const WString &amp;format)</arglist>
    </member>
    <member kind="function">
      <type>const WString &amp;</type>
      <name>format</name>
      <anchorfile>classWt_1_1WProgressBar.html</anchorfile>
      <anchor>a1340d57d9f657594cdb05e781f69a104</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WString</type>
      <name>text</name>
      <anchorfile>classWt_1_1WProgressBar.html</anchorfile>
      <anchor>a24fb4acf9cdea0fdddfff38db3b13263</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Signal&lt; double &gt; &amp;</type>
      <name>valueChanged</name>
      <anchorfile>classWt_1_1WProgressBar.html</anchorfile>
      <anchor>aa95aa9075fbffc7bcc2ef13407e6a8db</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Signal &amp;</type>
      <name>progressCompleted</name>
      <anchorfile>classWt_1_1WProgressBar.html</anchorfile>
      <anchor>a4a0b07947134a74df39df42e076a6130</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>resize</name>
      <anchorfile>classWt_1_1WProgressBar.html</anchorfile>
      <anchor>a9d58918605144a5c9e5f7cb4b1aa12ef</anchor>
      <arglist>(const WLength &amp;width, const WLength &amp;height) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>updateBar</name>
      <anchorfile>classWt_1_1WProgressBar.html</anchorfile>
      <anchor>a3c43dbcec960a78ce2fafd9607d6f237</anchor>
      <arglist>(DomElement &amp;bar)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WPushButton</name>
    <filename>classWt_1_1WPushButton.html</filename>
    <base>Wt::WFormWidget</base>
    <member kind="function">
      <type></type>
      <name>WPushButton</name>
      <anchorfile>classWt_1_1WPushButton.html</anchorfile>
      <anchor>ad0c0f1e8ba3ba650d3c54437fcaabea8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WPushButton</name>
      <anchorfile>classWt_1_1WPushButton.html</anchorfile>
      <anchor>a75be441036ec3f5444ae475597cdd81d</anchor>
      <arglist>(const WString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WPushButton</name>
      <anchorfile>classWt_1_1WPushButton.html</anchorfile>
      <anchor>a6d1c660c894a31551e871d060c61e074</anchor>
      <arglist>(const WString &amp;text, TextFormat textFormat)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDefault</name>
      <anchorfile>classWt_1_1WPushButton.html</anchorfile>
      <anchor>ace620e06795d885aa42ed2d2e4f4d65f</anchor>
      <arglist>(bool enabled)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isDefault</name>
      <anchorfile>classWt_1_1WPushButton.html</anchorfile>
      <anchor>ab3f972e1cd9fe69e771fa969a712fc3f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCheckable</name>
      <anchorfile>classWt_1_1WPushButton.html</anchorfile>
      <anchor>acbdb72a0317c6836ca3923e85f46b813</anchor>
      <arglist>(bool checkable)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isCheckable</name>
      <anchorfile>classWt_1_1WPushButton.html</anchorfile>
      <anchor>aa1c10e441cdcbf458fcf476ad684198f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setChecked</name>
      <anchorfile>classWt_1_1WPushButton.html</anchorfile>
      <anchor>ab04610a1a0149cae3944f3890647abfe</anchor>
      <arglist>(bool checked)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setChecked</name>
      <anchorfile>classWt_1_1WPushButton.html</anchorfile>
      <anchor>a8fcd08aac6f03ce25b002f708278eca6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setUnChecked</name>
      <anchorfile>classWt_1_1WPushButton.html</anchorfile>
      <anchor>aec1e64bd057701d13fb9938830a13f6a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isChecked</name>
      <anchorfile>classWt_1_1WPushButton.html</anchorfile>
      <anchor>a5be45821a78cd9471cd5cfdcc025f654</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setText</name>
      <anchorfile>classWt_1_1WPushButton.html</anchorfile>
      <anchor>a98a05dc13dfaa05ca6daca9f528d3149</anchor>
      <arglist>(const WString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>const WString &amp;</type>
      <name>text</name>
      <anchorfile>classWt_1_1WPushButton.html</anchorfile>
      <anchor>a95acfea2dd9da202fe0ad79744fb2ab9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setTextFormat</name>
      <anchorfile>classWt_1_1WPushButton.html</anchorfile>
      <anchor>a8573412590495b90ec9b32fd03d8f5b2</anchor>
      <arglist>(TextFormat format)</arglist>
    </member>
    <member kind="function">
      <type>TextFormat</type>
      <name>textFormat</name>
      <anchorfile>classWt_1_1WPushButton.html</anchorfile>
      <anchor>a2c5f23ca0df488ce3aa62d56dbe490e2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setIcon</name>
      <anchorfile>classWt_1_1WPushButton.html</anchorfile>
      <anchor>afd65e905dd006fbc29f0e8fb6997eb71</anchor>
      <arglist>(const WLink &amp;link)</arglist>
    </member>
    <member kind="function">
      <type>WLink</type>
      <name>icon</name>
      <anchorfile>classWt_1_1WPushButton.html</anchorfile>
      <anchor>a2eb9a2053fdaedbca28d458c77e33968</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLink</name>
      <anchorfile>classWt_1_1WPushButton.html</anchorfile>
      <anchor>ab33d4bb1d2f32ecf798626d19ca2a0df</anchor>
      <arglist>(const WLink &amp;link)</arglist>
    </member>
    <member kind="function">
      <type>const WLink &amp;</type>
      <name>link</name>
      <anchorfile>classWt_1_1WPushButton.html</anchorfile>
      <anchor>acc4c9dcc183e91db357b2e7caefb82d5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WString</type>
      <name>valueText</name>
      <anchorfile>classWt_1_1WPushButton.html</anchorfile>
      <anchor>a072339797afad5dc200a1d0c2cbaf9b6</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setValueText</name>
      <anchorfile>classWt_1_1WPushButton.html</anchorfile>
      <anchor>a4e8c1a63c373e5ccb48005a36ed14dab</anchor>
      <arglist>(const WString &amp;value) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMenu</name>
      <anchorfile>classWt_1_1WPushButton.html</anchorfile>
      <anchor>ae919cb76993211553b50a996bdf80fe9</anchor>
      <arglist>(std::unique_ptr&lt; WPopupMenu &gt; menu)</arglist>
    </member>
    <member kind="function">
      <type>WPopupMenu *</type>
      <name>menu</name>
      <anchorfile>classWt_1_1WPushButton.html</anchorfile>
      <anchor>a42a2ad0c0cf5b131a3669cfde432ebd7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>refresh</name>
      <anchorfile>classWt_1_1WPushButton.html</anchorfile>
      <anchor>ae71d322bfce4f662a4e61033014e6159</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>EventSignal &amp;</type>
      <name>checked</name>
      <anchorfile>classWt_1_1WPushButton.html</anchorfile>
      <anchor>af2b17da21ce4ad649a537f35241e5be2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EventSignal &amp;</type>
      <name>unChecked</name>
      <anchorfile>classWt_1_1WPushButton.html</anchorfile>
      <anchor>ade2ed67df970b702ef0157514d7c140a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>setFirstFocus</name>
      <anchorfile>classWt_1_1WPushButton.html</anchorfile>
      <anchor>ae43befd5a455a42292da0793f82ba93e</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>propagateSetEnabled</name>
      <anchorfile>classWt_1_1WPushButton.html</anchorfile>
      <anchor>a620e491e3531bec7d98e2f5941637ebc</anchor>
      <arglist>(bool enabled) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>enableAjax</name>
      <anchorfile>classWt_1_1WPushButton.html</anchorfile>
      <anchor>ac4b2ea96b7a31b2c3a375205216b3d69</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WRadioButton</name>
    <filename>classWt_1_1WRadioButton.html</filename>
    <base>Wt::WAbstractToggleButton</base>
    <member kind="function">
      <type></type>
      <name>WRadioButton</name>
      <anchorfile>classWt_1_1WRadioButton.html</anchorfile>
      <anchor>a05713887f6d354350ee4be96fe3f4ef8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WRadioButton</name>
      <anchorfile>classWt_1_1WRadioButton.html</anchorfile>
      <anchor>ac62f839158177e559d6d8b28e866b242</anchor>
      <arglist>(const WString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WRadioButton</name>
      <anchorfile>classWt_1_1WRadioButton.html</anchorfile>
      <anchor>a234ed5e2d0e698b80d4e7c8b65f027c2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>WButtonGroup *</type>
      <name>group</name>
      <anchorfile>classWt_1_1WRadioButton.html</anchorfile>
      <anchor>a0de845c1493cc1c9aed7b058cde7fcb1</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WRandom</name>
    <filename>classWt_1_1WRandom.html</filename>
    <member kind="function" static="yes">
      <type>static unsigned int</type>
      <name>get</name>
      <anchorfile>classWt_1_1WRandom.html</anchorfile>
      <anchor>afd8478f2e7be144c281eec83ffc8222e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>generateId</name>
      <anchorfile>classWt_1_1WRandom.html</anchorfile>
      <anchor>a2f1e001a0ec6641f0fa70c57cc2b48f0</anchor>
      <arglist>(int length=16)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WRasterImage</name>
    <filename>classWt_1_1WRasterImage.html</filename>
    <base>Wt::WResource</base>
    <base>Wt::WPaintDevice</base>
    <member kind="function">
      <type></type>
      <name>WRasterImage</name>
      <anchorfile>classWt_1_1WRasterImage.html</anchorfile>
      <anchor>abf6c474a48248ccade166994c63a02fe</anchor>
      <arglist>(const std::string &amp;type, const WLength &amp;width, const WLength &amp;height)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WRasterImage</name>
      <anchorfile>classWt_1_1WRasterImage.html</anchorfile>
      <anchor>a660f5904f28a7f10861afa014e8df882</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addFontCollection</name>
      <anchorfile>classWt_1_1WRasterImage.html</anchorfile>
      <anchor>a227a9c6f057fb6335fa305a6f8510c55</anchor>
      <arglist>(const std::string &amp;directory, bool recursive=true)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WFlags&lt; PaintDeviceFeatureFlag &gt;</type>
      <name>features</name>
      <anchorfile>classWt_1_1WRasterImage.html</anchorfile>
      <anchor>a8dddb8ebd69f411818032d3f3019f143</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setChanged</name>
      <anchorfile>classWt_1_1WRasterImage.html</anchorfile>
      <anchor>a75dffbb4731d33ac6a2dc2fb8e9a4aec</anchor>
      <arglist>(WFlags&lt; PainterChangeFlag &gt; flags) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>drawArc</name>
      <anchorfile>classWt_1_1WRasterImage.html</anchorfile>
      <anchor>a14d0e83cd050f2e316dfb3526f2d49e0</anchor>
      <arglist>(const WRectF &amp;rect, double startAngle, double spanAngle) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>drawImage</name>
      <anchorfile>classWt_1_1WRasterImage.html</anchorfile>
      <anchor>a37b489132e10cbde4d2a7696217b099b</anchor>
      <arglist>(const WRectF &amp;rect, const std::string &amp;imgUri, int imgWidth, int imgHeight, const WRectF &amp;sourceRect) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>drawLine</name>
      <anchorfile>classWt_1_1WRasterImage.html</anchorfile>
      <anchor>aa1eb9b4382b6c096683dd6628c35d119</anchor>
      <arglist>(double x1, double y1, double x2, double y2) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>drawRect</name>
      <anchorfile>classWt_1_1WRasterImage.html</anchorfile>
      <anchor>a546f1cdae7d65185a08e18ca9f2bd9fc</anchor>
      <arglist>(const WRectF &amp;rect) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>drawPath</name>
      <anchorfile>classWt_1_1WRasterImage.html</anchorfile>
      <anchor>adf6904ebc9158b1a7da54daab97723e1</anchor>
      <arglist>(const WPainterPath &amp;path) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>drawText</name>
      <anchorfile>classWt_1_1WRasterImage.html</anchorfile>
      <anchor>a6759dd43cf96cd9da95e95e6e3667324</anchor>
      <arglist>(const WRectF &amp;rect, WFlags&lt; AlignmentFlag &gt; alignmentFlags, TextFlag textFlag, const WString &amp;text, const WPointF *clipPoint) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WTextItem</type>
      <name>measureText</name>
      <anchorfile>classWt_1_1WRasterImage.html</anchorfile>
      <anchor>aef6c8a504a5cd24e5fd90f5240544c08</anchor>
      <arglist>(const WString &amp;text, double maxWidth=-1, bool wordWrap=false) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WFontMetrics</type>
      <name>fontMetrics</name>
      <anchorfile>classWt_1_1WRasterImage.html</anchorfile>
      <anchor>a1166fb90932aea1889c55fbbf91d9569</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>init</name>
      <anchorfile>classWt_1_1WRasterImage.html</anchorfile>
      <anchor>a59d4f2c3ef9ef05324fab4060f2d31c8</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>done</name>
      <anchorfile>classWt_1_1WRasterImage.html</anchorfile>
      <anchor>af06beb3b09289d373fb7855750afdc83</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>paintActive</name>
      <anchorfile>classWt_1_1WRasterImage.html</anchorfile>
      <anchor>a98be76834a344f7323f391b2904b696e</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WLength</type>
      <name>width</name>
      <anchorfile>classWt_1_1WRasterImage.html</anchorfile>
      <anchor>a51017eedaa4ad4cf7d016e0694d27ff7</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WLength</type>
      <name>height</name>
      <anchorfile>classWt_1_1WRasterImage.html</anchorfile>
      <anchor>a03a89444ee29f45f80f44e0d2e019bbb</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>handleRequest</name>
      <anchorfile>classWt_1_1WRasterImage.html</anchorfile>
      <anchor>aabd5b06e07659bc801f82b1516e0241a</anchor>
      <arglist>(const Http::Request &amp;request, Http::Response &amp;response) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPixel</name>
      <anchorfile>classWt_1_1WRasterImage.html</anchorfile>
      <anchor>a96888a696b1f98c2d36fda556595ab08</anchor>
      <arglist>(int x, int y, const WColor &amp;color)</arglist>
    </member>
    <member kind="function">
      <type>WColor</type>
      <name>getPixel</name>
      <anchorfile>classWt_1_1WRasterImage.html</anchorfile>
      <anchor>a4ef7d7a0684af480a2a61881d7240da2</anchor>
      <arglist>(int x, int y)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getPixels</name>
      <anchorfile>classWt_1_1WRasterImage.html</anchorfile>
      <anchor>a8ca1accfd280050e78f1e7ff745ac3f4</anchor>
      <arglist>(void *data)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classWt_1_1WRasterImage.html</anchorfile>
      <anchor>af4e9da55569320bdc3168749ba66d3c0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual WPainter *</type>
      <name>painter</name>
      <anchorfile>classWt_1_1WRasterImage.html</anchorfile>
      <anchor>addf2d3c9342651b1b451c60b9663fbc9</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>setPainter</name>
      <anchorfile>classWt_1_1WRasterImage.html</anchorfile>
      <anchor>afcfa6b04c25ba982027bf4f6b9866b3f</anchor>
      <arglist>(WPainter *painter) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WReadOnlyProxyModel</name>
    <filename>classWt_1_1WReadOnlyProxyModel.html</filename>
    <base>Wt::WAbstractProxyModel</base>
    <member kind="function">
      <type></type>
      <name>WReadOnlyProxyModel</name>
      <anchorfile>classWt_1_1WReadOnlyProxyModel.html</anchorfile>
      <anchor>a5995be4fcf4384bb4c01961467568930</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WModelIndex</type>
      <name>mapFromSource</name>
      <anchorfile>classWt_1_1WReadOnlyProxyModel.html</anchorfile>
      <anchor>a0ee17f24d56db31289f22189a2135846</anchor>
      <arglist>(const WModelIndex &amp;sourceIndex) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WModelIndex</type>
      <name>mapToSource</name>
      <anchorfile>classWt_1_1WReadOnlyProxyModel.html</anchorfile>
      <anchor>a6e1f8c42eb990164158823557fe8c05f</anchor>
      <arglist>(const WModelIndex &amp;proxyIndex) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>columnCount</name>
      <anchorfile>classWt_1_1WReadOnlyProxyModel.html</anchorfile>
      <anchor>ab18981bc8e3f09d12e5f3275bfdfb48e</anchor>
      <arglist>(const WModelIndex &amp;parent=WModelIndex()) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>rowCount</name>
      <anchorfile>classWt_1_1WReadOnlyProxyModel.html</anchorfile>
      <anchor>a07ff126fa850e2b50aa68903384f9e66</anchor>
      <arglist>(const WModelIndex &amp;parent=WModelIndex()) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WModelIndex</type>
      <name>parent</name>
      <anchorfile>classWt_1_1WReadOnlyProxyModel.html</anchorfile>
      <anchor>a9dfb17b07b167c122b23a93eb23a58a6</anchor>
      <arglist>(const WModelIndex &amp;index) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WModelIndex</type>
      <name>index</name>
      <anchorfile>classWt_1_1WReadOnlyProxyModel.html</anchorfile>
      <anchor>ae784650a04222b63ac258b708118cff6</anchor>
      <arglist>(int row, int column, const WModelIndex &amp;parent=WModelIndex()) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>setData</name>
      <anchorfile>classWt_1_1WReadOnlyProxyModel.html</anchorfile>
      <anchor>a93d9a7a866a8e7a6bf4b262cbe975b3a</anchor>
      <arglist>(const WModelIndex &amp;index, const cpp17::any &amp;value, ItemDataRole role=ItemDataRole::Edit) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>setItemData</name>
      <anchorfile>classWt_1_1WReadOnlyProxyModel.html</anchorfile>
      <anchor>aec41a88c6d83ff6a7812c392bddf0338</anchor>
      <arglist>(const WModelIndex &amp;index, const DataMap &amp;values) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>setHeaderData</name>
      <anchorfile>classWt_1_1WReadOnlyProxyModel.html</anchorfile>
      <anchor>a792dc0177d4a11f8b3154069289b8473</anchor>
      <arglist>(int section, Orientation orientation, const cpp17::any &amp;value, ItemDataRole role=ItemDataRole::Edit) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>insertColumns</name>
      <anchorfile>classWt_1_1WReadOnlyProxyModel.html</anchorfile>
      <anchor>a278dfb13647c918d5788116c21807c3b</anchor>
      <arglist>(int column, int count, const WModelIndex &amp;parent) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>removeColumns</name>
      <anchorfile>classWt_1_1WReadOnlyProxyModel.html</anchorfile>
      <anchor>a6a508654205c8e2a0445f18b20ef5d36</anchor>
      <arglist>(int column, int count, const WModelIndex &amp;parent) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>dropEvent</name>
      <anchorfile>classWt_1_1WReadOnlyProxyModel.html</anchorfile>
      <anchor>a391729e013f608811919dcd64c8f03e1</anchor>
      <arglist>(const WDropEvent &amp;e, DropAction action, int row, int column, const WModelIndex &amp;parent) override</arglist>
    </member>
    <member kind="function">
      <type>virtual bool</type>
      <name>setData</name>
      <anchorfile>classWt_1_1WReadOnlyProxyModel.html</anchorfile>
      <anchor>ae3048edb65f43f893331edee48ca0a57</anchor>
      <arglist>(const WModelIndex &amp;index, const cpp17::any &amp;value, ItemDataRole role=ItemDataRole::Edit) override</arglist>
    </member>
    <member kind="function">
      <type>virtual bool</type>
      <name>setData</name>
      <anchorfile>classWt_1_1WReadOnlyProxyModel.html</anchorfile>
      <anchor>abe2d5b91abf57ff6dbc26d0e66a77572</anchor>
      <arglist>(const WModelIndex &amp;index, const cpp17::any &amp;value, ItemDataRole role=ItemDataRole::Edit)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setData</name>
      <anchorfile>classWt_1_1WReadOnlyProxyModel.html</anchorfile>
      <anchor>aae463d7040f364ffcc008997f8e387a2</anchor>
      <arglist>(int row, int column, const cpp17::any &amp;value, ItemDataRole role=ItemDataRole::Edit, const WModelIndex &amp;parent=WModelIndex())</arglist>
    </member>
    <member kind="function">
      <type>virtual bool</type>
      <name>setHeaderData</name>
      <anchorfile>classWt_1_1WReadOnlyProxyModel.html</anchorfile>
      <anchor>abd4f1baf6088c2cc4847d3b384cddbd2</anchor>
      <arglist>(int section, Orientation orientation, const cpp17::any &amp;value, ItemDataRole role=ItemDataRole::Edit)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setHeaderData</name>
      <anchorfile>classWt_1_1WReadOnlyProxyModel.html</anchorfile>
      <anchor>a0bccbb4373b4c1e8bce85573b933d53d</anchor>
      <arglist>(int section, const cpp17::any &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WRectArea</name>
    <filename>classWt_1_1WRectArea.html</filename>
    <base>Wt::WAbstractArea</base>
    <member kind="function">
      <type></type>
      <name>WRectArea</name>
      <anchorfile>classWt_1_1WRectArea.html</anchorfile>
      <anchor>a56e72183f3e07a8161bd2795baaa9fc2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WRectArea</name>
      <anchorfile>classWt_1_1WRectArea.html</anchorfile>
      <anchor>ad0eaa4bb51b94b7f695fddde8df3adee</anchor>
      <arglist>(int x, int y, int width, int height)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WRectArea</name>
      <anchorfile>classWt_1_1WRectArea.html</anchorfile>
      <anchor>ae27e82fa1034ffb2855ab142ce8d19d3</anchor>
      <arglist>(double x, double y, double width, double height)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WRectArea</name>
      <anchorfile>classWt_1_1WRectArea.html</anchorfile>
      <anchor>a44f5f1b92b79e2355998a54cea5257c1</anchor>
      <arglist>(const WRectF &amp;rect)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setX</name>
      <anchorfile>classWt_1_1WRectArea.html</anchorfile>
      <anchor>a14c6788e518a2db3a3128110763695b8</anchor>
      <arglist>(int x)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>x</name>
      <anchorfile>classWt_1_1WRectArea.html</anchorfile>
      <anchor>a4b485f7ffe36bac2b3ed8ba53eeeb1a1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setY</name>
      <anchorfile>classWt_1_1WRectArea.html</anchorfile>
      <anchor>a0e19203a36ccf624d85be131f3b1ac30</anchor>
      <arglist>(int y)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>y</name>
      <anchorfile>classWt_1_1WRectArea.html</anchorfile>
      <anchor>a9adb38a8b880ee63a4a8ced57fa3d786</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setWidth</name>
      <anchorfile>classWt_1_1WRectArea.html</anchorfile>
      <anchor>a07614d6f30cbe7ae69b8aa562ebe0922</anchor>
      <arglist>(int width)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>width</name>
      <anchorfile>classWt_1_1WRectArea.html</anchorfile>
      <anchor>af80f14289bf0628def48ac65fbc3644b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setHeight</name>
      <anchorfile>classWt_1_1WRectArea.html</anchorfile>
      <anchor>a6ed26185f1c92c5fc9e3f80f2a7733b2</anchor>
      <arglist>(int height)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>height</name>
      <anchorfile>classWt_1_1WRectArea.html</anchorfile>
      <anchor>a0e762c2bbf56993836501e3e9277e6d7</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WRectF</name>
    <filename>classWt_1_1WRectF.html</filename>
    <base>Wt::WJavaScriptExposableObject</base>
    <member kind="function">
      <type></type>
      <name>WRectF</name>
      <anchorfile>classWt_1_1WRectF.html</anchorfile>
      <anchor>a7676cc3fde735f0eabc02df2ecb636c7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WRectF</name>
      <anchorfile>classWt_1_1WRectF.html</anchorfile>
      <anchor>a3d26d539fec651826796afb2a5b87a83</anchor>
      <arglist>(double x, double y, double width, double height)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WRectF</name>
      <anchorfile>classWt_1_1WRectF.html</anchorfile>
      <anchor>a23619ae019639c2057975535cd55c05c</anchor>
      <arglist>(const WPointF &amp;topLeft, const WPointF &amp;bottomRight)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classWt_1_1WRectF.html</anchorfile>
      <anchor>ab71c03b1976c575e88dd6468b6a7ed05</anchor>
      <arglist>(const WRectF &amp;rhs) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isNull</name>
      <anchorfile>classWt_1_1WRectF.html</anchorfile>
      <anchor>a985a5d8fa82611af27930355404933af</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEmpty</name>
      <anchorfile>classWt_1_1WRectF.html</anchorfile>
      <anchor>a9be611f35f248f140fff6158204f6b4a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setX</name>
      <anchorfile>classWt_1_1WRectF.html</anchorfile>
      <anchor>a6e3421e306699075d52111f60da2d057</anchor>
      <arglist>(double x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setY</name>
      <anchorfile>classWt_1_1WRectF.html</anchorfile>
      <anchor>a95ac1538d8f47afee7fa031dccf8a9bf</anchor>
      <arglist>(double y)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setWidth</name>
      <anchorfile>classWt_1_1WRectF.html</anchorfile>
      <anchor>af297f3a2020d409fa148f3e12e28097c</anchor>
      <arglist>(double width)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setHeight</name>
      <anchorfile>classWt_1_1WRectF.html</anchorfile>
      <anchor>ac035c1a098d61f09b746ec63d338ff9f</anchor>
      <arglist>(double height)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>x</name>
      <anchorfile>classWt_1_1WRectF.html</anchorfile>
      <anchor>a92bf38c756931648842beb8d01f5487f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>y</name>
      <anchorfile>classWt_1_1WRectF.html</anchorfile>
      <anchor>a0f9ddec041a61ffa34bb7e929a340c7d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>width</name>
      <anchorfile>classWt_1_1WRectF.html</anchorfile>
      <anchor>a1fb9fc1d30472acbe72eca65cc3287b4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>height</name>
      <anchorfile>classWt_1_1WRectF.html</anchorfile>
      <anchor>a27bbc91d7ab87be0860f60720932ac40</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>left</name>
      <anchorfile>classWt_1_1WRectF.html</anchorfile>
      <anchor>a72327414b1e16939a5fcb5a22acbc9b1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>top</name>
      <anchorfile>classWt_1_1WRectF.html</anchorfile>
      <anchor>a3fc4f6933836314d8ead04cc556edaaf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>right</name>
      <anchorfile>classWt_1_1WRectF.html</anchorfile>
      <anchor>a5b9031dca9a3f6fd413ce30e534a8c32</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>bottom</name>
      <anchorfile>classWt_1_1WRectF.html</anchorfile>
      <anchor>af3d8bdee9fed1a6fcd76602c1161d13d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WPointF</type>
      <name>topLeft</name>
      <anchorfile>classWt_1_1WRectF.html</anchorfile>
      <anchor>abef1b0eb43480b1aefdabd75afc55403</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WPointF</type>
      <name>topRight</name>
      <anchorfile>classWt_1_1WRectF.html</anchorfile>
      <anchor>a2611d645f3735c504a49e6319fa53168</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WPointF</type>
      <name>center</name>
      <anchorfile>classWt_1_1WRectF.html</anchorfile>
      <anchor>a9edff5ca92498f105b868a60f4f9e324</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WPointF</type>
      <name>bottomLeft</name>
      <anchorfile>classWt_1_1WRectF.html</anchorfile>
      <anchor>ad53ed329af948f1df379f82e4246ba0e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WPointF</type>
      <name>bottomRight</name>
      <anchorfile>classWt_1_1WRectF.html</anchorfile>
      <anchor>a688944c88348978178eaa481c62fd87f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>contains</name>
      <anchorfile>classWt_1_1WRectF.html</anchorfile>
      <anchor>ac3b44f5022c56166c6017502fc29737b</anchor>
      <arglist>(const WPointF &amp;p) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>contains</name>
      <anchorfile>classWt_1_1WRectF.html</anchorfile>
      <anchor>a1075375c3aba63d77970927db4dc42f4</anchor>
      <arglist>(double x, double y) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>intersects</name>
      <anchorfile>classWt_1_1WRectF.html</anchorfile>
      <anchor>ac4bb7a330aafbccf9b83e29657a445fb</anchor>
      <arglist>(const WRectF &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>WRectF</type>
      <name>united</name>
      <anchorfile>classWt_1_1WRectF.html</anchorfile>
      <anchor>a65f2eb4d1ac8c405a2b6bb3fab6afb2e</anchor>
      <arglist>(const WRectF &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>WRectF</type>
      <name>normalized</name>
      <anchorfile>classWt_1_1WRectF.html</anchorfile>
      <anchor>a78b0883837bcd01c5ca69e4244b29ee2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>jsValue</name>
      <anchorfile>classWt_1_1WRectF.html</anchorfile>
      <anchor>adecbf2e7493b6901ab3780443c979e06</anchor>
      <arglist>() const override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WRegExpValidator</name>
    <filename>classWt_1_1WRegExpValidator.html</filename>
    <base>Wt::WValidator</base>
    <member kind="function">
      <type></type>
      <name>WRegExpValidator</name>
      <anchorfile>classWt_1_1WRegExpValidator.html</anchorfile>
      <anchor>a824fd9d4fc58c0860a3c879adfe1e5fa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WRegExpValidator</name>
      <anchorfile>classWt_1_1WRegExpValidator.html</anchorfile>
      <anchor>ac50ac9577ea8ed1725892efc3c0670fb</anchor>
      <arglist>(const WString &amp;pattern)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WRegExpValidator</name>
      <anchorfile>classWt_1_1WRegExpValidator.html</anchorfile>
      <anchor>aa3a0d2b4c2bec81325eebfab1530d3dc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRegExp</name>
      <anchorfile>classWt_1_1WRegExpValidator.html</anchorfile>
      <anchor>a71190cef122cc6000be16d9703393cd9</anchor>
      <arglist>(const WString &amp;pattern)</arglist>
    </member>
    <member kind="function">
      <type>WString</type>
      <name>regExpPattern</name>
      <anchorfile>classWt_1_1WRegExpValidator.html</anchorfile>
      <anchor>af5fdaaa9deeafbcadbebd41455a9ad02</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::regex</type>
      <name>regExp</name>
      <anchorfile>classWt_1_1WRegExpValidator.html</anchorfile>
      <anchor>a0fb12549fd6b54c6cea9d1e8ef0c62d2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFlags</name>
      <anchorfile>classWt_1_1WRegExpValidator.html</anchorfile>
      <anchor>a461e39a6e009efe786d3189f5ca91584</anchor>
      <arglist>(WFlags&lt; RegExpFlag &gt; flags)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; RegExpFlag &gt;</type>
      <name>flags</name>
      <anchorfile>classWt_1_1WRegExpValidator.html</anchorfile>
      <anchor>a12123ba48eddc899ab7ced47c4f18d46</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Result</type>
      <name>validate</name>
      <anchorfile>classWt_1_1WRegExpValidator.html</anchorfile>
      <anchor>a03d815f655d597b13b775cbce412c8f4</anchor>
      <arglist>(const WString &amp;input) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInvalidNoMatchText</name>
      <anchorfile>classWt_1_1WRegExpValidator.html</anchorfile>
      <anchor>a41b52e1428a6561c5be695702e20318a</anchor>
      <arglist>(const WString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>WString</type>
      <name>invalidNoMatchText</name>
      <anchorfile>classWt_1_1WRegExpValidator.html</anchorfile>
      <anchor>a46155e7074f743795707f0602a99188e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>javaScriptValidate</name>
      <anchorfile>classWt_1_1WRegExpValidator.html</anchorfile>
      <anchor>a61f08af6fb4f2fa5d3f36b5455e11b8f</anchor>
      <arglist>() const override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WResource</name>
    <filename>classWt_1_1WResource.html</filename>
    <base>Wt::WObject</base>
    <member kind="function">
      <type></type>
      <name>WResource</name>
      <anchorfile>classWt_1_1WResource.html</anchorfile>
      <anchor>a2ae6f178b035e3d99d1bec175f0afbea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WResource</name>
      <anchorfile>classWt_1_1WResource.html</anchorfile>
      <anchor>a776c19c9bbc95330941744cd129bc01a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>suggestFileName</name>
      <anchorfile>classWt_1_1WResource.html</anchorfile>
      <anchor>a47632cad99e70712d4f898d97c3ea314</anchor>
      <arglist>(const Wt::WString &amp;name, ContentDisposition disposition=ContentDisposition::Attachment)</arglist>
    </member>
    <member kind="function">
      <type>const Wt::WString &amp;</type>
      <name>suggestedFileName</name>
      <anchorfile>classWt_1_1WResource.html</anchorfile>
      <anchor>a0f96ad3544cbcf441975f8970881e72d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDispositionType</name>
      <anchorfile>classWt_1_1WResource.html</anchorfile>
      <anchor>ad07f56c58e485b17620f2f1d93121640</anchor>
      <arglist>(ContentDisposition cd)</arglist>
    </member>
    <member kind="function">
      <type>ContentDisposition</type>
      <name>dispositionType</name>
      <anchorfile>classWt_1_1WResource.html</anchorfile>
      <anchor>a62d1c1fa243d8250fa01273eb7b0c674</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setChanged</name>
      <anchorfile>classWt_1_1WResource.html</anchorfile>
      <anchor>a9394f6c2ff6cadf8d1076ec52c5e909a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInternalPath</name>
      <anchorfile>classWt_1_1WResource.html</anchorfile>
      <anchor>a06bb9dbe3ae195c320cfed7b062d448a</anchor>
      <arglist>(const std::string &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>internalPath</name>
      <anchorfile>classWt_1_1WResource.html</anchorfile>
      <anchor>a12b871c53120ad1c7c708210f60422be</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>generateUrl</name>
      <anchorfile>classWt_1_1WResource.html</anchorfile>
      <anchor>a5060efcabde5f793c9d44c5ca557417d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>url</name>
      <anchorfile>classWt_1_1WResource.html</anchorfile>
      <anchor>a02363831ea1c0f7ee9efa91568bdc862</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Signal &amp;</type>
      <name>dataChanged</name>
      <anchorfile>classWt_1_1WResource.html</anchorfile>
      <anchor>a1527418354a584790c372e86a40c6027</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setUploadProgress</name>
      <anchorfile>classWt_1_1WResource.html</anchorfile>
      <anchor>ae0b96cdd80b982c74adb9a762c77d479</anchor>
      <arglist>(bool enabled)</arglist>
    </member>
    <member kind="function">
      <type>Signal&lt; ::uint64_t, ::uint64_t &gt; &amp;</type>
      <name>dataReceived</name>
      <anchorfile>classWt_1_1WResource.html</anchorfile>
      <anchor>a23e0db25d9ad7da08f5c36603def5863</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>write</name>
      <anchorfile>classWt_1_1WResource.html</anchorfile>
      <anchor>ad8bbe65a888cc43e0d356f18509b9a0f</anchor>
      <arglist>(std::ostream &amp;out, const Http::ParameterMap &amp;parameters=Http::ParameterMap(), const Http::UploadedFileMap &amp;files=Http::UploadedFileMap())</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>handleRequest</name>
      <anchorfile>classWt_1_1WResource.html</anchorfile>
      <anchor>a3a740f8cc29e2e6e4e58defc9c88b8b6</anchor>
      <arglist>(const Http::Request &amp;request, Http::Response &amp;response)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>handleAbort</name>
      <anchorfile>classWt_1_1WResource.html</anchorfile>
      <anchor>ad00f1b01eb9f44bd77249ee5a627b8c4</anchor>
      <arglist>(const Http::Request &amp;request)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>haveMoreData</name>
      <anchorfile>classWt_1_1WResource.html</anchorfile>
      <anchor>a1a9c35416eb690939ff288b053da3e1b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTakesUpdateLock</name>
      <anchorfile>classWt_1_1WResource.html</anchorfile>
      <anchor>a6695dad28a25c7cbfef93c371e7c5a1e</anchor>
      <arglist>(bool enabled)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>takesUpdateLock</name>
      <anchorfile>classWt_1_1WResource.html</anchorfile>
      <anchor>af0b52160a8d04700a17e9479dd489972</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>beingDeleted</name>
      <anchorfile>classWt_1_1WResource.html</anchorfile>
      <anchor>a24f65859427f54012fef2fa9da14870d</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Chart::WScatterData</name>
    <filename>classWt_1_1Chart_1_1WScatterData.html</filename>
    <base>Wt::Chart::WAbstractDataSeries3D</base>
    <member kind="function">
      <type></type>
      <name>WScatterData</name>
      <anchorfile>classWt_1_1Chart_1_1WScatterData.html</anchorfile>
      <anchor>ac67c1058802e142e63e3000785676a13</anchor>
      <arglist>(std::shared_ptr&lt; WAbstractItemModel &gt; model)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDroplinesEnabled</name>
      <anchorfile>classWt_1_1Chart_1_1WScatterData.html</anchorfile>
      <anchor>a7a28decf7891bb83d157ccfbc2b39405</anchor>
      <arglist>(bool enable=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>droplinesEnabled</name>
      <anchorfile>classWt_1_1Chart_1_1WScatterData.html</anchorfile>
      <anchor>a0da1816bb5f68abb2d18fde57da4dfa8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDroplinesPen</name>
      <anchorfile>classWt_1_1Chart_1_1WScatterData.html</anchorfile>
      <anchor>a1027e5bd20bd2180964299855fda2b00</anchor>
      <arglist>(const WPen &amp;pen)</arglist>
    </member>
    <member kind="function">
      <type>WPen</type>
      <name>droplinesPen</name>
      <anchorfile>classWt_1_1Chart_1_1WScatterData.html</anchorfile>
      <anchor>a1cc778b09d447996894bed967d5735ab</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setXSeriesColumn</name>
      <anchorfile>classWt_1_1Chart_1_1WScatterData.html</anchorfile>
      <anchor>a4bc8479f423557ac9d54931a99676115</anchor>
      <arglist>(int columnNumber)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>XSeriesColumn</name>
      <anchorfile>classWt_1_1Chart_1_1WScatterData.html</anchorfile>
      <anchor>a7d51b4de290d446338ff77e8e7432e4d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setYSeriesColumn</name>
      <anchorfile>classWt_1_1Chart_1_1WScatterData.html</anchorfile>
      <anchor>a181d22660af97b74df82d5ffff2b2bd5</anchor>
      <arglist>(int columnNumber)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>YSeriesColumn</name>
      <anchorfile>classWt_1_1Chart_1_1WScatterData.html</anchorfile>
      <anchor>a9b7d0910ee471868bff57c20bdd107ff</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setZSeriesColumn</name>
      <anchorfile>classWt_1_1Chart_1_1WScatterData.html</anchorfile>
      <anchor>ab90fcd85ce9c11e89cd2e10290e83a6c</anchor>
      <arglist>(int columnNumber)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>ZSeriesColumn</name>
      <anchorfile>classWt_1_1Chart_1_1WScatterData.html</anchorfile>
      <anchor>a0f4356c1bfd2f9ada8cb2bc649f431a4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setColorColumn</name>
      <anchorfile>classWt_1_1Chart_1_1WScatterData.html</anchorfile>
      <anchor>aaa2c4098a3a44cf5f6c890284cd3681c</anchor>
      <arglist>(int columnNumber, ItemDataRole role=ItemDataRole::Display)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSizeColumn</name>
      <anchorfile>classWt_1_1Chart_1_1WScatterData.html</anchorfile>
      <anchor>a3c4957cc9635bc4832a1f3adf5c44a59</anchor>
      <arglist>(int columnNumber, ItemDataRole role=ItemDataRole::Display)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; WPointSelection &gt;</type>
      <name>pickPoints</name>
      <anchorfile>classWt_1_1Chart_1_1WScatterData.html</anchorfile>
      <anchor>a9b79332852c9d4537b6f4234158b7db9</anchor>
      <arglist>(int x, int y, int radius) const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; WPointSelection &gt;</type>
      <name>pickPoints</name>
      <anchorfile>classWt_1_1Chart_1_1WScatterData.html</anchorfile>
      <anchor>a54736b7f7aea95a530e736620c6cbb2c</anchor>
      <arglist>(int x1, int y1, int x2, int y2) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>minimum</name>
      <anchorfile>classWt_1_1Chart_1_1WScatterData.html</anchorfile>
      <anchor>a615ec84bd535901537fd6477e8ee8805</anchor>
      <arglist>(Axis axis) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>maximum</name>
      <anchorfile>classWt_1_1Chart_1_1WScatterData.html</anchorfile>
      <anchor>a5ec2a756861c68c48cc11a3a5640769a</anchor>
      <arglist>(Axis axis) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>initializeGL</name>
      <anchorfile>classWt_1_1Chart_1_1WScatterData.html</anchorfile>
      <anchor>afb10fdf685aaf616c5603248fb227630</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>paintGL</name>
      <anchorfile>classWt_1_1Chart_1_1WScatterData.html</anchorfile>
      <anchor>abd31bb235b6dbcd09a9d93e1e335b78c</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>updateGL</name>
      <anchorfile>classWt_1_1Chart_1_1WScatterData.html</anchorfile>
      <anchor>a60c4817c86999efe1348631e55bb9299</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>resizeGL</name>
      <anchorfile>classWt_1_1Chart_1_1WScatterData.html</anchorfile>
      <anchor>a8e11bb121f3b6c2ada5e2b54d2f3496b</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>deleteAllGLResources</name>
      <anchorfile>classWt_1_1Chart_1_1WScatterData.html</anchorfile>
      <anchor>a42621f82b1c478054f2adf2438a950bd</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WScrollEvent</name>
    <filename>classWt_1_1WScrollEvent.html</filename>
    <member kind="function">
      <type></type>
      <name>WScrollEvent</name>
      <anchorfile>classWt_1_1WScrollEvent.html</anchorfile>
      <anchor>a1b1dc654c40ecdfd742936e663728610</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>scrollX</name>
      <anchorfile>classWt_1_1WScrollEvent.html</anchorfile>
      <anchor>ad4b88d6ed3b5882f9c17d20ffb57aa69</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>scrollY</name>
      <anchorfile>classWt_1_1WScrollEvent.html</anchorfile>
      <anchor>ab7ef7ed4ac3b8acf75519d39ecfdaf3b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>viewportWidth</name>
      <anchorfile>classWt_1_1WScrollEvent.html</anchorfile>
      <anchor>a30b79372b197309660c4639f67ba2cb6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>viewportHeight</name>
      <anchorfile>classWt_1_1WScrollEvent.html</anchorfile>
      <anchor>a2847cb7daf8265dc86d733bf029fefab</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Chart::WSelection</name>
    <filename>classWt_1_1Chart_1_1WSelection.html</filename>
    <member kind="variable">
      <type>double</type>
      <name>distance</name>
      <anchorfile>classWt_1_1Chart_1_1WSelection.html</anchorfile>
      <anchor>a55536297e327f0866c31521bf90c907f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WSelectionBox</name>
    <filename>classWt_1_1WSelectionBox.html</filename>
    <base>Wt::WComboBox</base>
    <member kind="function">
      <type></type>
      <name>WSelectionBox</name>
      <anchorfile>classWt_1_1WSelectionBox.html</anchorfile>
      <anchor>afc0128aea752993fdde3f7f67cc00cbf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>verticalSize</name>
      <anchorfile>classWt_1_1WSelectionBox.html</anchorfile>
      <anchor>a7da8b30f0de98440d893159b1a6ef872</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVerticalSize</name>
      <anchorfile>classWt_1_1WSelectionBox.html</anchorfile>
      <anchor>a90bcf3611a6f54e0358b7f208b0cb478</anchor>
      <arglist>(int items)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSelectionMode</name>
      <anchorfile>classWt_1_1WSelectionBox.html</anchorfile>
      <anchor>aa3119417024e25b7b24e66cab17edb31</anchor>
      <arglist>(SelectionMode mode)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual SelectionMode</type>
      <name>selectionMode</name>
      <anchorfile>classWt_1_1WSelectionBox.html</anchorfile>
      <anchor>a2d3328b92afaaaf43f918fcd3b7e2ec7</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>const std::set&lt; int &gt; &amp;</type>
      <name>selectedIndexes</name>
      <anchorfile>classWt_1_1WSelectionBox.html</anchorfile>
      <anchor>a04c8273f69d9a6776bd4345332dec7d2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSelectedIndexes</name>
      <anchorfile>classWt_1_1WSelectionBox.html</anchorfile>
      <anchor>a4fcb25c6d7c00f5659959180df9a337c</anchor>
      <arglist>(const std::set&lt; int &gt; &amp;selection)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearSelection</name>
      <anchorfile>classWt_1_1WSelectionBox.html</anchorfile>
      <anchor>a2925ed26e7e56d8ce7bca40dc338f5e0</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WServer</name>
    <filename>classWt_1_1WServer.html</filename>
    <class kind="class">Wt::WServer::Exception</class>
    <class kind="class">Wt::WServer::SessionInfo</class>
    <member kind="function">
      <type>WTCONNECTOR_API</type>
      <name>WServer</name>
      <anchorfile>classWt_1_1WServer.html</anchorfile>
      <anchor>a4e347c4f853f527999c8c46c62d16f6b</anchor>
      <arglist>(const std::string &amp;wtApplicationPath=std::string(), const std::string &amp;wtConfigurationFile=std::string())</arglist>
    </member>
    <member kind="function">
      <type>WTCONNECTOR_API</type>
      <name>WServer</name>
      <anchorfile>classWt_1_1WServer.html</anchorfile>
      <anchor>af1c8d38be9df939846f27e773ec73041</anchor>
      <arglist>(int argc, char *argv[], const std::string &amp;wtConfigurationFile=std::string())</arglist>
    </member>
    <member kind="function">
      <type>WTCONNECTOR_API</type>
      <name>WServer</name>
      <anchorfile>classWt_1_1WServer.html</anchorfile>
      <anchor>af22c4176fb07d6f5f3cab42ef7f36f7f</anchor>
      <arglist>(const std::string &amp;applicationPath, const std::vector&lt; std::string &gt; &amp;args, const std::string &amp;wtConfigurationFile=std::string())</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WTCONNECTOR_API</type>
      <name>~WServer</name>
      <anchorfile>classWt_1_1WServer.html</anchorfile>
      <anchor>ae7c9762cd7be550b0fcd71593af5fb37</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>WT_API void</type>
      <name>setIOService</name>
      <anchorfile>classWt_1_1WServer.html</anchorfile>
      <anchor>a91dfcff8af7c2c42f26d3e4033cd9657</anchor>
      <arglist>(WIOService &amp;ioService)</arglist>
    </member>
    <member kind="function">
      <type>WT_API WIOService &amp;</type>
      <name>ioService</name>
      <anchorfile>classWt_1_1WServer.html</anchorfile>
      <anchor>a8e1945f6fc8013457037bc7280f5cfaa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>WTCONNECTOR_API void</type>
      <name>setServerConfiguration</name>
      <anchorfile>classWt_1_1WServer.html</anchorfile>
      <anchor>a58852f006b4a233b49c332e819e3dce2</anchor>
      <arglist>(int argc, char *argv[], const std::string &amp;serverConfigurationFile=std::string())</arglist>
    </member>
    <member kind="function">
      <type>WTCONNECTOR_API void</type>
      <name>setServerConfiguration</name>
      <anchorfile>classWt_1_1WServer.html</anchorfile>
      <anchor>a6ef2c780a70eebc68707ea0d684b8509</anchor>
      <arglist>(const std::string &amp;applicationPath, const std::vector&lt; std::string &gt; &amp;args, const std::string &amp;serverConfigurationFile=std::string())</arglist>
    </member>
    <member kind="function">
      <type>WT_API void</type>
      <name>addEntryPoint</name>
      <anchorfile>classWt_1_1WServer.html</anchorfile>
      <anchor>a84f84652ccb139850adcf5ea75f50fa5</anchor>
      <arglist>(EntryPointType type, ApplicationCreator callback, const std::string &amp;path=std::string(), const std::string &amp;favicon=std::string())</arglist>
    </member>
    <member kind="function">
      <type>WT_API void</type>
      <name>addResource</name>
      <anchorfile>classWt_1_1WServer.html</anchorfile>
      <anchor>a7b78b5e35d2dc3086faa54f82124cf38</anchor>
      <arglist>(WResource *resource, const std::string &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>WT_API void</type>
      <name>removeEntryPoint</name>
      <anchorfile>classWt_1_1WServer.html</anchorfile>
      <anchor>a9f5a82118198a1d2341fb89572fd8693</anchor>
      <arglist>(const std::string &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>WTCONNECTOR_API bool</type>
      <name>start</name>
      <anchorfile>classWt_1_1WServer.html</anchorfile>
      <anchor>a921af79ce0a6a35555409f2f844f8a72</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>WTCONNECTOR_API void</type>
      <name>stop</name>
      <anchorfile>classWt_1_1WServer.html</anchorfile>
      <anchor>a806538821ad3fe9b4b0b28c55fa160a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>WTCONNECTOR_API bool</type>
      <name>isRunning</name>
      <anchorfile>classWt_1_1WServer.html</anchorfile>
      <anchor>a182dd9bddead67b08c4802a8c8065b4a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WTCONNECTOR_API void</type>
      <name>run</name>
      <anchorfile>classWt_1_1WServer.html</anchorfile>
      <anchor>a360cce4c69d5344e4a954f3fa7b4a896</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>WTCONNECTOR_API void</type>
      <name>resume</name>
      <anchorfile>classWt_1_1WServer.html</anchorfile>
      <anchor>ad27189183523a6d718db4c7733cd29ab</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>WTCONNECTOR_API int</type>
      <name>httpPort</name>
      <anchorfile>classWt_1_1WServer.html</anchorfile>
      <anchor>a5ff5c3155eb8952346d38cdcf6797a23</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WT_API std::string</type>
      <name>appRoot</name>
      <anchorfile>classWt_1_1WServer.html</anchorfile>
      <anchor>a29fe41b5b7a5fb80c1c2f68b676f53f7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WT_API void</type>
      <name>post</name>
      <anchorfile>classWt_1_1WServer.html</anchorfile>
      <anchor>a58d265cf6314cc87fa911cbf290b4167</anchor>
      <arglist>(const std::string &amp;sessionId, const std::function&lt; void()&gt; &amp;function, const std::function&lt; void()&gt; &amp;fallBackFunction=std::function&lt; void()&gt;())</arglist>
    </member>
    <member kind="function">
      <type>WT_API void</type>
      <name>postAll</name>
      <anchorfile>classWt_1_1WServer.html</anchorfile>
      <anchor>afd61307d5d869cfecea239dac720a86d</anchor>
      <arglist>(const std::function&lt; void()&gt; &amp;function)</arglist>
    </member>
    <member kind="function">
      <type>WT_API void</type>
      <name>schedule</name>
      <anchorfile>classWt_1_1WServer.html</anchorfile>
      <anchor>a5f850e30f9bd54a946c3f832d60f5b2a</anchor>
      <arglist>(std::chrono::steady_clock::duration duration, const std::string &amp;sessionId, const std::function&lt; void()&gt; &amp;function, const std::function&lt; void()&gt; &amp;fallBackFunction=std::function&lt; void()&gt;())</arglist>
    </member>
    <member kind="function">
      <type>WTCONNECTOR_API void</type>
      <name>setSslPasswordCallback</name>
      <anchorfile>classWt_1_1WServer.html</anchorfile>
      <anchor>ae3aa82f8e28463dd0f6e4bbd30fb14a6</anchor>
      <arglist>(const SslPasswordCallback &amp;cb)</arglist>
    </member>
    <member kind="function">
      <type>WT_API bool</type>
      <name>readConfigurationProperty</name>
      <anchorfile>classWt_1_1WServer.html</anchorfile>
      <anchor>aad7fd027c16897967acf6d1e602923d8</anchor>
      <arglist>(const std::string &amp;name, std::string &amp;value) const</arglist>
    </member>
    <member kind="function">
      <type>WT_API void</type>
      <name>setLocalizedStrings</name>
      <anchorfile>classWt_1_1WServer.html</anchorfile>
      <anchor>a17d234e9f7b196aee7eb868a351eddaa</anchor>
      <arglist>(const std::shared_ptr&lt; WLocalizedStrings &gt; &amp;stringResolver)</arglist>
    </member>
    <member kind="function">
      <type>WT_API std::shared_ptr&lt; WLocalizedStrings &gt;</type>
      <name>localizedStrings</name>
      <anchorfile>classWt_1_1WServer.html</anchorfile>
      <anchor>ae8dbb9cc4e418517ee0568a0dd1df182</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WTCONNECTOR_API std::vector&lt; SessionInfo &gt;</type>
      <name>sessions</name>
      <anchorfile>classWt_1_1WServer.html</anchorfile>
      <anchor>a64b060069d78afd7bc3ddd69b956279c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WT_API WLogger &amp;</type>
      <name>logger</name>
      <anchorfile>classWt_1_1WServer.html</anchorfile>
      <anchor>a84f5147f825aa915b1cd01c0f6f026f9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>WT_API void</type>
      <name>setCustomLogger</name>
      <anchorfile>classWt_1_1WServer.html</anchorfile>
      <anchor>a45fdbea913a16a310e10e337e5933072</anchor>
      <arglist>(const WLogSink &amp;customLogger)</arglist>
    </member>
    <member kind="function">
      <type>WT_API WLogEntry</type>
      <name>log</name>
      <anchorfile>classWt_1_1WServer.html</anchorfile>
      <anchor>a6c1d27851d8a9ef488acf488c69daf94</anchor>
      <arglist>(const std::string &amp;type) const</arglist>
    </member>
    <member kind="function">
      <type>WT_API bool</type>
      <name>dedicatedSessionProcess</name>
      <anchorfile>classWt_1_1WServer.html</anchorfile>
      <anchor>aa47d7a7af63b11ae5c49ea226401b5fa</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static WServer *</type>
      <name>instance</name>
      <anchorfile>classWt_1_1WServer.html</anchorfile>
      <anchor>aa3eab477bbb3bc73a3ce0f3535003bff</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static WT_API int</type>
      <name>waitForShutdown</name>
      <anchorfile>classWt_1_1WServer.html</anchorfile>
      <anchor>ac41b2ac3e3c1aba8dcd6b1295cc73036</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static WT_API void</type>
      <name>restart</name>
      <anchorfile>classWt_1_1WServer.html</anchorfile>
      <anchor>a9631ac0b2b08d3e848120ad2f52cde85</anchor>
      <arglist>(int argc, char **argv, char **envp)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static WT_API void</type>
      <name>restart</name>
      <anchorfile>classWt_1_1WServer.html</anchorfile>
      <anchor>afd4dc8802de5f9b93b23ea7948c8a91e</anchor>
      <arglist>(const std::string &amp;applicationPath, const std::vector&lt; std::string &gt; &amp;args)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>WRun</name>
      <anchorfile>classWt_1_1WServer.html</anchorfile>
      <anchor>abca6890dab44d87bd3af64705ac072d3</anchor>
      <arglist>(int argc, char **argv, ApplicationCreator createApplication=0)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>WRun</name>
      <anchorfile>classWt_1_1WServer.html</anchorfile>
      <anchor>af2100c604f1ad933256097972fd38102</anchor>
      <arglist>(const std::string &amp;applicationPath, const std::vector&lt; std::string &gt; &amp;args, ApplicationCreator createApplication=0)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WShadow</name>
    <filename>classWt_1_1WShadow.html</filename>
    <member kind="function">
      <type></type>
      <name>WShadow</name>
      <anchorfile>classWt_1_1WShadow.html</anchorfile>
      <anchor>aeedaae98b1623a1c99b939baaad08e84</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WShadow</name>
      <anchorfile>classWt_1_1WShadow.html</anchorfile>
      <anchor>af265324ab60682594748eb555c00af6d</anchor>
      <arglist>(double dx, double dy, const WColor &amp;color, double blur)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classWt_1_1WShadow.html</anchorfile>
      <anchor>af462f4c196e7d601af6ae02589dd3c11</anchor>
      <arglist>(const WShadow &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classWt_1_1WShadow.html</anchorfile>
      <anchor>ad502632c8d6316aac1b34dbd191fdbd2</anchor>
      <arglist>(const WShadow &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>none</name>
      <anchorfile>classWt_1_1WShadow.html</anchorfile>
      <anchor>a26d675e4f528cd894b530df793cb4662</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setOffsets</name>
      <anchorfile>classWt_1_1WShadow.html</anchorfile>
      <anchor>af9dd7c26509053e501de5ce0965b14a4</anchor>
      <arglist>(double dx, double dy)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>offsetX</name>
      <anchorfile>classWt_1_1WShadow.html</anchorfile>
      <anchor>a9c58deca12e49611d7c0560ac1caa13b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>offsetY</name>
      <anchorfile>classWt_1_1WShadow.html</anchorfile>
      <anchor>a5795d6314cae14d0708d37e3ad0b78b8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setColor</name>
      <anchorfile>classWt_1_1WShadow.html</anchorfile>
      <anchor>a6e9b6616a273f18bd1356d41b15b8030</anchor>
      <arglist>(const WColor &amp;color)</arglist>
    </member>
    <member kind="function">
      <type>const WColor &amp;</type>
      <name>color</name>
      <anchorfile>classWt_1_1WShadow.html</anchorfile>
      <anchor>ab8455f3126ab20c686d05437113ce886</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBlur</name>
      <anchorfile>classWt_1_1WShadow.html</anchorfile>
      <anchor>ace7c00e0277344fe481d8e7b8815d1bc</anchor>
      <arglist>(double blur)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>blur</name>
      <anchorfile>classWt_1_1WShadow.html</anchorfile>
      <anchor>a9ca844a79c7ad9f99fb7a01ee4a469a1</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WSlider</name>
    <filename>classWt_1_1WSlider.html</filename>
    <base>Wt::WFormWidget</base>
    <member kind="enumeration">
      <type></type>
      <name>TickPosition</name>
      <anchorfile>classWt_1_1WSlider.html</anchorfile>
      <anchor>a393f2ee54ef0816e7fb774db7b449cf4</anchor>
      <arglist></arglist>
      <enumvalue file="classWt_1_1WSlider.html" anchor="a393f2ee54ef0816e7fb774db7b449cf4a70d1efbafac92504a70acea15ef15937">TicksAbove</enumvalue>
      <enumvalue file="classWt_1_1WSlider.html" anchor="a393f2ee54ef0816e7fb774db7b449cf4a01fffb8d96e2042b86f8567936d69877">TicksBelow</enumvalue>
      <enumvalue file="classWt_1_1WSlider.html" anchor="a393f2ee54ef0816e7fb774db7b449cf4ab35cbeef97b189c8171705e7449e13dc">TicksLeft</enumvalue>
      <enumvalue file="classWt_1_1WSlider.html" anchor="a393f2ee54ef0816e7fb774db7b449cf4a0c4cc990d381609e4076c659b1c02abd">TicksRight</enumvalue>
    </member>
    <member kind="function">
      <type></type>
      <name>WSlider</name>
      <anchorfile>classWt_1_1WSlider.html</anchorfile>
      <anchor>af92675e1abb1bee1c99a88e1f46dc608</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WSlider</name>
      <anchorfile>classWt_1_1WSlider.html</anchorfile>
      <anchor>aa040a0cf8e99c92a836b0a263d102866</anchor>
      <arglist>(Orientation orientation)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WSlider</name>
      <anchorfile>classWt_1_1WSlider.html</anchorfile>
      <anchor>a86b98ee70f4d0d4f5e3fe23b3939a8e7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNativeControl</name>
      <anchorfile>classWt_1_1WSlider.html</anchorfile>
      <anchor>ac5a645c0b1ddd14ffc68a317f4d7ac53</anchor>
      <arglist>(bool nativeControl)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>nativeControl</name>
      <anchorfile>classWt_1_1WSlider.html</anchorfile>
      <anchor>a6a85f2f070be652d5831ba59249ce4c9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setOrientation</name>
      <anchorfile>classWt_1_1WSlider.html</anchorfile>
      <anchor>abbb9b8059f3a19cd36ffbfda00467016</anchor>
      <arglist>(Wt::Orientation orientation)</arglist>
    </member>
    <member kind="function">
      <type>Orientation</type>
      <name>orientation</name>
      <anchorfile>classWt_1_1WSlider.html</anchorfile>
      <anchor>a0de580b124cd7058c2e8748a2d43d735</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTickInterval</name>
      <anchorfile>classWt_1_1WSlider.html</anchorfile>
      <anchor>a3497303ace2820b3bd457119cec35411</anchor>
      <arglist>(int tickInterval)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>tickInterval</name>
      <anchorfile>classWt_1_1WSlider.html</anchorfile>
      <anchor>a3b90641bc4848282e0853cd35d356993</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTickPosition</name>
      <anchorfile>classWt_1_1WSlider.html</anchorfile>
      <anchor>a58e4a2a02c31b47040d35d646ad2ec0b</anchor>
      <arglist>(WFlags&lt; TickPosition &gt; tickPosition)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; TickPosition &gt;</type>
      <name>tickPosition</name>
      <anchorfile>classWt_1_1WSlider.html</anchorfile>
      <anchor>a005a92479e473532dde3e2ef9de8b4f7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setValue</name>
      <anchorfile>classWt_1_1WSlider.html</anchorfile>
      <anchor>afc41362dafd1f53f4d0d52385c04d40c</anchor>
      <arglist>(int value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>value</name>
      <anchorfile>classWt_1_1WSlider.html</anchorfile>
      <anchor>a9c25a74dd82fc6484c16edd12172f323</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMaximum</name>
      <anchorfile>classWt_1_1WSlider.html</anchorfile>
      <anchor>ae1fcddb363795d572da2ae68362771e5</anchor>
      <arglist>(int maximum)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>maximum</name>
      <anchorfile>classWt_1_1WSlider.html</anchorfile>
      <anchor>ad47a772664c89c110c639759d24a81d6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMinimum</name>
      <anchorfile>classWt_1_1WSlider.html</anchorfile>
      <anchor>aea0dad399f79f2014dbd3f06d7cdd6d0</anchor>
      <arglist>(int minimum)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>minimum</name>
      <anchorfile>classWt_1_1WSlider.html</anchorfile>
      <anchor>a4c0a84773163d3c456a270103aa34402</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRange</name>
      <anchorfile>classWt_1_1WSlider.html</anchorfile>
      <anchor>a2031dbb839f0da2ade7e8e88d32079e4</anchor>
      <arglist>(int minimum, int maximum)</arglist>
    </member>
    <member kind="function">
      <type>Signal&lt; int &gt; &amp;</type>
      <name>valueChanged</name>
      <anchorfile>classWt_1_1WSlider.html</anchorfile>
      <anchor>a26548e39f70fbbd0383eecf302ddb73c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>JSignal&lt; int &gt; &amp;</type>
      <name>sliderMoved</name>
      <anchorfile>classWt_1_1WSlider.html</anchorfile>
      <anchor>ac7257988652fc39910b1088cf02ecc5a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setHandleWidth</name>
      <anchorfile>classWt_1_1WSlider.html</anchorfile>
      <anchor>aa80f269bd17b7c9c48f4e081536089e6</anchor>
      <arglist>(int width)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>handleWidth</name>
      <anchorfile>classWt_1_1WSlider.html</anchorfile>
      <anchor>a4c6c3621171b7cb5e0b0eabd26e3f2d4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setDisabled</name>
      <anchorfile>classWt_1_1WSlider.html</anchorfile>
      <anchor>aef0c4d5bac9bbb471b37f02708906e55</anchor>
      <arglist>(bool disabled) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>resize</name>
      <anchorfile>classWt_1_1WSlider.html</anchorfile>
      <anchor>a7411e12ff0a57b6cbc202876d7312199</anchor>
      <arglist>(const WLength &amp;width, const WLength &amp;height) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WString</type>
      <name>valueText</name>
      <anchorfile>classWt_1_1WSlider.html</anchorfile>
      <anchor>a18d55f6cbbad0ecaf78b1fe918a05e7e</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setValueText</name>
      <anchorfile>classWt_1_1WSlider.html</anchorfile>
      <anchor>a10756f1ac7a9b633bfe2894dd543edce</anchor>
      <arglist>(const WString &amp;value) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>enableAjax</name>
      <anchorfile>classWt_1_1WSlider.html</anchorfile>
      <anchor>ae1d4c35f6036984e840de04885519dfa</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const Wt::WFlags&lt; TickPosition &gt;</type>
      <name>NoTicks</name>
      <anchorfile>classWt_1_1WSlider.html</anchorfile>
      <anchor>a4eea09fd0af7a1e252940f3e8b141f9c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const Wt::WFlags&lt; TickPosition &gt;</type>
      <name>TicksBothSides</name>
      <anchorfile>classWt_1_1WSlider.html</anchorfile>
      <anchor>adb2b7b683aa56fee39a4b62b17b37fef</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>paintTick</name>
      <anchorfile>classWt_1_1WSlider.html</anchorfile>
      <anchor>a37a805e46690b4b6c6a0c50417281a8f</anchor>
      <arglist>(WPainter &amp;painter, int value, int x, int y)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual std::unique_ptr&lt; WInteractWidget &gt;</type>
      <name>createHandle</name>
      <anchorfile>classWt_1_1WSlider.html</anchorfile>
      <anchor>adb60ebc24605535f6294e6a22b207622</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>layoutSizeChanged</name>
      <anchorfile>classWt_1_1WSlider.html</anchorfile>
      <anchor>a00b6c04693e116005d47499dcff0bdaa</anchor>
      <arglist>(int width, int height) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>render</name>
      <anchorfile>classWt_1_1WSlider.html</anchorfile>
      <anchor>a5722108870e76f2ec09e47ffcd805e98</anchor>
      <arglist>(WFlags&lt; RenderFlag &gt; flags) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WSocketNotifier</name>
    <filename>classWt_1_1WSocketNotifier.html</filename>
    <base>Wt::WObject</base>
    <member kind="enumeration">
      <type></type>
      <name>Type</name>
      <anchorfile>classWt_1_1WSocketNotifier.html</anchorfile>
      <anchor>a5be2fe0fe94d449a0d6b1ac77f7b548c</anchor>
      <arglist></arglist>
      <enumvalue file="classWt_1_1WSocketNotifier.html" anchor="a5be2fe0fe94d449a0d6b1ac77f7b548ca7a1a5f3e79fdc91edf2f5ead9d66abb4">Read</enumvalue>
      <enumvalue file="classWt_1_1WSocketNotifier.html" anchor="a5be2fe0fe94d449a0d6b1ac77f7b548ca1129c0e4d43f2d121652a7302712cff6">Write</enumvalue>
      <enumvalue file="classWt_1_1WSocketNotifier.html" anchor="a5be2fe0fe94d449a0d6b1ac77f7b548cab0d4998a26f5b5742ad38c4af8817e32">Exception</enumvalue>
    </member>
    <member kind="function">
      <type></type>
      <name>WSocketNotifier</name>
      <anchorfile>classWt_1_1WSocketNotifier.html</anchorfile>
      <anchor>a056e22e7cba2ef8a9578b2f9874de49c</anchor>
      <arglist>(int socket, Type type)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WSocketNotifier</name>
      <anchorfile>classWt_1_1WSocketNotifier.html</anchorfile>
      <anchor>aff88999b1c55254f8b129193a53ee485</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>socket</name>
      <anchorfile>classWt_1_1WSocketNotifier.html</anchorfile>
      <anchor>a76e35d7668d096b741315c34eb7c35aa</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Type</type>
      <name>type</name>
      <anchorfile>classWt_1_1WSocketNotifier.html</anchorfile>
      <anchor>a9797a002ce0fa1642e7a78917972ac6b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setEnabled</name>
      <anchorfile>classWt_1_1WSocketNotifier.html</anchorfile>
      <anchor>a9cb21fa4b5827a205b21f9b656baca6d</anchor>
      <arglist>(bool enabled)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEnabled</name>
      <anchorfile>classWt_1_1WSocketNotifier.html</anchorfile>
      <anchor>a846a84a3df2b30c746a74cb27eb0d7ac</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Signal&lt; int &gt; &amp;</type>
      <name>activated</name>
      <anchorfile>classWt_1_1WSocketNotifier.html</anchorfile>
      <anchor>acf78fc846ca6f915111533575dcc9401</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WSortFilterProxyModel</name>
    <filename>classWt_1_1WSortFilterProxyModel.html</filename>
    <base>Wt::WAbstractProxyModel</base>
    <member kind="function">
      <type></type>
      <name>WSortFilterProxyModel</name>
      <anchorfile>classWt_1_1WSortFilterProxyModel.html</anchorfile>
      <anchor>a164830ee100cd2d755262db8f297fd69</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~WSortFilterProxyModel</name>
      <anchorfile>classWt_1_1WSortFilterProxyModel.html</anchorfile>
      <anchor>acf3b4890f299bb548b0351f6e68610b4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WModelIndex</type>
      <name>mapFromSource</name>
      <anchorfile>classWt_1_1WSortFilterProxyModel.html</anchorfile>
      <anchor>a321000bb1efb6e2e1b399714fa4ee391</anchor>
      <arglist>(const WModelIndex &amp;sourceIndex) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WModelIndex</type>
      <name>mapToSource</name>
      <anchorfile>classWt_1_1WSortFilterProxyModel.html</anchorfile>
      <anchor>a3b7b0e707f01c4d056592a5ccaf69b9b</anchor>
      <arglist>(const WModelIndex &amp;proxyIndex) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setSourceModel</name>
      <anchorfile>classWt_1_1WSortFilterProxyModel.html</anchorfile>
      <anchor>af09be1f14c3e567af19641c76169e609</anchor>
      <arglist>(const std::shared_ptr&lt; WAbstractItemModel &gt; &amp;sourceModel) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFilterKeyColumn</name>
      <anchorfile>classWt_1_1WSortFilterProxyModel.html</anchorfile>
      <anchor>aaf272fe23196b67a409e7d0de03fd8d5</anchor>
      <arglist>(int column)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>filterKeyColumn</name>
      <anchorfile>classWt_1_1WSortFilterProxyModel.html</anchorfile>
      <anchor>a699995360233ac666860268a48a17e69</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFilterRegExp</name>
      <anchorfile>classWt_1_1WSortFilterProxyModel.html</anchorfile>
      <anchor>abd4e255015997a23017de5df48be3a8f</anchor>
      <arglist>(std::unique_ptr&lt; std::regex &gt; pattern)</arglist>
    </member>
    <member kind="function">
      <type>std::regex *</type>
      <name>filterRegExp</name>
      <anchorfile>classWt_1_1WSortFilterProxyModel.html</anchorfile>
      <anchor>a9cb7565538df7c8459e627a093845cc0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFilterRole</name>
      <anchorfile>classWt_1_1WSortFilterProxyModel.html</anchorfile>
      <anchor>a813d0ddf54e2e7ce7ccbd1b2a2c6819f</anchor>
      <arglist>(ItemDataRole role)</arglist>
    </member>
    <member kind="function">
      <type>ItemDataRole</type>
      <name>filterRole</name>
      <anchorfile>classWt_1_1WSortFilterProxyModel.html</anchorfile>
      <anchor>a0d329225cf7e958acad9900218880f62</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSortRole</name>
      <anchorfile>classWt_1_1WSortFilterProxyModel.html</anchorfile>
      <anchor>a097579ed002d4506771dc0eeb478ba4c</anchor>
      <arglist>(ItemDataRole role)</arglist>
    </member>
    <member kind="function">
      <type>ItemDataRole</type>
      <name>sortRole</name>
      <anchorfile>classWt_1_1WSortFilterProxyModel.html</anchorfile>
      <anchor>a1aa9ffa360b2db4eb67d3d4de5c5d895</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sortColumn</name>
      <anchorfile>classWt_1_1WSortFilterProxyModel.html</anchorfile>
      <anchor>a841e9268e221448aeabc9277dc6014b3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>SortOrder</type>
      <name>sortOrder</name>
      <anchorfile>classWt_1_1WSortFilterProxyModel.html</anchorfile>
      <anchor>aca14a5b0ac985e6b45bea4e6419fdaa2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDynamicSortFilter</name>
      <anchorfile>classWt_1_1WSortFilterProxyModel.html</anchorfile>
      <anchor>a4dfdc62d591249454cbb38e5099f19b4</anchor>
      <arglist>(bool enable)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>dynamicSortFilter</name>
      <anchorfile>classWt_1_1WSortFilterProxyModel.html</anchorfile>
      <anchor>a8d957012f067e3081dcf2b91b0ca48d0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>invalidate</name>
      <anchorfile>classWt_1_1WSortFilterProxyModel.html</anchorfile>
      <anchor>a0a14d093e21a93aaf9ce3cc98576b00b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>columnCount</name>
      <anchorfile>classWt_1_1WSortFilterProxyModel.html</anchorfile>
      <anchor>a34e9a709f42d3ed1d74b6ca24415ac90</anchor>
      <arglist>(const WModelIndex &amp;parent=WModelIndex()) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>rowCount</name>
      <anchorfile>classWt_1_1WSortFilterProxyModel.html</anchorfile>
      <anchor>a5cacd1ffcd5c6928b3e78409e662318c</anchor>
      <arglist>(const WModelIndex &amp;parent=WModelIndex()) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WModelIndex</type>
      <name>parent</name>
      <anchorfile>classWt_1_1WSortFilterProxyModel.html</anchorfile>
      <anchor>a8a0b0d3aafd80244b0047044300b0d56</anchor>
      <arglist>(const WModelIndex &amp;index) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WModelIndex</type>
      <name>index</name>
      <anchorfile>classWt_1_1WSortFilterProxyModel.html</anchorfile>
      <anchor>a99571cf8b168489346495420fd8cf99e</anchor>
      <arglist>(int row, int column, const WModelIndex &amp;parent=WModelIndex()) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>setHeaderData</name>
      <anchorfile>classWt_1_1WSortFilterProxyModel.html</anchorfile>
      <anchor>a3f728a8396dcfd630d6fefba51ed31a7</anchor>
      <arglist>(int section, Orientation orientation, const cpp17::any &amp;value, ItemDataRole role=ItemDataRole::Edit) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual cpp17::any</type>
      <name>headerData</name>
      <anchorfile>classWt_1_1WSortFilterProxyModel.html</anchorfile>
      <anchor>add77b78aa9557bea47bf2d7fcdce4d4d</anchor>
      <arglist>(int section, Orientation orientation=Orientation::Horizontal, ItemDataRole role=ItemDataRole::Display) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WFlags&lt; HeaderFlag &gt;</type>
      <name>headerFlags</name>
      <anchorfile>classWt_1_1WSortFilterProxyModel.html</anchorfile>
      <anchor>a4205565b3c15ece9b8c55e430a96f556</anchor>
      <arglist>(int section, Orientation orientation=Orientation::Horizontal) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>insertRows</name>
      <anchorfile>classWt_1_1WSortFilterProxyModel.html</anchorfile>
      <anchor>a3eb90b240468ec2c105b0902facdee02</anchor>
      <arglist>(int row, int count, const WModelIndex &amp;parent=WModelIndex()) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>removeRows</name>
      <anchorfile>classWt_1_1WSortFilterProxyModel.html</anchorfile>
      <anchor>a187582984dfa1db19d119c76f8736714</anchor>
      <arglist>(int row, int count, const WModelIndex &amp;parent=WModelIndex()) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>sort</name>
      <anchorfile>classWt_1_1WSortFilterProxyModel.html</anchorfile>
      <anchor>aba6f89c41caa3329dbc6999981d82f83</anchor>
      <arglist>(int column, SortOrder order=SortOrder::Ascending) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>filterAcceptRow</name>
      <anchorfile>classWt_1_1WSortFilterProxyModel.html</anchorfile>
      <anchor>a5b993d5c933905c873c47f7767224953</anchor>
      <arglist>(int sourceRow, const WModelIndex &amp;sourceParent) const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>lessThan</name>
      <anchorfile>classWt_1_1WSortFilterProxyModel.html</anchorfile>
      <anchor>a5912e7e0371c7b372a9f08fe92707750</anchor>
      <arglist>(const WModelIndex &amp;lhs, const WModelIndex &amp;rhs) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WSound</name>
    <filename>classWt_1_1WSound.html</filename>
    <base>Wt::WObject</base>
    <member kind="function">
      <type></type>
      <name>WSound</name>
      <anchorfile>classWt_1_1WSound.html</anchorfile>
      <anchor>aecbe18842afa8d17845e4795fffdf499</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WSound</name>
      <anchorfile>classWt_1_1WSound.html</anchorfile>
      <anchor>a27fcfab1397d7c47ea4d112e5d65cd88</anchor>
      <arglist>(const std::string &amp;url)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WSound</name>
      <anchorfile>classWt_1_1WSound.html</anchorfile>
      <anchor>ad8e2997fc9607a1876d2bad665281f9d</anchor>
      <arglist>(MediaEncoding encoding, const WLink &amp;link)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WSound</name>
      <anchorfile>classWt_1_1WSound.html</anchorfile>
      <anchor>ad2b9aa6ce656708845c21aff965e02ea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addSource</name>
      <anchorfile>classWt_1_1WSound.html</anchorfile>
      <anchor>acf9488b44c7e487b38352fe927098da9</anchor>
      <arglist>(MediaEncoding encoding, const WLink &amp;link)</arglist>
    </member>
    <member kind="function">
      <type>WLink</type>
      <name>getSource</name>
      <anchorfile>classWt_1_1WSound.html</anchorfile>
      <anchor>afe3d322282128680dd55bca8cc05b3c9</anchor>
      <arglist>(MediaEncoding encoding) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLoops</name>
      <anchorfile>classWt_1_1WSound.html</anchorfile>
      <anchor>a6cf72578210c7a6ff345372afa85d198</anchor>
      <arglist>(int number)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>loops</name>
      <anchorfile>classWt_1_1WSound.html</anchorfile>
      <anchor>aac5067b17c764fb792a3558a44c4e6fa</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>play</name>
      <anchorfile>classWt_1_1WSound.html</anchorfile>
      <anchor>a6ca6b48ebc9e49ee6745228961df3817</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stop</name>
      <anchorfile>classWt_1_1WSound.html</anchorfile>
      <anchor>a7c3ce5dc7204f5c156bffd71487e3f72</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WSpinBox</name>
    <filename>classWt_1_1WSpinBox.html</filename>
    <base>Wt::WAbstractSpinBox</base>
    <member kind="function">
      <type></type>
      <name>WSpinBox</name>
      <anchorfile>classWt_1_1WSpinBox.html</anchorfile>
      <anchor>aa62cc820c72d001ee11857942ef208d1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMinimum</name>
      <anchorfile>classWt_1_1WSpinBox.html</anchorfile>
      <anchor>a09ab4465a344f888ebd998c16185b0fb</anchor>
      <arglist>(int minimum)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>minimum</name>
      <anchorfile>classWt_1_1WSpinBox.html</anchorfile>
      <anchor>a8a89b3432ce7a5b07741cd4b29901156</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMaximum</name>
      <anchorfile>classWt_1_1WSpinBox.html</anchorfile>
      <anchor>a41b35021f67c0fbc8c5fa40858c8c604</anchor>
      <arglist>(int maximum)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>maximum</name>
      <anchorfile>classWt_1_1WSpinBox.html</anchorfile>
      <anchor>a74880c159db40c3f6d70109a2b8297e2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRange</name>
      <anchorfile>classWt_1_1WSpinBox.html</anchorfile>
      <anchor>aa4c756a2764238912f21bafb14e966e2</anchor>
      <arglist>(int minimum, int maximum)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSingleStep</name>
      <anchorfile>classWt_1_1WSpinBox.html</anchorfile>
      <anchor>a7a4c8df323651b78c39e8be806fedd40</anchor>
      <arglist>(int step)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>singleStep</name>
      <anchorfile>classWt_1_1WSpinBox.html</anchorfile>
      <anchor>a87ee70cf0f971f18ee59668172022c90</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setValue</name>
      <anchorfile>classWt_1_1WSpinBox.html</anchorfile>
      <anchor>a7927a501a94ada3685af61ae1f488bc9</anchor>
      <arglist>(int value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>value</name>
      <anchorfile>classWt_1_1WSpinBox.html</anchorfile>
      <anchor>af9a98a2f4b326ab3fb1b814d840a67b1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setWrapAroundEnabled</name>
      <anchorfile>classWt_1_1WSpinBox.html</anchorfile>
      <anchor>a08413e777fefab00e36dc8d6c492bda5</anchor>
      <arglist>(bool enabled)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>wrapAroundEnabled</name>
      <anchorfile>classWt_1_1WSpinBox.html</anchorfile>
      <anchor>a41ec7d30eefcd09a927415c1ed51b86b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Signal&lt; int &gt; &amp;</type>
      <name>valueChanged</name>
      <anchorfile>classWt_1_1WSpinBox.html</anchorfile>
      <anchor>a005ef02738aba90072d06d86aec70e97</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WSplitButton</name>
    <filename>classWt_1_1WSplitButton.html</filename>
    <base>Wt::WCompositeWidget</base>
    <member kind="function">
      <type></type>
      <name>WSplitButton</name>
      <anchorfile>classWt_1_1WSplitButton.html</anchorfile>
      <anchor>a378c5ceddde726996de412c820f5614c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WSplitButton</name>
      <anchorfile>classWt_1_1WSplitButton.html</anchorfile>
      <anchor>a08c9240ab3e60d7c1a45fc7ef3d20aba</anchor>
      <arglist>(const WString &amp;label)</arglist>
    </member>
    <member kind="function">
      <type>WPushButton *</type>
      <name>actionButton</name>
      <anchorfile>classWt_1_1WSplitButton.html</anchorfile>
      <anchor>a078617a10731abf8614c696ea5ec21d4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WPushButton *</type>
      <name>dropDownButton</name>
      <anchorfile>classWt_1_1WSplitButton.html</anchorfile>
      <anchor>a7549ed0300629601daf84c3fca0aedb2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMenu</name>
      <anchorfile>classWt_1_1WSplitButton.html</anchorfile>
      <anchor>ac625c83f4afcadbaf889a43cc4bfdd68</anchor>
      <arglist>(std::unique_ptr&lt; WPopupMenu &gt; menu)</arglist>
    </member>
    <member kind="function">
      <type>WPopupMenu *</type>
      <name>menu</name>
      <anchorfile>classWt_1_1WSplitButton.html</anchorfile>
      <anchor>a2d7ecd9461357e5a0fd3dc6d543f5933</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WSslCertificate</name>
    <filename>classWt_1_1WSslCertificate.html</filename>
    <class kind="class">Wt::WSslCertificate::DnAttribute</class>
    <member kind="enumeration">
      <type></type>
      <name>DnAttributeName</name>
      <anchorfile>classWt_1_1WSslCertificate.html</anchorfile>
      <anchor>ad0679e3369ab814ad97367ba24de279c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CountryName</name>
      <anchorfile>classWt_1_1WSslCertificate.html</anchorfile>
      <anchor>ad0679e3369ab814ad97367ba24de279ca939eeac58af5950502449d2741401e49</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CommonName</name>
      <anchorfile>classWt_1_1WSslCertificate.html</anchorfile>
      <anchor>ad0679e3369ab814ad97367ba24de279ca54f0764783584365ce4aced0985c649c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LocalityName</name>
      <anchorfile>classWt_1_1WSslCertificate.html</anchorfile>
      <anchor>ad0679e3369ab814ad97367ba24de279cad886c7e2ac995ba72b282878c18fd8c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Surname</name>
      <anchorfile>classWt_1_1WSslCertificate.html</anchorfile>
      <anchor>ad0679e3369ab814ad97367ba24de279ca9a7e41ab9525b264555ff79089c3accd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GivenName</name>
      <anchorfile>classWt_1_1WSslCertificate.html</anchorfile>
      <anchor>ad0679e3369ab814ad97367ba24de279ca67691ac8d417d645ffa6a2076411a39b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SerialNumber</name>
      <anchorfile>classWt_1_1WSslCertificate.html</anchorfile>
      <anchor>ad0679e3369ab814ad97367ba24de279ca84c281f422bff90987d2708577b1eef8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Title</name>
      <anchorfile>classWt_1_1WSslCertificate.html</anchorfile>
      <anchor>ad0679e3369ab814ad97367ba24de279ca889054da6ec43ff363954c178803ee32</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Initials</name>
      <anchorfile>classWt_1_1WSslCertificate.html</anchorfile>
      <anchor>ad0679e3369ab814ad97367ba24de279ca500a615b345af88717a7364f32ce6bdc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OrganizationName</name>
      <anchorfile>classWt_1_1WSslCertificate.html</anchorfile>
      <anchor>ad0679e3369ab814ad97367ba24de279ca9a5cc76a93cbf5c61b0f399d9f4aed3c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OrganizationalUnitName</name>
      <anchorfile>classWt_1_1WSslCertificate.html</anchorfile>
      <anchor>ad0679e3369ab814ad97367ba24de279ca65be7b3275f066564593086dd164b62b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>StateOrProvinceName</name>
      <anchorfile>classWt_1_1WSslCertificate.html</anchorfile>
      <anchor>ad0679e3369ab814ad97367ba24de279ca63b00bd007645139ba8fe87a7befa689</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Pseudonym</name>
      <anchorfile>classWt_1_1WSslCertificate.html</anchorfile>
      <anchor>ad0679e3369ab814ad97367ba24de279ca84e78cb58beaca69b674b9866759a2dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CountryName</name>
      <anchorfile>classWt_1_1WSslCertificate.html</anchorfile>
      <anchor>ad0679e3369ab814ad97367ba24de279ca939eeac58af5950502449d2741401e49</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CommonName</name>
      <anchorfile>classWt_1_1WSslCertificate.html</anchorfile>
      <anchor>ad0679e3369ab814ad97367ba24de279ca54f0764783584365ce4aced0985c649c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LocalityName</name>
      <anchorfile>classWt_1_1WSslCertificate.html</anchorfile>
      <anchor>ad0679e3369ab814ad97367ba24de279cad886c7e2ac995ba72b282878c18fd8c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Surname</name>
      <anchorfile>classWt_1_1WSslCertificate.html</anchorfile>
      <anchor>ad0679e3369ab814ad97367ba24de279ca9a7e41ab9525b264555ff79089c3accd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GivenName</name>
      <anchorfile>classWt_1_1WSslCertificate.html</anchorfile>
      <anchor>ad0679e3369ab814ad97367ba24de279ca67691ac8d417d645ffa6a2076411a39b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SerialNumber</name>
      <anchorfile>classWt_1_1WSslCertificate.html</anchorfile>
      <anchor>ad0679e3369ab814ad97367ba24de279ca84c281f422bff90987d2708577b1eef8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Title</name>
      <anchorfile>classWt_1_1WSslCertificate.html</anchorfile>
      <anchor>ad0679e3369ab814ad97367ba24de279ca889054da6ec43ff363954c178803ee32</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Initials</name>
      <anchorfile>classWt_1_1WSslCertificate.html</anchorfile>
      <anchor>ad0679e3369ab814ad97367ba24de279ca500a615b345af88717a7364f32ce6bdc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OrganizationName</name>
      <anchorfile>classWt_1_1WSslCertificate.html</anchorfile>
      <anchor>ad0679e3369ab814ad97367ba24de279ca9a5cc76a93cbf5c61b0f399d9f4aed3c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OrganizationalUnitName</name>
      <anchorfile>classWt_1_1WSslCertificate.html</anchorfile>
      <anchor>ad0679e3369ab814ad97367ba24de279ca65be7b3275f066564593086dd164b62b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>StateOrProvinceName</name>
      <anchorfile>classWt_1_1WSslCertificate.html</anchorfile>
      <anchor>ad0679e3369ab814ad97367ba24de279ca63b00bd007645139ba8fe87a7befa689</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Pseudonym</name>
      <anchorfile>classWt_1_1WSslCertificate.html</anchorfile>
      <anchor>ad0679e3369ab814ad97367ba24de279ca84e78cb58beaca69b674b9866759a2dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; DnAttribute &gt; &amp;</type>
      <name>subjectDn</name>
      <anchorfile>classWt_1_1WSslCertificate.html</anchorfile>
      <anchor>a2e37f1f543e878e13973ca44bb42e479</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>subjectDnString</name>
      <anchorfile>classWt_1_1WSslCertificate.html</anchorfile>
      <anchor>a51e9e4949280302323ec60eed1d20271</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; DnAttribute &gt; &amp;</type>
      <name>issuerDn</name>
      <anchorfile>classWt_1_1WSslCertificate.html</anchorfile>
      <anchor>a05e2315184c818ffa478763153dff3ac</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>issuerDnString</name>
      <anchorfile>classWt_1_1WSslCertificate.html</anchorfile>
      <anchor>a593558143bdb4d27808356a955ba01e2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const Wt::WDateTime &amp;</type>
      <name>validityStart</name>
      <anchorfile>classWt_1_1WSslCertificate.html</anchorfile>
      <anchor>a1bdcab6f8f951335e9a2350b63ac191f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const Wt::WDateTime &amp;</type>
      <name>validityEnd</name>
      <anchorfile>classWt_1_1WSslCertificate.html</anchorfile>
      <anchor>ac4f168a728f5db77c278a773be337cc0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>toPem</name>
      <anchorfile>classWt_1_1WSslCertificate.html</anchorfile>
      <anchor>a8a1a8317bf14e3016b6fffcf5d82887a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>toDer</name>
      <anchorfile>classWt_1_1WSslCertificate.html</anchorfile>
      <anchor>a05c8c39762b2651a5133b596bb71a56f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>pemToDer</name>
      <anchorfile>classWt_1_1WSslCertificate.html</anchorfile>
      <anchor>a479f08bf2d8f669648798df6f30e7725</anchor>
      <arglist>(const std::string &amp;pem)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WSslInfo</name>
    <filename>classWt_1_1WSslInfo.html</filename>
    <member kind="function">
      <type>const WSslCertificate &amp;</type>
      <name>clientCertificate</name>
      <anchorfile>classWt_1_1WSslInfo.html</anchorfile>
      <anchor>a592715e1782268b82fc4493e9ad03c1d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; WSslCertificate &gt; &amp;</type>
      <name>clientPemCertificateChain</name>
      <anchorfile>classWt_1_1WSslInfo.html</anchorfile>
      <anchor>ab9c9aebe71d242158af815a3631979ba</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WValidator::Result</type>
      <name>clientVerificationResult</name>
      <anchorfile>classWt_1_1WSslInfo.html</anchorfile>
      <anchor>a1f89fbb138034ae3b012f4b470ad30ae</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WStackedWidget</name>
    <filename>classWt_1_1WStackedWidget.html</filename>
    <base>Wt::WContainerWidget</base>
    <member kind="function">
      <type></type>
      <name>WStackedWidget</name>
      <anchorfile>classWt_1_1WStackedWidget.html</anchorfile>
      <anchor>aa4a5fb4f111b606cef7c1245f91a85bb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>addWidget</name>
      <anchorfile>classWt_1_1WStackedWidget.html</anchorfile>
      <anchor>afac14f6f2baa2a000fbea8f1d77edf76</anchor>
      <arglist>(std::unique_ptr&lt; WWidget &gt; widget) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::unique_ptr&lt; WWidget &gt;</type>
      <name>removeWidget</name>
      <anchorfile>classWt_1_1WStackedWidget.html</anchorfile>
      <anchor>ae8152b06490255c0d8b5365418950161</anchor>
      <arglist>(WWidget *widget) override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>currentIndex</name>
      <anchorfile>classWt_1_1WStackedWidget.html</anchorfile>
      <anchor>a3192b31ecdc24848cbbe9173d899c66a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WWidget *</type>
      <name>currentWidget</name>
      <anchorfile>classWt_1_1WStackedWidget.html</anchorfile>
      <anchor>ab5fcdcf3002185ff30783d06fe1b1a58</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>insertWidget</name>
      <anchorfile>classWt_1_1WStackedWidget.html</anchorfile>
      <anchor>ab4004631a836aad72bfee1ae5695ae9b</anchor>
      <arglist>(int index, std::unique_ptr&lt; WWidget &gt; widget) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCurrentIndex</name>
      <anchorfile>classWt_1_1WStackedWidget.html</anchorfile>
      <anchor>a4a2f79cf685ade6ad529e0673e22e6b0</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCurrentIndex</name>
      <anchorfile>classWt_1_1WStackedWidget.html</anchorfile>
      <anchor>ae0a85f389b655961c1b45a7ffea9ceed</anchor>
      <arglist>(int index, const WAnimation &amp;animation, bool autoReverse=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCurrentWidget</name>
      <anchorfile>classWt_1_1WStackedWidget.html</anchorfile>
      <anchor>a460ba17f219b8cc75748735417b04828</anchor>
      <arglist>(WWidget *widget)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTransitionAnimation</name>
      <anchorfile>classWt_1_1WStackedWidget.html</anchorfile>
      <anchor>a46949b8def26baae654f54e3774da80e</anchor>
      <arglist>(const WAnimation &amp;animation, bool autoReverse=false)</arglist>
    </member>
    <member kind="function">
      <type>virtual std::unique_ptr&lt; WWidget &gt;</type>
      <name>removeWidget</name>
      <anchorfile>classWt_1_1WStackedWidget.html</anchorfile>
      <anchor>a3daab3808c96956d30bc1045c379f407</anchor>
      <arglist>(WWidget *widget)</arglist>
    </member>
    <member kind="function">
      <type>std::unique_ptr&lt; Widget &gt;</type>
      <name>removeWidget</name>
      <anchorfile>classWt_1_1WStackedWidget.html</anchorfile>
      <anchor>a1f5151154770b4956b4870cb4ecc38d3</anchor>
      <arglist>(Widget *widget)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>render</name>
      <anchorfile>classWt_1_1WStackedWidget.html</anchorfile>
      <anchor>a26a43398053b0fbd5ff0fdbebf9608aa</anchor>
      <arglist>(WFlags&lt; RenderFlag &gt; flags) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Chart::WStandardChartProxyModel</name>
    <filename>classWt_1_1Chart_1_1WStandardChartProxyModel.html</filename>
    <base>Wt::Chart::WAbstractChartModel</base>
    <member kind="function">
      <type></type>
      <name>WStandardChartProxyModel</name>
      <anchorfile>classWt_1_1Chart_1_1WStandardChartProxyModel.html</anchorfile>
      <anchor>a4be8e6dba8e7259aedc1967e5abfed9a</anchor>
      <arglist>(const std::shared_ptr&lt; WAbstractItemModel &gt; &amp;sourceModel)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>data</name>
      <anchorfile>classWt_1_1Chart_1_1WStandardChartProxyModel.html</anchorfile>
      <anchor>aa18ff5f1bced6fcfddd792439039358e</anchor>
      <arglist>(int row, int column) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WString</type>
      <name>displayData</name>
      <anchorfile>classWt_1_1Chart_1_1WStandardChartProxyModel.html</anchorfile>
      <anchor>acbbcde75ad722f02d68e34a1d4bc8140</anchor>
      <arglist>(int row, int column) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WString</type>
      <name>headerData</name>
      <anchorfile>classWt_1_1Chart_1_1WStandardChartProxyModel.html</anchorfile>
      <anchor>a6fdfef69b2bc60cbf23f268c1f0e834d</anchor>
      <arglist>(int column) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WString</type>
      <name>toolTip</name>
      <anchorfile>classWt_1_1Chart_1_1WStandardChartProxyModel.html</anchorfile>
      <anchor>aed8ce2c2104c60dec1b125b32f8d267c</anchor>
      <arglist>(int row, int column) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WFlags&lt; ItemFlag &gt;</type>
      <name>flags</name>
      <anchorfile>classWt_1_1Chart_1_1WStandardChartProxyModel.html</anchorfile>
      <anchor>aee5bde90d1c78154688e27a5c94e3aaf</anchor>
      <arglist>(int row, int column) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WLink *</type>
      <name>link</name>
      <anchorfile>classWt_1_1Chart_1_1WStandardChartProxyModel.html</anchorfile>
      <anchor>adfa0d9b52ddd976fc303f8132e2418e5</anchor>
      <arglist>(int row, int column) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const WColor *</type>
      <name>markerPenColor</name>
      <anchorfile>classWt_1_1Chart_1_1WStandardChartProxyModel.html</anchorfile>
      <anchor>aee027199b31839310bf502b9dfeec0b6</anchor>
      <arglist>(int row, int column) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const WColor *</type>
      <name>markerBrushColor</name>
      <anchorfile>classWt_1_1Chart_1_1WStandardChartProxyModel.html</anchorfile>
      <anchor>a6e3a7045756843ddd123c23b55a1c28c</anchor>
      <arglist>(int row, int column) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const MarkerType *</type>
      <name>markerType</name>
      <anchorfile>classWt_1_1Chart_1_1WStandardChartProxyModel.html</anchorfile>
      <anchor>a3c43fd30941818d918779ea7ea5a3b2e</anchor>
      <arglist>(int row, int column) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const WColor *</type>
      <name>barPenColor</name>
      <anchorfile>classWt_1_1Chart_1_1WStandardChartProxyModel.html</anchorfile>
      <anchor>ac4f61b276d5f00c0b690173435db7fb9</anchor>
      <arglist>(int row, int column) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const WColor *</type>
      <name>barBrushColor</name>
      <anchorfile>classWt_1_1Chart_1_1WStandardChartProxyModel.html</anchorfile>
      <anchor>ae3dded137afca8105b8ea60d2b1586b5</anchor>
      <arglist>(int row, int column) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const double *</type>
      <name>markerScaleFactor</name>
      <anchorfile>classWt_1_1Chart_1_1WStandardChartProxyModel.html</anchorfile>
      <anchor>afd47183f2bd7a0d9fe83663e4ef579a8</anchor>
      <arglist>(int row, int column) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>columnCount</name>
      <anchorfile>classWt_1_1Chart_1_1WStandardChartProxyModel.html</anchorfile>
      <anchor>aff632d9983262b7f116e899002ca9512</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>rowCount</name>
      <anchorfile>classWt_1_1Chart_1_1WStandardChartProxyModel.html</anchorfile>
      <anchor>a031e9f6cd96fac3b85dc44ea81a62dfe</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; WAbstractItemModel &gt;</type>
      <name>sourceModel</name>
      <anchorfile>classWt_1_1Chart_1_1WStandardChartProxyModel.html</anchorfile>
      <anchor>abf5ed15a765c00d372e49b65e2ec89a3</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Chart::WStandardColorMap</name>
    <filename>classWt_1_1Chart_1_1WStandardColorMap.html</filename>
    <base>Wt::Chart::WAbstractColorMap</base>
    <class kind="class">Wt::Chart::WStandardColorMap::Pair</class>
    <member kind="function">
      <type></type>
      <name>WStandardColorMap</name>
      <anchorfile>classWt_1_1Chart_1_1WStandardColorMap.html</anchorfile>
      <anchor>afc857b0fc469c0db002b974c1602677d</anchor>
      <arglist>(double min, double max, bool continuous)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WStandardColorMap</name>
      <anchorfile>classWt_1_1Chart_1_1WStandardColorMap.html</anchorfile>
      <anchor>ae883d14a83a9b3cb0a671dbbbfed3f11</anchor>
      <arglist>(double min, double max, const std::vector&lt; WStandardColorMap::Pair &gt; &amp;colors, bool continuous)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>discretise</name>
      <anchorfile>classWt_1_1Chart_1_1WStandardColorMap.html</anchorfile>
      <anchor>a39cfdfa352116ee10e544ca8f684596a</anchor>
      <arglist>(int numberOfBands)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WColor</type>
      <name>toColor</name>
      <anchorfile>classWt_1_1Chart_1_1WStandardColorMap.html</anchorfile>
      <anchor>af048ff2fdcb27f3e517ff324c737681d</anchor>
      <arglist>(double value) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>createStrip</name>
      <anchorfile>classWt_1_1Chart_1_1WStandardColorMap.html</anchorfile>
      <anchor>a04f18f4b5fa45efa24ab880404467712</anchor>
      <arglist>(WPainter *painter, const WRectF &amp;area=WRectF()) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>paintLegend</name>
      <anchorfile>classWt_1_1Chart_1_1WStandardColorMap.html</anchorfile>
      <anchor>a6791f629ca67b7dba2c6baee79a5160e</anchor>
      <arglist>(WPainter *painter, const WRectF &amp;area=WRectF()) const override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WStandardItem</name>
    <filename>classWt_1_1WStandardItem.html</filename>
    <member kind="function">
      <type></type>
      <name>WStandardItem</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>abe5aebe20c0c5309be95928996e3acf1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WStandardItem</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>a599f5dd0b5f6ca0a4bf8025e81be4ad1</anchor>
      <arglist>(const WString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WStandardItem</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>a1cce25693284be45efd3a8a13e9f10ee</anchor>
      <arglist>(const std::string &amp;iconUri, const WString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WStandardItem</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>a302d98cd8d22708e14cbe171b4864d42</anchor>
      <arglist>(int rows, int columns=1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~WStandardItem</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>ab8f7298a52e2884445b5bb7b68e451e2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setText</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>a7922bbfa1b9236f2c3f20ed8082bc2e3</anchor>
      <arglist>(const WString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>WString</type>
      <name>text</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>a98eee71c6ab563cdc97ebd4657f535d1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setIcon</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>a6ef82d367150a352795bdb2f780db14a</anchor>
      <arglist>(const std::string &amp;uri)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>icon</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>a55173e4859da67847f41626a3e09d665</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setStyleClass</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>a760bedb0ba3b5f33b0ea8bfa22e5961e</anchor>
      <arglist>(const WString &amp;styleClass)</arglist>
    </member>
    <member kind="function">
      <type>WString</type>
      <name>styleClass</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>affec2cb4622ac1c9253fc1a81976689a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setToolTip</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>a76442b01365d83b068da168e08b63290</anchor>
      <arglist>(const WString &amp;toolTip)</arglist>
    </member>
    <member kind="function">
      <type>WString</type>
      <name>toolTip</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>a58ed02dfdea9304a19bc9946ad6ec573</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLink</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>a0cb25336f3edb4542ede7bb8313a8a2e</anchor>
      <arglist>(const WLink &amp;link)</arglist>
    </member>
    <member kind="function">
      <type>WLink</type>
      <name>link</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>a1ce0e35bff66232d578068cbee2b617a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setChecked</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>abbbeb294638fa8a226268084eb9de07d</anchor>
      <arglist>(bool checked)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isChecked</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>a507df9a001e35e34e7d73d24b3716546</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCheckState</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>a6cb0c54ca4ef5dd9edba40600c5b6bef</anchor>
      <arglist>(CheckState checked)</arglist>
    </member>
    <member kind="function">
      <type>CheckState</type>
      <name>checkState</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>aba0b30a53bbe676a1757518f46f9ca17</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFlags</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>aedf80dfed644a525e5d726a4b6e74b94</anchor>
      <arglist>(WFlags&lt; ItemFlag &gt; flags)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; ItemFlag &gt;</type>
      <name>flags</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>ab6c085a025f8d3cb5ee43d4428b82f16</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCheckable</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>a5de5f61ac9b8b57c09da2f55c3a248e1</anchor>
      <arglist>(bool checkable)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isCheckable</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>a1163e308b113fd78b681b84cf758221f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTristate</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>a10320a132e0ffaa3690df4e4d44f4c7b</anchor>
      <arglist>(bool tristate)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isTristate</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>a90bf782ad0511c86c372f3614820f37d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setData</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>a3bcf9bc1b287250fda79983a02fabaa5</anchor>
      <arglist>(const cpp17::any &amp;data, ItemDataRole role=ItemDataRole::User)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual cpp17::any</type>
      <name>data</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>a415073b9fd29f9bc193278910a244321</anchor>
      <arglist>(ItemDataRole role=ItemDataRole::User) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasChildren</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>a3dca12637352c52ec2274e60ed32c388</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRowCount</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>af93e0c455c2272dd950dce0644504b15</anchor>
      <arglist>(int rows)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>rowCount</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>ac3ec3060cdd7c3b0c5f6697ea15dba3d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setColumnCount</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>a221176a45599230e03d04e4c08f04499</anchor>
      <arglist>(int columns)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>columnCount</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>aa17a7486e49ed991b7503a84340008c0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>appendColumn</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>ad6577ee116aac2deddf7f78df8fd42fc</anchor>
      <arglist>(std::vector&lt; std::unique_ptr&lt; WStandardItem &gt; &gt; items)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertColumn</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>a4aefe439fb433587fd1c02eab596908a</anchor>
      <arglist>(int column, std::vector&lt; std::unique_ptr&lt; WStandardItem &gt; &gt; items)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>appendRow</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>aa94289bdce7dec8bf56bb0570079c09b</anchor>
      <arglist>(std::vector&lt; std::unique_ptr&lt; WStandardItem &gt; &gt; items)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertRow</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>a7fec7af192ff917be75dace895084d3f</anchor>
      <arglist>(int row, std::vector&lt; std::unique_ptr&lt; WStandardItem &gt; &gt; items)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertColumns</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>a2bf1d1d17e5a62ffcb665a0809fe0299</anchor>
      <arglist>(int column, int count)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertRows</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>aa3633c2a26d7a267f7f433e134b219dd</anchor>
      <arglist>(int row, int count)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>appendRow</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>a618b8e358f71ed7c7ac07bf3ef7b1117</anchor>
      <arglist>(std::unique_ptr&lt; WStandardItem &gt; item)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertRow</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>adb4ba0df6a83d6c40d5436fdf661ff1c</anchor>
      <arglist>(int row, std::unique_ptr&lt; WStandardItem &gt; item)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>appendRows</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>a65610ac41a758960651c1a4c405aceb7</anchor>
      <arglist>(std::vector&lt; std::unique_ptr&lt; WStandardItem &gt; &gt; items)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertRows</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>a163ff8b6eac2d5cdee62bb06d64c3a3c</anchor>
      <arglist>(int row, std::vector&lt; std::unique_ptr&lt; WStandardItem &gt; &gt; items)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setChild</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>a47ef4842090c8886e63214e1128444bc</anchor>
      <arglist>(int row, int column, std::unique_ptr&lt; WStandardItem &gt; item)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setChild</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>aa2e96206a43f039cf82b6dd609eade4e</anchor>
      <arglist>(int row, std::unique_ptr&lt; WStandardItem &gt; item)</arglist>
    </member>
    <member kind="function">
      <type>WStandardItem *</type>
      <name>child</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>aed73604c979bdfcfdd65a5fd621fa90f</anchor>
      <arglist>(int row, int column=0) const</arglist>
    </member>
    <member kind="function">
      <type>std::unique_ptr&lt; WStandardItem &gt;</type>
      <name>takeChild</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>a9e75fd3d9b2164ab2601610d21b8cb7b</anchor>
      <arglist>(int row, int column)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::unique_ptr&lt; WStandardItem &gt; &gt;</type>
      <name>takeColumn</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>ad0d00ced27fd1b5be1223d2ccc243151</anchor>
      <arglist>(int column)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::unique_ptr&lt; WStandardItem &gt; &gt;</type>
      <name>takeRow</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>afc57f3f21856e76cf4d10cd21496fc62</anchor>
      <arglist>(int row)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeColumn</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>ad2bdf52c5e251eca480a438db233f7b6</anchor>
      <arglist>(int column)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeColumns</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>acd189fbf5324542ad05cfdf0d6376f97</anchor>
      <arglist>(int column, int count)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeRow</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>ad3e49ceafa130f6b537983b8c186b609</anchor>
      <arglist>(int row)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeRows</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>a114deac9facd4b6c2f47b64a6e90abfe</anchor>
      <arglist>(int row, int count)</arglist>
    </member>
    <member kind="function">
      <type>WModelIndex</type>
      <name>index</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>a4cd95ace706d25cecf3fd6d2b9f4df2b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WStandardItemModel *</type>
      <name>model</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>ac7f8cd7b9eb3e1ac83813be54913db5d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WStandardItem *</type>
      <name>parent</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>a74e38de57ca509a842b850ee1967ebf3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>row</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>a080134e93f657537f4911c49b0523332</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>column</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>ae8b4f98da65e93e8e94a1586e1124e55</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::unique_ptr&lt; WStandardItem &gt;</type>
      <name>clone</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>a41a5f22630a4c876e3a4ba822c43a744</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>operator&lt;</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>abe2e52a7dc0f8a1f712b040ea607e3fe</anchor>
      <arglist>(const WStandardItem &amp;other) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>sortChildren</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>a0d3540cac93582ab50d111032f4b9b44</anchor>
      <arglist>(int column, SortOrder order)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>setModel</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>a3dd6eac751e2181e9c48d8c2ee443a6a</anchor>
      <arglist>(WStandardItemModel *model)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>int</type>
      <name>compare</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>a8cf96774042ae0113a59cc328f343939</anchor>
      <arglist>(const WStandardItem &amp;other) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WStandardItemModel</name>
    <filename>classWt_1_1WStandardItemModel.html</filename>
    <base>Wt::WAbstractItemModel</base>
    <member kind="function">
      <type></type>
      <name>WStandardItemModel</name>
      <anchorfile>classWt_1_1WStandardItemModel.html</anchorfile>
      <anchor>a893c0f1c0db57c3cee5a5e296339f999</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WStandardItemModel</name>
      <anchorfile>classWt_1_1WStandardItemModel.html</anchorfile>
      <anchor>aa98fbf4d2acba75ea7a550f312fd0aef</anchor>
      <arglist>(int rows, int columns)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WStandardItemModel</name>
      <anchorfile>classWt_1_1WStandardItemModel.html</anchorfile>
      <anchor>af361083dead5e486bafacf68165df7ac</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classWt_1_1WStandardItemModel.html</anchorfile>
      <anchor>aa07712b2aa72937a9736150fa85f55be</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>WStandardItem *</type>
      <name>invisibleRootItem</name>
      <anchorfile>classWt_1_1WStandardItemModel.html</anchorfile>
      <anchor>a59ab3e7ed361d7b443dcde92ecef1302</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WModelIndex</type>
      <name>indexFromItem</name>
      <anchorfile>classWt_1_1WStandardItemModel.html</anchorfile>
      <anchor>a9d0a7bdd426a693404997c05b9d6ed6d</anchor>
      <arglist>(const WStandardItem *item) const</arglist>
    </member>
    <member kind="function">
      <type>WStandardItem *</type>
      <name>itemFromIndex</name>
      <anchorfile>classWt_1_1WStandardItemModel.html</anchorfile>
      <anchor>a4b29f87e5a3bc91776aefcd538be25be</anchor>
      <arglist>(const WModelIndex &amp;index) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>appendColumn</name>
      <anchorfile>classWt_1_1WStandardItemModel.html</anchorfile>
      <anchor>ad8e0c6cf26d6d8c94f6f1a36b1fbd511</anchor>
      <arglist>(std::vector&lt; std::unique_ptr&lt; WStandardItem &gt; &gt; items)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertColumn</name>
      <anchorfile>classWt_1_1WStandardItemModel.html</anchorfile>
      <anchor>a30553370b2c3208c1bd637a2fe78fc9f</anchor>
      <arglist>(int column, std::vector&lt; std::unique_ptr&lt; WStandardItem &gt; &gt; items)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>appendRow</name>
      <anchorfile>classWt_1_1WStandardItemModel.html</anchorfile>
      <anchor>aac08d06d5c2944ff685b03ed1913a23c</anchor>
      <arglist>(std::vector&lt; std::unique_ptr&lt; WStandardItem &gt; &gt; items)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertRow</name>
      <anchorfile>classWt_1_1WStandardItemModel.html</anchorfile>
      <anchor>a6ac5a019999e2ac86d11801055ae36a5</anchor>
      <arglist>(int row, std::vector&lt; std::unique_ptr&lt; WStandardItem &gt; &gt; items)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>appendRow</name>
      <anchorfile>classWt_1_1WStandardItemModel.html</anchorfile>
      <anchor>ac82b2ba359354ac0bc40d14fe1d39f94</anchor>
      <arglist>(std::unique_ptr&lt; WStandardItem &gt; item)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertRow</name>
      <anchorfile>classWt_1_1WStandardItemModel.html</anchorfile>
      <anchor>a2a880fe93e494941cb870dde037debe7</anchor>
      <arglist>(int row, std::unique_ptr&lt; WStandardItem &gt; item)</arglist>
    </member>
    <member kind="function">
      <type>WStandardItem *</type>
      <name>item</name>
      <anchorfile>classWt_1_1WStandardItemModel.html</anchorfile>
      <anchor>a8e14be9cf99523a3bb83185fc1c5a910</anchor>
      <arglist>(int row, int column=0) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setItem</name>
      <anchorfile>classWt_1_1WStandardItemModel.html</anchorfile>
      <anchor>a19e4b7225467e7e674e7afc74e423fe7</anchor>
      <arglist>(int row, int column, std::unique_ptr&lt; WStandardItem &gt; item)</arglist>
    </member>
    <member kind="function">
      <type>WStandardItem *</type>
      <name>itemPrototype</name>
      <anchorfile>classWt_1_1WStandardItemModel.html</anchorfile>
      <anchor>a883906430f46dd07103aba66bd7f7882</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setItemPrototype</name>
      <anchorfile>classWt_1_1WStandardItemModel.html</anchorfile>
      <anchor>a1ff047f8350a45f2c1ce05a2d55ecac6</anchor>
      <arglist>(std::unique_ptr&lt; WStandardItem &gt; item)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::unique_ptr&lt; WStandardItem &gt; &gt;</type>
      <name>takeColumn</name>
      <anchorfile>classWt_1_1WStandardItemModel.html</anchorfile>
      <anchor>a1b2ec0f99f6bcbc2bd84a512c556494e</anchor>
      <arglist>(int column)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::unique_ptr&lt; WStandardItem &gt; &gt;</type>
      <name>takeRow</name>
      <anchorfile>classWt_1_1WStandardItemModel.html</anchorfile>
      <anchor>a0f65772bc1ae219d927928212b5bf2f2</anchor>
      <arglist>(int row)</arglist>
    </member>
    <member kind="function">
      <type>std::unique_ptr&lt; WStandardItem &gt;</type>
      <name>takeItem</name>
      <anchorfile>classWt_1_1WStandardItemModel.html</anchorfile>
      <anchor>a18e6e93443b4a998703583648cc1cc97</anchor>
      <arglist>(int row, int column=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setHeaderFlags</name>
      <anchorfile>classWt_1_1WStandardItemModel.html</anchorfile>
      <anchor>a63d03547e3222ef0bcb203c07a3cb526</anchor>
      <arglist>(int section, Orientation orientation, WFlags&lt; HeaderFlag &gt; flags)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSortRole</name>
      <anchorfile>classWt_1_1WStandardItemModel.html</anchorfile>
      <anchor>a116740edf9ee01df2a50a3641ee52bed</anchor>
      <arglist>(ItemDataRole role)</arglist>
    </member>
    <member kind="function">
      <type>ItemDataRole</type>
      <name>sortRole</name>
      <anchorfile>classWt_1_1WStandardItemModel.html</anchorfile>
      <anchor>a4a70d4eda438eeb337d0f1a97d924eb2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>sort</name>
      <anchorfile>classWt_1_1WStandardItemModel.html</anchorfile>
      <anchor>a53bdc88628c9b48c2ef3ef4fa4712fc5</anchor>
      <arglist>(int column, SortOrder order=SortOrder::Ascending) override</arglist>
    </member>
    <member kind="function">
      <type>Signal&lt; WStandardItem * &gt; &amp;</type>
      <name>itemChanged</name>
      <anchorfile>classWt_1_1WStandardItemModel.html</anchorfile>
      <anchor>a4a8ab0eea450c93b040aac6f76c1346f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>insertRow</name>
      <anchorfile>classWt_1_1WStandardItemModel.html</anchorfile>
      <anchor>af4a389e8544fc887a24099c506c8bd7b</anchor>
      <arglist>(int row, const WModelIndex &amp;parent=WModelIndex())</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>insertColumn</name>
      <anchorfile>classWt_1_1WStandardItemModel.html</anchorfile>
      <anchor>ad0e634e9fb1276703e41438e8aa50cca</anchor>
      <arglist>(int column, const WModelIndex &amp;parent=WModelIndex())</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Chart::WStandardPalette</name>
    <filename>classWt_1_1Chart_1_1WStandardPalette.html</filename>
    <base>Wt::Chart::WChartPalette</base>
    <member kind="typedef">
      <type>PaletteFlavour</type>
      <name>Flavour</name>
      <anchorfile>classWt_1_1Chart_1_1WStandardPalette.html</anchorfile>
      <anchor>abab0a5c056f341d09234041ba3fc9c59</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WStandardPalette</name>
      <anchorfile>classWt_1_1Chart_1_1WStandardPalette.html</anchorfile>
      <anchor>ab298f0bc799407532de249995c0f6033</anchor>
      <arglist>(PaletteFlavour flavour)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WBrush</type>
      <name>brush</name>
      <anchorfile>classWt_1_1Chart_1_1WStandardPalette.html</anchorfile>
      <anchor>a72e1e9d708900b0b6b4a0ed98e8748d5</anchor>
      <arglist>(int index) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WPen</type>
      <name>borderPen</name>
      <anchorfile>classWt_1_1Chart_1_1WStandardPalette.html</anchorfile>
      <anchor>a2b45b87d7883fa73a459bdb441e81315</anchor>
      <arglist>(int index) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WPen</type>
      <name>strokePen</name>
      <anchorfile>classWt_1_1Chart_1_1WStandardPalette.html</anchorfile>
      <anchor>a130a4bab2bef574d33c344c86daf2802</anchor>
      <arglist>(int index) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WColor</type>
      <name>fontColor</name>
      <anchorfile>classWt_1_1Chart_1_1WStandardPalette.html</anchorfile>
      <anchor>a211152ab3548c6c77a37ca386b291a6d</anchor>
      <arglist>(int index) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WColor</type>
      <name>color</name>
      <anchorfile>classWt_1_1Chart_1_1WStandardPalette.html</anchorfile>
      <anchor>ad0129a58b30f6ceb78338faa968b3a25</anchor>
      <arglist>(int index) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WStaticModelView</name>
    <filename>classWt_1_1WStaticModelView.html</filename>
    <templarg></templarg>
    <base>Wt::WViewWidget</base>
    <member kind="function">
      <type></type>
      <name>WStaticModelView</name>
      <anchorfile>classWt_1_1WStaticModelView.html</anchorfile>
      <anchor>a39195e5c49c50885cfd24d15386ad0ba</anchor>
      <arglist>(Renderer f)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::unique_ptr&lt; WWidget &gt;</type>
      <name>renderView</name>
      <anchorfile>classWt_1_1WStaticModelView.html</anchorfile>
      <anchor>a8ae76533bf5ecff5f4555600c1e2540a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::unique_ptr&lt; WStaticModelView&lt; R &gt; &gt;</type>
      <name>makeStaticModel</name>
      <anchorfile>classWt_1_1WStaticModelView.html</anchorfile>
      <anchor>a14bf898a669fbf01a071baaa25650d7c</anchor>
      <arglist>(R f)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WStreamResource</name>
    <filename>classWt_1_1WStreamResource.html</filename>
    <base>Wt::WResource</base>
    <member kind="function">
      <type></type>
      <name>WStreamResource</name>
      <anchorfile>classWt_1_1WStreamResource.html</anchorfile>
      <anchor>a3fdf260f949959dda47502cd2cdbed3f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WStreamResource</name>
      <anchorfile>classWt_1_1WStreamResource.html</anchorfile>
      <anchor>a3f32d32980f0b570df27e501ad30a7bf</anchor>
      <arglist>(const std::string &amp;mimeType)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WStreamResource</name>
      <anchorfile>classWt_1_1WStreamResource.html</anchorfile>
      <anchor>afcdfc91f2660d58ba7d7c0424592d4e8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMimeType</name>
      <anchorfile>classWt_1_1WStreamResource.html</anchorfile>
      <anchor>aa25f97d38747be9451336422029bbde5</anchor>
      <arglist>(const std::string &amp;mimeType)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>mimeType</name>
      <anchorfile>classWt_1_1WStreamResource.html</anchorfile>
      <anchor>a3a22c05b650b646266dd1bda1251db64</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBufferSize</name>
      <anchorfile>classWt_1_1WStreamResource.html</anchorfile>
      <anchor>a016797af9eca9a2dc8000fac69946ec3</anchor>
      <arglist>(int size)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>bufferSize</name>
      <anchorfile>classWt_1_1WStreamResource.html</anchorfile>
      <anchor>ae280b61ab08aa98b297e2aaa55f230af</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>handleRequestPiecewise</name>
      <anchorfile>classWt_1_1WStreamResource.html</anchorfile>
      <anchor>ab83350ee7a4a14ad06965145073b0293</anchor>
      <arglist>(const Http::Request &amp;request, Http::Response &amp;response, std::istream &amp;input)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WString</name>
    <filename>classWt_1_1WString.html</filename>
    <member kind="function">
      <type></type>
      <name>WString</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>ab1118313feb49fd2a1f7eab40f7f7a56</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WString</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>a1259e1f8285f3e04ef62fb59e6c83f4e</anchor>
      <arglist>(const wchar_t *value)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WString</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>a22fb311a713484d978b52b6787910da7</anchor>
      <arglist>(const WString &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WString</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>a8493730c09f6a301ed58a1ce251d3b91</anchor>
      <arglist>(WString &amp;&amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WString</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>a217c6be8205e02d3e2580b6c59357bb6</anchor>
      <arglist>(const std::wstring &amp;value)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WString</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>a42eaaa12727dadc9383cd7704ed855dc</anchor>
      <arglist>(const char16_t *value)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WString</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>a6c4c7dd7c783235bd834aa35ea8fc48e</anchor>
      <arglist>(const std::u16string &amp;value)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WString</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>ad690ebe835a832faba86cc4b228375ba</anchor>
      <arglist>(const char32_t *value)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WString</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>a39625fe8c44036b62389606576511ada</anchor>
      <arglist>(const std::u32string &amp;value)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WString</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>a26eb5fdbe5b6947131e7a4162a6cdfca</anchor>
      <arglist>(const char *value, CharEncoding encoding=CharEncoding::Default)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WString</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>ad2b612d535553feb1e4d08347f5475b1</anchor>
      <arglist>(const char *value, const std::locale &amp;loc)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WString</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>a64d17e31e557208ab8d8ea765c1e52b8</anchor>
      <arglist>(const std::string &amp;value, CharEncoding encoding=CharEncoding::Default)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WString</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>abe3c78ad0946ae0217a26d9ea2b43d31</anchor>
      <arglist>(std::string &amp;&amp;value, CharEncoding encoding=CharEncoding::Default)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WString</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>a5aaf5904a4293de24d79ec953cf0d3b6</anchor>
      <arglist>(const std::string &amp;value, const std::locale &amp;loc)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WString</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>ad3e7e1481f31514ecf58a6a344ec6ca6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>WString &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>afbd9254fb159d682ed4a2227a7ec69b7</anchor>
      <arglist>(const WString &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>WString &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>afbc279d3ed2106bfe9a4c069b9eef0b9</anchor>
      <arglist>(WString &amp;&amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>a8b66887e8c877253f1616426c1609cd6</anchor>
      <arglist>(const WString &amp;rhs) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>ab5202761cf537f3163d6c95d5cd4e960</anchor>
      <arglist>(const WString &amp;rhs) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&gt;</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>af9bb584a16094aecbb3bb2e3ce07c70a</anchor>
      <arglist>(const WString &amp;rhs) const</arglist>
    </member>
    <member kind="function">
      <type>WString &amp;</type>
      <name>operator+=</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>abb46a3098a1a185a3498fbcf4c714c7b</anchor>
      <arglist>(const WString &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>WString &amp;</type>
      <name>operator+=</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>a0c455e324e5e756c456cd662f829373c</anchor>
      <arglist>(const std::wstring &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>WString &amp;</type>
      <name>operator+=</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>ab5b3983ae7dadbcff704fd28ef4bfa68</anchor>
      <arglist>(const std::u16string &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>WString &amp;</type>
      <name>operator+=</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>af6e7606d8bd4a5ec0d5c0ee8dcb187d4</anchor>
      <arglist>(const std::u32string &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>WString &amp;</type>
      <name>operator+=</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>a64bbf435dfe82342ce43faf9c48ee28f</anchor>
      <arglist>(const wchar_t *rhs)</arglist>
    </member>
    <member kind="function">
      <type>WString &amp;</type>
      <name>operator+=</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>ae52a48d7a86258cb2463d1c84984f793</anchor>
      <arglist>(const char16_t *rhs)</arglist>
    </member>
    <member kind="function">
      <type>WString &amp;</type>
      <name>operator+=</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>a70863a5a141ebf8f8d9009adff20ac90</anchor>
      <arglist>(const char32_t *rhs)</arglist>
    </member>
    <member kind="function">
      <type>WString &amp;</type>
      <name>operator+=</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>a36d097b2ed9a2e921ad2d6a79bc3dd25</anchor>
      <arglist>(const std::string &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>WString &amp;</type>
      <name>operator+=</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>acac4b0bc682e0789edc2976883ed7a5a</anchor>
      <arglist>(const char *rhs)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>empty</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>a233225f344af1b4a090f4a4dd76ec53d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>toUTF8</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>a1909cb92d8ea5a131e0765f42fc8f938</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>toXhtmlUTF8</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>afa9402783643bb3afe558f66fda84b11</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::wstring</type>
      <name>value</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>abdda5edff1928cb1d60942c4c14e2bf5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::u16string</type>
      <name>toUTF16</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>ae4c3e1d0e291bdce6f4f1c1910b95639</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::u32string</type>
      <name>toUTF32</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>a75736c4d18dacdacd0c498cada7912f5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>narrow</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>a32f78326b7c2f213768645e04dfa790a</anchor>
      <arglist>(const std::locale &amp;loc=std::locale()) const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator std::wstring</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>aadfad16543633cbcb582b702933741e2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator std::u16string</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>ac043714f04fdc0284ded960baae0498e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator std::u32string</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>a67d68abf8cb0b134953f78807c53b9e5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>literal</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>a30835c468542b83d3d0a78a01e113669</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::string</type>
      <name>key</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>af9f2ed20d12c17f32c7c29683a326525</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WString &amp;</type>
      <name>arg</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>a1c3d0d7790282777ce13edececfe0095</anchor>
      <arglist>(const std::wstring &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>WString &amp;</type>
      <name>arg</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>abb1c2e4b26cc242c58e5654e6e6f4472</anchor>
      <arglist>(const wchar_t *value)</arglist>
    </member>
    <member kind="function">
      <type>WString &amp;</type>
      <name>arg</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>a85ba0c7bd136f7bf499e48ad468dedbb</anchor>
      <arglist>(const std::u16string &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>WString &amp;</type>
      <name>arg</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>a387acc39c795ed902ae4f90ca17c1be6</anchor>
      <arglist>(const char16_t *value)</arglist>
    </member>
    <member kind="function">
      <type>WString &amp;</type>
      <name>arg</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>a6d0190be5dbc06d6df74ccf36543629f</anchor>
      <arglist>(const std::u32string &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>WString &amp;</type>
      <name>arg</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>a5c68a4bf3b51de06a35a6d9a6e6ae159</anchor>
      <arglist>(const char32_t *value)</arglist>
    </member>
    <member kind="function">
      <type>WString &amp;</type>
      <name>arg</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>ab50773a2d047984564198409a56c8e70</anchor>
      <arglist>(const std::string &amp;value, CharEncoding encoding=CharEncoding::Default)</arglist>
    </member>
    <member kind="function">
      <type>WString &amp;</type>
      <name>arg</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>addd7527b31764f117db7f7d403feb53d</anchor>
      <arglist>(const char *value, CharEncoding encoding=CharEncoding::Default)</arglist>
    </member>
    <member kind="function">
      <type>WString &amp;</type>
      <name>arg</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>a4761af728bf3cc5bca4ae3770243883e</anchor>
      <arglist>(const WString &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>WString &amp;</type>
      <name>arg</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>a167d99295d497bc37c11893c175e7e02</anchor>
      <arglist>(int value)</arglist>
    </member>
    <member kind="function">
      <type>WString &amp;</type>
      <name>arg</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>a539d0e85370e023a30a4e82e8cb1c428</anchor>
      <arglist>(unsigned value)</arglist>
    </member>
    <member kind="function">
      <type>WString &amp;</type>
      <name>arg</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>a98fdb02a3eb88fb480a82d91f1c1d271</anchor>
      <arglist>(long value)</arglist>
    </member>
    <member kind="function">
      <type>WString &amp;</type>
      <name>arg</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>af0a5b05ed7a55939b2b5903a8b511547</anchor>
      <arglist>(unsigned long value)</arglist>
    </member>
    <member kind="function">
      <type>WString &amp;</type>
      <name>arg</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>a8704de6255c71c56e00f9ab6ff1f57a2</anchor>
      <arglist>(long long value)</arglist>
    </member>
    <member kind="function">
      <type>WString &amp;</type>
      <name>arg</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>a5c604d44e6b038ebfaa1b60b356ac20a</anchor>
      <arglist>(unsigned long long value)</arglist>
    </member>
    <member kind="function">
      <type>WString &amp;</type>
      <name>arg</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>aadfe619a23256dab80fd238c6e4ad7d7</anchor>
      <arglist>(double value)</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; WString &gt; &amp;</type>
      <name>args</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>a9dd483cc3f724204bbfe245ccee19092</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>refresh</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>a545b18b7e07b4596281970ca1599430b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>jsStringLiteral</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>a32d60b4189af93f09c776072bb0d4435</anchor>
      <arglist>(char delimiter=&apos;\&apos;&apos;) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>aca71ca746327079dceb5fa1ee2363a20</anchor>
      <arglist>(const WString &amp;rhs) const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setDefaultEncoding</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>ad68a1023dce22ae8c18826a9da3dfd77</anchor>
      <arglist>(Wt::CharEncoding encoding)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static WString</type>
      <name>fromUTF8</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>a17afc7c43b5b7a710047be4a2c639575</anchor>
      <arglist>(const std::string &amp;value, bool checkValid=false)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static WString</type>
      <name>fromUTF8</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>a19470d40393c1fd5164d9ca8b2ec5bf2</anchor>
      <arglist>(std::string &amp;&amp;value, bool checkValid=false)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static WString</type>
      <name>fromUTF8</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>a4fbd5cdc92e39411de45acb680b1206b</anchor>
      <arglist>(const char *value, bool checkValid=false)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static WString</type>
      <name>tr</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>a0afc7dc0f9897456d71b569a86ca26c1</anchor>
      <arglist>(const char *key)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static WString</type>
      <name>tr</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>a42a4aad50b5a1633b1cfef4c0ffa044a</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static WString</type>
      <name>trn</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>a6d4ae1d4366771bf06c8269ef561088b</anchor>
      <arglist>(const char *key, ::uint64_t n)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static WString</type>
      <name>trn</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>aaa27399ba69fe7a10c112e79559e80e3</anchor>
      <arglist>(const std::string &amp;key, ::uint64_t n)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const WString</type>
      <name>Empty</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>a511a12bce677dc733bd7b6b9415bff73</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>CharEncoding</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>a55b820090cc9d15753301df90e35fd52</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>WT_API WString</type>
      <name>utf8</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>ae72fb2785245ed667036af9a0838147b</anchor>
      <arglist>(const char *value)</arglist>
    </member>
    <member kind="function">
      <type>WT_API WString</type>
      <name>utf8</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>af2f80a350dfe50f41656051fd2a5e1a3</anchor>
      <arglist>(const std::string &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>WT_API WString</type>
      <name>operator+</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>a8e74a971d0d341af51ffcc77fc4c5f29</anchor>
      <arglist>(const WString &amp;lhs, const WString &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>WT_API WString</type>
      <name>operator+</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>a20e373795a949c805d82cd7793ce0847</anchor>
      <arglist>(const WString &amp;lhs, const std::wstring &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>WT_API WString</type>
      <name>operator+</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>a02a37ef9ec769262a4aaf74bdba092cd</anchor>
      <arglist>(const WString &amp;lhs, const std::u16string &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>WT_API WString</type>
      <name>operator+</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>a767e63ead35ad9e6dbe0f8584d73d7f9</anchor>
      <arglist>(const WString &amp;lhs, const std::u32string &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>WT_API WString</type>
      <name>operator+</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>a29b92c396a6bdc6703a38c2da0822065</anchor>
      <arglist>(const WString &amp;lhs, const wchar_t *rhs)</arglist>
    </member>
    <member kind="function">
      <type>WT_API WString</type>
      <name>operator+</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>a07e268bf5d89591594cba64a8965852e</anchor>
      <arglist>(const WString &amp;lhs, const char16_t *rhs)</arglist>
    </member>
    <member kind="function">
      <type>WT_API WString</type>
      <name>operator+</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>a4ce27ac92bd99baa0d00d404cb4d1240</anchor>
      <arglist>(const WString &amp;lhs, const char32_t *rhs)</arglist>
    </member>
    <member kind="function">
      <type>WT_API WString</type>
      <name>operator+</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>abf52ea1a14eff4dc0f19fc089c499b58</anchor>
      <arglist>(const WString &amp;lhs, const std::string &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>WT_API WString</type>
      <name>operator+</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>a8358446c46d0433f3f080698e271b91f</anchor>
      <arglist>(const WString &amp;lhs, const char *rhs)</arglist>
    </member>
    <member kind="function">
      <type>WT_API WString</type>
      <name>operator+</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>ac5c8dce7d5d1e3a9abe13a9d9093fbb2</anchor>
      <arglist>(const std::wstring &amp;lhs, const WString &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>WT_API WString</type>
      <name>operator+</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>a56574611b44d17964398679cab9fb402</anchor>
      <arglist>(const std::u16string &amp;lhs, const WString &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>WT_API WString</type>
      <name>operator+</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>a05170830c811ded55311d94089c46e4b</anchor>
      <arglist>(const std::u32string &amp;lhs, const WString &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>WT_API WString</type>
      <name>operator+</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>aec7aea6adc509be52d4852cdad577aa7</anchor>
      <arglist>(const wchar_t *lhs, const WString &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>WT_API WString</type>
      <name>operator+</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>abf317a14d041f7da81b3d642f0b1b609</anchor>
      <arglist>(const char16_t *lhs, const WString &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>WT_API WString</type>
      <name>operator+</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>aa94d987e696d472860cad4f97dcaf084</anchor>
      <arglist>(const char32_t *lhs, const WString &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>WT_API WString</type>
      <name>operator+</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>ade2e90e8c1b589d5c7cde214e05953bb</anchor>
      <arglist>(const std::string &amp;lhs, const WString &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>WT_API WString</type>
      <name>operator+</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>a21c7b1899a0c1fefb22cad296605c66b</anchor>
      <arglist>(const char *lhs, const WString &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>WT_API bool</type>
      <name>operator==</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>a902005eafdaa7adc292dfb384feed65f</anchor>
      <arglist>(const char *lhs, const WString &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>WT_API bool</type>
      <name>operator==</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>a8b3b3574ae5e0eb9d8a74663a7ef52ad</anchor>
      <arglist>(const wchar_t *lhs, const WString &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>WT_API bool</type>
      <name>operator==</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>ad344c529b72a56d7a996ba8a4e2910a8</anchor>
      <arglist>(const char16_t *lhs, const WString &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>WT_API bool</type>
      <name>operator==</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>afb0365d92476a1207a51c5ed6249dc74</anchor>
      <arglist>(const char32_t *lhs, const WString &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>WT_API bool</type>
      <name>operator==</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>aafe1405efe5edabdb5fa11a2f0891899</anchor>
      <arglist>(const std::string &amp;lhs, const WString &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>WT_API bool</type>
      <name>operator==</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>a18fa1117aac536af9a3eeaf4a06d33e6</anchor>
      <arglist>(const std::wstring &amp;lhs, const WString &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>WT_API bool</type>
      <name>operator==</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>afe4e6adaf497677beff556e917b67942</anchor>
      <arglist>(const std::u16string &amp;lhs, const WString &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>WT_API bool</type>
      <name>operator==</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>aa9e7ab036c0dab0d124b0a39c0885ba7</anchor>
      <arglist>(const std::u32string &amp;lhs, const WString &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>WT_API bool</type>
      <name>operator!=</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>a5be68db1207e42e9cb78584aada52b7e</anchor>
      <arglist>(const char *lhs, const WString &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>WT_API bool</type>
      <name>operator!=</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>add2140b578bed246c41705506987ce8d</anchor>
      <arglist>(const wchar_t *lhs, const WString &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>WT_API bool</type>
      <name>operator!=</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>a114adce50e4ea445983b538b83243c1d</anchor>
      <arglist>(const char16_t *lhs, const WString &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>WT_API bool</type>
      <name>operator!=</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>a3e5c0f10df2c0649dd46f58b3b3cef35</anchor>
      <arglist>(const char32_t *lhs, const WString &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>WT_API bool</type>
      <name>operator!=</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>a39afb0dc0c18f1c4ae9a1c36fd061722</anchor>
      <arglist>(const std::string &amp;lhs, const WString &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>WT_API bool</type>
      <name>operator!=</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>a4bbceb2c54d45a3b0b6bc55d15a17dba</anchor>
      <arglist>(const std::wstring &amp;lhs, const WString &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>WT_API bool</type>
      <name>operator!=</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>a5c1fb65a7265d5e290c4eb6c59aa332a</anchor>
      <arglist>(const std::u16string &amp;lhs, const WString &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>WT_API bool</type>
      <name>operator!=</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>a9f205549e88324a0663f2f0a7afb1ef5</anchor>
      <arglist>(const std::u32string &amp;lhs, const WString &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>WT_API std::wostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>a82f539b8c205675c9c9f4d5d42cc9c57</anchor>
      <arglist>(std::wostream &amp;lhs, const WString &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>WT_API std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>a5175831fb21a4e6245bfde54c5aaa3d2</anchor>
      <arglist>(std::ostream &amp;lhs, const WString &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>WT_API std::wstring</type>
      <name>widen</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>a0de7f8ee205f8a3368d6428e4b474f11</anchor>
      <arglist>(const std::string &amp;s, const std::locale &amp;loc=std::locale())</arglist>
    </member>
    <member kind="function">
      <type>WT_API std::u16string</type>
      <name>toUTF16</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>a70c6a49244116b48470e5169c1482c98</anchor>
      <arglist>(const std::string &amp;s, const std::locale &amp;loc=std::locale())</arglist>
    </member>
    <member kind="function">
      <type>WT_API std::u32string</type>
      <name>toUTF32</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>a760280b8bc8f86bfcca03df0a9b8ec9e</anchor>
      <arglist>(const std::string &amp;s, const std::locale &amp;loc=std::locale())</arglist>
    </member>
    <member kind="function">
      <type>WT_API std::string</type>
      <name>narrow</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>a2986eba78638de302685abc4f8e694d0</anchor>
      <arglist>(const std::wstring &amp;s, const std::locale &amp;loc=std::locale())</arglist>
    </member>
    <member kind="function">
      <type>WT_API std::string</type>
      <name>narrow</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>a759c32c5719236a15d4356d475898238</anchor>
      <arglist>(const std::u16string &amp;s, const std::locale &amp;loc=std::locale())</arglist>
    </member>
    <member kind="function">
      <type>WT_API std::string</type>
      <name>narrow</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>a620dd0de65de47297df137f9c1126df1</anchor>
      <arglist>(const std::u32string &amp;s, const std::locale &amp;loc=std::locale())</arglist>
    </member>
    <member kind="function">
      <type>WT_API std::wstring</type>
      <name>fromUTF8</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>aa5e236feac365794b288fd04a461406b</anchor>
      <arglist>(const std::string &amp;s)</arglist>
    </member>
    <member kind="function">
      <type>WT_API std::u16string</type>
      <name>utf8ToUTF16</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>a94d51a86b0fb28353fc4f96cac9ff1b4</anchor>
      <arglist>(const std::string &amp;s)</arglist>
    </member>
    <member kind="function">
      <type>WT_API std::u32string</type>
      <name>utf8ToUTF32</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>a4a6210f9795dbab53ed77c00b2112dd7</anchor>
      <arglist>(const std::string &amp;s)</arglist>
    </member>
    <member kind="function">
      <type>WT_API std::string</type>
      <name>fromUTF8</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>a302015c198cc14fb1705c99797253b48</anchor>
      <arglist>(const std::string &amp;s, const std::locale &amp;loc)</arglist>
    </member>
    <member kind="function">
      <type>WT_API std::string</type>
      <name>toUTF8</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>a32dae81c17e873b041a85a8509c905a5</anchor>
      <arglist>(const std::wstring &amp;s)</arglist>
    </member>
    <member kind="function">
      <type>WT_API std::string</type>
      <name>toUTF8</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>abfa01e6122577fc94a885c0db8147f5a</anchor>
      <arglist>(const std::u16string &amp;s)</arglist>
    </member>
    <member kind="function">
      <type>WT_API std::string</type>
      <name>toUTF8</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>aa9c68a47cf31abf31396abd11809cf95</anchor>
      <arglist>(const std::u32string &amp;s)</arglist>
    </member>
    <member kind="function">
      <type>WT_API std::string</type>
      <name>toUTF8</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>a402d7dbb582ee830e5718b50b53e971a</anchor>
      <arglist>(const std::string &amp;s, const std::locale &amp;loc=std::locale())</arglist>
    </member>
    <member kind="function">
      <type>WT_API std::u16string</type>
      <name>toUTF16</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>a90adb6dd7076fdd73502e4c480c918c5</anchor>
      <arglist>(const std::wstring &amp;s)</arglist>
    </member>
    <member kind="function">
      <type>WT_API std::u32string</type>
      <name>toUTF32</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>ac204e5bf271e83877294d4d61a5a4dcb</anchor>
      <arglist>(const std::wstring &amp;s)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WStringListModel</name>
    <filename>classWt_1_1WStringListModel.html</filename>
    <base>Wt::WAbstractListModel</base>
    <member kind="function">
      <type></type>
      <name>WStringListModel</name>
      <anchorfile>classWt_1_1WStringListModel.html</anchorfile>
      <anchor>ad4fd965528604f66e9b59b7059aecbfc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WStringListModel</name>
      <anchorfile>classWt_1_1WStringListModel.html</anchorfile>
      <anchor>acbfe96e77e283d3718f43494a054292d</anchor>
      <arglist>(const std::vector&lt; WString &gt; &amp;strings)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WStringListModel</name>
      <anchorfile>classWt_1_1WStringListModel.html</anchorfile>
      <anchor>afa9abc72565103ebedc8efa26dad427a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setStringList</name>
      <anchorfile>classWt_1_1WStringListModel.html</anchorfile>
      <anchor>a605688afa2a1810e1a01b3ef3d335bda</anchor>
      <arglist>(const std::vector&lt; WString &gt; &amp;strings)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertString</name>
      <anchorfile>classWt_1_1WStringListModel.html</anchorfile>
      <anchor>a3bf0b8d2e110cbd518a57f74e8f9e4c6</anchor>
      <arglist>(int row, const WString &amp;string)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addString</name>
      <anchorfile>classWt_1_1WStringListModel.html</anchorfile>
      <anchor>a11d42c5242caafbdc6cb21d56f7e8a8b</anchor>
      <arglist>(const WString &amp;string)</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; WString &gt; &amp;</type>
      <name>stringList</name>
      <anchorfile>classWt_1_1WStringListModel.html</anchorfile>
      <anchor>afe18f842351d566221ad2cfe0c352987</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFlags</name>
      <anchorfile>classWt_1_1WStringListModel.html</anchorfile>
      <anchor>ae6046af0462447c09a10ede02b8af760</anchor>
      <arglist>(int index, WFlags&lt; ItemFlag &gt; flags)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WFlags&lt; ItemFlag &gt;</type>
      <name>flags</name>
      <anchorfile>classWt_1_1WStringListModel.html</anchorfile>
      <anchor>a43669160cd2e31cd543f3fa290abd752</anchor>
      <arglist>(const WModelIndex &amp;index) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>setData</name>
      <anchorfile>classWt_1_1WStringListModel.html</anchorfile>
      <anchor>a1a3f99b4d4710dee0db43642d9d335c6</anchor>
      <arglist>(const WModelIndex &amp;index, const cpp17::any &amp;value, ItemDataRole role=ItemDataRole::Edit) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual cpp17::any</type>
      <name>data</name>
      <anchorfile>classWt_1_1WStringListModel.html</anchorfile>
      <anchor>a2a71e37fdb73e7281996de5680ac2ab3</anchor>
      <arglist>(const WModelIndex &amp;index, ItemDataRole role=ItemDataRole::Display) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>rowCount</name>
      <anchorfile>classWt_1_1WStringListModel.html</anchorfile>
      <anchor>aa68bf7a532d34d2fe9d11d72d900c77c</anchor>
      <arglist>(const WModelIndex &amp;parent=WModelIndex()) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>insertRows</name>
      <anchorfile>classWt_1_1WStringListModel.html</anchorfile>
      <anchor>ac3b8dd9a22fbeb0fc297127bc19314b6</anchor>
      <arglist>(int row, int count, const WModelIndex &amp;parent=WModelIndex()) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>removeRows</name>
      <anchorfile>classWt_1_1WStringListModel.html</anchorfile>
      <anchor>a8780fa66b00d5e4163d2b339d23c98f9</anchor>
      <arglist>(int row, int count, const WModelIndex &amp;parent=WModelIndex()) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>sort</name>
      <anchorfile>classWt_1_1WStringListModel.html</anchorfile>
      <anchor>ac7fc714788b85a349a75cf750c5f8264</anchor>
      <arglist>(int column, SortOrder order=SortOrder::Ascending) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WStringStream</name>
    <filename>classWt_1_1WStringStream.html</filename>
    <class kind="struct">Wt::WStringStream::iterator</class>
    <member kind="function">
      <type></type>
      <name>WStringStream</name>
      <anchorfile>classWt_1_1WStringStream.html</anchorfile>
      <anchor>a43b7f6c87d76e0126c3c7b7cf818bb90</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>WStringStream &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1WStringStream.html</anchorfile>
      <anchor>a421e887595e9c22ec5eaab1e2161bfc2</anchor>
      <arglist>(const WStringStream &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WStringStream</name>
      <anchorfile>classWt_1_1WStringStream.html</anchorfile>
      <anchor>aedb019afeb209f31484c5a1c352c1ae6</anchor>
      <arglist>(std::ostream &amp;sink)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WStringStream</name>
      <anchorfile>classWt_1_1WStringStream.html</anchorfile>
      <anchor>aba2117aaabcfcacfc72e5ec9d209ab49</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>append</name>
      <anchorfile>classWt_1_1WStringStream.html</anchorfile>
      <anchor>a8abecc43b2fb43c26c651522d0b7b161</anchor>
      <arglist>(const char *s, int length)</arglist>
    </member>
    <member kind="function">
      <type>WStringStream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classWt_1_1WStringStream.html</anchorfile>
      <anchor>a23e03ca1c7d82db2f5bb88724cf899f9</anchor>
      <arglist>(char)</arglist>
    </member>
    <member kind="function">
      <type>WStringStream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classWt_1_1WStringStream.html</anchorfile>
      <anchor>a34c21d2d53a86acb533fba11c1f6ec63</anchor>
      <arglist>(const char *s)</arglist>
    </member>
    <member kind="function">
      <type>WStringStream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classWt_1_1WStringStream.html</anchorfile>
      <anchor>a64cf621ac1e2f3cca17a8134b0e6a306</anchor>
      <arglist>(const std::string &amp;s)</arglist>
    </member>
    <member kind="function">
      <type>WStringStream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classWt_1_1WStringStream.html</anchorfile>
      <anchor>af0e5db0cd06adc5f8b7a1ee25e308937</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="function">
      <type>WStringStream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classWt_1_1WStringStream.html</anchorfile>
      <anchor>ac9ec61e8b75668d13007035f00d3cfe0</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>WStringStream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classWt_1_1WStringStream.html</anchorfile>
      <anchor>a97609836dc22854194bee7e6f38b3dc5</anchor>
      <arglist>(unsigned int)</arglist>
    </member>
    <member kind="function">
      <type>WStringStream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classWt_1_1WStringStream.html</anchorfile>
      <anchor>a794252387a6bcbae24281c4132175553</anchor>
      <arglist>(long long)</arglist>
    </member>
    <member kind="function">
      <type>WStringStream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classWt_1_1WStringStream.html</anchorfile>
      <anchor>ab2abbfb45d500ec67ee74f8dc0d35fe4</anchor>
      <arglist>(double)</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>back_inserter</name>
      <anchorfile>classWt_1_1WStringStream.html</anchorfile>
      <anchor>a2eab40649e542a73582fe84544828837</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>c_str</name>
      <anchorfile>classWt_1_1WStringStream.html</anchorfile>
      <anchor>aac2676a3876197f38dda8432073bb8c6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>str</name>
      <anchorfile>classWt_1_1WStringStream.html</anchorfile>
      <anchor>a59c90501ecea2676da4c4e0ed72ade01</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>empty</name>
      <anchorfile>classWt_1_1WStringStream.html</anchorfile>
      <anchor>aa94a7360ea473d1a0fc0be26df7f1959</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>length</name>
      <anchorfile>classWt_1_1WStringStream.html</anchorfile>
      <anchor>a528ac14a42bd59d9fddcaa3a439dc2af</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classWt_1_1WStringStream.html</anchorfile>
      <anchor>a180abb78f4bf3e5b72b78d51b5eed158</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WSuggestionPopup</name>
    <filename>classWt_1_1WSuggestionPopup.html</filename>
    <base>Wt::WPopupWidget</base>
    <class kind="struct">Wt::WSuggestionPopup::Options</class>
    <member kind="typedef">
      <type>PopupTrigger</type>
      <name>Trigger</name>
      <anchorfile>classWt_1_1WSuggestionPopup.html</anchorfile>
      <anchor>a7bf9776b2cd2054d30c651c64e1f87d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WSuggestionPopup</name>
      <anchorfile>classWt_1_1WSuggestionPopup.html</anchorfile>
      <anchor>a1a7bb55dd66cdcbfb1af8e3af852967f</anchor>
      <arglist>(const Options &amp;options)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WSuggestionPopup</name>
      <anchorfile>classWt_1_1WSuggestionPopup.html</anchorfile>
      <anchor>a316d9f8e16740ba2ededfc800055e1db</anchor>
      <arglist>(const std::string &amp;matcherJS, const std::string &amp;replacerJS)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>forEdit</name>
      <anchorfile>classWt_1_1WSuggestionPopup.html</anchorfile>
      <anchor>a7be98d950273e379131aa1210798fd1a</anchor>
      <arglist>(WFormWidget *edit, WFlags&lt; PopupTrigger &gt; popupTriggers=PopupTrigger::Editing)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeEdit</name>
      <anchorfile>classWt_1_1WSuggestionPopup.html</anchorfile>
      <anchor>ad8e85625b9309639222ed1893c57713a</anchor>
      <arglist>(WFormWidget *edit)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>showAt</name>
      <anchorfile>classWt_1_1WSuggestionPopup.html</anchorfile>
      <anchor>a0dd2b20a4a1505d464a8213585bbc4d3</anchor>
      <arglist>(WFormWidget *edit)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearSuggestions</name>
      <anchorfile>classWt_1_1WSuggestionPopup.html</anchorfile>
      <anchor>a0beae292354fa79c2bbe68e9b11c8f01</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addSuggestion</name>
      <anchorfile>classWt_1_1WSuggestionPopup.html</anchorfile>
      <anchor>aaf9e6a5b8776533768f70a2ff44ab300</anchor>
      <arglist>(const WString &amp;suggestionText, const WString &amp;suggestionValue=WString::Empty)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setModel</name>
      <anchorfile>classWt_1_1WSuggestionPopup.html</anchorfile>
      <anchor>ad8ddf026a9b11b488199f5225df4e9fa</anchor>
      <arglist>(const std::shared_ptr&lt; WAbstractItemModel &gt; &amp;model)</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; WAbstractItemModel &gt;</type>
      <name>model</name>
      <anchorfile>classWt_1_1WSuggestionPopup.html</anchorfile>
      <anchor>aa9add86dd6d1d8bd410901734a8db2ee</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setModelColumn</name>
      <anchorfile>classWt_1_1WSuggestionPopup.html</anchorfile>
      <anchor>a6616d230bad6511bc40d3bf2c1e4ec84</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDefaultIndex</name>
      <anchorfile>classWt_1_1WSuggestionPopup.html</anchorfile>
      <anchor>a9ebf63d4048a9662c3e05ae6be162993</anchor>
      <arglist>(int row)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>defaultIndex</name>
      <anchorfile>classWt_1_1WSuggestionPopup.html</anchorfile>
      <anchor>a7862617bf671b9ec1e5e0913ef9d41d7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFilterLength</name>
      <anchorfile>classWt_1_1WSuggestionPopup.html</anchorfile>
      <anchor>a8a77e3397fa98db0639fca3b1c94a8a2</anchor>
      <arglist>(int count)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>filterLength</name>
      <anchorfile>classWt_1_1WSuggestionPopup.html</anchorfile>
      <anchor>a435ee99263664abf776b576e13e5dc20</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Signal&lt; WString &gt; &amp;</type>
      <name>filterModel</name>
      <anchorfile>classWt_1_1WSuggestionPopup.html</anchorfile>
      <anchor>a4c7f8529e7d49fca2a10e95bdbbd9815</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Signal&lt; int, WFormWidget * &gt; &amp;</type>
      <name>activated</name>
      <anchorfile>classWt_1_1WSuggestionPopup.html</anchorfile>
      <anchor>a63f0db2301510404922d7ed1572b92cc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDropDownIconUnfiltered</name>
      <anchorfile>classWt_1_1WSuggestionPopup.html</anchorfile>
      <anchor>a0395bd5080856eb95ccb50748f25d1c7</anchor>
      <arglist>(bool isUnfiltered)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>currentItem</name>
      <anchorfile>classWt_1_1WSuggestionPopup.html</anchorfile>
      <anchor>a9e6ca6d273c35a601be67d88baf8f152</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setEditRole</name>
      <anchorfile>classWt_1_1WSuggestionPopup.html</anchorfile>
      <anchor>a0abf89a25ea7eece7d36391d56130cf7</anchor>
      <arglist>(ItemDataRole role)</arglist>
    </member>
    <member kind="function">
      <type>ItemDataRole</type>
      <name>editRole</name>
      <anchorfile>classWt_1_1WSuggestionPopup.html</anchorfile>
      <anchor>acba647adde23e76f2ce5446b60145aa0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>generateMatcherJS</name>
      <anchorfile>classWt_1_1WSuggestionPopup.html</anchorfile>
      <anchor>a415162037c68f38e4141264022b02489</anchor>
      <arglist>(const Options &amp;options)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>generateReplacerJS</name>
      <anchorfile>classWt_1_1WSuggestionPopup.html</anchorfile>
      <anchor>a58e9fd0c214cdc80170c42933af206aa</anchor>
      <arglist>(const Options &amp;options)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>render</name>
      <anchorfile>classWt_1_1WSuggestionPopup.html</anchorfile>
      <anchor>a2ce0fe1950a6daead47db7a7188fcf3f</anchor>
      <arglist>(WFlags&lt; RenderFlag &gt; flags) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Chart::WSurfaceSelection</name>
    <filename>classWt_1_1Chart_1_1WSurfaceSelection.html</filename>
    <base>Wt::Chart::WSelection</base>
    <member kind="variable">
      <type>double</type>
      <name>x</name>
      <anchorfile>classWt_1_1Chart_1_1WSurfaceSelection.html</anchorfile>
      <anchor>aad8f22669069267da2e255652c9f5844</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>y</name>
      <anchorfile>classWt_1_1Chart_1_1WSurfaceSelection.html</anchorfile>
      <anchor>a4ce7c467e380841ece41d4ba31fba6ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>z</name>
      <anchorfile>classWt_1_1Chart_1_1WSurfaceSelection.html</anchorfile>
      <anchor>ae41bec5bed1f3435244cc05532e14513</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WSvgImage</name>
    <filename>classWt_1_1WSvgImage.html</filename>
    <base>Wt::WResource</base>
    <base>Wt::WVectorImage</base>
    <member kind="function">
      <type></type>
      <name>WSvgImage</name>
      <anchorfile>classWt_1_1WSvgImage.html</anchorfile>
      <anchor>a8d67d27e6417534fe6ac14975c8859e5</anchor>
      <arglist>(const WLength &amp;width, const WLength &amp;height, bool paintUpdate=false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WSvgImage</name>
      <anchorfile>classWt_1_1WSvgImage.html</anchorfile>
      <anchor>adae0510faa27fb9ae5d3e199de3cd5d9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WFlags&lt; PaintDeviceFeatureFlag &gt;</type>
      <name>features</name>
      <anchorfile>classWt_1_1WSvgImage.html</anchorfile>
      <anchor>a455b97b3d6b0ab0777040bbddddd4e59</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setChanged</name>
      <anchorfile>classWt_1_1WSvgImage.html</anchorfile>
      <anchor>abbf1101855b88af88babb70eec8fb734</anchor>
      <arglist>(WFlags&lt; PainterChangeFlag &gt; flags) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>drawArc</name>
      <anchorfile>classWt_1_1WSvgImage.html</anchorfile>
      <anchor>af4909f63789e871d0ec184c5e01ab87f</anchor>
      <arglist>(const WRectF &amp;rect, double startAngle, double spanAngle) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>drawImage</name>
      <anchorfile>classWt_1_1WSvgImage.html</anchorfile>
      <anchor>afeb437a46c1f3aac09e5f56305248a35</anchor>
      <arglist>(const WRectF &amp;rect, const std::string &amp;imgUri, int imgWidth, int imgHeight, const WRectF &amp;sourceRect) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>drawLine</name>
      <anchorfile>classWt_1_1WSvgImage.html</anchorfile>
      <anchor>af29383d6fe1519fb773a1a560ac30209</anchor>
      <arglist>(double x1, double y1, double x2, double y2) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>drawRect</name>
      <anchorfile>classWt_1_1WSvgImage.html</anchorfile>
      <anchor>a52fb991a84030b8426023808ad74e37b</anchor>
      <arglist>(const WRectF &amp;rectangle) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>drawPath</name>
      <anchorfile>classWt_1_1WSvgImage.html</anchorfile>
      <anchor>a24d9befc149c068a31cf06af93c468f5</anchor>
      <arglist>(const WPainterPath &amp;path) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>drawText</name>
      <anchorfile>classWt_1_1WSvgImage.html</anchorfile>
      <anchor>a7e8641239dc04837e4bcdc363a05a926</anchor>
      <arglist>(const WRectF &amp;rect, WFlags&lt; AlignmentFlag &gt; alignmentFlags, TextFlag textFlag, const WString &amp;text, const WPointF *clipPoint) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WTextItem</type>
      <name>measureText</name>
      <anchorfile>classWt_1_1WSvgImage.html</anchorfile>
      <anchor>a5d1635cff0574958b791247117f9a9eb</anchor>
      <arglist>(const WString &amp;text, double maxWidth=-1, bool wordWrap=false) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WFontMetrics</type>
      <name>fontMetrics</name>
      <anchorfile>classWt_1_1WSvgImage.html</anchorfile>
      <anchor>abaf816c1bb41f58b1221f95207a39688</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>init</name>
      <anchorfile>classWt_1_1WSvgImage.html</anchorfile>
      <anchor>ae6be23d97d8fa8541f63f847eea842ca</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>done</name>
      <anchorfile>classWt_1_1WSvgImage.html</anchorfile>
      <anchor>a3290d6d5f418f9d47843520f245b217b</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>paintActive</name>
      <anchorfile>classWt_1_1WSvgImage.html</anchorfile>
      <anchor>a227f63bfe2254497498a2b5ac0abb442</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>rendered</name>
      <anchorfile>classWt_1_1WSvgImage.html</anchorfile>
      <anchor>ab95154880902d67ae646a4c87958cf67</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WLength</type>
      <name>width</name>
      <anchorfile>classWt_1_1WSvgImage.html</anchorfile>
      <anchor>a55ba5c1ef28df7e6e095cb02e29ce68b</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WLength</type>
      <name>height</name>
      <anchorfile>classWt_1_1WSvgImage.html</anchorfile>
      <anchor>a15e542c5d9eead8dcda024d73fb25164</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>handleRequest</name>
      <anchorfile>classWt_1_1WSvgImage.html</anchorfile>
      <anchor>a9a8168d243a7c070c20f7cd65f3372b5</anchor>
      <arglist>(const Http::Request &amp;request, Http::Response &amp;response) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual WPainter *</type>
      <name>painter</name>
      <anchorfile>classWt_1_1WSvgImage.html</anchorfile>
      <anchor>ac1ce29d49da4b7287060125413217f9f</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>setPainter</name>
      <anchorfile>classWt_1_1WSvgImage.html</anchorfile>
      <anchor>a70079bceea593edb9d3dd4314b79ed56</anchor>
      <arglist>(WPainter *painter) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WTable</name>
    <filename>classWt_1_1WTable.html</filename>
    <base>Wt::WInteractWidget</base>
    <member kind="function">
      <type></type>
      <name>WTable</name>
      <anchorfile>classWt_1_1WTable.html</anchorfile>
      <anchor>a8b9c9832da1cab0c750092bbda597a14</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~WTable</name>
      <anchorfile>classWt_1_1WTable.html</anchorfile>
      <anchor>a342361febd4e025a71d4ccf3990b9c7c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>WTableCell *</type>
      <name>elementAt</name>
      <anchorfile>classWt_1_1WTable.html</anchorfile>
      <anchor>ac4b59af9a44e185edb14e7f1f439d6c4</anchor>
      <arglist>(int row, int column)</arglist>
    </member>
    <member kind="function">
      <type>WTableRow *</type>
      <name>rowAt</name>
      <anchorfile>classWt_1_1WTable.html</anchorfile>
      <anchor>aff46a40881a7d0967d7435d8d479bedb</anchor>
      <arglist>(int row)</arglist>
    </member>
    <member kind="function">
      <type>WTableColumn *</type>
      <name>columnAt</name>
      <anchorfile>classWt_1_1WTable.html</anchorfile>
      <anchor>a37dc3995a309d32a0e4bf857596df00e</anchor>
      <arglist>(int column)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeCell</name>
      <anchorfile>classWt_1_1WTable.html</anchorfile>
      <anchor>a5c45c882a0b3af6d0c0ed13b6217c078</anchor>
      <arglist>(WTableCell *item)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>removeCell</name>
      <anchorfile>classWt_1_1WTable.html</anchorfile>
      <anchor>a46b216d395d19f3f9a71d1f168ca4f16</anchor>
      <arglist>(int row, int column)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WTableRow *</type>
      <name>insertRow</name>
      <anchorfile>classWt_1_1WTable.html</anchorfile>
      <anchor>a465bf825d1ff1d4d198ed33b06bcd878</anchor>
      <arglist>(int row, std::unique_ptr&lt; WTableRow &gt; tableRow=nullptr)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::unique_ptr&lt; WTableRow &gt;</type>
      <name>removeRow</name>
      <anchorfile>classWt_1_1WTable.html</anchorfile>
      <anchor>a4746022224cfa22ea14f5697b0512665</anchor>
      <arglist>(int row)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WTableColumn *</type>
      <name>insertColumn</name>
      <anchorfile>classWt_1_1WTable.html</anchorfile>
      <anchor>a0496a46f14f74aed6df4fde8ed161f52</anchor>
      <arglist>(int column, std::unique_ptr&lt; WTableColumn &gt; tableColumn=nullptr)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::unique_ptr&lt; WTableColumn &gt;</type>
      <name>removeColumn</name>
      <anchorfile>classWt_1_1WTable.html</anchorfile>
      <anchor>a5c7694d227ebb70a80150321c854de4a</anchor>
      <arglist>(int column)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>clear</name>
      <anchorfile>classWt_1_1WTable.html</anchorfile>
      <anchor>a431d6a3da63ab9696e084ad7c2438afb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>rowCount</name>
      <anchorfile>classWt_1_1WTable.html</anchorfile>
      <anchor>a0bdf6c859d764c9312f0462e9dc30eaf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>columnCount</name>
      <anchorfile>classWt_1_1WTable.html</anchorfile>
      <anchor>a3064a4f966c97dddc09761565546c903</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setHeaderCount</name>
      <anchorfile>classWt_1_1WTable.html</anchorfile>
      <anchor>aff5f29161a03a71b162f37e4e92a25c5</anchor>
      <arglist>(int count, Orientation orientation=Orientation::Horizontal)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>headerCount</name>
      <anchorfile>classWt_1_1WTable.html</anchorfile>
      <anchor>afb491fdea6f09d43d18653dcb3701230</anchor>
      <arglist>(Orientation orientation=Orientation::Horizontal)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>moveRow</name>
      <anchorfile>classWt_1_1WTable.html</anchorfile>
      <anchor>a239d85781509ff321eb964af042bcf57</anchor>
      <arglist>(int from, int to)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>moveColumn</name>
      <anchorfile>classWt_1_1WTable.html</anchorfile>
      <anchor>a0670b90a05a6c0176c773bf8766a5bf2</anchor>
      <arglist>(int from, int to)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual std::unique_ptr&lt; WTableCell &gt;</type>
      <name>createCell</name>
      <anchorfile>classWt_1_1WTable.html</anchorfile>
      <anchor>a29e07c520d7e864b9f6e624fe3183347</anchor>
      <arglist>(int row, int column)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual std::unique_ptr&lt; WTableRow &gt;</type>
      <name>createRow</name>
      <anchorfile>classWt_1_1WTable.html</anchorfile>
      <anchor>adee6295f7bc17cc6b72fe314d937958d</anchor>
      <arglist>(int row)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual std::unique_ptr&lt; WTableColumn &gt;</type>
      <name>createColumn</name>
      <anchorfile>classWt_1_1WTable.html</anchorfile>
      <anchor>a6ee2a293b7c8e5ea505698a217af8add</anchor>
      <arglist>(int column)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WTableCell</name>
    <filename>classWt_1_1WTableCell.html</filename>
    <base>Wt::WContainerWidget</base>
    <member kind="function">
      <type></type>
      <name>WTableCell</name>
      <anchorfile>classWt_1_1WTableCell.html</anchorfile>
      <anchor>a50775a816a541e3818d6e66023e8eb1d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRowSpan</name>
      <anchorfile>classWt_1_1WTableCell.html</anchorfile>
      <anchor>ae14b338d8395de33d93f7a28ef2b3edd</anchor>
      <arglist>(int rowSpan)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>rowSpan</name>
      <anchorfile>classWt_1_1WTableCell.html</anchorfile>
      <anchor>a3400c5ef2b8e5b22194f9ddde9d87865</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setColumnSpan</name>
      <anchorfile>classWt_1_1WTableCell.html</anchorfile>
      <anchor>a0f4912b4c023b78e6de41561e2e0a62a</anchor>
      <arglist>(int colSpan)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>columnSpan</name>
      <anchorfile>classWt_1_1WTableCell.html</anchorfile>
      <anchor>a5b0e9929b0de06c49172bf94222ce0c3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>row</name>
      <anchorfile>classWt_1_1WTableCell.html</anchorfile>
      <anchor>a4cd18735a1f0ce363f4d6c98387f17ce</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>column</name>
      <anchorfile>classWt_1_1WTableCell.html</anchorfile>
      <anchor>a0610a28ca3fa4925ebe3031254579cdb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WTable *</type>
      <name>table</name>
      <anchorfile>classWt_1_1WTableCell.html</anchorfile>
      <anchor>a7ed71941b13eb161ef37aa006276c58e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WTableRow *</type>
      <name>tableRow</name>
      <anchorfile>classWt_1_1WTableCell.html</anchorfile>
      <anchor>a4a54b6f9cb6116d2d5429ad0aaaad6ad</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WTableColumn *</type>
      <name>tableColumn</name>
      <anchorfile>classWt_1_1WTableCell.html</anchorfile>
      <anchor>aedc56eb7d73d29c76b8f307fcdbbd604</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isVisible</name>
      <anchorfile>classWt_1_1WTableCell.html</anchorfile>
      <anchor>a63fc69220e65acb4494fe775750516f7</anchor>
      <arglist>() const override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WTableColumn</name>
    <filename>classWt_1_1WTableColumn.html</filename>
    <base>Wt::WObject</base>
    <member kind="function">
      <type></type>
      <name>WTableColumn</name>
      <anchorfile>classWt_1_1WTableColumn.html</anchorfile>
      <anchor>a5ff0f0d5b55fd634b690b6575db9398a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WTableColumn</name>
      <anchorfile>classWt_1_1WTableColumn.html</anchorfile>
      <anchor>afa393b4872c59cb64763293daccab319</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>WTable *</type>
      <name>table</name>
      <anchorfile>classWt_1_1WTableColumn.html</anchorfile>
      <anchor>a18b68e039014fa58551ce4225ca12f89</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WTableCell *</type>
      <name>elementAt</name>
      <anchorfile>classWt_1_1WTableColumn.html</anchorfile>
      <anchor>af5c16622392c6a3c9c01b5cb19771438</anchor>
      <arglist>(int row)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>columnNum</name>
      <anchorfile>classWt_1_1WTableColumn.html</anchorfile>
      <anchor>af2937b9d6ce6ef16aab391273570ec0b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setWidth</name>
      <anchorfile>classWt_1_1WTableColumn.html</anchorfile>
      <anchor>a5c5c0bb9110387e389e5151cbeaab81e</anchor>
      <arglist>(const WLength &amp;width)</arglist>
    </member>
    <member kind="function">
      <type>WLength</type>
      <name>width</name>
      <anchorfile>classWt_1_1WTableColumn.html</anchorfile>
      <anchor>aa200356fbcbb76f7cff1bb5e460f5007</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setStyleClass</name>
      <anchorfile>classWt_1_1WTableColumn.html</anchorfile>
      <anchor>aae7b55f11d53043c2512536144eab42d</anchor>
      <arglist>(const WString &amp;style)</arglist>
    </member>
    <member kind="function">
      <type>const WString &amp;</type>
      <name>styleClass</name>
      <anchorfile>classWt_1_1WTableColumn.html</anchorfile>
      <anchor>a5059ea0b7296a5282550ac261b5599c3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setId</name>
      <anchorfile>classWt_1_1WTableColumn.html</anchorfile>
      <anchor>a319304807e13d2a15ea40384f9080033</anchor>
      <arglist>(const std::string &amp;id)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const std::string</type>
      <name>id</name>
      <anchorfile>classWt_1_1WTableColumn.html</anchorfile>
      <anchor>a1b883c03ab9e2386e39d60c16beb764a</anchor>
      <arglist>() const override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WTableRow</name>
    <filename>classWt_1_1WTableRow.html</filename>
    <base>Wt::WObject</base>
    <member kind="function">
      <type></type>
      <name>WTableRow</name>
      <anchorfile>classWt_1_1WTableRow.html</anchorfile>
      <anchor>ac52f91af82cf3d69650ef93c9b226fda</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~WTableRow</name>
      <anchorfile>classWt_1_1WTableRow.html</anchorfile>
      <anchor>a3b5d723e5d30a32bd8fe6a6362928f3c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>WTable *</type>
      <name>table</name>
      <anchorfile>classWt_1_1WTableRow.html</anchorfile>
      <anchor>a5ce6b3c2e96d5b4441e91d176f98e2c4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WTableCell *</type>
      <name>elementAt</name>
      <anchorfile>classWt_1_1WTableRow.html</anchorfile>
      <anchor>a380ff49130655d6518472a56e0819479</anchor>
      <arglist>(int column)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>rowNum</name>
      <anchorfile>classWt_1_1WTableRow.html</anchorfile>
      <anchor>a3cd69c47adb3cf0be7c880378693794b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setHeight</name>
      <anchorfile>classWt_1_1WTableRow.html</anchorfile>
      <anchor>aac0b7d156d2f4d3897802b7e9771c1de</anchor>
      <arglist>(const WLength &amp;height)</arglist>
    </member>
    <member kind="function">
      <type>WLength</type>
      <name>height</name>
      <anchorfile>classWt_1_1WTableRow.html</anchorfile>
      <anchor>aa05967f39eaf3ea9cb217148d07194df</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setStyleClass</name>
      <anchorfile>classWt_1_1WTableRow.html</anchorfile>
      <anchor>a5ccc6742f7b5e1aa1284fb6f5f62540e</anchor>
      <arglist>(const WString &amp;style)</arglist>
    </member>
    <member kind="function">
      <type>const WString &amp;</type>
      <name>styleClass</name>
      <anchorfile>classWt_1_1WTableRow.html</anchorfile>
      <anchor>a0790521456a3efb8b17ed31e7549202b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setHidden</name>
      <anchorfile>classWt_1_1WTableRow.html</anchorfile>
      <anchor>ac9d66838aceb059dfb0b43c250caa6ec</anchor>
      <arglist>(bool how)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isHidden</name>
      <anchorfile>classWt_1_1WTableRow.html</anchorfile>
      <anchor>aca0a51e2a813b3028dd29432d7bb3b29</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>hide</name>
      <anchorfile>classWt_1_1WTableRow.html</anchorfile>
      <anchor>a99b3fcea3f7dec12b34d2e0222699010</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>show</name>
      <anchorfile>classWt_1_1WTableRow.html</anchorfile>
      <anchor>a189bb29f29777795bd0910468e697c4e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setId</name>
      <anchorfile>classWt_1_1WTableRow.html</anchorfile>
      <anchor>ad7dbf026ef77f8204a7d49d805fdbb10</anchor>
      <arglist>(const std::string &amp;id)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const std::string</type>
      <name>id</name>
      <anchorfile>classWt_1_1WTableRow.html</anchorfile>
      <anchor>a72c9fea8c60c99b4dd6a5bbf24fd1225</anchor>
      <arglist>() const override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WTableView</name>
    <filename>classWt_1_1WTableView.html</filename>
    <base>Wt::WAbstractItemView</base>
    <member kind="function">
      <type></type>
      <name>WTableView</name>
      <anchorfile>classWt_1_1WTableView.html</anchorfile>
      <anchor>a5ef1564b72d6a89e792fe7c5620f678f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WWidget *</type>
      <name>itemWidget</name>
      <anchorfile>classWt_1_1WTableView.html</anchorfile>
      <anchor>a4e5900e1c92219763c7b5d4a9e1ac2c5</anchor>
      <arglist>(const WModelIndex &amp;index) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setModel</name>
      <anchorfile>classWt_1_1WTableView.html</anchorfile>
      <anchor>ae658504e7ff363609462390dc387ebb0</anchor>
      <arglist>(const std::shared_ptr&lt; WAbstractItemModel &gt; &amp;model) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setColumnWidth</name>
      <anchorfile>classWt_1_1WTableView.html</anchorfile>
      <anchor>a41f3836b8f0e3059e6710f973b01f7a9</anchor>
      <arglist>(int column, const WLength &amp;width) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAlternatingRowColors</name>
      <anchorfile>classWt_1_1WTableView.html</anchorfile>
      <anchor>aef48a94558cded7916e33e8bbc69a89d</anchor>
      <arglist>(bool enable) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setRowHeight</name>
      <anchorfile>classWt_1_1WTableView.html</anchorfile>
      <anchor>af9b4c02e9705dc5ea2379ac2225e9418</anchor>
      <arglist>(const WLength &amp;rowHeight) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setHeaderHeight</name>
      <anchorfile>classWt_1_1WTableView.html</anchorfile>
      <anchor>a85067887c7fe520c1b489eb1e5939517</anchor>
      <arglist>(const WLength &amp;height) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>resize</name>
      <anchorfile>classWt_1_1WTableView.html</anchorfile>
      <anchor>ad7e7025ff89848f19cf41d7781c3ae42</anchor>
      <arglist>(const WLength &amp;width, const WLength &amp;height) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setColumnHidden</name>
      <anchorfile>classWt_1_1WTableView.html</anchorfile>
      <anchor>a70e74c1c8a8fe334bf975fc12b8cbf8d</anchor>
      <arglist>(int column, bool hidden) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setRowHeaderCount</name>
      <anchorfile>classWt_1_1WTableView.html</anchorfile>
      <anchor>a72bb5739c3c596fc8fd40a55e8d6d35b</anchor>
      <arglist>(int count) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>pageCount</name>
      <anchorfile>classWt_1_1WTableView.html</anchorfile>
      <anchor>af98bda997b1f764135b3962004b018d1</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>pageSize</name>
      <anchorfile>classWt_1_1WTableView.html</anchorfile>
      <anchor>a0de6d20125e1fe566e889774f50973ee</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>currentPage</name>
      <anchorfile>classWt_1_1WTableView.html</anchorfile>
      <anchor>a042ade21dab18da23ba9d18ce0b1e996</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setCurrentPage</name>
      <anchorfile>classWt_1_1WTableView.html</anchorfile>
      <anchor>a5ca3664bf6f0235d75f97cd0752cdb7a</anchor>
      <arglist>(int page) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>scrollTo</name>
      <anchorfile>classWt_1_1WTableView.html</anchorfile>
      <anchor>a093b661f93551c1d6f73c423ae8ef459</anchor>
      <arglist>(const WModelIndex &amp;index, ScrollHint hint=ScrollHint::EnsureVisible) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scrollTo</name>
      <anchorfile>classWt_1_1WTableView.html</anchorfile>
      <anchor>a6e74f48f3a45d5bc980ca7bd0a083b99</anchor>
      <arglist>(int x, int y)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setOverflow</name>
      <anchorfile>classWt_1_1WTableView.html</anchorfile>
      <anchor>a7e6caac7ceec78a143c3cfd1e5d90d3f</anchor>
      <arglist>(Overflow overflow, WFlags&lt; Orientation &gt; orientation=(Orientation::Horizontal|Orientation::Vertical))</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPreloadMargin</name>
      <anchorfile>classWt_1_1WTableView.html</anchorfile>
      <anchor>afc65ef8675ae2d53300eaa511c1fad6b</anchor>
      <arglist>(const WLength &amp;margin, WFlags&lt; Side &gt; side=AllSides)</arglist>
    </member>
    <member kind="function">
      <type>WLength</type>
      <name>preloadMargin</name>
      <anchorfile>classWt_1_1WTableView.html</anchorfile>
      <anchor>ae9ef84e4b70dfa4b6a39f3303f655973</anchor>
      <arglist>(Side side) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setHidden</name>
      <anchorfile>classWt_1_1WTableView.html</anchorfile>
      <anchor>afd3e1a2d9fd529f804079a378af60bbc</anchor>
      <arglist>(bool hidden, const WAnimation &amp;animation=WAnimation()) override</arglist>
    </member>
    <member kind="function">
      <type>WModelIndex</type>
      <name>modelIndexAt</name>
      <anchorfile>classWt_1_1WTableView.html</anchorfile>
      <anchor>accc04ed5bb2df6b79e605076c95f4b1e</anchor>
      <arglist>(WWidget *widget) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual EventSignal&lt; WScrollEvent &gt; &amp;</type>
      <name>scrolled</name>
      <anchorfile>classWt_1_1WTableView.html</anchorfile>
      <anchor>a6aa5efbb2e70abe9ffe0b2f3057d0850</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>virtual void</type>
      <name>setHeaderHeight</name>
      <anchorfile>classWt_1_1WTableView.html</anchorfile>
      <anchor>a0ab90f396e9cdb563e45a9a35f7dfc8a</anchor>
      <arglist>(const WLength &amp;height)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>render</name>
      <anchorfile>classWt_1_1WTableView.html</anchorfile>
      <anchor>aa8a5049116a90d9fe5db15ed4c313777</anchor>
      <arglist>(WFlags&lt; RenderFlag &gt; flags) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>adjustSize</name>
      <anchorfile>classWt_1_1WTableView.html</anchorfile>
      <anchor>a1a18ee2afb5c6c0f8828bb9b1afb3336</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>enableAjax</name>
      <anchorfile>classWt_1_1WTableView.html</anchorfile>
      <anchor>a4bc1d1639901061401c71c43a31529e4</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WTabWidget</name>
    <filename>classWt_1_1WTabWidget.html</filename>
    <base>Wt::WCompositeWidget</base>
    <member kind="function">
      <type></type>
      <name>WTabWidget</name>
      <anchorfile>classWt_1_1WTabWidget.html</anchorfile>
      <anchor>a2b16d3956aa5f976ba50d627f34bdac2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>WMenuItem *</type>
      <name>addTab</name>
      <anchorfile>classWt_1_1WTabWidget.html</anchorfile>
      <anchor>ad1b16ee36fe0d6dee4e1ac324452dbe4</anchor>
      <arglist>(std::unique_ptr&lt; WWidget &gt; child, const WString &amp;label, ContentLoading loadPolicy=ContentLoading::Lazy)</arglist>
    </member>
    <member kind="function">
      <type>WMenuItem *</type>
      <name>insertTab</name>
      <anchorfile>classWt_1_1WTabWidget.html</anchorfile>
      <anchor>ad540a082e431f0cd16be7bf311b30deb</anchor>
      <arglist>(int index, std::unique_ptr&lt; WWidget &gt; child, const WString &amp;label, ContentLoading loadPolicy=ContentLoading::Lazy)</arglist>
    </member>
    <member kind="function">
      <type>std::unique_ptr&lt; WWidget &gt;</type>
      <name>removeTab</name>
      <anchorfile>classWt_1_1WTabWidget.html</anchorfile>
      <anchor>a2c11d74bd880ba364c5b86fde90169bf</anchor>
      <arglist>(WWidget *widget)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>count</name>
      <anchorfile>classWt_1_1WTabWidget.html</anchorfile>
      <anchor>a57f377764395056ce4ac8f9b0dbe59f0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WWidget *</type>
      <name>widget</name>
      <anchorfile>classWt_1_1WTabWidget.html</anchorfile>
      <anchor>a87ebcebb71b80899c7b372b8f3b80a36</anchor>
      <arglist>(int index) const</arglist>
    </member>
    <member kind="function">
      <type>WMenuItem *</type>
      <name>itemAt</name>
      <anchorfile>classWt_1_1WTabWidget.html</anchorfile>
      <anchor>a20d4867192166d89778dd9da8e0ec559</anchor>
      <arglist>(int index) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>indexOf</name>
      <anchorfile>classWt_1_1WTabWidget.html</anchorfile>
      <anchor>a6ac1c61b192636f63e746e151de94358</anchor>
      <arglist>(WWidget *widget) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCurrentIndex</name>
      <anchorfile>classWt_1_1WTabWidget.html</anchorfile>
      <anchor>a55ae29857e27019af4daea64131148d6</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>currentIndex</name>
      <anchorfile>classWt_1_1WTabWidget.html</anchorfile>
      <anchor>a5a763974d4e206e5a3cea7b23d0bd0eb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCurrentWidget</name>
      <anchorfile>classWt_1_1WTabWidget.html</anchorfile>
      <anchor>ae5f9a6ab4847f9c3ccc62606a19e1871</anchor>
      <arglist>(WWidget *widget)</arglist>
    </member>
    <member kind="function">
      <type>WWidget *</type>
      <name>currentWidget</name>
      <anchorfile>classWt_1_1WTabWidget.html</anchorfile>
      <anchor>a5eafafed741c775454ce0e43cfe6eb7a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WMenuItem *</type>
      <name>currentItem</name>
      <anchorfile>classWt_1_1WTabWidget.html</anchorfile>
      <anchor>affb307fb775d03d85fa82f17524df715</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTabEnabled</name>
      <anchorfile>classWt_1_1WTabWidget.html</anchorfile>
      <anchor>afd7bd7a9ae110bfcec42ebe0be1c0c3f</anchor>
      <arglist>(int index, bool enable)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isTabEnabled</name>
      <anchorfile>classWt_1_1WTabWidget.html</anchorfile>
      <anchor>aaa5c5b5c99f7c0764fb9253c6824b099</anchor>
      <arglist>(int index) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTabHidden</name>
      <anchorfile>classWt_1_1WTabWidget.html</anchorfile>
      <anchor>aa672a2e2bb5ee5f3fa260b8c0abe3032</anchor>
      <arglist>(int index, bool hidden)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isTabHidden</name>
      <anchorfile>classWt_1_1WTabWidget.html</anchorfile>
      <anchor>a1a838e84fbf57bd09f9fe895fe480b80</anchor>
      <arglist>(int index) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTabCloseable</name>
      <anchorfile>classWt_1_1WTabWidget.html</anchorfile>
      <anchor>a3cca019ee3ad730633d4341542985dba</anchor>
      <arglist>(int index, bool closeable)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isTabCloseable</name>
      <anchorfile>classWt_1_1WTabWidget.html</anchorfile>
      <anchor>a594e9376c27382be684742c2c78b72a4</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTabText</name>
      <anchorfile>classWt_1_1WTabWidget.html</anchorfile>
      <anchor>a2f941cb6a5bb6092cad3f438acd2de14</anchor>
      <arglist>(int index, const WString &amp;label)</arglist>
    </member>
    <member kind="function">
      <type>WString</type>
      <name>tabText</name>
      <anchorfile>classWt_1_1WTabWidget.html</anchorfile>
      <anchor>ab79f971520fb35fb3ef2f8962cde3434</anchor>
      <arglist>(int index) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTabToolTip</name>
      <anchorfile>classWt_1_1WTabWidget.html</anchorfile>
      <anchor>abc7e97d8921ae9f3ebfb7fd5911fcea9</anchor>
      <arglist>(int index, const WString &amp;tip)</arglist>
    </member>
    <member kind="function">
      <type>WString</type>
      <name>tabToolTip</name>
      <anchorfile>classWt_1_1WTabWidget.html</anchorfile>
      <anchor>a21756024642e26c77316fec9ad0fa258</anchor>
      <arglist>(int index) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInternalPathEnabled</name>
      <anchorfile>classWt_1_1WTabWidget.html</anchorfile>
      <anchor>a855b45897b00f82137cd0eb9e0d40dfd</anchor>
      <arglist>(const std::string &amp;basePath=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>internalPathEnabled</name>
      <anchorfile>classWt_1_1WTabWidget.html</anchorfile>
      <anchor>adfeb12fa2589d255dd1ccba18b6ed25d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInternalBasePath</name>
      <anchorfile>classWt_1_1WTabWidget.html</anchorfile>
      <anchor>a42c7d6ad6bfc8e821e3e667467865902</anchor>
      <arglist>(const std::string &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>internalBasePath</name>
      <anchorfile>classWt_1_1WTabWidget.html</anchorfile>
      <anchor>a346300e12d7c673b6b6904245c8ac79d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Signal&lt; int &gt; &amp;</type>
      <name>currentChanged</name>
      <anchorfile>classWt_1_1WTabWidget.html</anchorfile>
      <anchor>a5447e1149d6c854f25d6fb6792eef513</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>closeTab</name>
      <anchorfile>classWt_1_1WTabWidget.html</anchorfile>
      <anchor>aefe8917e89b0db34c63634b3092a045b</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>Signal&lt; int &gt; &amp;</type>
      <name>tabClosed</name>
      <anchorfile>classWt_1_1WTabWidget.html</anchorfile>
      <anchor>ae71ac8fa905d0fd0a703589d375ce5f4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>WStackedWidget *</type>
      <name>contentsStack</name>
      <anchorfile>classWt_1_1WTabWidget.html</anchorfile>
      <anchor>af4c907064d3bb12267fb3477d247f2db</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setOverflow</name>
      <anchorfile>classWt_1_1WTabWidget.html</anchorfile>
      <anchor>a5344f0f41dbff545dc1fbb7313c4fd4b</anchor>
      <arglist>(Overflow overflow, WFlags&lt; Orientation &gt; orientation=(Orientation::Horizontal|Orientation::Vertical))</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Http::WtClient</name>
    <filename>classWt_1_1Http_1_1WtClient.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>ClientOption</name>
      <anchorfile>classWt_1_1Http_1_1WtClient.html</anchorfile>
      <anchor>ad924da5532738ae76afd94d315bd3177</anchor>
      <arglist></arglist>
      <enumvalue file="classWt_1_1Http_1_1WtClient.html" anchor="ad924da5532738ae76afd94d315bd3177adee872af37acccac718993f8ebdb72d2">SupportsAjax</enumvalue>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>startWtSession</name>
      <anchorfile>classWt_1_1Http_1_1WtClient.html</anchorfile>
      <anchor>a504bc21127a2bd88d1ef64e54bdfa494</anchor>
      <arglist>(const std::string &amp;host, const std::string &amp;port, const std::string &amp;path, const std::string &amp;query=std::string(), WFlags&lt; ClientOption &gt; flags=ClientOption::SupportsAjax)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WTemplate</name>
    <filename>classWt_1_1WTemplate.html</filename>
    <base>Wt::WInteractWidget</base>
    <class kind="struct">Wt::WTemplate::Functions</class>
    <member kind="typedef">
      <type>TemplateWidgetIdMode</type>
      <name>WidgetIdMode</name>
      <anchorfile>classWt_1_1WTemplate.html</anchorfile>
      <anchor>a969756d79cc19f0bd364b32f0ded39b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::function&lt; bool(WTemplate *t, const std::vector&lt; WString &gt; &amp;args, std::ostream &amp;result)&gt;</type>
      <name>Function</name>
      <anchorfile>classWt_1_1WTemplate.html</anchorfile>
      <anchor>a89d4fae99a0ebb3c43cb3ca2ab6732d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WTemplate</name>
      <anchorfile>classWt_1_1WTemplate.html</anchorfile>
      <anchor>a4493aa4e616f3b140532421a338b9573</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WTemplate</name>
      <anchorfile>classWt_1_1WTemplate.html</anchorfile>
      <anchor>a0e5361a39cc6d985456effefece14c3e</anchor>
      <arglist>(const WString &amp;text)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WString</type>
      <name>templateText</name>
      <anchorfile>classWt_1_1WTemplate.html</anchorfile>
      <anchor>ac8e2f6e8b1d5c46c2d3128ae51b892a0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTemplateText</name>
      <anchorfile>classWt_1_1WTemplate.html</anchorfile>
      <anchor>a862bf52416cdcbcb5228c7488fd6e729</anchor>
      <arglist>(const WString &amp;text, TextFormat textFormat=TextFormat::XHTML)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setWidgetIdMode</name>
      <anchorfile>classWt_1_1WTemplate.html</anchorfile>
      <anchor>ae09c9f08a6bf1b50da8a5dd8feabcd4c</anchor>
      <arglist>(TemplateWidgetIdMode mode)</arglist>
    </member>
    <member kind="function">
      <type>TemplateWidgetIdMode</type>
      <name>widgetIdMode</name>
      <anchorfile>classWt_1_1WTemplate.html</anchorfile>
      <anchor>a23e84f95b9d0cab7f016cf27529458e3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>bindString</name>
      <anchorfile>classWt_1_1WTemplate.html</anchorfile>
      <anchor>a2d72efa9d932d6703e3ec012c960c259</anchor>
      <arglist>(const std::string &amp;varName, const WString &amp;value, TextFormat textFormat=TextFormat::XHTML)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bindInt</name>
      <anchorfile>classWt_1_1WTemplate.html</anchorfile>
      <anchor>a89426dcac3371befc127f7d5b04bb5ed</anchor>
      <arglist>(const std::string &amp;varName, int value)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>bindWidget</name>
      <anchorfile>classWt_1_1WTemplate.html</anchorfile>
      <anchor>a494ede53b41270b1207a223ba5115420</anchor>
      <arglist>(const std::string &amp;varName, std::unique_ptr&lt; WWidget &gt; widget)</arglist>
    </member>
    <member kind="function">
      <type>Widget *</type>
      <name>bindWidget</name>
      <anchorfile>classWt_1_1WTemplate.html</anchorfile>
      <anchor>afae324758c46944fde31c5065a1fcb64</anchor>
      <arglist>(const std::string &amp;varName, std::unique_ptr&lt; Widget &gt; widget)</arglist>
    </member>
    <member kind="function">
      <type>Widget *</type>
      <name>bindNew</name>
      <anchorfile>classWt_1_1WTemplate.html</anchorfile>
      <anchor>a240f910cd1e3d5b7876aa20f6b33767c</anchor>
      <arglist>(const std::string &amp;varName, Args &amp;&amp;...args)</arglist>
    </member>
    <member kind="function">
      <type>std::unique_ptr&lt; WWidget &gt;</type>
      <name>removeWidget</name>
      <anchorfile>classWt_1_1WTemplate.html</anchorfile>
      <anchor>ac1f6e72f951ced485a751fff63eeef13</anchor>
      <arglist>(const std::string &amp;varName)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::unique_ptr&lt; WWidget &gt;</type>
      <name>removeWidget</name>
      <anchorfile>classWt_1_1WTemplate.html</anchorfile>
      <anchor>ace7c70dc676245ec9dbeaf67910e0ae7</anchor>
      <arglist>(WWidget *widget) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bindEmpty</name>
      <anchorfile>classWt_1_1WTemplate.html</anchorfile>
      <anchor>a1b7e969d280a9f245696de10a7137a85</anchor>
      <arglist>(const std::string &amp;varName)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addFunction</name>
      <anchorfile>classWt_1_1WTemplate.html</anchorfile>
      <anchor>ae8f4d8e21baa953323f3c0ce1cb4314a</anchor>
      <arglist>(const std::string &amp;name, const Function &amp;function)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCondition</name>
      <anchorfile>classWt_1_1WTemplate.html</anchorfile>
      <anchor>ab2b6fc00ef28674be103dd1b13fd0aec</anchor>
      <arglist>(const std::string &amp;name, bool value)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>conditionValue</name>
      <anchorfile>classWt_1_1WTemplate.html</anchorfile>
      <anchor>ae97e50c7b6d7e7d0cad0ac5d8f2cf571</anchor>
      <arglist>(const std::string &amp;name) const</arglist>
    </member>
    <member kind="function">
      <type>std::set&lt; std::string &gt;</type>
      <name>conditionsSet</name>
      <anchorfile>classWt_1_1WTemplate.html</anchorfile>
      <anchor>a8cbac567619c5e0bc0a84998c7ee643e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>resolveString</name>
      <anchorfile>classWt_1_1WTemplate.html</anchorfile>
      <anchor>aaf3655dc6954a7fab1158fd3b50d03e4</anchor>
      <arglist>(const std::string &amp;varName, const std::vector&lt; WString &gt; &amp;args, std::ostream &amp;result)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>handleUnresolvedVariable</name>
      <anchorfile>classWt_1_1WTemplate.html</anchorfile>
      <anchor>ad5233b12314148d97dfaabdd2406b485</anchor>
      <arglist>(const std::string &amp;varName, const std::vector&lt; WString &gt; &amp;args, std::ostream &amp;result)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WWidget *</type>
      <name>resolveWidget</name>
      <anchorfile>classWt_1_1WTemplate.html</anchorfile>
      <anchor>aef922e8441694954e14523a368c6cca3</anchor>
      <arglist>(const std::string &amp;varName)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>resolveFunction</name>
      <anchorfile>classWt_1_1WTemplate.html</anchorfile>
      <anchor>a2890c4e66cd724c9254ba0f8e322cb96</anchor>
      <arglist>(const std::string &amp;name, const std::vector&lt; WString &gt; &amp;args, std::ostream &amp;result)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>resolve</name>
      <anchorfile>classWt_1_1WTemplate.html</anchorfile>
      <anchor>a9249cc525fe3c16f999644f0f1db6cb4</anchor>
      <arglist>(const std::string &amp;varName)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>clear</name>
      <anchorfile>classWt_1_1WTemplate.html</anchorfile>
      <anchor>a155b52d94ebf495873daa848db105224</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInternalPathEncoding</name>
      <anchorfile>classWt_1_1WTemplate.html</anchorfile>
      <anchor>aeee888e560c519ac0e33bfc1ebb315e2</anchor>
      <arglist>(bool enabled)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasInternalPathEncoding</name>
      <anchorfile>classWt_1_1WTemplate.html</anchorfile>
      <anchor>af302129ae6a44b1f122506a3672be6c5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setEncodeTemplateText</name>
      <anchorfile>classWt_1_1WTemplate.html</anchorfile>
      <anchor>abb1762a2d712fd21566f9d8dddf1f43a</anchor>
      <arglist>(bool on)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>encodeTemplateText</name>
      <anchorfile>classWt_1_1WTemplate.html</anchorfile>
      <anchor>add4a8383316df1556f1a118eb52134ba</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>refresh</name>
      <anchorfile>classWt_1_1WTemplate.html</anchorfile>
      <anchor>a361a3dd3048b80e507eecc582e3f7403</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>renderTemplate</name>
      <anchorfile>classWt_1_1WTemplate.html</anchorfile>
      <anchor>a98baf277a7dd3144a38edb77cbb3d284</anchor>
      <arglist>(std::ostream &amp;result)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>renderTemplateText</name>
      <anchorfile>classWt_1_1WTemplate.html</anchorfile>
      <anchor>ad3e74189683016b05f5736219538551c</anchor>
      <arglist>(std::ostream &amp;result, const WString &amp;templateText)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getErrorText</name>
      <anchorfile>classWt_1_1WTemplate.html</anchorfile>
      <anchor>a7201e3518819fcb0517f564dbd49234f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>virtual std::unique_ptr&lt; WWidget &gt;</type>
      <name>removeWidget</name>
      <anchorfile>classWt_1_1WTemplate.html</anchorfile>
      <anchor>a3daab3808c96956d30bc1045c379f407</anchor>
      <arglist>(WWidget *widget)</arglist>
    </member>
    <member kind="function">
      <type>std::unique_ptr&lt; Widget &gt;</type>
      <name>removeWidget</name>
      <anchorfile>classWt_1_1WTemplate.html</anchorfile>
      <anchor>a1f5151154770b4956b4870cb4ecc38d3</anchor>
      <arglist>(Widget *widget)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>applyArguments</name>
      <anchorfile>classWt_1_1WTemplate.html</anchorfile>
      <anchor>a3a194b78e12be853cbff423c71d62efb</anchor>
      <arglist>(WWidget *w, const std::vector&lt; WString &gt; &amp;args)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>format</name>
      <anchorfile>classWt_1_1WTemplate.html</anchorfile>
      <anchor>adbe6894922347552f121e8356096d006</anchor>
      <arglist>(std::ostream &amp;result, const std::string &amp;s, TextFormat textFormat=TextFormat::Plain)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>format</name>
      <anchorfile>classWt_1_1WTemplate.html</anchorfile>
      <anchor>ab482057546699b1035b099a54b0c0685</anchor>
      <arglist>(std::ostream &amp;result, const WString &amp;s, TextFormat textFormat=TextFormat::Plain)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>enableAjax</name>
      <anchorfile>classWt_1_1WTemplate.html</anchorfile>
      <anchor>a9f540466868ed7da390a4201473441f1</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classWt_1_1WTemplate.html</anchorfile>
      <anchor>a772c78a6499b03319b47a0fb74b9c1dd</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WTemplateFormView</name>
    <filename>classWt_1_1WTemplateFormView.html</filename>
    <base>Wt::WTemplate</base>
    <member kind="function">
      <type></type>
      <name>WTemplateFormView</name>
      <anchorfile>classWt_1_1WTemplateFormView.html</anchorfile>
      <anchor>aeb311ea955a13816b11c50568623269a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WTemplateFormView</name>
      <anchorfile>classWt_1_1WTemplateFormView.html</anchorfile>
      <anchor>a025d717e37aee3be1262ea670f7a0715</anchor>
      <arglist>(const WString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFormWidget</name>
      <anchorfile>classWt_1_1WTemplateFormView.html</anchorfile>
      <anchor>a3b151978b17554bfb11b40c9b169aff5</anchor>
      <arglist>(WFormModel::Field field, std::unique_ptr&lt; WWidget &gt; widget)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFormWidget</name>
      <anchorfile>classWt_1_1WTemplateFormView.html</anchorfile>
      <anchor>ac5fd83b064010356ed7b49f1749652c4</anchor>
      <arglist>(WFormModel::Field field, std::unique_ptr&lt; WWidget &gt; widget, const std::function&lt; void()&gt; &amp;updateViewValue, const std::function&lt; void()&gt; &amp;updateModelValue)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>updateView</name>
      <anchorfile>classWt_1_1WTemplateFormView.html</anchorfile>
      <anchor>a07d05005f74f317938b7f8546f1d377a</anchor>
      <arglist>(WFormModel *model)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>updateViewField</name>
      <anchorfile>classWt_1_1WTemplateFormView.html</anchorfile>
      <anchor>abc0709f1ef21e4ed4c182a103d1a1885</anchor>
      <arglist>(WFormModel *model, WFormModel::Field field)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>updateViewValue</name>
      <anchorfile>classWt_1_1WTemplateFormView.html</anchorfile>
      <anchor>a7e276facb12e766a09bfb3dc8d4ada1f</anchor>
      <arglist>(WFormModel *model, WFormModel::Field field, WFormWidget *edit)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>updateViewValue</name>
      <anchorfile>classWt_1_1WTemplateFormView.html</anchorfile>
      <anchor>a7d30a1297ca5053ae5ec83441e5de38a</anchor>
      <arglist>(WFormModel *model, WFormModel::Field field, WWidget *edit)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>updateModel</name>
      <anchorfile>classWt_1_1WTemplateFormView.html</anchorfile>
      <anchor>a520a5ac27adee0e97d01ae6e064186e4</anchor>
      <arglist>(WFormModel *model)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>updateModelField</name>
      <anchorfile>classWt_1_1WTemplateFormView.html</anchorfile>
      <anchor>a4cfe1b5169a25651e33ebed6ee820b1b</anchor>
      <arglist>(WFormModel *model, WFormModel::Field field)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>updateModelValue</name>
      <anchorfile>classWt_1_1WTemplateFormView.html</anchorfile>
      <anchor>a49ce77097a618b84bde1f8dbbf575e5b</anchor>
      <arglist>(WFormModel *model, WFormModel::Field field, WFormWidget *edit)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>updateModelValue</name>
      <anchorfile>classWt_1_1WTemplateFormView.html</anchorfile>
      <anchor>a21565dabedab6141ee60e4b2ea9101c6</anchor>
      <arglist>(WFormModel *model, WFormModel::Field field, WWidget *edit)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual std::unique_ptr&lt; WWidget &gt;</type>
      <name>createFormWidget</name>
      <anchorfile>classWt_1_1WTemplateFormView.html</anchorfile>
      <anchor>ab8ba5bda25fbf612903e5e0fa52f75ae</anchor>
      <arglist>(WFormModel::Field field)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>indicateValidation</name>
      <anchorfile>classWt_1_1WTemplateFormView.html</anchorfile>
      <anchor>a5aab3020ba2beb4b721c51d9f7a5bc7c</anchor>
      <arglist>(WFormModel::Field field, bool validated, WText *info, WWidget *edit, const WValidator::Result &amp;validation)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Test::WTestEnvironment</name>
    <filename>classWt_1_1Test_1_1WTestEnvironment.html</filename>
    <base>Wt::WEnvironment</base>
    <member kind="function">
      <type></type>
      <name>WTestEnvironment</name>
      <anchorfile>classWt_1_1Test_1_1WTestEnvironment.html</anchorfile>
      <anchor>a9d5d0770c0b69fc46f110efe102f5597</anchor>
      <arglist>(EntryPointType type=EntryPointType::Application)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WTestEnvironment</name>
      <anchorfile>classWt_1_1Test_1_1WTestEnvironment.html</anchorfile>
      <anchor>a5c035b8b0fe7a5df08f3955470975099</anchor>
      <arglist>(const std::string &amp;applicationPath, const std::string &amp;configurationFile, EntryPointType type=EntryPointType::Application)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WTestEnvironment</name>
      <anchorfile>classWt_1_1Test_1_1WTestEnvironment.html</anchorfile>
      <anchor>a0731bffca88279f3ea581b5d73c8afe9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setParameterMap</name>
      <anchorfile>classWt_1_1Test_1_1WTestEnvironment.html</anchorfile>
      <anchor>a07ad68d340246eddc979951f96c7fd76</anchor>
      <arglist>(const Http::ParameterMap &amp;parameters)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCookies</name>
      <anchorfile>classWt_1_1Test_1_1WTestEnvironment.html</anchorfile>
      <anchor>aa80a019dc055b5ae98c35956ba524c60</anchor>
      <arglist>(const CookieMap &amp;cookies)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setHeaderValue</name>
      <anchorfile>classWt_1_1Test_1_1WTestEnvironment.html</anchorfile>
      <anchor>aef3602fd6c1b8e15adcbc40bc1b7c6c4</anchor>
      <arglist>(const std::string &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSupportsCookies</name>
      <anchorfile>classWt_1_1Test_1_1WTestEnvironment.html</anchorfile>
      <anchor>a48f865810ad560cc9df88b7adf17b591</anchor>
      <arglist>(bool enabled)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAjax</name>
      <anchorfile>classWt_1_1Test_1_1WTestEnvironment.html</anchorfile>
      <anchor>aaaf6e252105cbd4b1bfaad14f0c47fa8</anchor>
      <arglist>(bool enabled)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDpiScale</name>
      <anchorfile>classWt_1_1Test_1_1WTestEnvironment.html</anchorfile>
      <anchor>ab2fd0942e9c5722948fdc98db92fe83a</anchor>
      <arglist>(double dpiScale)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLocale</name>
      <anchorfile>classWt_1_1Test_1_1WTestEnvironment.html</anchorfile>
      <anchor>ad49ccf1f0f64445871018193a9137957</anchor>
      <arglist>(const WLocale &amp;locale)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setHostName</name>
      <anchorfile>classWt_1_1Test_1_1WTestEnvironment.html</anchorfile>
      <anchor>a5deabdbe1d1d0546882047a5820e070c</anchor>
      <arglist>(const std::string &amp;hostName)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setUrlScheme</name>
      <anchorfile>classWt_1_1Test_1_1WTestEnvironment.html</anchorfile>
      <anchor>adf16dd87cb333f3ef8e690fcd1a924c6</anchor>
      <arglist>(const std::string &amp;scheme)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setUserAgent</name>
      <anchorfile>classWt_1_1Test_1_1WTestEnvironment.html</anchorfile>
      <anchor>acfdde9c75469004a8308393b86b5ddce</anchor>
      <arglist>(const std::string &amp;userAgent)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setReferer</name>
      <anchorfile>classWt_1_1Test_1_1WTestEnvironment.html</anchorfile>
      <anchor>a6109afee2818835a96de8d6c9e5e48c2</anchor>
      <arglist>(const std::string &amp;referer)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAccept</name>
      <anchorfile>classWt_1_1Test_1_1WTestEnvironment.html</anchorfile>
      <anchor>a9aeb155e7b624d0a130fb2f609b4945f</anchor>
      <arglist>(const std::string &amp;accept)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setServerSignature</name>
      <anchorfile>classWt_1_1Test_1_1WTestEnvironment.html</anchorfile>
      <anchor>a2addf62069b391b6a94c9acd07c314aa</anchor>
      <arglist>(const std::string &amp;signature)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setServerSoftware</name>
      <anchorfile>classWt_1_1Test_1_1WTestEnvironment.html</anchorfile>
      <anchor>a41c449aed002dcb98d1ac5535966407c</anchor>
      <arglist>(const std::string &amp;software)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setServerAdmin</name>
      <anchorfile>classWt_1_1Test_1_1WTestEnvironment.html</anchorfile>
      <anchor>a3b4866badc5e66113d846699fa3fa1e3</anchor>
      <arglist>(const std::string &amp;serverAdmin)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setClientAddress</name>
      <anchorfile>classWt_1_1Test_1_1WTestEnvironment.html</anchorfile>
      <anchor>a0745f61072135090923bb492e0d19774</anchor>
      <arglist>(const std::string &amp;clientAddress)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInternalPath</name>
      <anchorfile>classWt_1_1Test_1_1WTestEnvironment.html</anchorfile>
      <anchor>a3fe9fffe6069c96d959ef499087c3fc8</anchor>
      <arglist>(const std::string &amp;internalPath)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAppRoot</name>
      <anchorfile>classWt_1_1Test_1_1WTestEnvironment.html</anchorfile>
      <anchor>ac6cb7f104c258c9b8966d95a58178101</anchor>
      <arglist>(const std::string &amp;appRoot)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDocRoot</name>
      <anchorfile>classWt_1_1Test_1_1WTestEnvironment.html</anchorfile>
      <anchor>a464a13b578d3ab492b18d4ed1745cc8b</anchor>
      <arglist>(const std::string &amp;docRoot)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Signal&lt; WDialog * &gt; &amp;</type>
      <name>dialogExecuted</name>
      <anchorfile>classWt_1_1Test_1_1WTestEnvironment.html</anchorfile>
      <anchor>a3aa5eadc8ec2fb41b84a739e90bcc6d9</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Signal&lt; WPopupMenu * &gt; &amp;</type>
      <name>popupExecuted</name>
      <anchorfile>classWt_1_1Test_1_1WTestEnvironment.html</anchorfile>
      <anchor>a3934c657923c283acf4e8831131d1659</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>endRequest</name>
      <anchorfile>classWt_1_1Test_1_1WTestEnvironment.html</anchorfile>
      <anchor>ada746fb10d8d3b2d776264878df835a4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>startRequest</name>
      <anchorfile>classWt_1_1Test_1_1WTestEnvironment.html</anchorfile>
      <anchor>a453d8286ab7efd0f7d9ae4b0161242fd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSessionIdInUrl</name>
      <anchorfile>classWt_1_1Test_1_1WTestEnvironment.html</anchorfile>
      <anchor>a5d0ce941abee5a91c2289a91b248f8e0</anchor>
      <arglist>(bool sessionIdInUrl)</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual bool</type>
      <name>isTest</name>
      <anchorfile>classWt_1_1Test_1_1WTestEnvironment.html</anchorfile>
      <anchor>a0a16fd698b693942ff13e17adc3a40e3</anchor>
      <arglist>() const override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WText</name>
    <filename>classWt_1_1WText.html</filename>
    <base>Wt::WInteractWidget</base>
    <member kind="function">
      <type></type>
      <name>WText</name>
      <anchorfile>classWt_1_1WText.html</anchorfile>
      <anchor>a5af635624ce3cc6cd2280138b61aa7ac</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WText</name>
      <anchorfile>classWt_1_1WText.html</anchorfile>
      <anchor>ab50f96399e93a579cdca9f696a0988eb</anchor>
      <arglist>(const WString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WText</name>
      <anchorfile>classWt_1_1WText.html</anchorfile>
      <anchor>a1d020d995f36c5b34d6967d77744b4d3</anchor>
      <arglist>(const WString &amp;text, TextFormat textFormat)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WText</name>
      <anchorfile>classWt_1_1WText.html</anchorfile>
      <anchor>aec8b48682cf39eba9516c9d5053f8323</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const WString &amp;</type>
      <name>text</name>
      <anchorfile>classWt_1_1WText.html</anchorfile>
      <anchor>a20b6502316f429333d838fc698d20bfb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setText</name>
      <anchorfile>classWt_1_1WText.html</anchorfile>
      <anchor>a2f788aa524d51b3962642c9f565e66e6</anchor>
      <arglist>(const WString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setTextFormat</name>
      <anchorfile>classWt_1_1WText.html</anchorfile>
      <anchor>af22c64c4c5fed3d2aef0915a7e5c5866</anchor>
      <arglist>(TextFormat format)</arglist>
    </member>
    <member kind="function">
      <type>TextFormat</type>
      <name>textFormat</name>
      <anchorfile>classWt_1_1WText.html</anchorfile>
      <anchor>ac0c92c9ae3bca3c0c60bcd6c7d7feb79</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setWordWrap</name>
      <anchorfile>classWt_1_1WText.html</anchorfile>
      <anchor>a06fd47b48126caf4881b027d35ba066b</anchor>
      <arglist>(bool wordWrap)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>wordWrap</name>
      <anchorfile>classWt_1_1WText.html</anchorfile>
      <anchor>ad11f09eb6730c1597f5a7f7dcdb0cfdb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTextAlignment</name>
      <anchorfile>classWt_1_1WText.html</anchorfile>
      <anchor>a88e41d14a426443f30493f4d46d0f49f</anchor>
      <arglist>(AlignmentFlag textAlignment)</arglist>
    </member>
    <member kind="function">
      <type>AlignmentFlag</type>
      <name>textAlignment</name>
      <anchorfile>classWt_1_1WText.html</anchorfile>
      <anchor>a1007efb3c24a5dfca840b84a34262e74</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPadding</name>
      <anchorfile>classWt_1_1WText.html</anchorfile>
      <anchor>aee27c81fbfa510a80681d4cf5b80060b</anchor>
      <arglist>(const WLength &amp;padding, WFlags&lt; Side &gt; sides=Side::Left|Side::Right)</arglist>
    </member>
    <member kind="function">
      <type>WLength</type>
      <name>padding</name>
      <anchorfile>classWt_1_1WText.html</anchorfile>
      <anchor>a38cad3ec48065caf4c0bece74b767695</anchor>
      <arglist>(Side side) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInternalPathEncoding</name>
      <anchorfile>classWt_1_1WText.html</anchorfile>
      <anchor>a3491e55f74027b49aaf8cd25369bc0e4</anchor>
      <arglist>(bool enabled)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasInternalPathEncoding</name>
      <anchorfile>classWt_1_1WText.html</anchorfile>
      <anchor>acb101a99769fa7eed0f0d1a494b1fe3b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>refresh</name>
      <anchorfile>classWt_1_1WText.html</anchorfile>
      <anchor>a8f7abfef494eb2627aab9cd876402319</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>render</name>
      <anchorfile>classWt_1_1WText.html</anchorfile>
      <anchor>aaffa2f964e6694cac1631a1a0601a321</anchor>
      <arglist>(WFlags&lt; RenderFlag &gt; flags) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WTextArea</name>
    <filename>classWt_1_1WTextArea.html</filename>
    <base>Wt::WFormWidget</base>
    <member kind="function">
      <type></type>
      <name>WTextArea</name>
      <anchorfile>classWt_1_1WTextArea.html</anchorfile>
      <anchor>a50dc2bdccdf659d8c65f9fbcbda2bf1d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WTextArea</name>
      <anchorfile>classWt_1_1WTextArea.html</anchorfile>
      <anchor>a58921264d352669479e1f3522eb617f2</anchor>
      <arglist>(const WString &amp;content)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setColumns</name>
      <anchorfile>classWt_1_1WTextArea.html</anchorfile>
      <anchor>af429ed3a2b6011c97b4f9ea7f910e079</anchor>
      <arglist>(int cols)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRows</name>
      <anchorfile>classWt_1_1WTextArea.html</anchorfile>
      <anchor>ade46b47350f427f45c9b53ac7e41c5b2</anchor>
      <arglist>(int rows)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>columns</name>
      <anchorfile>classWt_1_1WTextArea.html</anchorfile>
      <anchor>a1457b0c6325ab85794ff269f562bc1cd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>rows</name>
      <anchorfile>classWt_1_1WTextArea.html</anchorfile>
      <anchor>a9f04b9c4a92d4a5c649f1417c2e62622</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const WString &amp;</type>
      <name>text</name>
      <anchorfile>classWt_1_1WTextArea.html</anchorfile>
      <anchor>af0130006717faca2676d953cef2b6352</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setText</name>
      <anchorfile>classWt_1_1WTextArea.html</anchorfile>
      <anchor>a1f05060c037d13c2c6c26f51f1fb9640</anchor>
      <arglist>(const WString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>selectionStart</name>
      <anchorfile>classWt_1_1WTextArea.html</anchorfile>
      <anchor>a9bbf964960f9eb3fcbd86f3d16af1668</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WString</type>
      <name>selectedText</name>
      <anchorfile>classWt_1_1WTextArea.html</anchorfile>
      <anchor>a5af460c71914bef3ddf259ab1752e5dc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasSelectedText</name>
      <anchorfile>classWt_1_1WTextArea.html</anchorfile>
      <anchor>aaa4333069cc5d81cd5afc157fe69d825</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>cursorPosition</name>
      <anchorfile>classWt_1_1WTextArea.html</anchorfile>
      <anchor>a58981e1cd8824cf3b3b3c3d1d878633a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WString</type>
      <name>valueText</name>
      <anchorfile>classWt_1_1WTextArea.html</anchorfile>
      <anchor>a7e514d8b3795aafa6f4d2aa5b620b559</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setValueText</name>
      <anchorfile>classWt_1_1WTextArea.html</anchorfile>
      <anchor>a484774849f554caf773299834b12ed00</anchor>
      <arglist>(const WString &amp;text) override</arglist>
    </member>
    <member kind="function">
      <type>EventSignal &amp;</type>
      <name>textInput</name>
      <anchorfile>classWt_1_1WTextArea.html</anchorfile>
      <anchor>acde5355f34c09f7417e05d21d7084ab6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual int</type>
      <name>boxPadding</name>
      <anchorfile>classWt_1_1WTextArea.html</anchorfile>
      <anchor>ae19261ee41d2639eeba0f832dca0ece7</anchor>
      <arglist>(Orientation orientation) const override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual int</type>
      <name>boxBorder</name>
      <anchorfile>classWt_1_1WTextArea.html</anchorfile>
      <anchor>a10d6bef215d884290246cd79bfebb73a</anchor>
      <arglist>(Orientation orientation) const override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WTextEdit</name>
    <filename>classWt_1_1WTextEdit.html</filename>
    <base>Wt::WTextArea</base>
    <member kind="function">
      <type></type>
      <name>WTextEdit</name>
      <anchorfile>classWt_1_1WTextEdit.html</anchorfile>
      <anchor>a81348638330dd3a0b7dcc53677789de5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WTextEdit</name>
      <anchorfile>classWt_1_1WTextEdit.html</anchorfile>
      <anchor>a92e1aec9893e043c86fdfdab87643ab3</anchor>
      <arglist>(const WString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WTextEdit</name>
      <anchorfile>classWt_1_1WTextEdit.html</anchorfile>
      <anchor>a3e43187a1a3ad8386cb7c2271cb250ee</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>version</name>
      <anchorfile>classWt_1_1WTextEdit.html</anchorfile>
      <anchor>a2ae4c8dc8c0208a08f64ab030b45992d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setText</name>
      <anchorfile>classWt_1_1WTextEdit.html</anchorfile>
      <anchor>ab6022e5d911b99aa479737587961d4c5</anchor>
      <arglist>(const WString &amp;text) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setStyleSheet</name>
      <anchorfile>classWt_1_1WTextEdit.html</anchorfile>
      <anchor>a7b6df4e80ea878c1c6d57d1c85f60b04</anchor>
      <arglist>(const std::string &amp;uri)</arglist>
    </member>
    <member kind="function">
      <type>const std::string</type>
      <name>styleSheet</name>
      <anchorfile>classWt_1_1WTextEdit.html</anchorfile>
      <anchor>acbd6b85bc29f4925c81e8d4e73343c34</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setExtraPlugins</name>
      <anchorfile>classWt_1_1WTextEdit.html</anchorfile>
      <anchor>a106e80b7ae54d21a7307f3d4c125d098</anchor>
      <arglist>(const std::string &amp;plugins)</arglist>
    </member>
    <member kind="function">
      <type>const std::string</type>
      <name>extraPlugins</name>
      <anchorfile>classWt_1_1WTextEdit.html</anchorfile>
      <anchor>a466f195d54f2782a5bbe05381e392bf5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setToolBar</name>
      <anchorfile>classWt_1_1WTextEdit.html</anchorfile>
      <anchor>ab569b96e871c547b1f992b727c00c902</anchor>
      <arglist>(int i, const std::string &amp;config)</arglist>
    </member>
    <member kind="function">
      <type>const std::string</type>
      <name>toolBar</name>
      <anchorfile>classWt_1_1WTextEdit.html</anchorfile>
      <anchor>a0b1638990f8474e32cc1b028f0fe5e68</anchor>
      <arglist>(int i) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setConfigurationSetting</name>
      <anchorfile>classWt_1_1WTextEdit.html</anchorfile>
      <anchor>a6abdda3e80332ee95223ab0c364d72ee</anchor>
      <arglist>(const std::string &amp;name, const cpp17::any &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>cpp17::any</type>
      <name>configurationSetting</name>
      <anchorfile>classWt_1_1WTextEdit.html</anchorfile>
      <anchor>aaebd93e2ff15ef9a28672f5b921807cd</anchor>
      <arglist>(const std::string &amp;name) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setPlaceholderText</name>
      <anchorfile>classWt_1_1WTextEdit.html</anchorfile>
      <anchor>a0a46920abb7a13df60da6c55bc2d9f10</anchor>
      <arglist>(const WString &amp;placeholder) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setReadOnly</name>
      <anchorfile>classWt_1_1WTextEdit.html</anchorfile>
      <anchor>a68516ce53d652951361c1e67e60aae95</anchor>
      <arglist>(bool readOnly) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>propagateSetEnabled</name>
      <anchorfile>classWt_1_1WTextEdit.html</anchorfile>
      <anchor>a66e99fdbb486afc84224542cecaf7f86</anchor>
      <arglist>(bool enabled) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>resize</name>
      <anchorfile>classWt_1_1WTextEdit.html</anchorfile>
      <anchor>a98e7866ec18d93d13fab559de863ae7b</anchor>
      <arglist>(const WLength &amp;width, const WLength &amp;height) override</arglist>
    </member>
    <member kind="function">
      <type>JSignal &amp;</type>
      <name>rendered</name>
      <anchorfile>classWt_1_1WTextEdit.html</anchorfile>
      <anchor>a5952f46d2f8d21e2fd45135e29d5061d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual int</type>
      <name>boxPadding</name>
      <anchorfile>classWt_1_1WTextEdit.html</anchorfile>
      <anchor>aa0c8fc087f0f1dd255eb31c69a62e689</anchor>
      <arglist>(Orientation orientation) const override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual int</type>
      <name>boxBorder</name>
      <anchorfile>classWt_1_1WTextEdit.html</anchorfile>
      <anchor>a80316df95309fb781050a85444a0ea25</anchor>
      <arglist>(Orientation orientation) const override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WTextItem</name>
    <filename>classWt_1_1WTextItem.html</filename>
    <member kind="function">
      <type></type>
      <name>WTextItem</name>
      <anchorfile>classWt_1_1WTextItem.html</anchorfile>
      <anchor>a4f6596838bcd4bcee9dc3734484b6941</anchor>
      <arglist>(const WString &amp;text, double width, double nextWidth=-1)</arglist>
    </member>
    <member kind="function">
      <type>WString</type>
      <name>text</name>
      <anchorfile>classWt_1_1WTextItem.html</anchorfile>
      <anchor>a5d955896b1a04ed93b8ee160b7424359</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>width</name>
      <anchorfile>classWt_1_1WTextItem.html</anchorfile>
      <anchor>ac3a36856edd632405adea8be6b6ecf86</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>nextWidth</name>
      <anchorfile>classWt_1_1WTextItem.html</anchorfile>
      <anchor>ab61a294ba247202b9238ccfa44671890</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Render::WTextRenderer</name>
    <filename>classWt_1_1Render_1_1WTextRenderer.html</filename>
    <class kind="class">Wt::Render::WTextRenderer::Node</class>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~WTextRenderer</name>
      <anchorfile>classWt_1_1Render_1_1WTextRenderer.html</anchorfile>
      <anchor>a7f5ab80aebe9d2ae43e6ba75f9a8d8d5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>render</name>
      <anchorfile>classWt_1_1Render_1_1WTextRenderer.html</anchorfile>
      <anchor>ada84c9867c07a60c54e3f51e4b6426f5</anchor>
      <arglist>(const WString &amp;text, double y=0)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setStyleSheetText</name>
      <anchorfile>classWt_1_1Render_1_1WTextRenderer.html</anchorfile>
      <anchor>a8d915e0103401786b41543dfcedec662</anchor>
      <arglist>(const WString &amp;contents)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>useStyleSheet</name>
      <anchorfile>classWt_1_1Render_1_1WTextRenderer.html</anchorfile>
      <anchor>a1c5942debfac76ffd6c59b6c8a4b8cd4</anchor>
      <arglist>(const WString &amp;filename)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearStyleSheet</name>
      <anchorfile>classWt_1_1Render_1_1WTextRenderer.html</anchorfile>
      <anchor>adb8c6448b971c4e9bec4b269143390e6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>WString</type>
      <name>styleSheetText</name>
      <anchorfile>classWt_1_1Render_1_1WTextRenderer.html</anchorfile>
      <anchor>ad6d474add8dce00888bad012b3617966</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getStyleSheetParseErrors</name>
      <anchorfile>classWt_1_1Render_1_1WTextRenderer.html</anchorfile>
      <anchor>a433efdc142b6b193f38fd849e49a6e48</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>textWidth</name>
      <anchorfile>classWt_1_1Render_1_1WTextRenderer.html</anchorfile>
      <anchor>a089769491ecd582e354406d38aeb4009</anchor>
      <arglist>(int page) const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>textHeight</name>
      <anchorfile>classWt_1_1Render_1_1WTextRenderer.html</anchorfile>
      <anchor>afc15c6f8448d14c52815b06590f791f4</anchor>
      <arglist>(int page) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFontScale</name>
      <anchorfile>classWt_1_1Render_1_1WTextRenderer.html</anchorfile>
      <anchor>a2ca18a73ebbe013b6913a277408eb2a6</anchor>
      <arglist>(double scale)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>fontScale</name>
      <anchorfile>classWt_1_1Render_1_1WTextRenderer.html</anchorfile>
      <anchor>ad8520e2224d3a7963dbb003a94897f4d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>pageWidth</name>
      <anchorfile>classWt_1_1Render_1_1WTextRenderer.html</anchorfile>
      <anchor>a49c53f92c778a63da84d8fd8dc0d876d</anchor>
      <arglist>(int page) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>pageHeight</name>
      <anchorfile>classWt_1_1Render_1_1WTextRenderer.html</anchorfile>
      <anchor>a86a2e5a8042e5ea8d50593597e332791</anchor>
      <arglist>(int page) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>margin</name>
      <anchorfile>classWt_1_1Render_1_1WTextRenderer.html</anchorfile>
      <anchor>a8a81ceb767658e5b378c885b6a1fbf30</anchor>
      <arglist>(Side side) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual WPaintDevice *</type>
      <name>startPage</name>
      <anchorfile>classWt_1_1Render_1_1WTextRenderer.html</anchorfile>
      <anchor>a9b9230eb8210d5bb2408321ebc88c07d</anchor>
      <arglist>(int page)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>endPage</name>
      <anchorfile>classWt_1_1Render_1_1WTextRenderer.html</anchorfile>
      <anchor>a1e83e81ed5a0d822fb6863cfec59cc1d</anchor>
      <arglist>(WPaintDevice *device)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual WPainter *</type>
      <name>getPainter</name>
      <anchorfile>classWt_1_1Render_1_1WTextRenderer.html</anchorfile>
      <anchor>a9137acf83205dbeac1a6e4a136aab3cd</anchor>
      <arglist>(WPaintDevice *device)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>paintNode</name>
      <anchorfile>classWt_1_1Render_1_1WTextRenderer.html</anchorfile>
      <anchor>ada6ff970bfb9235b0e1d8df4d1cb5a15</anchor>
      <arglist>(WPainter &amp;painter, const Node &amp;node)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>WTextRenderer</name>
      <anchorfile>classWt_1_1Render_1_1WTextRenderer.html</anchorfile>
      <anchor>ae7c7ee983b5261db20ee79389f9a4de0</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WTheme</name>
    <filename>classWt_1_1WTheme.html</filename>
    <base>Wt::WObject</base>
    <member kind="function">
      <type></type>
      <name>WTheme</name>
      <anchorfile>classWt_1_1WTheme.html</anchorfile>
      <anchor>aeac1a9c271806d342f875d09cbe4eecf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~WTheme</name>
      <anchorfile>classWt_1_1WTheme.html</anchorfile>
      <anchor>a65667549df64f58a07ac7b008ab6bae7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>name</name>
      <anchorfile>classWt_1_1WTheme.html</anchorfile>
      <anchor>a8642dafe569763cbf2bd1a3c51edf302</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>resourcesUrl</name>
      <anchorfile>classWt_1_1WTheme.html</anchorfile>
      <anchor>a2466f04d38ff60fc9bcc638539efcc13</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>serveCss</name>
      <anchorfile>classWt_1_1WTheme.html</anchorfile>
      <anchor>a62bca630748d8f686e1ee8605c7daf1c</anchor>
      <arglist>(WStringStream &amp;out) const</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::vector&lt; WLinkedCssStyleSheet &gt;</type>
      <name>styleSheets</name>
      <anchorfile>classWt_1_1WTheme.html</anchorfile>
      <anchor>a7c1826d52efba8d2b17f3652c04afebd</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>apply</name>
      <anchorfile>classWt_1_1WTheme.html</anchorfile>
      <anchor>a93d3dc6cfbde95bcd3c3b359d074fc9d</anchor>
      <arglist>(WWidget *widget, WWidget *child, int widgetRole) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>apply</name>
      <anchorfile>classWt_1_1WTheme.html</anchorfile>
      <anchor>ac6beaa06b78379c9dcf0b1676150cf94</anchor>
      <arglist>(WWidget *widget, DomElement &amp;element, int elementRole) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>disabledClass</name>
      <anchorfile>classWt_1_1WTheme.html</anchorfile>
      <anchor>a46ec2ccecb625cd4cde82553e08411fb</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>activeClass</name>
      <anchorfile>classWt_1_1WTheme.html</anchorfile>
      <anchor>a6375e31e7190bbdf60c8446edea89e65</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>utilityCssClass</name>
      <anchorfile>classWt_1_1WTheme.html</anchorfile>
      <anchor>acfa44ba1e10bbb7d67f3610f85329cd4</anchor>
      <arglist>(int utilityCssClassRole) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>canStyleAnchorAsButton</name>
      <anchorfile>classWt_1_1WTheme.html</anchorfile>
      <anchor>ab4df8922e22f6c650c11548811a44dec</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>applyValidationStyle</name>
      <anchorfile>classWt_1_1WTheme.html</anchorfile>
      <anchor>a3591ef941779f7b722f5f113603c894f</anchor>
      <arglist>(WWidget *widget, const Wt::WValidator::Result &amp;validation, WFlags&lt; ValidationStyleFlag &gt; flags) const =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WTime</name>
    <filename>classWt_1_1WTime.html</filename>
    <member kind="function">
      <type></type>
      <name>WTime</name>
      <anchorfile>classWt_1_1WTime.html</anchorfile>
      <anchor>af45b86652752e63c00baee8662d793e3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WTime</name>
      <anchorfile>classWt_1_1WTime.html</anchorfile>
      <anchor>a529d211c58a37ad4568745414c4a25c8</anchor>
      <arglist>(int h, int m, int s=0, int ms=0)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setHMS</name>
      <anchorfile>classWt_1_1WTime.html</anchorfile>
      <anchor>ae506c60945d8c2a452233ade046fa9ac</anchor>
      <arglist>(int h, int m, int s, int ms=0)</arglist>
    </member>
    <member kind="function">
      <type>WTime</type>
      <name>addSecs</name>
      <anchorfile>classWt_1_1WTime.html</anchorfile>
      <anchor>a0b4cd53f68902477dcb8735193d5b53c</anchor>
      <arglist>(int s) const</arglist>
    </member>
    <member kind="function">
      <type>WTime</type>
      <name>addMSecs</name>
      <anchorfile>classWt_1_1WTime.html</anchorfile>
      <anchor>a575e5d72e8798921fe88e6d2785eafcd</anchor>
      <arglist>(int ms) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isNull</name>
      <anchorfile>classWt_1_1WTime.html</anchorfile>
      <anchor>a69f4015b6f6627fe02dc04a72ef81ad8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isValid</name>
      <anchorfile>classWt_1_1WTime.html</anchorfile>
      <anchor>a2034c0c43e8e04b2272fe584bf5b0786</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>hour</name>
      <anchorfile>classWt_1_1WTime.html</anchorfile>
      <anchor>a01d82d0910766607a881d59b3b8996f7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>minute</name>
      <anchorfile>classWt_1_1WTime.html</anchorfile>
      <anchor>a356dcc6bb561c971ee7ec7b67cda29c6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>second</name>
      <anchorfile>classWt_1_1WTime.html</anchorfile>
      <anchor>a0431e8efc09305f95652161722e97fe8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>msec</name>
      <anchorfile>classWt_1_1WTime.html</anchorfile>
      <anchor>a58a4d2f9aa22d3b10988c093d5964804</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>long</type>
      <name>secsTo</name>
      <anchorfile>classWt_1_1WTime.html</anchorfile>
      <anchor>ad66a14ac1a75aa33f76dc46a467fcc3f</anchor>
      <arglist>(const WTime &amp;t) const</arglist>
    </member>
    <member kind="function">
      <type>long</type>
      <name>msecsTo</name>
      <anchorfile>classWt_1_1WTime.html</anchorfile>
      <anchor>aaf02970ab350914978888deb51421ee3</anchor>
      <arglist>(const WTime &amp;t) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>classWt_1_1WTime.html</anchorfile>
      <anchor>aaa29ba291d6b35f6f8f0181541c45c44</anchor>
      <arglist>(const WTime &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;=</name>
      <anchorfile>classWt_1_1WTime.html</anchorfile>
      <anchor>a11a19809778a1507c38d9fcf025c2198</anchor>
      <arglist>(const WTime &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&gt;</name>
      <anchorfile>classWt_1_1WTime.html</anchorfile>
      <anchor>a4f569dc5358a0d60bf328ab03b21586b</anchor>
      <arglist>(const WTime &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&gt;=</name>
      <anchorfile>classWt_1_1WTime.html</anchorfile>
      <anchor>a634273ebe8d971aa06d3a66732c82dc9</anchor>
      <arglist>(const WTime &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classWt_1_1WTime.html</anchorfile>
      <anchor>a74316f0cff0a28b42ccfbe8fb4c70f60</anchor>
      <arglist>(const WTime &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classWt_1_1WTime.html</anchorfile>
      <anchor>aedaa7f3e5cd5c2ba906ffa541f354c59</anchor>
      <arglist>(const WTime &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>WString</type>
      <name>toString</name>
      <anchorfile>classWt_1_1WTime.html</anchorfile>
      <anchor>ab98927a06530f37c66342f583e6ad963</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WString</type>
      <name>toString</name>
      <anchorfile>classWt_1_1WTime.html</anchorfile>
      <anchor>aa5a5a4e03ce8b5c4baa89d2352ede56e</anchor>
      <arglist>(const WString &amp;format) const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static WTime</type>
      <name>fromString</name>
      <anchorfile>classWt_1_1WTime.html</anchorfile>
      <anchor>a4937c5baf2c39affad90eace5e8178c5</anchor>
      <arglist>(const WString &amp;s)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static WTime</type>
      <name>fromString</name>
      <anchorfile>classWt_1_1WTime.html</anchorfile>
      <anchor>a9be98d6095a48d81e4eeb7315403f5df</anchor>
      <arglist>(const WString &amp;s, const WString &amp;format)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static WTime</type>
      <name>currentTime</name>
      <anchorfile>classWt_1_1WTime.html</anchorfile>
      <anchor>ae68e29dc6f8f6f66fa8189ee84262667</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static WTime</type>
      <name>currentServerTime</name>
      <anchorfile>classWt_1_1WTime.html</anchorfile>
      <anchor>a271bd124707e50cc15872e263ffa71f2</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WTimeEdit</name>
    <filename>classWt_1_1WTimeEdit.html</filename>
    <base>Wt::WLineEdit</base>
    <member kind="function">
      <type></type>
      <name>WTimeEdit</name>
      <anchorfile>classWt_1_1WTimeEdit.html</anchorfile>
      <anchor>a7a2736315932b434bca5d6c02c100018</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTime</name>
      <anchorfile>classWt_1_1WTimeEdit.html</anchorfile>
      <anchor>a501b7aa1806ec268e8e78c34a2e13f9e</anchor>
      <arglist>(const WTime &amp;time)</arglist>
    </member>
    <member kind="function">
      <type>WTime</type>
      <name>time</name>
      <anchorfile>classWt_1_1WTimeEdit.html</anchorfile>
      <anchor>ae0b762831d6087bf9e4bc5e208d5aaf9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::shared_ptr&lt; WTimeValidator &gt;</type>
      <name>timeValidator</name>
      <anchorfile>classWt_1_1WTimeEdit.html</anchorfile>
      <anchor>a231d31c8ace2f3eec3b1cd2d5efced46</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFormat</name>
      <anchorfile>classWt_1_1WTimeEdit.html</anchorfile>
      <anchor>a50fe8bb0a60691fbced9f4e684195d46</anchor>
      <arglist>(const WString &amp;format)</arglist>
    </member>
    <member kind="function">
      <type>WString</type>
      <name>format</name>
      <anchorfile>classWt_1_1WTimeEdit.html</anchorfile>
      <anchor>a41d29fd84c241c55581eeb0d17fd06f1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setHidden</name>
      <anchorfile>classWt_1_1WTimeEdit.html</anchorfile>
      <anchor>a82be02cd2584a548d2506d5a7fb2f9d9</anchor>
      <arglist>(bool hidden, const WAnimation &amp;animation=WAnimation()) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBottom</name>
      <anchorfile>classWt_1_1WTimeEdit.html</anchorfile>
      <anchor>ab95b49b276781ca366533980c662806e</anchor>
      <arglist>(const WTime &amp;bottom)</arglist>
    </member>
    <member kind="function">
      <type>WTime</type>
      <name>bottom</name>
      <anchorfile>classWt_1_1WTimeEdit.html</anchorfile>
      <anchor>a871c899f8307a3ce47e678ef721f270b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTop</name>
      <anchorfile>classWt_1_1WTimeEdit.html</anchorfile>
      <anchor>a5b6f8e27e01f4e41b76a07f9e87e3287</anchor>
      <arglist>(const WTime &amp;top)</arglist>
    </member>
    <member kind="function">
      <type>WTime</type>
      <name>top</name>
      <anchorfile>classWt_1_1WTimeEdit.html</anchorfile>
      <anchor>a0376d5e11fbbfc194b599945162d1476</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setHourStep</name>
      <anchorfile>classWt_1_1WTimeEdit.html</anchorfile>
      <anchor>a35cfa0b0b7321fa7913c77b96acdd8bf</anchor>
      <arglist>(int step)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>hourStep</name>
      <anchorfile>classWt_1_1WTimeEdit.html</anchorfile>
      <anchor>a355b82e2abdcd37ca478d954d7735626</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMinuteStep</name>
      <anchorfile>classWt_1_1WTimeEdit.html</anchorfile>
      <anchor>ae7a62b5e47ce319aaad6e38ca9aa2539</anchor>
      <arglist>(int step)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>minuteStep</name>
      <anchorfile>classWt_1_1WTimeEdit.html</anchorfile>
      <anchor>ae92f1cfedc9a7d4d36a9f1ca039822e6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSecondStep</name>
      <anchorfile>classWt_1_1WTimeEdit.html</anchorfile>
      <anchor>a2e0b102392dcde6ea3f22c48e7ed3516</anchor>
      <arglist>(int step)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>secondStep</name>
      <anchorfile>classWt_1_1WTimeEdit.html</anchorfile>
      <anchor>a4a4db691f0db3a481782013f4fd5db3c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMillisecondStep</name>
      <anchorfile>classWt_1_1WTimeEdit.html</anchorfile>
      <anchor>a3df66e8e8ebdf8a986c934195087dde4</anchor>
      <arglist>(int step)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>millisecondStep</name>
      <anchorfile>classWt_1_1WTimeEdit.html</anchorfile>
      <anchor>a0f14cd8166a0d0ffec946bcd5405baf5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setWrapAroundEnabled</name>
      <anchorfile>classWt_1_1WTimeEdit.html</anchorfile>
      <anchor>a3ddf595beb14dbc2c323e5567d2d8a82</anchor>
      <arglist>(bool rollover)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>wrapAroundEnabled</name>
      <anchorfile>classWt_1_1WTimeEdit.html</anchorfile>
      <anchor>a4b1613aaed7eef171d7eeb2f99d3fab2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>load</name>
      <anchorfile>classWt_1_1WTimeEdit.html</anchorfile>
      <anchor>aeb7cefad0c81dd4f8e6476286baa16bb</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>render</name>
      <anchorfile>classWt_1_1WTimeEdit.html</anchorfile>
      <anchor>a23216b1e52c70017e96fcb9f68dc6249</anchor>
      <arglist>(WFlags&lt; RenderFlag &gt; flags) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>propagateSetEnabled</name>
      <anchorfile>classWt_1_1WTimeEdit.html</anchorfile>
      <anchor>a4307ae8ef1fdf5e262a98badaf23448c</anchor>
      <arglist>(bool enabled) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WTimer</name>
    <filename>classWt_1_1WTimer.html</filename>
    <base>Wt::WObject</base>
    <member kind="function">
      <type></type>
      <name>WTimer</name>
      <anchorfile>classWt_1_1WTimer.html</anchorfile>
      <anchor>a429dc68516d4f48f60dedd06337489f8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WTimer</name>
      <anchorfile>classWt_1_1WTimer.html</anchorfile>
      <anchor>a6b983b4aa0a3594cad4a236f5a4acd0b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::chrono::milliseconds</type>
      <name>interval</name>
      <anchorfile>classWt_1_1WTimer.html</anchorfile>
      <anchor>ac55c4818cfb771547203c3dd4f0a04b7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInterval</name>
      <anchorfile>classWt_1_1WTimer.html</anchorfile>
      <anchor>ab1936d0a142b1ee97f2ee759f55c04f3</anchor>
      <arglist>(std::chrono::milliseconds interval)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isActive</name>
      <anchorfile>classWt_1_1WTimer.html</anchorfile>
      <anchor>aca5dcfa95d86cbc3c5cffdfbfac4cead</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSingleShot</name>
      <anchorfile>classWt_1_1WTimer.html</anchorfile>
      <anchor>a53780f294ff32cac67f851fc5f674d97</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSingleShot</name>
      <anchorfile>classWt_1_1WTimer.html</anchorfile>
      <anchor>a92ae68d15de600174afdd2e443397604</anchor>
      <arglist>(bool singleShot)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>start</name>
      <anchorfile>classWt_1_1WTimer.html</anchorfile>
      <anchor>ae167fbd3eb981a2fce52e9a4b3b6e0af</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stop</name>
      <anchorfile>classWt_1_1WTimer.html</anchorfile>
      <anchor>a73c5d1b882af4835384ccdc07a650e34</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EventSignal&lt; WMouseEvent &gt; &amp;</type>
      <name>timeout</name>
      <anchorfile>classWt_1_1WTimer.html</anchorfile>
      <anchor>a2a66c6a51df2b0ab42258abf2ebd0399</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>singleShot</name>
      <anchorfile>classWt_1_1WTimer.html</anchorfile>
      <anchor>a0f731a8ed198268db0914a7f16b02dff</anchor>
      <arglist>(std::chrono::milliseconds interval, T *receiver, void(V::*method)())</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>singleShot</name>
      <anchorfile>classWt_1_1WTimer.html</anchorfile>
      <anchor>a0c2407e177b279011078306c904603d1</anchor>
      <arglist>(std::chrono::milliseconds interval, const F &amp;f)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WTimeValidator</name>
    <filename>classWt_1_1WTimeValidator.html</filename>
    <base>Wt::WRegExpValidator</base>
    <member kind="function">
      <type></type>
      <name>WTimeValidator</name>
      <anchorfile>classWt_1_1WTimeValidator.html</anchorfile>
      <anchor>a3ffb0c983d4b9b925c126b00640e732c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WTimeValidator</name>
      <anchorfile>classWt_1_1WTimeValidator.html</anchorfile>
      <anchor>a7212d244703d7cd73f863ea557a5bf84</anchor>
      <arglist>(const WString &amp;format)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WTimeValidator</name>
      <anchorfile>classWt_1_1WTimeValidator.html</anchorfile>
      <anchor>ac03e057e53b51004efb21085df452f56</anchor>
      <arglist>(const WString &amp;format, const WTime &amp;bottom, const WTime &amp;top)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFormat</name>
      <anchorfile>classWt_1_1WTimeValidator.html</anchorfile>
      <anchor>a6d39ca69066d8bd89cecabcaead8c7c5</anchor>
      <arglist>(const WString &amp;format)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WString</type>
      <name>format</name>
      <anchorfile>classWt_1_1WTimeValidator.html</anchorfile>
      <anchor>a1cb79419b353ae7d956f9c9f8bc49b27</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFormats</name>
      <anchorfile>classWt_1_1WTimeValidator.html</anchorfile>
      <anchor>a2fe2d49401ba67fa5268a4caf511332b</anchor>
      <arglist>(const std::vector&lt; WString &gt; &amp;formats)</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; WString &gt; &amp;</type>
      <name>formats</name>
      <anchorfile>classWt_1_1WTimeValidator.html</anchorfile>
      <anchor>af31af58f39204b7f3ceb361091d4f628</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBottom</name>
      <anchorfile>classWt_1_1WTimeValidator.html</anchorfile>
      <anchor>a0e10b8ae853dcb7cb186ee295a0bdc32</anchor>
      <arglist>(const WTime &amp;bottom)</arglist>
    </member>
    <member kind="function">
      <type>const WTime &amp;</type>
      <name>bottom</name>
      <anchorfile>classWt_1_1WTimeValidator.html</anchorfile>
      <anchor>a4f1b0cd30e77f7fa4f86b6b5f4d43f1b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTop</name>
      <anchorfile>classWt_1_1WTimeValidator.html</anchorfile>
      <anchor>a134089bcb5ac4126cc55cbc02d492a12</anchor>
      <arglist>(const WTime &amp;top)</arglist>
    </member>
    <member kind="function">
      <type>const WTime &amp;</type>
      <name>top</name>
      <anchorfile>classWt_1_1WTimeValidator.html</anchorfile>
      <anchor>a27bc30eeb14cf2bf49391ff6b8684a2f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInvalidNotATimeText</name>
      <anchorfile>classWt_1_1WTimeValidator.html</anchorfile>
      <anchor>a1b1b19cecf246d0bab1f49d855cdea39</anchor>
      <arglist>(const WString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>WString</type>
      <name>invalidNotATimeText</name>
      <anchorfile>classWt_1_1WTimeValidator.html</anchorfile>
      <anchor>ae15c98865190d52f3c5e987dde2fcfed</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInvalidTooEarlyText</name>
      <anchorfile>classWt_1_1WTimeValidator.html</anchorfile>
      <anchor>a7f590db78f2cf3f26b7cd9f49030103a</anchor>
      <arglist>(const WString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>WString</type>
      <name>invalidTooEarlyText</name>
      <anchorfile>classWt_1_1WTimeValidator.html</anchorfile>
      <anchor>a4be2fa410668c6414a8702c487050e8d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInvalidTooLateText</name>
      <anchorfile>classWt_1_1WTimeValidator.html</anchorfile>
      <anchor>ad0b3588178b312c5dc494b66292c2c8e</anchor>
      <arglist>(const WString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>WString</type>
      <name>invalidTooLateText</name>
      <anchorfile>classWt_1_1WTimeValidator.html</anchorfile>
      <anchor>abda8d9d7e69eb20565b4fa53b77d1d84</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Result</type>
      <name>validate</name>
      <anchorfile>classWt_1_1WTimeValidator.html</anchorfile>
      <anchor>abbf07c5f522efeffbda6d25fbf4850e5</anchor>
      <arglist>(const WString &amp;input) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>javaScriptValidate</name>
      <anchorfile>classWt_1_1WTimeValidator.html</anchorfile>
      <anchor>a19d34d42c6cea7a472ab89ca7cd0fe99</anchor>
      <arglist>() const override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WToolBar</name>
    <filename>classWt_1_1WToolBar.html</filename>
    <base>Wt::WCompositeWidget</base>
    <member kind="function">
      <type></type>
      <name>WToolBar</name>
      <anchorfile>classWt_1_1WToolBar.html</anchorfile>
      <anchor>aa80a497a4554cadad9c53635c2b03212</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setOrientation</name>
      <anchorfile>classWt_1_1WToolBar.html</anchorfile>
      <anchor>a6a431d3ebe0fd1ecee5d89077fe08ebf</anchor>
      <arglist>(Orientation orientation)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addButton</name>
      <anchorfile>classWt_1_1WToolBar.html</anchorfile>
      <anchor>ad62fab59d4b027912395e916b784eebb</anchor>
      <arglist>(std::unique_ptr&lt; WPushButton &gt; button, AlignmentFlag alignmentFlag=AlignmentFlag::Left)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addButton</name>
      <anchorfile>classWt_1_1WToolBar.html</anchorfile>
      <anchor>a8077fa07f66a621e9455a563fd9ac63c</anchor>
      <arglist>(std::unique_ptr&lt; WSplitButton &gt; button, AlignmentFlag alignmentFlag=AlignmentFlag::Left)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addWidget</name>
      <anchorfile>classWt_1_1WToolBar.html</anchorfile>
      <anchor>af14dc481209011368971b12f597725cb</anchor>
      <arglist>(std::unique_ptr&lt; WWidget &gt; widget, AlignmentFlag alignmentFlag=AlignmentFlag::Left)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::unique_ptr&lt; WWidget &gt;</type>
      <name>removeWidget</name>
      <anchorfile>classWt_1_1WToolBar.html</anchorfile>
      <anchor>a4f3620f88bff24d21393c9aa6537d331</anchor>
      <arglist>(WWidget *widget) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addSeparator</name>
      <anchorfile>classWt_1_1WToolBar.html</anchorfile>
      <anchor>ae673ada565e154172c5a98feb3e18bc2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>count</name>
      <anchorfile>classWt_1_1WToolBar.html</anchorfile>
      <anchor>a710c08031aebcc14ae347d164b1bca69</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WWidget *</type>
      <name>widget</name>
      <anchorfile>classWt_1_1WToolBar.html</anchorfile>
      <anchor>af18dca00ce4fb782c806272b6dfc1659</anchor>
      <arglist>(int index) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCompact</name>
      <anchorfile>classWt_1_1WToolBar.html</anchorfile>
      <anchor>aa17f0fd22cfd7366f5b420310303d37f</anchor>
      <arglist>(bool compact)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isCompact</name>
      <anchorfile>classWt_1_1WToolBar.html</anchorfile>
      <anchor>a5ee42eb9191f5598f867d1019af4fadc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>virtual std::unique_ptr&lt; WWidget &gt;</type>
      <name>removeWidget</name>
      <anchorfile>classWt_1_1WToolBar.html</anchorfile>
      <anchor>a3daab3808c96956d30bc1045c379f407</anchor>
      <arglist>(WWidget *widget)</arglist>
    </member>
    <member kind="function">
      <type>std::unique_ptr&lt; Widget &gt;</type>
      <name>removeWidget</name>
      <anchorfile>classWt_1_1WToolBar.html</anchorfile>
      <anchor>a1f5151154770b4956b4870cb4ecc38d3</anchor>
      <arglist>(Widget *widget)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WTouchEvent</name>
    <filename>classWt_1_1WTouchEvent.html</filename>
    <member kind="function">
      <type></type>
      <name>WTouchEvent</name>
      <anchorfile>classWt_1_1WTouchEvent.html</anchorfile>
      <anchor>a7afa4ca1ec20f4dee50ae232913a7ff3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; Touch &gt; &amp;</type>
      <name>touches</name>
      <anchorfile>classWt_1_1WTouchEvent.html</anchorfile>
      <anchor>a3c24076018c5e6f1c2115734da3ec1fc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; Touch &gt; &amp;</type>
      <name>targetTouches</name>
      <anchorfile>classWt_1_1WTouchEvent.html</anchorfile>
      <anchor>a9611966e6157973fa196818c40e1b9fa</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; Touch &gt; &amp;</type>
      <name>changedTouches</name>
      <anchorfile>classWt_1_1WTouchEvent.html</anchorfile>
      <anchor>a88abc88be22303a6b10fcd232cf467ea</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WTransform</name>
    <filename>classWt_1_1WTransform.html</filename>
    <base>Wt::WJavaScriptExposableObject</base>
    <class kind="struct">Wt::WTransform::TRSRDecomposition</class>
    <class kind="struct">Wt::WTransform::TRSSDecomposition</class>
    <member kind="function">
      <type></type>
      <name>WTransform</name>
      <anchorfile>classWt_1_1WTransform.html</anchorfile>
      <anchor>aa83f5dc582b77c4ac706cfb6b097a6e3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WTransform</name>
      <anchorfile>classWt_1_1WTransform.html</anchorfile>
      <anchor>a7af529e947eefac16dbce9d4ecdf374b</anchor>
      <arglist>(double m11, double m12, double m21, double m22, double dx, double dy)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WTransform</name>
      <anchorfile>classWt_1_1WTransform.html</anchorfile>
      <anchor>a06ce158eeb5621a7292ae1fe50b0a53f</anchor>
      <arglist>(const WTransform &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>WTransform &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1WTransform.html</anchorfile>
      <anchor>a5b316f9ab4b128fac20ddc193e9a531f</anchor>
      <arglist>(const WTransform &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classWt_1_1WTransform.html</anchorfile>
      <anchor>a7d73c1776348632d81422d0aa75b5464</anchor>
      <arglist>(const WTransform &amp;rhs) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classWt_1_1WTransform.html</anchorfile>
      <anchor>a446805f86b749565ace3b6ca0e1bbf73</anchor>
      <arglist>(const WTransform &amp;rhs) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isIdentity</name>
      <anchorfile>classWt_1_1WTransform.html</anchorfile>
      <anchor>a23303425ad2e79918f95637127044a59</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>m11</name>
      <anchorfile>classWt_1_1WTransform.html</anchorfile>
      <anchor>ae1166875478011bbaa47b0c143c8650e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>m12</name>
      <anchorfile>classWt_1_1WTransform.html</anchorfile>
      <anchor>a2f28772a3535c810d8af5421777b4a6f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>m13</name>
      <anchorfile>classWt_1_1WTransform.html</anchorfile>
      <anchor>aa975f9b6ee628805f438d38f8781dc82</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>m21</name>
      <anchorfile>classWt_1_1WTransform.html</anchorfile>
      <anchor>a10ce670920d570d07e91d1dd846d02e4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>m22</name>
      <anchorfile>classWt_1_1WTransform.html</anchorfile>
      <anchor>a21d7e4b130fc196923ce3a1c3b5f9a62</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>m23</name>
      <anchorfile>classWt_1_1WTransform.html</anchorfile>
      <anchor>a4c440bffa0b3c236e122bd5dfb83565c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>m31</name>
      <anchorfile>classWt_1_1WTransform.html</anchorfile>
      <anchor>a1b26e47e25f8b2254fad617dd8d2f17e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>m32</name>
      <anchorfile>classWt_1_1WTransform.html</anchorfile>
      <anchor>a27c83995085447e1de0e179b589db1df</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>m33</name>
      <anchorfile>classWt_1_1WTransform.html</anchorfile>
      <anchor>a3837a6b344383b9dd88bd1cb5bf328a2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>dx</name>
      <anchorfile>classWt_1_1WTransform.html</anchorfile>
      <anchor>a0acf97ec22b09d77fb18ec363bdfafb7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>dy</name>
      <anchorfile>classWt_1_1WTransform.html</anchorfile>
      <anchor>ab970a37ccdd388af73a9d45e44b63e36</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WPointF</type>
      <name>map</name>
      <anchorfile>classWt_1_1WTransform.html</anchorfile>
      <anchor>ac16907b5f7ee9b9a9fc63e0a4edf970c</anchor>
      <arglist>(const WPointF &amp;p) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>map</name>
      <anchorfile>classWt_1_1WTransform.html</anchorfile>
      <anchor>a7d086e0005889e079cdffe4183d7c58a</anchor>
      <arglist>(double x, double y, double *tx, double *ty) const</arglist>
    </member>
    <member kind="function">
      <type>WRectF</type>
      <name>map</name>
      <anchorfile>classWt_1_1WTransform.html</anchorfile>
      <anchor>a056dfce84725d9d43567260d653946ed</anchor>
      <arglist>(const WRectF &amp;rect) const</arglist>
    </member>
    <member kind="function">
      <type>WPainterPath</type>
      <name>map</name>
      <anchorfile>classWt_1_1WTransform.html</anchorfile>
      <anchor>a380b799669abc4b3ee6193e5ea747b76</anchor>
      <arglist>(const WPainterPath &amp;path) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classWt_1_1WTransform.html</anchorfile>
      <anchor>a36e8423634a12878a6a7262bd749fe6b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>WTransform &amp;</type>
      <name>rotate</name>
      <anchorfile>classWt_1_1WTransform.html</anchorfile>
      <anchor>a4f494c6f886c1b8b15c635e2dc81cc0e</anchor>
      <arglist>(double angle)</arglist>
    </member>
    <member kind="function">
      <type>WTransform &amp;</type>
      <name>rotateRadians</name>
      <anchorfile>classWt_1_1WTransform.html</anchorfile>
      <anchor>a72f394181e722cd890c06bb37e36e7db</anchor>
      <arglist>(double angle)</arglist>
    </member>
    <member kind="function">
      <type>WTransform &amp;</type>
      <name>scale</name>
      <anchorfile>classWt_1_1WTransform.html</anchorfile>
      <anchor>ac9cf750c7ce44b4ecfcae59d4dd964ac</anchor>
      <arglist>(double sx, double sy)</arglist>
    </member>
    <member kind="function">
      <type>WTransform &amp;</type>
      <name>shear</name>
      <anchorfile>classWt_1_1WTransform.html</anchorfile>
      <anchor>a94e146a18a35ec1a9f70cf09c2df8349</anchor>
      <arglist>(double sh, double sv)</arglist>
    </member>
    <member kind="function">
      <type>WTransform &amp;</type>
      <name>translate</name>
      <anchorfile>classWt_1_1WTransform.html</anchorfile>
      <anchor>ad4cd675b5072c25b0545167ba41586d8</anchor>
      <arglist>(double dx, double dy)</arglist>
    </member>
    <member kind="function">
      <type>WTransform &amp;</type>
      <name>translate</name>
      <anchorfile>classWt_1_1WTransform.html</anchorfile>
      <anchor>aad11f3876195835ed45320db63492bc9</anchor>
      <arglist>(const WPointF &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>WTransform &amp;</type>
      <name>operator*=</name>
      <anchorfile>classWt_1_1WTransform.html</anchorfile>
      <anchor>a8363fe6e026aa50b876f0adf195b422b</anchor>
      <arglist>(const WTransform &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>WTransform</type>
      <name>operator*</name>
      <anchorfile>classWt_1_1WTransform.html</anchorfile>
      <anchor>aec99b84b7eb741a4830ebbfc1e186e68</anchor>
      <arglist>(const WTransform &amp;rhs) const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>determinant</name>
      <anchorfile>classWt_1_1WTransform.html</anchorfile>
      <anchor>a893732986df842693c3ce872a9893b31</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WTransform</type>
      <name>adjoint</name>
      <anchorfile>classWt_1_1WTransform.html</anchorfile>
      <anchor>a19d36c4ae8833874a7be0ca5c87de4d1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WTransform</type>
      <name>inverted</name>
      <anchorfile>classWt_1_1WTransform.html</anchorfile>
      <anchor>a9ca20340ef1256dd02715672cc15e75c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>decomposeTranslateRotateScaleSkew</name>
      <anchorfile>classWt_1_1WTransform.html</anchorfile>
      <anchor>a6949998bdf1a6fa12646d8fd6c6c056a</anchor>
      <arglist>(TRSSDecomposition &amp;result) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>decomposeTranslateRotateScaleRotate</name>
      <anchorfile>classWt_1_1WTransform.html</anchorfile>
      <anchor>ab0f477fb4c6a9102638d72be27665b37</anchor>
      <arglist>(TRSRDecomposition &amp;result) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>jsValue</name>
      <anchorfile>classWt_1_1WTransform.html</anchorfile>
      <anchor>a34b4694a74bde32d4720aa9875945b91</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>degreesToRadians</name>
      <anchorfile>classWt_1_1WTransform.html</anchorfile>
      <anchor>a425668a0cfd60a40f344f47d1a4cec92</anchor>
      <arglist>(double angle)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const WTransform</type>
      <name>Identity</name>
      <anchorfile>classWt_1_1WTransform.html</anchorfile>
      <anchor>a32281880ff4f50a1aa6b07477f779da0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WTree</name>
    <filename>classWt_1_1WTree.html</filename>
    <base>Wt::WCompositeWidget</base>
    <member kind="typedef">
      <type>std::set&lt; WTreeNode * &gt;</type>
      <name>WTreeNodeSet</name>
      <anchorfile>classWt_1_1WTree.html</anchorfile>
      <anchor>a2308f07ae7dfb959360ad1bdcf394e44</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WTree</name>
      <anchorfile>classWt_1_1WTree.html</anchorfile>
      <anchor>a5e7004844f0ca3a104574a58b16d2eed</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTreeRoot</name>
      <anchorfile>classWt_1_1WTree.html</anchorfile>
      <anchor>ad72f85efdc428c53351e9a541bb902e9</anchor>
      <arglist>(std::unique_ptr&lt; WTreeNode &gt; root)</arglist>
    </member>
    <member kind="function">
      <type>WTreeNode *</type>
      <name>treeRoot</name>
      <anchorfile>classWt_1_1WTree.html</anchorfile>
      <anchor>a454b1d28285b6a58acdda5dadf39f31c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSelectionMode</name>
      <anchorfile>classWt_1_1WTree.html</anchorfile>
      <anchor>a7270f705ad5f9be1e2bee06a73348a9a</anchor>
      <arglist>(SelectionMode mode)</arglist>
    </member>
    <member kind="function">
      <type>SelectionMode</type>
      <name>selectionMode</name>
      <anchorfile>classWt_1_1WTree.html</anchorfile>
      <anchor>a0bcc0410ed64b5972a7d48ab0d0df332</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const WTreeNodeSet &amp;</type>
      <name>selectedNodes</name>
      <anchorfile>classWt_1_1WTree.html</anchorfile>
      <anchor>a74a9a693627d2e094509c132ad5d7e58</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>select</name>
      <anchorfile>classWt_1_1WTree.html</anchorfile>
      <anchor>a9e09dff326743004dc9f2bf27408551a</anchor>
      <arglist>(const WTreeNodeSet &amp;nodes)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>select</name>
      <anchorfile>classWt_1_1WTree.html</anchorfile>
      <anchor>a52c770a65ac3f4c2493f714271a5133a</anchor>
      <arglist>(WTreeNode *node, bool selected=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSelected</name>
      <anchorfile>classWt_1_1WTree.html</anchorfile>
      <anchor>a100ef5cfc46328720808ace9ce114494</anchor>
      <arglist>(WTreeNode *node) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearSelection</name>
      <anchorfile>classWt_1_1WTree.html</anchorfile>
      <anchor>a14a781edeb90b3040a5e09238290514e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Signal &amp;</type>
      <name>itemSelectionChanged</name>
      <anchorfile>classWt_1_1WTree.html</anchorfile>
      <anchor>a103603f639e07f83d1a75e293b70966d</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WTreeNode</name>
    <filename>classWt_1_1WTreeNode.html</filename>
    <base>Wt::WCompositeWidget</base>
    <member kind="function">
      <type></type>
      <name>WTreeNode</name>
      <anchorfile>classWt_1_1WTreeNode.html</anchorfile>
      <anchor>a53319342e6f6cea47405dea041e83b43</anchor>
      <arglist>(const WString &amp;labelText, std::unique_ptr&lt; WIconPair &gt; labelIcon=nullptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WTreeNode</name>
      <anchorfile>classWt_1_1WTreeNode.html</anchorfile>
      <anchor>a1ec9b14cd8388631acbb3e82649d0d67</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WTree *</type>
      <name>tree</name>
      <anchorfile>classWt_1_1WTreeNode.html</anchorfile>
      <anchor>afa5b62d01c20cc3280043381fdcd1382</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WText *</type>
      <name>label</name>
      <anchorfile>classWt_1_1WTreeNode.html</anchorfile>
      <anchor>a3d3843756b25ebcf8809f6cf8ec5f607</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WIconPair *</type>
      <name>labelIcon</name>
      <anchorfile>classWt_1_1WTreeNode.html</anchorfile>
      <anchor>a0c410ac8595a7df7f94c785595ca2ddd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLabelIcon</name>
      <anchorfile>classWt_1_1WTreeNode.html</anchorfile>
      <anchor>a7459c868e3039b48e398230382674e8c</anchor>
      <arglist>(std::unique_ptr&lt; WIconPair &gt; labelIcon)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>insertChildNode</name>
      <anchorfile>classWt_1_1WTreeNode.html</anchorfile>
      <anchor>a81ec9c6cfd75c873a3746b56da4e8505</anchor>
      <arglist>(int index, std::unique_ptr&lt; WTreeNode &gt; node)</arglist>
    </member>
    <member kind="function">
      <type>WTreeNode *</type>
      <name>addChildNode</name>
      <anchorfile>classWt_1_1WTreeNode.html</anchorfile>
      <anchor>a28c3567a36016a7bf998f9bc15b00b39</anchor>
      <arglist>(std::unique_ptr&lt; WTreeNode &gt; node)</arglist>
    </member>
    <member kind="function">
      <type>std::unique_ptr&lt; WTreeNode &gt;</type>
      <name>removeChildNode</name>
      <anchorfile>classWt_1_1WTreeNode.html</anchorfile>
      <anchor>aa663212e3ef95866a51261bbd9947e2d</anchor>
      <arglist>(WTreeNode *node)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; WTreeNode * &gt;</type>
      <name>childNodes</name>
      <anchorfile>classWt_1_1WTreeNode.html</anchorfile>
      <anchor>a1224edaf05d63f00d236cf5e15a4a198</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>displayedChildCount</name>
      <anchorfile>classWt_1_1WTreeNode.html</anchorfile>
      <anchor>a0450f95ea4555b39bc66b3a9c725dd1a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setChildCountPolicy</name>
      <anchorfile>classWt_1_1WTreeNode.html</anchorfile>
      <anchor>a5a625b5a94386386dabd36277d5f7c1b</anchor>
      <arglist>(ChildCountPolicy policy)</arglist>
    </member>
    <member kind="function">
      <type>ChildCountPolicy</type>
      <name>childCountPolicy</name>
      <anchorfile>classWt_1_1WTreeNode.html</anchorfile>
      <anchor>a6ff9d382d676f00d40d3e44733c73562</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLoadPolicy</name>
      <anchorfile>classWt_1_1WTreeNode.html</anchorfile>
      <anchor>ab01e87fa0fdaf8f8d0f23657cc5af9f3</anchor>
      <arglist>(ContentLoading loadPolicy)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isExpanded</name>
      <anchorfile>classWt_1_1WTreeNode.html</anchorfile>
      <anchor>a19f82cb2837e8d225ad8880602fa6842</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setSelectable</name>
      <anchorfile>classWt_1_1WTreeNode.html</anchorfile>
      <anchor>a116c6f2b154c771473c5932fa21ff911</anchor>
      <arglist>(bool selectable) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isSelectable</name>
      <anchorfile>classWt_1_1WTreeNode.html</anchorfile>
      <anchor>aea27876bf21ae9a7e2ee19237314c314</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WTreeNode *</type>
      <name>parentNode</name>
      <anchorfile>classWt_1_1WTreeNode.html</anchorfile>
      <anchor>a47f8f1063221b35cb6d809e3940cf552</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNodeVisible</name>
      <anchorfile>classWt_1_1WTreeNode.html</anchorfile>
      <anchor>a63d37fa9bb5a3ba8ea178b5f3737626d</anchor>
      <arglist>(bool visible)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setChildrenDecorated</name>
      <anchorfile>classWt_1_1WTreeNode.html</anchorfile>
      <anchor>a5594488be1f49052915b4ecc840f44ce</anchor>
      <arglist>(bool decorated)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInteractive</name>
      <anchorfile>classWt_1_1WTreeNode.html</anchorfile>
      <anchor>a85e7232623373ad75a5b5bbdbbf734ca</anchor>
      <arglist>(bool interactive)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>expand</name>
      <anchorfile>classWt_1_1WTreeNode.html</anchorfile>
      <anchor>a10e99f9db96ec2fc500927a5d50caafe</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>collapse</name>
      <anchorfile>classWt_1_1WTreeNode.html</anchorfile>
      <anchor>a43ed4fd057fac436d93bda4a6d1de7dd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EventSignal&lt; WMouseEvent &gt; &amp;</type>
      <name>expanded</name>
      <anchorfile>classWt_1_1WTreeNode.html</anchorfile>
      <anchor>adecb58d1334ac18d7e78e6e4d8e2e0e4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EventSignal&lt; WMouseEvent &gt; &amp;</type>
      <name>collapsed</name>
      <anchorfile>classWt_1_1WTreeNode.html</anchorfile>
      <anchor>a27b27bfa04d5414e058427ecfdc82309</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Signal&lt; bool &gt; &amp;</type>
      <name>selected</name>
      <anchorfile>classWt_1_1WTreeNode.html</anchorfile>
      <anchor>a23a35eefeeda38afbca4cf59404c4806</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>WTreeNode</name>
      <anchorfile>classWt_1_1WTreeNode.html</anchorfile>
      <anchor>a58a48c1504f466ddbd6ae0eda60e8014</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>WContainerWidget *</type>
      <name>labelArea</name>
      <anchorfile>classWt_1_1WTreeNode.html</anchorfile>
      <anchor>ac765458ef575d66b8f5b169351265585</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>populate</name>
      <anchorfile>classWt_1_1WTreeNode.html</anchorfile>
      <anchor>a9ab70c6020dbd9ea3204c625029a7a1b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>populated</name>
      <anchorfile>classWt_1_1WTreeNode.html</anchorfile>
      <anchor>a4ba793869949f59471590392a4f84950</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>expandable</name>
      <anchorfile>classWt_1_1WTreeNode.html</anchorfile>
      <anchor>a4f19826594b5b080b0a436c474c31f61</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>renderSelected</name>
      <anchorfile>classWt_1_1WTreeNode.html</anchorfile>
      <anchor>ae4bb84bf91002f80941d2e890cab12cd</anchor>
      <arglist>(bool selected)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>descendantRemoved</name>
      <anchorfile>classWt_1_1WTreeNode.html</anchorfile>
      <anchor>aea7b6b2ba3d170fa57dfb7451f878a5d</anchor>
      <arglist>(WTreeNode *node)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>descendantAdded</name>
      <anchorfile>classWt_1_1WTreeNode.html</anchorfile>
      <anchor>abfa02369517d2cc7cd3ee1d3839740e3</anchor>
      <arglist>(WTreeNode *node)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doExpand</name>
      <anchorfile>classWt_1_1WTreeNode.html</anchorfile>
      <anchor>a7cf5f24e57d19df0b8e01638c75c4bf7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doCollapse</name>
      <anchorfile>classWt_1_1WTreeNode.html</anchorfile>
      <anchor>a98cc68ceed98e3e98145fe5a8129c066</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>undoDoExpand</name>
      <anchorfile>classWt_1_1WTreeNode.html</anchorfile>
      <anchor>ac0d0cbdfb0c8c0d493e70a6b40b40fc2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>undoDoCollapse</name>
      <anchorfile>classWt_1_1WTreeNode.html</anchorfile>
      <anchor>a67cd4a5c8169919e1e1feadc1cab7ae3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>WIconPair *</type>
      <name>expandIcon</name>
      <anchorfile>classWt_1_1WTreeNode.html</anchorfile>
      <anchor>a9bce596f8fb36eaf9bdad3db97c3f513</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WTreeTable</name>
    <filename>classWt_1_1WTreeTable.html</filename>
    <base>Wt::WCompositeWidget</base>
    <member kind="function">
      <type></type>
      <name>WTreeTable</name>
      <anchorfile>classWt_1_1WTreeTable.html</anchorfile>
      <anchor>ae9e4c1077fb1fec48a0ed804da846c92</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addColumn</name>
      <anchorfile>classWt_1_1WTreeTable.html</anchorfile>
      <anchor>a2ec7655241ad65f99c114d6ed37b49a1</anchor>
      <arglist>(const WString &amp;header, const WLength &amp;width)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>columnCount</name>
      <anchorfile>classWt_1_1WTreeTable.html</anchorfile>
      <anchor>ab371d1480aa775822cc9a83d379674f5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTreeRoot</name>
      <anchorfile>classWt_1_1WTreeTable.html</anchorfile>
      <anchor>afa1813751aa1c4df798f4a5207e16547</anchor>
      <arglist>(std::unique_ptr&lt; WTreeTableNode &gt; root, const WString &amp;header)</arglist>
    </member>
    <member kind="function">
      <type>WTreeTableNode *</type>
      <name>treeRoot</name>
      <anchorfile>classWt_1_1WTreeTable.html</anchorfile>
      <anchor>ad2df80ef5a3243b7b695946f5fbd8614</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTree</name>
      <anchorfile>classWt_1_1WTreeTable.html</anchorfile>
      <anchor>acd82550e83956868fb7e6a98db3e2a4f</anchor>
      <arglist>(std::unique_ptr&lt; WTree &gt; tree, const WString &amp;header)</arglist>
    </member>
    <member kind="function">
      <type>WTree *</type>
      <name>tree</name>
      <anchorfile>classWt_1_1WTreeTable.html</anchorfile>
      <anchor>a69f19a7b1be11dcf630264e03dfb1a20</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WLength</type>
      <name>columnWidth</name>
      <anchorfile>classWt_1_1WTreeTable.html</anchorfile>
      <anchor>a2cbaedca56cb54916eb8e625e0266c6d</anchor>
      <arglist>(int column) const</arglist>
    </member>
    <member kind="function">
      <type>WText *</type>
      <name>header</name>
      <anchorfile>classWt_1_1WTreeTable.html</anchorfile>
      <anchor>ae98b4bfbdf7d339dee6ba012b16ba6c5</anchor>
      <arglist>(int column) const</arglist>
    </member>
    <member kind="function">
      <type>WWidget *</type>
      <name>headerWidget</name>
      <anchorfile>classWt_1_1WTreeTable.html</anchorfile>
      <anchor>ad8ccf978d1a80f23c980a1e07acb4aa6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>render</name>
      <anchorfile>classWt_1_1WTreeTable.html</anchorfile>
      <anchor>a676fba92d88d27b071c2725b5e06c446</anchor>
      <arglist>(WFlags&lt; RenderFlag &gt; flags) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WTreeTableNode</name>
    <filename>classWt_1_1WTreeTableNode.html</filename>
    <base>Wt::WTreeNode</base>
    <member kind="function">
      <type></type>
      <name>WTreeTableNode</name>
      <anchorfile>classWt_1_1WTreeTableNode.html</anchorfile>
      <anchor>a1069793e1144ef36fa04349f5f606132</anchor>
      <arglist>(const WString &amp;labelText, std::unique_ptr&lt; WIconPair &gt; labelIcon=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setColumnWidget</name>
      <anchorfile>classWt_1_1WTreeTableNode.html</anchorfile>
      <anchor>a85d9b06b7329c0ae9b951c5680a02c6c</anchor>
      <arglist>(int column, std::unique_ptr&lt; WWidget &gt; item)</arglist>
    </member>
    <member kind="function">
      <type>WWidget *</type>
      <name>columnWidget</name>
      <anchorfile>classWt_1_1WTreeTableNode.html</anchorfile>
      <anchor>a5e9f7b5afb4d92175a3d6307727eee81</anchor>
      <arglist>(int column)</arglist>
    </member>
    <member kind="function">
      <type>WTreeTable *</type>
      <name>table</name>
      <anchorfile>classWt_1_1WTreeTableNode.html</anchorfile>
      <anchor>abc73b63e6c11922f0a9e7720da8e8a21</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>insertChildNode</name>
      <anchorfile>classWt_1_1WTreeTableNode.html</anchorfile>
      <anchor>ae60329d9fbdb8f84d0117ac15c3df8b0</anchor>
      <arglist>(int index, std::unique_ptr&lt; WTreeNode &gt; node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>setTable</name>
      <anchorfile>classWt_1_1WTreeTableNode.html</anchorfile>
      <anchor>aafe8ea0231f569644ee9e7a54deb13a9</anchor>
      <arglist>(WTreeTable *table)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WTreeView</name>
    <filename>classWt_1_1WTreeView.html</filename>
    <base>Wt::WAbstractItemView</base>
    <member kind="function">
      <type></type>
      <name>WTreeView</name>
      <anchorfile>classWt_1_1WTreeView.html</anchorfile>
      <anchor>aeb07703b36f369b2e493899246de03d1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setExpanded</name>
      <anchorfile>classWt_1_1WTreeView.html</anchorfile>
      <anchor>a49566dd5cc8d1d0d95bad4783dd4e11a</anchor>
      <arglist>(const WModelIndex &amp;, bool expanded)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isExpanded</name>
      <anchorfile>classWt_1_1WTreeView.html</anchorfile>
      <anchor>a3810b69fae37be77e5bf70e8cb6723ac</anchor>
      <arglist>(const WModelIndex &amp;index) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>collapse</name>
      <anchorfile>classWt_1_1WTreeView.html</anchorfile>
      <anchor>abe1b839fc999634806df030301422411</anchor>
      <arglist>(const WModelIndex &amp;index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>collapseAll</name>
      <anchorfile>classWt_1_1WTreeView.html</anchorfile>
      <anchor>ab7c527ce5304cdbe7f5bcb3e51880641</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>expand</name>
      <anchorfile>classWt_1_1WTreeView.html</anchorfile>
      <anchor>a03cd862e9c5dbbfbc126ac627b48592a</anchor>
      <arglist>(const WModelIndex &amp;index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>expandToDepth</name>
      <anchorfile>classWt_1_1WTreeView.html</anchorfile>
      <anchor>add40d3e05352ae094f6fe2b9c879c2c7</anchor>
      <arglist>(int depth)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRootIsDecorated</name>
      <anchorfile>classWt_1_1WTreeView.html</anchorfile>
      <anchor>aef8576ebdf2089edc259362a15e2f750</anchor>
      <arglist>(bool show)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>rootIsDecorated</name>
      <anchorfile>classWt_1_1WTreeView.html</anchorfile>
      <anchor>aa640b56fc7f1cd979d833c95257763d2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>resize</name>
      <anchorfile>classWt_1_1WTreeView.html</anchorfile>
      <anchor>afc6d07a4ee9c3a3d979ded4da4253c36</anchor>
      <arglist>(const WLength &amp;width, const WLength &amp;height) override</arglist>
    </member>
    <member kind="function">
      <type>Signal&lt; WModelIndex &gt; &amp;</type>
      <name>collapsed</name>
      <anchorfile>classWt_1_1WTreeView.html</anchorfile>
      <anchor>a8d014f2cd6637f5f842d7fe2fff00418</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Signal&lt; WModelIndex &gt; &amp;</type>
      <name>expanded</name>
      <anchorfile>classWt_1_1WTreeView.html</anchorfile>
      <anchor>a96586671660b0e81cc2ae99fff284909</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WWidget *</type>
      <name>itemWidget</name>
      <anchorfile>classWt_1_1WTreeView.html</anchorfile>
      <anchor>aa8f36b17b4ed3722087a9ec7d8c544b1</anchor>
      <arglist>(const WModelIndex &amp;index) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setModel</name>
      <anchorfile>classWt_1_1WTreeView.html</anchorfile>
      <anchor>abc6f9eca65cdb8951a5a182b4eeedf85</anchor>
      <arglist>(const std::shared_ptr&lt; WAbstractItemModel &gt; &amp;model) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setColumnWidth</name>
      <anchorfile>classWt_1_1WTreeView.html</anchorfile>
      <anchor>a8560c58e4933aa767c27d56168db5d4d</anchor>
      <arglist>(int column, const WLength &amp;width) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAlternatingRowColors</name>
      <anchorfile>classWt_1_1WTreeView.html</anchorfile>
      <anchor>a8928545beb57de0b46fc686bac27f75a</anchor>
      <arglist>(bool enable) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setRowHeight</name>
      <anchorfile>classWt_1_1WTreeView.html</anchorfile>
      <anchor>a1bd83d1f48a11dbc731f56a16d420148</anchor>
      <arglist>(const WLength &amp;rowHeight) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setHeaderHeight</name>
      <anchorfile>classWt_1_1WTreeView.html</anchorfile>
      <anchor>a96effd932eafc395ca91ce4510d41b7a</anchor>
      <arglist>(const WLength &amp;height) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setColumnHidden</name>
      <anchorfile>classWt_1_1WTreeView.html</anchorfile>
      <anchor>a825cdb596ad342b12e0c3639fa29590b</anchor>
      <arglist>(int column, bool hidden) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setRowHeaderCount</name>
      <anchorfile>classWt_1_1WTreeView.html</anchorfile>
      <anchor>ae5f21d76b7905241f30023719ad8a9d0</anchor>
      <arglist>(int count) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>pageCount</name>
      <anchorfile>classWt_1_1WTreeView.html</anchorfile>
      <anchor>ab0a54141d8b01f2e44409ee0525dc682</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>pageSize</name>
      <anchorfile>classWt_1_1WTreeView.html</anchorfile>
      <anchor>aa452045d5e5671b898b59994aee8112d</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>currentPage</name>
      <anchorfile>classWt_1_1WTreeView.html</anchorfile>
      <anchor>a8aca1ea1c8c2278f5a5902824db7da8d</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setCurrentPage</name>
      <anchorfile>classWt_1_1WTreeView.html</anchorfile>
      <anchor>a1b175a443fadcb4b8f4373d2663b97f3</anchor>
      <arglist>(int page) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>scrollTo</name>
      <anchorfile>classWt_1_1WTreeView.html</anchorfile>
      <anchor>aa299ad97708c19178acee2a8e01aceea</anchor>
      <arglist>(const WModelIndex &amp;index, ScrollHint hint=ScrollHint::EnsureVisible) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual EventSignal&lt; WScrollEvent &gt; &amp;</type>
      <name>scrolled</name>
      <anchorfile>classWt_1_1WTreeView.html</anchorfile>
      <anchor>a54c8bac6140804b1cd57fafcf2981a48</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setId</name>
      <anchorfile>classWt_1_1WTreeView.html</anchorfile>
      <anchor>a99974e8fc9ce45f2952280e1174aa0f4</anchor>
      <arglist>(const std::string &amp;id) override</arglist>
    </member>
    <member kind="function">
      <type>virtual void</type>
      <name>setHeaderHeight</name>
      <anchorfile>classWt_1_1WTreeView.html</anchorfile>
      <anchor>a0ab90f396e9cdb563e45a9a35f7dfc8a</anchor>
      <arglist>(const WLength &amp;height)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>render</name>
      <anchorfile>classWt_1_1WTreeView.html</anchorfile>
      <anchor>a1a427771d3095e6a92addf38b9af82b0</anchor>
      <arglist>(WFlags&lt; RenderFlag &gt; flags) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>enableAjax</name>
      <anchorfile>classWt_1_1WTreeView.html</anchorfile>
      <anchor>aa337178a9fa888530c4ff8ba84c3adf9</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WValidator</name>
    <filename>classWt_1_1WValidator.html</filename>
    <class kind="class">Wt::WValidator::Result</class>
    <member kind="typedef">
      <type>ValidationState</type>
      <name>State</name>
      <anchorfile>classWt_1_1WValidator.html</anchorfile>
      <anchor>a862e64cb271db59f28372dd4acff6a09</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WValidator</name>
      <anchorfile>classWt_1_1WValidator.html</anchorfile>
      <anchor>ac2872ed2b901a46cc4954f1905b1c825</anchor>
      <arglist>(bool mandatory=false)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~WValidator</name>
      <anchorfile>classWt_1_1WValidator.html</anchorfile>
      <anchor>ad7f5599879175c310dac4b76331d7ff6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMandatory</name>
      <anchorfile>classWt_1_1WValidator.html</anchorfile>
      <anchor>a6f7993c51a0088b927d7c9aa516efabb</anchor>
      <arglist>(bool how)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isMandatory</name>
      <anchorfile>classWt_1_1WValidator.html</anchorfile>
      <anchor>a65f55713354195635e949afe88d50fe3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInvalidBlankText</name>
      <anchorfile>classWt_1_1WValidator.html</anchorfile>
      <anchor>abafa7c49159d5475a8ec6eff1fef8c17</anchor>
      <arglist>(const WString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>WString</type>
      <name>invalidBlankText</name>
      <anchorfile>classWt_1_1WValidator.html</anchorfile>
      <anchor>a7983f2ea0fa333d190669704aed013e8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Result</type>
      <name>validate</name>
      <anchorfile>classWt_1_1WValidator.html</anchorfile>
      <anchor>a9e82eb08b55ed7d329cb4e8487438bfa</anchor>
      <arglist>(const WString &amp;input) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WString</type>
      <name>format</name>
      <anchorfile>classWt_1_1WValidator.html</anchorfile>
      <anchor>a8a60819240f8dd99b4175cc30707fc6f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>javaScriptValidate</name>
      <anchorfile>classWt_1_1WValidator.html</anchorfile>
      <anchor>a597b3bebb43d772e17dbd2521f286a23</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>inputFilter</name>
      <anchorfile>classWt_1_1WValidator.html</anchorfile>
      <anchor>a451641d5766dcc7e0a5ec029c1abad2c</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WVBoxLayout</name>
    <filename>classWt_1_1WVBoxLayout.html</filename>
    <base>Wt::WBoxLayout</base>
    <member kind="function">
      <type></type>
      <name>WVBoxLayout</name>
      <anchorfile>classWt_1_1WVBoxLayout.html</anchorfile>
      <anchor>a3c6168cb05c54e3a1850ba438f1bf6a6</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WVectorImage</name>
    <filename>classWt_1_1WVectorImage.html</filename>
    <base>Wt::WPaintDevice</base>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>rendered</name>
      <anchorfile>classWt_1_1WVectorImage.html</anchorfile>
      <anchor>aaef996920d0cad986a35780811a2121e</anchor>
      <arglist>()=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WVideo</name>
    <filename>classWt_1_1WVideo.html</filename>
    <base>Wt::WAbstractMedia</base>
    <member kind="function">
      <type></type>
      <name>WVideo</name>
      <anchorfile>classWt_1_1WVideo.html</anchorfile>
      <anchor>a9451ccdd123aa3ff516c3855f9fe9b39</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPoster</name>
      <anchorfile>classWt_1_1WVideo.html</anchorfile>
      <anchor>afdf8f7e6ad4a18ba8e27e41d034846e8</anchor>
      <arglist>(const std::string &amp;url)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>jsVideoRef</name>
      <anchorfile>classWt_1_1WVideo.html</anchorfile>
      <anchor>a4f86651aa63778bf11dfa942ef145072</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>resize</name>
      <anchorfile>classWt_1_1WVideo.html</anchorfile>
      <anchor>a55bc78abd184b67c8ed894df71fa4d7e</anchor>
      <arglist>(const WLength &amp;width, const WLength &amp;height) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WViewWidget</name>
    <filename>classWt_1_1WViewWidget.html</filename>
    <base>Wt::WWebWidget</base>
    <member kind="function">
      <type></type>
      <name>WViewWidget</name>
      <anchorfile>classWt_1_1WViewWidget.html</anchorfile>
      <anchor>ad0b30cdda371d345b3118042e8808b44</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update</name>
      <anchorfile>classWt_1_1WViewWidget.html</anchorfile>
      <anchor>a7dcbc05eb15c4d4168141871d5908e37</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>load</name>
      <anchorfile>classWt_1_1WViewWidget.html</anchorfile>
      <anchor>a307674eede62cc419503b51e84569cc1</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>render</name>
      <anchorfile>classWt_1_1WViewWidget.html</anchorfile>
      <anchor>a9cfb2542aeed7643f7be1c0634030a7d</anchor>
      <arglist>(WFlags&lt; RenderFlag &gt; flags) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>refresh</name>
      <anchorfile>classWt_1_1WViewWidget.html</anchorfile>
      <anchor>a7672a2c46e9c92e83c84e646493926ff</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual std::unique_ptr&lt; WWidget &gt;</type>
      <name>renderView</name>
      <anchorfile>classWt_1_1WViewWidget.html</anchorfile>
      <anchor>a58784e9a334ea7b23c200aaf08f0c1dd</anchor>
      <arglist>()=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WVirtualImage</name>
    <filename>classWt_1_1WVirtualImage.html</filename>
    <base>Wt::WCompositeWidget</base>
    <member kind="function">
      <type></type>
      <name>WVirtualImage</name>
      <anchorfile>classWt_1_1WVirtualImage.html</anchorfile>
      <anchor>a6ed5dc7cbd0ecebb8611dc2bed4c9b3e</anchor>
      <arglist>(int viewPortWidth, int viewPortHeight, ::int64_t imageWidth, ::int64_t imageHeight, int gridImageSize=256)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WVirtualImage</name>
      <anchorfile>classWt_1_1WVirtualImage.html</anchorfile>
      <anchor>ae579c6380dddbc8a6390344e21c5e8bd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>redrawAll</name>
      <anchorfile>classWt_1_1WVirtualImage.html</anchorfile>
      <anchor>ac77880df77641e2778667d89135bd8c5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>enableDragging</name>
      <anchorfile>classWt_1_1WVirtualImage.html</anchorfile>
      <anchor>a967961b3744ce70b0dcfffd2dd4e5582</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scroll</name>
      <anchorfile>classWt_1_1WVirtualImage.html</anchorfile>
      <anchor>adcd9ca1d1681e1588f83d19fb9d30bdf</anchor>
      <arglist>(::int64_t dx, ::int64_t dy)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scrollTo</name>
      <anchorfile>classWt_1_1WVirtualImage.html</anchorfile>
      <anchor>a0feb746fc22b907f779423bd9768109c</anchor>
      <arglist>(::int64_t x, ::int64_t y)</arglist>
    </member>
    <member kind="function">
      <type>::int64_t</type>
      <name>imageWidth</name>
      <anchorfile>classWt_1_1WVirtualImage.html</anchorfile>
      <anchor>ac8a11701ac23f432aed3256914e78cd8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>::int64_t</type>
      <name>imageHeight</name>
      <anchorfile>classWt_1_1WVirtualImage.html</anchorfile>
      <anchor>a0fae7ac293cad8173722fddf9d35a6bb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resizeImage</name>
      <anchorfile>classWt_1_1WVirtualImage.html</anchorfile>
      <anchor>a8c52c8b7de786784c764a83ccbfa62eb</anchor>
      <arglist>(::int64_t w, ::int64_t h)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>viewPortWidth</name>
      <anchorfile>classWt_1_1WVirtualImage.html</anchorfile>
      <anchor>ab1b114e130939fda488af26c00bde989</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>viewPortHeight</name>
      <anchorfile>classWt_1_1WVirtualImage.html</anchorfile>
      <anchor>ac446888b296195f9712e41d785f6f19a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>gridImageSize</name>
      <anchorfile>classWt_1_1WVirtualImage.html</anchorfile>
      <anchor>ae1f705134ad028f5c378fced378262c0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>::int64_t</type>
      <name>currentTopLeftX</name>
      <anchorfile>classWt_1_1WVirtualImage.html</anchorfile>
      <anchor>ab6a19aeaa1173fcf2692a47d97961f7b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>::int64_t</type>
      <name>currentTopLeftY</name>
      <anchorfile>classWt_1_1WVirtualImage.html</anchorfile>
      <anchor>a5f959d64a57c517366eb2396c6991091</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>::int64_t</type>
      <name>currentBottomRightX</name>
      <anchorfile>classWt_1_1WVirtualImage.html</anchorfile>
      <anchor>adc54da265d173ada02e2a7eaed8807d5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>::int64_t</type>
      <name>currentBottomRightY</name>
      <anchorfile>classWt_1_1WVirtualImage.html</anchorfile>
      <anchor>a25491c012424e755c37754ff5ec077c1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Signal&lt; ::int64_t, ::int64_t &gt; &amp;</type>
      <name>viewPortChanged</name>
      <anchorfile>classWt_1_1WVirtualImage.html</anchorfile>
      <anchor>a5b5850535038ea4a505d55cadc6a8446</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const ::int64_t</type>
      <name>Infinite</name>
      <anchorfile>classWt_1_1WVirtualImage.html</anchorfile>
      <anchor>ac2657f31a609a69b48631d26e0bd0b81</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual std::unique_ptr&lt; WImage &gt;</type>
      <name>createImage</name>
      <anchorfile>classWt_1_1WVirtualImage.html</anchorfile>
      <anchor>a797b26eb92a83added9247ebed9e6e2b</anchor>
      <arglist>(::int64_t x, ::int64_t y, int width, int height)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual std::unique_ptr&lt; WResource &gt;</type>
      <name>render</name>
      <anchorfile>classWt_1_1WVirtualImage.html</anchorfile>
      <anchor>ac8291ed29383b0f72ce1307fda0469cc</anchor>
      <arglist>(::int64_t x, ::int64_t y, int width, int height)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WVmlImage</name>
    <filename>classWt_1_1WVmlImage.html</filename>
    <base>Wt::WVectorImage</base>
    <member kind="function">
      <type></type>
      <name>WVmlImage</name>
      <anchorfile>classWt_1_1WVmlImage.html</anchorfile>
      <anchor>a7b75b5840f7cae55f50873f17b0ff8d2</anchor>
      <arglist>(const WLength &amp;width, const WLength &amp;height, bool paintUpdate)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WFlags&lt; PaintDeviceFeatureFlag &gt;</type>
      <name>features</name>
      <anchorfile>classWt_1_1WVmlImage.html</anchorfile>
      <anchor>a533fccfc33000db6d944a1467b966597</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setChanged</name>
      <anchorfile>classWt_1_1WVmlImage.html</anchorfile>
      <anchor>a259aaf963284c651943974f576b5379f</anchor>
      <arglist>(WFlags&lt; PainterChangeFlag &gt; flags) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>drawArc</name>
      <anchorfile>classWt_1_1WVmlImage.html</anchorfile>
      <anchor>a643be7cda04b16b56a2830f534a965f7</anchor>
      <arglist>(const WRectF &amp;rect, double startAngle, double spanAngle) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>drawImage</name>
      <anchorfile>classWt_1_1WVmlImage.html</anchorfile>
      <anchor>ac915b5fd2c0ad1d54f45ae3aa0f3df36</anchor>
      <arglist>(const WRectF &amp;rect, const std::string &amp;imgUri, int imgWidth, int imgHeight, const WRectF &amp;sourceRect) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>drawLine</name>
      <anchorfile>classWt_1_1WVmlImage.html</anchorfile>
      <anchor>a106d9fdd386c093937aaa51a1f074cd6</anchor>
      <arglist>(double x1, double y1, double x2, double y2) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>drawRect</name>
      <anchorfile>classWt_1_1WVmlImage.html</anchorfile>
      <anchor>afa857e646f6cf4c53dfe0dea0f11340c</anchor>
      <arglist>(const WRectF &amp;rectangle) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>drawPath</name>
      <anchorfile>classWt_1_1WVmlImage.html</anchorfile>
      <anchor>a7d7a19602367b5d4edd0b82fc0318fcb</anchor>
      <arglist>(const WPainterPath &amp;path) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>drawText</name>
      <anchorfile>classWt_1_1WVmlImage.html</anchorfile>
      <anchor>ae05566edc6f6fc514a908ed3445118fd</anchor>
      <arglist>(const WRectF &amp;rect, WFlags&lt; AlignmentFlag &gt; alignmentFlags, TextFlag textFlag, const WString &amp;text, const WPointF *clipPoint) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WTextItem</type>
      <name>measureText</name>
      <anchorfile>classWt_1_1WVmlImage.html</anchorfile>
      <anchor>afd5ca02217eb83710a66157f8b6d88b8</anchor>
      <arglist>(const WString &amp;text, double maxWidth=-1, bool wordWrap=false) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WFontMetrics</type>
      <name>fontMetrics</name>
      <anchorfile>classWt_1_1WVmlImage.html</anchorfile>
      <anchor>a3bed488fda3556f8d2fdb59b4810316c</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>init</name>
      <anchorfile>classWt_1_1WVmlImage.html</anchorfile>
      <anchor>a02465e88c7d35289a5fb13e0af4ab496</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>done</name>
      <anchorfile>classWt_1_1WVmlImage.html</anchorfile>
      <anchor>a530928713608a772d6ae33a137831bd9</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>paintActive</name>
      <anchorfile>classWt_1_1WVmlImage.html</anchorfile>
      <anchor>ab6b29b56b4b30d09accd3702ec752bde</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>rendered</name>
      <anchorfile>classWt_1_1WVmlImage.html</anchorfile>
      <anchor>a2d8683e5a9c77cb65f39bb8bfba3718c</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WLength</type>
      <name>width</name>
      <anchorfile>classWt_1_1WVmlImage.html</anchorfile>
      <anchor>a9899b2bf9d4ed0e6d6b6b548a2e9412e</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WLength</type>
      <name>height</name>
      <anchorfile>classWt_1_1WVmlImage.html</anchorfile>
      <anchor>a8501b338391b127a91f2c959974582bf</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual WPainter *</type>
      <name>painter</name>
      <anchorfile>classWt_1_1WVmlImage.html</anchorfile>
      <anchor>ac84e1a764abc9bf6b53647c579fc9cb1</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>setPainter</name>
      <anchorfile>classWt_1_1WVmlImage.html</anchorfile>
      <anchor>ab5c01cdbb66049245447d42463a32db6</anchor>
      <arglist>(WPainter *painter) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WWebWidget</name>
    <filename>classWt_1_1WWebWidget.html</filename>
    <base>Wt::WWidget</base>
    <member kind="function">
      <type></type>
      <name>WWebWidget</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>ab02f4dc66d149daeb9f7e5a0a6bf79ff</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::vector&lt; WWidget * &gt;</type>
      <name>children</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>a14e26a5159e507598567f8229f60e16c</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>Signal &amp;</type>
      <name>childrenChanged</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>a3c245e878c956e8b931534398501ba21</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setPositionScheme</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>aa8883283e85fded871e1e3d76c049d85</anchor>
      <arglist>(PositionScheme scheme) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual PositionScheme</type>
      <name>positionScheme</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>a418bf9f21187b85a49d0134a1a413524</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setOffsets</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>a08568debeef69f1cbf22964a35910bd3</anchor>
      <arglist>(const WLength &amp;offset, WFlags&lt; Side &gt; sides=AllSides) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WLength</type>
      <name>offset</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>a6fa9b61427a957d94985297e0757c4a1</anchor>
      <arglist>(Side s) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>resize</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>a35a9305fa8a8368b1e59e473ef036a8a</anchor>
      <arglist>(const WLength &amp;width, const WLength &amp;height) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WLength</type>
      <name>width</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>a06c7f6f83783f49e03fa17c934fc46a8</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WLength</type>
      <name>height</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>aa960e502a32c13906402cc6858218cfa</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setMinimumSize</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>a854d61bfd2af3bd380a7bea83e133304</anchor>
      <arglist>(const WLength &amp;width, const WLength &amp;height) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WLength</type>
      <name>minimumWidth</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>a0b43ec531b34d8b778afa5c30cacf8f0</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WLength</type>
      <name>minimumHeight</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>a9c9d5943f9f5e37d26985405f52c27f4</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setMaximumSize</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>ab7860cdc13db85aaeb5f57f19b8ae14c</anchor>
      <arglist>(const WLength &amp;width, const WLength &amp;height) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WLength</type>
      <name>maximumWidth</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>af5dfe67169844b9e911de8c9ee6a69d7</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WLength</type>
      <name>maximumHeight</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>af40dc23270fcf911ae3cefd3b5022d8b</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setLineHeight</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>a7b16eb2d264a7a1d276b7f71fc4f8cc6</anchor>
      <arglist>(const WLength &amp;height) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WLength</type>
      <name>lineHeight</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>a7bcf4678ca024e2d8d4e65aa12ed9850</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setFloatSide</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>a1530be93d9f0c23ca098bc3f35ee8877</anchor>
      <arglist>(Side s) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Side</type>
      <name>floatSide</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>a9b444c94c0b42addbe5948113ed273e8</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setClearSides</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>a1146658145f09dc03de2d087cdcfc376</anchor>
      <arglist>(WFlags&lt; Side &gt; sides) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WFlags&lt; Side &gt;</type>
      <name>clearSides</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>a17c34611ac2769f71cff9e72b6b9cfc3</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setMargin</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>a098c4700282e690e30258d817fb76594</anchor>
      <arglist>(const WLength &amp;margin, WFlags&lt; Side &gt; sides=AllSides) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WLength</type>
      <name>margin</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>ac82d84167f789d6f443ddf4c723c092c</anchor>
      <arglist>(Side side) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setHiddenKeepsGeometry</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>a1f64158a7a5f7b480da66d9d10f22d27</anchor>
      <arglist>(bool enabled) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>hiddenKeepsGeometry</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>a803749e34dc5e5b036369ca73d06d6ea</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setHidden</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>af220b0cbf6668307a578c1f3c5174d8a</anchor>
      <arglist>(bool hidden, const WAnimation &amp;animation=WAnimation()) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isHidden</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>a7cfc634e492d8a803c509e6865b428a0</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isVisible</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>ae56b5b5abbdbfd203cc4e9e931b97a73</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setDisabled</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>a9602c6d8d044adaa6fa04346d469c322</anchor>
      <arglist>(bool disabled) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isDisabled</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>a14f20a7d70558ceb83f52dabf201888a</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isEnabled</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>a5e04a29f20d1e311370198a6fae2e9d2</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setPopup</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>a354ecdc80d64b1a3f7b1f5f471c6578f</anchor>
      <arglist>(bool popup) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isPopup</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>a7e842563ff3e2ba334f968683f64c5d1</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setInline</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>a979c519c8053156c7c0b9018d14dfa25</anchor>
      <arglist>(bool isInline) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isInline</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>a64c51e59980dddc73d8c02955d34ca4c</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setDecorationStyle</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>a0f758bb22f5b115dba0f05842b655874</anchor>
      <arglist>(const WCssDecorationStyle &amp;style) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WCssDecorationStyle &amp;</type>
      <name>decorationStyle</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>afa82846a10bd38c0f3ff68d5666ee042</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setStyleClass</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>a7a3437c7e9ed586cc55366908cbc6711</anchor>
      <arglist>(const WString &amp;styleClass) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WString</type>
      <name>styleClass</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>a4506eaaa18fd72b18cec7cca6bec9e35</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>addStyleClass</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>acb2af194ae1cd09839e21f1f4e0873c5</anchor>
      <arglist>(const WString &amp;styleClass, bool force=false) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>removeStyleClass</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>ac0b8b3581ec4d433dcb1767f6f106cec</anchor>
      <arglist>(const WString &amp;styleClass, bool force=false) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>hasStyleClass</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>a893c26965e2b015cff89f9dd48f8791a</anchor>
      <arglist>(const WString &amp;styleClass) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setVerticalAlignment</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>a369f59a79a55afd7fb386bfc99424c8b</anchor>
      <arglist>(AlignmentFlag alignment, const WLength &amp;length=WLength()) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual AlignmentFlag</type>
      <name>verticalAlignment</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>a5ae19f3c7f868278d324d20febe90766</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WLength</type>
      <name>verticalAlignmentLength</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>a56bf9d651883f6992e57807311ff5539</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setToolTip</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>ad7cd7fae6c991a01ac5778896d071b17</anchor>
      <arglist>(const WString &amp;text, TextFormat textFormat=TextFormat::Plain) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setDeferredToolTip</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>aab89bbccba73fa59d0ebc069b3fd727c</anchor>
      <arglist>(bool enable, TextFormat textFormat=TextFormat::Plain) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WString</type>
      <name>toolTip</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>a1587388dcb32f04297d7841df51e5123</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>refresh</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>a731902290052450785585ab05b862c0c</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttributeValue</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>a16b8162741f8142e1511e54316a1f346</anchor>
      <arglist>(const std::string &amp;name, const WString &amp;value) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WString</type>
      <name>attributeValue</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>aba5947916eef5e42c21b32823f5b183f</anchor>
      <arglist>(const std::string &amp;name) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setJavaScriptMember</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>a6b0e20af6f04b98ee65ef1fde7d04a63</anchor>
      <arglist>(const std::string &amp;name, const std::string &amp;value) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>javaScriptMember</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>a82c8aaf79f702160458d2fafac6a4445</anchor>
      <arglist>(const std::string &amp;name) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>callJavaScriptMember</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>acb4eb484e9fd07e663dbd01c7b675218</anchor>
      <arglist>(const std::string &amp;name, const std::string &amp;args) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>load</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>ab76a636d5497a58f44e8ef116c8734ef</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>loaded</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>af45b320e385883b5bef21a496df1324d</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setId</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>a11d905cc08d699ae83e93500ce9b7e73</anchor>
      <arglist>(const std::string &amp;id) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WWidget *</type>
      <name>find</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>a7fac4504d94a81edfc329f973235669f</anchor>
      <arglist>(const std::string &amp;name) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WWidget *</type>
      <name>findById</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>aebc4bbdaa3c1242b9487a88ca689a24e</anchor>
      <arglist>(const std::string &amp;id) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setSelectable</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>aa140064593fa5f47ebdf26fcf71c4948</anchor>
      <arglist>(bool selectable) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>doJavaScript</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>a7601cc788987adc442c83f73769011e1</anchor>
      <arglist>(const std::string &amp;javascript) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const std::string</type>
      <name>id</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>ae41d8f59dee2c84f26cc2195e429f2f7</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLoadLaterWhenInvisible</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>a54e7472ec270ebae46d4196558c994e1</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>htmlTagName</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>a97226b4df655fd4c377fdb997a961ed2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setHtmlTagName</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>adf6034e0e715138cae479eae6e324ce6</anchor>
      <arglist>(const std::string &amp;tag)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setCanReceiveFocus</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>a38e8f7d7dcab020465419d3c4eb50aee</anchor>
      <arglist>(bool enabled) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>canReceiveFocus</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>a7daf0b5557b7dad299f97ee3fc020c60</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>setFirstFocus</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>a01b3cf378cc5250bf118aa052a8f2494</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setFocus</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>acd09027da46996590a85770261ad57ed</anchor>
      <arglist>(bool focus) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>hasFocus</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>a4aa54157e0d26a762cbda41c0fb39dbb</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setTabIndex</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>a4c2e4c50c1fd823806f0c0d3d305027f</anchor>
      <arglist>(int index) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>tabIndex</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>acd502eaba3284dbefd02b356697c6e08</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>EventSignal &amp;</type>
      <name>blurred</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>a3a9ad8b3fac37d064bf615b2c6a53f75</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EventSignal &amp;</type>
      <name>focussed</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>ae33de6853f17057cb6a8ff06a160b14d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>scrollVisibilityEnabled</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>a49bc8f2fcb1926a94ccc286ad7b65953</anchor>
      <arglist>() const final override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setScrollVisibilityEnabled</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>af0e9a8e2a8697fd2f2ddd0bf6c400382</anchor>
      <arglist>(bool enabled) final override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>scrollVisibilityMargin</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>ac3c0fa2176d6b8591b0298494204b8e7</anchor>
      <arglist>() const final override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setScrollVisibilityMargin</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>a19f7d3cdf6eb92394fb925f4f130da3c</anchor>
      <arglist>(int margin) final override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Signal&lt; bool &gt; &amp;</type>
      <name>scrollVisibilityChanged</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>a42d21ca3340cfd063dbc9c830a473560</anchor>
      <arglist>() final override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isScrollVisible</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>a305434dd7eb8aee741ef840049e2e4de</anchor>
      <arglist>() const final override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThemeStyleEnabled</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>a267abb34255b24857d2bd47906ea67ab</anchor>
      <arglist>(bool enabled) final override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isThemeStyleEnabled</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>adf2aeae369596b3451342884bb46c266</anchor>
      <arglist>() const final override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setObjectName</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>ad6bd3d76a35b657f77f0ffba4d389ce1</anchor>
      <arglist>(const std::string &amp;name) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFocus</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>a49b5c27de386b34ab0eecb712864a3a8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>virtual void</type>
      <name>setFocus</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>aee0ea3cc14a53876cbae5b4f95813a3a</anchor>
      <arglist>(bool focus)=0</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>jsStringLiteral</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>ac16a45afe8380daa57e5600aadf53a52</anchor>
      <arglist>(const std::string &amp;v, char delimiter=&apos;\&apos;&apos;)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>propagateSetEnabled</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>ad5cb0aac9ca557f87753096c566d9e70</anchor>
      <arglist>(bool enabled) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>enableAjax</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>add6b9bc57a382bf795ec26383b882776</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual WStatelessSlot *</type>
      <name>getStateless</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>a1bd4a1ac3d9bb297d050a7e28245be2f</anchor>
      <arglist>(Method method) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>render</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>a7f182f99b2d0ac6675676a613f6b1bdb</anchor>
      <arglist>(WFlags&lt; RenderFlag &gt; flags) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WWidget</name>
    <filename>classWt_1_1WWidget.html</filename>
    <base>Wt::WObject</base>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~WWidget</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>acbe32dd454131720fa9712bc866efb4b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>WWidget *</type>
      <name>parent</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>a558ebea600669253ccc2bfa64472cc4e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::vector&lt; WWidget * &gt;</type>
      <name>children</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>a898b4fb679877962612e4e4d207a953d</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::unique_ptr&lt; WWidget &gt;</type>
      <name>removeWidget</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>a3daab3808c96956d30bc1045c379f407</anchor>
      <arglist>(WWidget *widget)</arglist>
    </member>
    <member kind="function">
      <type>std::unique_ptr&lt; Widget &gt;</type>
      <name>removeWidget</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>a1f5151154770b4956b4870cb4ecc38d3</anchor>
      <arglist>(Widget *widget)</arglist>
    </member>
    <member kind="function">
      <type>std::unique_ptr&lt; WWidget &gt;</type>
      <name>removeFromParent</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>a91644ec82ca9c07b6cd3f07243693fd1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setPositionScheme</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>ae15ffe92fdc5c394013d61b5bebb2f11</anchor>
      <arglist>(PositionScheme scheme)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual PositionScheme</type>
      <name>positionScheme</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>aea3a7c21d936d34f28b42143aba4edd5</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setOffsets</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>a730c10f642915f724f616ad4bebd2fca</anchor>
      <arglist>(const WLength &amp;offset, WFlags&lt; Side &gt; sides=AllSides)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual WLength</type>
      <name>offset</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>a08e07b6d0ca355a3fe2c7dead3dde228</anchor>
      <arglist>(Side side) const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>resize</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>a5bebad8f1582b8bebf01a9ed0ee11972</anchor>
      <arglist>(const WLength &amp;width, const WLength &amp;height)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual WLength</type>
      <name>width</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>a3f423e20a9b0792c1bc3d52899065e82</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setWidth</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>afc4bfcc92fa39010cac8775f3332dfa5</anchor>
      <arglist>(const WLength &amp;width)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual WLength</type>
      <name>height</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>a9454454144fe3729378c87c3b90372b4</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setHeight</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>a7d82ee32496743fdd28b30461f95d5ec</anchor>
      <arglist>(const WLength &amp;height)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setMinimumSize</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>a092c7d1ecfde7f004ef120389d91775d</anchor>
      <arglist>(const WLength &amp;width, const WLength &amp;height)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual WLength</type>
      <name>minimumWidth</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>af5847c8028f501b51d74184107ccdde6</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual WLength</type>
      <name>minimumHeight</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>a411b6bbac918eeb19946d65c4352beb1</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setMaximumSize</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>af023064cf8007bda6baeb5277d79bbd9</anchor>
      <arglist>(const WLength &amp;width, const WLength &amp;height)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual WLength</type>
      <name>maximumWidth</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>a733c78b3d54dc355adf6ee05c69bf219</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual WLength</type>
      <name>maximumHeight</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>af2f6d29c4e5a88bdd12a180e125490cd</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>positionAt</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>a3ecf5066f68ca28d2c09c6c2e3c47029</anchor>
      <arglist>(const WWidget *widget, Orientation orientation=Orientation::Vertical)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setLineHeight</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>a0763f0e672e5cf673141405dc8e796bb</anchor>
      <arglist>(const WLength &amp;height)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual WLength</type>
      <name>lineHeight</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>a162f32ce7482e7c3121d18585555909a</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setFloatSide</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>a2915d313e6934173c087bf8212024289</anchor>
      <arglist>(Side s)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Side</type>
      <name>floatSide</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>a78041b1bcd9b811fa4771d19005a585a</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setClearSides</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>a1919e2e3628bb4e4b74517605b5062c5</anchor>
      <arglist>(WFlags&lt; Side &gt; sides)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual WFlags&lt; Side &gt;</type>
      <name>clearSides</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>a7657fb67f7ec42b7374b7f64f85e6030</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setMargin</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>a058b4e5641f41d3fa9a50bfa6f339408</anchor>
      <arglist>(const WLength &amp;margin, WFlags&lt; Side &gt; sides=AllSides)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual WLength</type>
      <name>margin</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>a8b7c40b966518e22543d290229fbd29f</anchor>
      <arglist>(Side side) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setHiddenKeepsGeometry</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>a8cd985ab1dfcee828c7b6189a7e052a5</anchor>
      <arglist>(bool enabled)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>hiddenKeepsGeometry</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>ac556bf0e3087b238a98f25b77b9d529c</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setHidden</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>a66bdda41220267a8c7ff9865996e2675</anchor>
      <arglist>(bool hidden, const WAnimation &amp;animation=WAnimation())=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isHidden</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>a76a29fd7fa9fa9a6e15e3a450f24a381</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isVisible</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>a450f94dc5a28737625cdb6bde3fdc788</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setDisabled</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>ae29fe35b633ec166f922419cd3ca9d96</anchor>
      <arglist>(bool disabled)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isDisabled</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>a8c806a873adad31035122a3b465d3da2</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isEnabled</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>ae091783ebd393c04f026133069b874d3</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setPopup</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>a3890a2ef04571b6d36e7468583457091</anchor>
      <arglist>(bool popup)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isPopup</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>a29f3361a8c518dabc1251892da55dd6d</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setInline</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>ac78e3af143883334c82031790c87416e</anchor>
      <arglist>(bool inlined)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isInline</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>afa7a21fbd173d6ee83c2aa9cc11e2ac1</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setDecorationStyle</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>a091e1fb88d9bbd8818d061af43c618b4</anchor>
      <arglist>(const WCssDecorationStyle &amp;style)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual WCssDecorationStyle &amp;</type>
      <name>decorationStyle</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>ac1833c7c01599b3733712ab0bf3c3a0a</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setStyleClass</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>a4be23ecf48d5968efb5d926e38e01708</anchor>
      <arglist>(const WString &amp;styleClass)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual WString</type>
      <name>styleClass</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>ad5a84cacbaa1e4da97f7ba68de060330</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>addStyleClass</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>abb5949e98f47edb7db98d7b6df07a31c</anchor>
      <arglist>(const WString &amp;styleClass, bool force=false)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>removeStyleClass</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>a3b8a35e37ef06c408f346c63a5f1aa8e</anchor>
      <arglist>(const WString &amp;styleClass, bool force=false)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>toggleStyleClass</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>a3a51345ee7c069332a51ab32c727b228</anchor>
      <arglist>(const WString &amp;styleClass, bool add, bool force=false)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>hasStyleClass</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>a8ab2247be94a1a5fcd5f4eb64b840c72</anchor>
      <arglist>(const WString &amp;styleClass) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setVerticalAlignment</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>a4f911e2f62cf35c34cb603eaca0d9a3f</anchor>
      <arglist>(AlignmentFlag alignment, const WLength &amp;length=WLength::Auto)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual AlignmentFlag</type>
      <name>verticalAlignment</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>a0ae4522f15e80ff00d246a19604f6c7f</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual WLength</type>
      <name>verticalAlignmentLength</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>a9faaa6c2b46c0adf6606ad1496c4e52b</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setToolTip</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>a918513c29a40b49e60c5735017db05ed</anchor>
      <arglist>(const WString &amp;text, TextFormat textFormat=TextFormat::Plain)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual WString</type>
      <name>toolTip</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>ae67a8d8c573e44f02ab165fe80b2eec6</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setDeferredToolTip</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>a56d7a2d9eb49b14151410e3e894ba74e</anchor>
      <arglist>(bool enable, TextFormat textFormat=TextFormat::Plain)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>refresh</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>a15e1efb1c2e1030a3ad9565ef7fb0e15</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>jsRef</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>a83a186d2feacfbfbdb5b54f4cefc6735</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setAttributeValue</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>ad629ef6b7b9bc84999ff31dc0f2f3a12</anchor>
      <arglist>(const std::string &amp;name, const WString &amp;value)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual WString</type>
      <name>attributeValue</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>a44679c4df92658912866d5a0469bbe95</anchor>
      <arglist>(const std::string &amp;name) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setJavaScriptMember</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>ab876fc1b7d2e4e5dfc631e380d406ae2</anchor>
      <arglist>(const std::string &amp;name, const std::string &amp;value)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>javaScriptMember</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>a78a539cfd49a8927a196de66362c37e9</anchor>
      <arglist>(const std::string &amp;name) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>callJavaScriptMember</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>ac9839a243ba5f98e7962d1c0dfc20813</anchor>
      <arglist>(const std::string &amp;name, const std::string &amp;args)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>load</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>a1ee433705523b2b79c4c3539e0852c92</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>loaded</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>a1aa5c2496715bb582a584ebcdd97a6d0</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setCanReceiveFocus</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>af8cc593162ec1ace01a0640d0759cc13</anchor>
      <arglist>(bool enabled)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>canReceiveFocus</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>aa66f7106435c5418ba986909a00ee8f1</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFocus</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>a49b5c27de386b34ab0eecb712864a3a8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setFocus</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>aee0ea3cc14a53876cbae5b4f95813a3a</anchor>
      <arglist>(bool focus)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>setFirstFocus</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>abd90289445621c396c115c1ce432421c</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>hasFocus</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>aadb0341b96ce0f5adc7cc77607f67791</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setTabIndex</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>aeca7e1e9852d83067b3834078378f22d</anchor>
      <arglist>(int index)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>tabIndex</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>ac8e874a86853e3e230e2cee1a7a153c4</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>acceptDrops</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>aebee4b24e8128c08ae4aa3682adf6d8f</anchor>
      <arglist>(const std::string &amp;mimeType, const WString &amp;hoverStyleClass=WString())</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>stopAcceptDrops</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>a89e4d70592dd34c277923cb793f73b66</anchor>
      <arglist>(const std::string &amp;mimeType)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setId</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>a93ff9d1ca04e733cd54cd40a06775f7e</anchor>
      <arglist>(const std::string &amp;id)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual WWidget *</type>
      <name>find</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>a96e9c88d9ed79acccf3edf2bb00c0126</anchor>
      <arglist>(const std::string &amp;name)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual WWidget *</type>
      <name>findById</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>a09f82368dc39c9a67787727798c12004</anchor>
      <arglist>(const std::string &amp;id)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>htmlText</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>aaae07190fb97d856149226ea315a75d0</anchor>
      <arglist>(std::ostream &amp;out)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setSelectable</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>a3ccd308793bbf124aa2aeebfb1b4f42e</anchor>
      <arglist>(bool selectable)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>doJavaScript</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>a2a8afe6d6f85af864df5cbd49ff6a0c5</anchor>
      <arglist>(const std::string &amp;js)=0</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isRendered</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>a7bffb7966160ff8a58fff9d31ef21078</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>hide</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>a0825c3ccbd4999afc1a88fafa6aa6fc7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>animateHide</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>a0c236e179d5b63c3c6e98cc69e28c9bf</anchor>
      <arglist>(const WAnimation &amp;animation)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>show</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>a52dcef5a385ddfa0a8c3e6c20000f181</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>animateShow</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>af01fbd9de70abd189c2f86171b6a1e02</anchor>
      <arglist>(const WAnimation &amp;animation)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>enable</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>ae6935d8baca9d37dd1d080b4383da87c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>disable</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>a5f68ea0ab29adfb8e559153fca281e03</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>layoutSizeAware</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>a3d97f2ffd0dbc18dff0584b1c32128d6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>scrollVisibilityEnabled</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>adda330649cf8a60d61fcf2604c5efcf6</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setScrollVisibilityEnabled</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>a5d403e0390841df77a23445b28044d5d</anchor>
      <arglist>(bool enabled)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>scrollVisibilityMargin</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>a1c96147342b1295e0243b5e2e6e28f66</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setScrollVisibilityMargin</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>a57f77dcf800b37f03cfe7fea0d6f90cc</anchor>
      <arglist>(int margin)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Signal&lt; bool &gt; &amp;</type>
      <name>scrollVisibilityChanged</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>aa5ce605dd465e06f3e3c2dbce2a4098e</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isScrollVisible</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>a0feab16b8797b4f023aafd7e33ffef26</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setThemeStyleEnabled</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>ae1e28bff803905ca8625c1fb722f3d21</anchor>
      <arglist>(bool enabled)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isThemeStyleEnabled</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>a979e3986782d2106f0f502ae20d08a73</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static WString</type>
      <name>tr</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>aa651f107ec7cf080faef6c435705fc44</anchor>
      <arglist>(const char *key)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setLayoutSizeAware</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>a4f83592912a7f8fa4fd35dadde78ee74</anchor>
      <arglist>(bool sizeAware)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>layoutSizeChanged</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>af432588db3d599f89b54121f2ede8d63</anchor>
      <arglist>(int width, int height)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>WWidget</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>a01c10ec9ee5b65747d7cc6b87b990b70</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>dropEvent</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>ac436c4b99710b9199a9df3a8b4151a69</anchor>
      <arglist>(WDropEvent dropEvent)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>enableAjax</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>a919a4eaf68ff52f06f6a726d55dfb768</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual int</type>
      <name>boxPadding</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>a3f85e1c3c288d757d05c7a14da35f08a</anchor>
      <arglist>(Orientation orientation) const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual int</type>
      <name>boxBorder</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>a2147e71ed2385d3d048a6bf76dfa46bc</anchor>
      <arglist>(Orientation orientation) const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>propagateSetEnabled</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>a2ac5699f1624b16d8ce6caf8086d6d31</anchor>
      <arglist>(bool enabled)=0</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>scheduleRender</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>a5d3d4edaafa2d7c892a5078f3df4cf11</anchor>
      <arglist>(WFlags&lt; RepaintFlag &gt; flags=None)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>render</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>a356023ee1f75bc14c84fd7251a375224</anchor>
      <arglist>(WFlags&lt; RenderFlag &gt; flags)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual WStatelessSlot *</type>
      <name>getStateless</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>a1ebb267a3291d30b8f8244773d49eb3c</anchor>
      <arglist>(Method method) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WWidgetItem</name>
    <filename>classWt_1_1WWidgetItem.html</filename>
    <base>Wt::WLayoutItem</base>
    <member kind="function">
      <type></type>
      <name>WWidgetItem</name>
      <anchorfile>classWt_1_1WWidgetItem.html</anchorfile>
      <anchor>a5dccda0742cc7daa3392f097329aa35d</anchor>
      <arglist>(std::unique_ptr&lt; WWidget &gt; widget)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WWidget *</type>
      <name>widget</name>
      <anchorfile>classWt_1_1WWidgetItem.html</anchorfile>
      <anchor>a7b0b0383dc4e17f5d5885fa1d72cfd20</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WLayout *</type>
      <name>layout</name>
      <anchorfile>classWt_1_1WWidgetItem.html</anchorfile>
      <anchor>ac2fed4289b0948270c17da4f7b2b1b5e</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WLayout *</type>
      <name>parentLayout</name>
      <anchorfile>classWt_1_1WWidgetItem.html</anchorfile>
      <anchor>ae6d5186d6918d1a2c2481f62e2accece</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WWidgetItem *</type>
      <name>findWidgetItem</name>
      <anchorfile>classWt_1_1WWidgetItem.html</anchorfile>
      <anchor>a735fb2caafebff3ef85df2ce818a7528</anchor>
      <arglist>(WWidget *widget) override</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual void</type>
      <name>setParentWidget</name>
      <anchorfile>classWt_1_1WWidgetItem.html</anchorfile>
      <anchor>a9dbc709e8b8b7166285c272eba0e7fe4</anchor>
      <arglist>(WWidget *parent) override</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual void</type>
      <name>setParentLayout</name>
      <anchorfile>classWt_1_1WWidgetItem.html</anchorfile>
      <anchor>ab7fbb292458c3292d2b0c2479b4b3178</anchor>
      <arglist>(WLayout *layout) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WWidgetItemImpl</name>
    <filename>classWt_1_1WWidgetItemImpl.html</filename>
    <base>Wt::WLayoutItemImpl</base>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~WWidgetItemImpl</name>
      <anchorfile>classWt_1_1WWidgetItemImpl.html</anchorfile>
      <anchor>af5f1355d9e0c899016ab8a19bffd05ff</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Wt</name>
    <filename>namespaceWt.html</filename>
    <namespace>Wt::Auth</namespace>
    <namespace>Wt::Chart</namespace>
    <namespace>Wt::Core</namespace>
    <namespace>Wt::Dbo</namespace>
    <namespace>Wt::Http</namespace>
    <namespace>Wt::Json</namespace>
    <namespace>Wt::Mail</namespace>
    <namespace>Wt::Payment</namespace>
    <namespace>Wt::Render</namespace>
    <namespace>Wt::Utils</namespace>
    <class kind="struct">Wt::any_traits</class>
    <class kind="struct">Wt::Coordinates</class>
    <class kind="class">Wt::DomElement</class>
    <class kind="class">Wt::EventSignal</class>
    <class kind="class">Wt::EventSignalBase</class>
    <class kind="class">Wt::ItemDataRole</class>
    <class kind="class">Wt::JSignal</class>
    <class kind="class">Wt::JSlot</class>
    <class kind="class">Wt::LocalizedString</class>
    <class kind="struct">Wt::PathSegment</class>
    <class kind="class">Wt::PopupWindow</class>
    <class kind="class">Wt::Signal</class>
    <class kind="class">Wt::SignalBase</class>
    <class kind="class">Wt::Touch</class>
    <class kind="class">Wt::WAbstractArea</class>
    <class kind="class">Wt::WAbstractItemDelegate</class>
    <class kind="class">Wt::WAbstractItemModel</class>
    <class kind="class">Wt::WAbstractItemView</class>
    <class kind="class">Wt::WAbstractListModel</class>
    <class kind="class">Wt::WAbstractMedia</class>
    <class kind="class">Wt::WAbstractProxyModel</class>
    <class kind="class">Wt::WAbstractSpinBox</class>
    <class kind="class">Wt::WAbstractTableModel</class>
    <class kind="class">Wt::WAbstractToggleButton</class>
    <class kind="class">Wt::WAggregateProxyModel</class>
    <class kind="class">Wt::WAnchor</class>
    <class kind="class">Wt::WAnimation</class>
    <class kind="class">Wt::WApplication</class>
    <class kind="class">Wt::WAudio</class>
    <class kind="class">Wt::WBatchEditProxyModel</class>
    <class kind="class">Wt::WBootstrapTheme</class>
    <class kind="class">Wt::WBorder</class>
    <class kind="class">Wt::WBorderLayout</class>
    <class kind="class">Wt::WBoxLayout</class>
    <class kind="class">Wt::WBreak</class>
    <class kind="class">Wt::WBrush</class>
    <class kind="class">Wt::WButtonGroup</class>
    <class kind="class">Wt::WCalendar</class>
    <class kind="class">Wt::WCanvasPaintDevice</class>
    <class kind="class">Wt::WCheckBox</class>
    <class kind="class">Wt::WCircleArea</class>
    <class kind="class">Wt::WColor</class>
    <class kind="class">Wt::WColorPicker</class>
    <class kind="class">Wt::WCombinedLocalizedStrings</class>
    <class kind="class">Wt::WComboBox</class>
    <class kind="class">Wt::WCompositeWidget</class>
    <class kind="class">Wt::WContainerWidget</class>
    <class kind="class">Wt::WCssDecorationStyle</class>
    <class kind="class">Wt::WCssRule</class>
    <class kind="class">Wt::WCssStyleSheet</class>
    <class kind="class">Wt::WCssTemplateRule</class>
    <class kind="class">Wt::WCssTextRule</class>
    <class kind="class">Wt::WCssTheme</class>
    <class kind="class">Wt::WDate</class>
    <class kind="class">Wt::WDateEdit</class>
    <class kind="class">Wt::WDatePicker</class>
    <class kind="class">Wt::WDateTime</class>
    <class kind="class">Wt::WDateValidator</class>
    <class kind="class">Wt::WDefaultLoadingIndicator</class>
    <class kind="class">Wt::WDialog</class>
    <class kind="class">Wt::WDoubleSpinBox</class>
    <class kind="class">Wt::WDoubleValidator</class>
    <class kind="class">Wt::WDropEvent</class>
    <class kind="class">Wt::WEnvironment</class>
    <class kind="class">Wt::WEvent</class>
    <class kind="class">Wt::WException</class>
    <class kind="class">Wt::WFileDropWidget</class>
    <class kind="class">Wt::WFileResource</class>
    <class kind="class">Wt::WFileUpload</class>
    <class kind="class">Wt::WFitLayout</class>
    <class kind="class">Wt::WFlags</class>
    <class kind="class">Wt::WFlashObject</class>
    <class kind="class">Wt::WFont</class>
    <class kind="class">Wt::WFontMetrics</class>
    <class kind="class">Wt::WFormModel</class>
    <class kind="class">Wt::WFormWidget</class>
    <class kind="class">Wt::WGenericMatrix</class>
    <class kind="class">Wt::WGestureEvent</class>
    <class kind="class">Wt::WGLWidget</class>
    <class kind="class">Wt::WGoogleMap</class>
    <class kind="class">Wt::WGradient</class>
    <class kind="class">Wt::WGridLayout</class>
    <class kind="class">Wt::WGroupBox</class>
    <class kind="class">Wt::WHBoxLayout</class>
    <class kind="class">Wt::WIconPair</class>
    <class kind="class">Wt::WIdentityProxyModel</class>
    <class kind="class">Wt::WImage</class>
    <class kind="class">Wt::WInPlaceEdit</class>
    <class kind="class">Wt::WInteractWidget</class>
    <class kind="class">Wt::WIntValidator</class>
    <class kind="class">Wt::WIOService</class>
    <class kind="class">Wt::WItemDelegate</class>
    <class kind="class">Wt::WItemSelectionModel</class>
    <class kind="class">Wt::WJavaScriptExposableObject</class>
    <class kind="class">Wt::WJavaScriptHandle</class>
    <class kind="class">Wt::WKeyEvent</class>
    <class kind="class">Wt::WLabel</class>
    <class kind="class">Wt::WLayout</class>
    <class kind="class">Wt::WLayoutImpl</class>
    <class kind="class">Wt::WLayoutItem</class>
    <class kind="class">Wt::WLayoutItemImpl</class>
    <class kind="class">Wt::WLeafletMap</class>
    <class kind="class">Wt::WLength</class>
    <class kind="class">Wt::WLengthValidator</class>
    <class kind="class">Wt::WLineEdit</class>
    <class kind="class">Wt::WLineF</class>
    <class kind="class">Wt::WLink</class>
    <class kind="class">Wt::WLinkedCssStyleSheet</class>
    <class kind="class">Wt::WLoadingIndicator</class>
    <class kind="class">Wt::WLocalDateTime</class>
    <class kind="class">Wt::WLocale</class>
    <class kind="class">Wt::WLocalizedStrings</class>
    <class kind="class">Wt::WLogEntry</class>
    <class kind="class">Wt::WLogger</class>
    <class kind="class">Wt::WLogSink</class>
    <class kind="class">Wt::WMatrix4x4</class>
    <class kind="class">Wt::WMeasurePaintDevice</class>
    <class kind="class">Wt::WMediaPlayer</class>
    <class kind="class">Wt::WMemoryResource</class>
    <class kind="class">Wt::WMenu</class>
    <class kind="class">Wt::WMenuItem</class>
    <class kind="class">Wt::WMessageBox</class>
    <class kind="class">Wt::WMessageResourceBundle</class>
    <class kind="class">Wt::WModelIndex</class>
    <class kind="class">Wt::WMouseEvent</class>
    <class kind="class">Wt::WNavigationBar</class>
    <class kind="class">Wt::WObject</class>
    <class kind="class">Wt::WOverlayLoadingIndicator</class>
    <class kind="class">Wt::WPaintDevice</class>
    <class kind="class">Wt::WPaintedWidget</class>
    <class kind="class">Wt::WPainter</class>
    <class kind="class">Wt::WPainterPath</class>
    <class kind="class">Wt::WPanel</class>
    <class kind="class">Wt::WPdfImage</class>
    <class kind="class">Wt::WPen</class>
    <class kind="class">Wt::WPoint</class>
    <class kind="class">Wt::WPointF</class>
    <class kind="class">Wt::WPolygonArea</class>
    <class kind="class">Wt::WPopupMenu</class>
    <class kind="class">Wt::WPopupWidget</class>
    <class kind="class">Wt::WProgressBar</class>
    <class kind="class">Wt::WPushButton</class>
    <class kind="class">Wt::WRadioButton</class>
    <class kind="class">Wt::WRandom</class>
    <class kind="class">Wt::WRasterImage</class>
    <class kind="class">Wt::WReadOnlyProxyModel</class>
    <class kind="class">Wt::WRectArea</class>
    <class kind="class">Wt::WRectF</class>
    <class kind="class">Wt::WRegExpValidator</class>
    <class kind="class">Wt::WResource</class>
    <class kind="class">Wt::WScrollEvent</class>
    <class kind="class">Wt::WSelectionBox</class>
    <class kind="class">Wt::WServer</class>
    <class kind="class">Wt::WShadow</class>
    <class kind="class">Wt::WSlider</class>
    <class kind="class">Wt::WSocketNotifier</class>
    <class kind="class">Wt::WSortFilterProxyModel</class>
    <class kind="class">Wt::WSound</class>
    <class kind="class">Wt::WSpinBox</class>
    <class kind="class">Wt::WSplitButton</class>
    <class kind="class">Wt::WSslCertificate</class>
    <class kind="class">Wt::WSslInfo</class>
    <class kind="class">Wt::WStackedWidget</class>
    <class kind="class">Wt::WStandardItem</class>
    <class kind="class">Wt::WStandardItemModel</class>
    <class kind="class">Wt::WStaticModelView</class>
    <class kind="class">Wt::WStreamResource</class>
    <class kind="class">Wt::WString</class>
    <class kind="class">Wt::WStringListModel</class>
    <class kind="class">Wt::WStringStream</class>
    <class kind="class">Wt::WSuggestionPopup</class>
    <class kind="class">Wt::WSvgImage</class>
    <class kind="class">Wt::WTable</class>
    <class kind="class">Wt::WTableCell</class>
    <class kind="class">Wt::WTableColumn</class>
    <class kind="class">Wt::WTableRow</class>
    <class kind="class">Wt::WTableView</class>
    <class kind="class">Wt::WTabWidget</class>
    <class kind="class">Wt::WTemplate</class>
    <class kind="class">Wt::WTemplateFormView</class>
    <class kind="class">Wt::WText</class>
    <class kind="class">Wt::WTextArea</class>
    <class kind="class">Wt::WTextEdit</class>
    <class kind="class">Wt::WTextItem</class>
    <class kind="class">Wt::WTheme</class>
    <class kind="class">Wt::WTime</class>
    <class kind="class">Wt::WTimeEdit</class>
    <class kind="class">Wt::WTimer</class>
    <class kind="class">Wt::WTimeValidator</class>
    <class kind="class">Wt::WToolBar</class>
    <class kind="class">Wt::WTouchEvent</class>
    <class kind="class">Wt::WTransform</class>
    <class kind="class">Wt::WTree</class>
    <class kind="class">Wt::WTreeNode</class>
    <class kind="class">Wt::WTreeTable</class>
    <class kind="class">Wt::WTreeTableNode</class>
    <class kind="class">Wt::WTreeView</class>
    <class kind="class">Wt::WValidator</class>
    <class kind="class">Wt::WVBoxLayout</class>
    <class kind="class">Wt::WVectorImage</class>
    <class kind="class">Wt::WVideo</class>
    <class kind="class">Wt::WViewWidget</class>
    <class kind="class">Wt::WVirtualImage</class>
    <class kind="class">Wt::WVmlImage</class>
    <class kind="class">Wt::WWebWidget</class>
    <class kind="class">Wt::WWidget</class>
    <class kind="class">Wt::WWidgetItem</class>
    <class kind="class">Wt::WWidgetItemImpl</class>
    <member kind="typedef">
      <type>std::set&lt; WModelIndex &gt;</type>
      <name>WModelIndexSet</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>a1ac86c224fa86a17f4ca1b52881163ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; WModelIndex &gt;</type>
      <name>WModelIndexList</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>aa6e2ba5849e4d179cd03bef189cb8b55</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ViewItemRenderFlag</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>a8df2183a957c453839f3382e3db167d6</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceWt.html" anchor="a8df2183a957c453839f3382e3db167d6a91b442d385b54e1418d81adc34871053">Selected</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a8df2183a957c453839f3382e3db167d6ab1caf7f21c1b8899e11165a6aed71af9">Editing</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a8df2183a957c453839f3382e3db167d6aa2e08e1fbbc3e1489d688eba112f7964">Focused</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a8df2183a957c453839f3382e3db167d6a4bbb8f967da6d1a610596d7257179c2b">Invalid</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>EditTrigger</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>a88f81c5ba57d9c9b8f7c052327c44284</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceWt.html" anchor="a88f81c5ba57d9c9b8f7c052327c44284a6adf97f83acf6453d4a6a4b1070f3754">None</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a88f81c5ba57d9c9b8f7c052327c44284a3cdfe59d7e493e5e900f0b3f826ab137">SingleClicked</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a88f81c5ba57d9c9b8f7c052327c44284a8b30fa45122b0d171b402273ec23de83">DoubleClicked</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a88f81c5ba57d9c9b8f7c052327c44284a94827db0044af163f0bc08ff7d72fa4a">SelectedClicked</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>EditOption</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>a736621edbd61c68fecaa1e8e9204c339</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceWt.html" anchor="a736621edbd61c68fecaa1e8e9204c339a5bf9afb235834b9815d77959173c1d86">SingleEditor</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a736621edbd61c68fecaa1e8e9204c339af557348e53ff13c61fcb93cade175270">MultipleEditors</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a736621edbd61c68fecaa1e8e9204c339a9a53d351120bb3b1c389d20fb04f0b9e">SaveWhenClosed</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a736621edbd61c68fecaa1e8e9204c339a0e0835b1b4a9440581dce9555f443074">LeaveEditorsOpen</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ScrollHint</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>ae0fdcefe4b1fefe747b5f423c020334a</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceWt.html" anchor="ae0fdcefe4b1fefe747b5f423c020334aa47ec5fd00436263c0d6b91bf575ea690">EnsureVisible</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="ae0fdcefe4b1fefe747b5f423c020334aaca7d06a88bca8cd68bf576287aeb594f">PositionAtTop</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="ae0fdcefe4b1fefe747b5f423c020334aaecc104e9a1fa0efd1cce7765e16b41f7">PositionAtBottom</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="ae0fdcefe4b1fefe747b5f423c020334aac24df9b3c15342060998943e92a61685">PositionAtCenter</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PlayerOption</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>a644ba11cbb40f89e69f4556985d636e7</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceWt.html" anchor="a644ba11cbb40f89e69f4556985d636e7a05b1dc77590105a18fc4c02526fe0c7a">Autoplay</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a644ba11cbb40f89e69f4556985d636e7a89d7b10cb4238977d2b523dfd9ea7745">Loop</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a644ba11cbb40f89e69f4556985d636e7a24b6472fcfa59cddd3f7bbc326582b5f">Controls</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>MediaPreloadMode</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>a867e137e1a6b00ae5f3c4e1d1224f290</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceWt.html" anchor="a867e137e1a6b00ae5f3c4e1d1224f290a6adf97f83acf6453d4a6a4b1070f3754">None</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a867e137e1a6b00ae5f3c4e1d1224f290a06b9281e396db002010bde1de57262eb">Auto</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a867e137e1a6b00ae5f3c4e1d1224f290ace21470ab49d1d1976bc3dc72438c183">Metadata</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>AnimationEffect</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>a3bfe71cf21641080260799c01d480ace</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceWt.html" anchor="a3bfe71cf21641080260799c01d480acea901ee4aaaf32f95da360f5c4bef55013">SlideInFromLeft</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a3bfe71cf21641080260799c01d480acea4a39e890cb648b2382bcb124e9eeb072">SlideInFromRight</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a3bfe71cf21641080260799c01d480acea510f1e21f2d898d8fbfa3f6142933ecb">SlideInFromBottom</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a3bfe71cf21641080260799c01d480acea51169ffa5826256823534bd2e5d23305">SlideInFromTop</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a3bfe71cf21641080260799c01d480acea0ae61bd0474e04c9f1195d4baa0213a0">Pop</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a3bfe71cf21641080260799c01d480acea04e0385c10aefee8e4681617d2f3ef40">Fade</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>TimingFunction</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>a7d77772e8563f8f7b71a65b7e45c4682</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceWt.html" anchor="a7d77772e8563f8f7b71a65b7e45c4682aaa6a339a669cf5c6497b27b47cdfdf8b">Ease</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a7d77772e8563f8f7b71a65b7e45c4682a32a843da6ea40ab3b17a3421ccdf671b">Linear</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a7d77772e8563f8f7b71a65b7e45c4682a477b68e0e4cd72802355d52831fee0ca">EaseIn</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a7d77772e8563f8f7b71a65b7e45c4682a4d8256186c9d4f47eb7e7b7766812bd9">EaseOut</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a7d77772e8563f8f7b71a65b7e45c4682ab5a2f8abee775e5f5f4c30e031739365">EaseInOut</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a7d77772e8563f8f7b71a65b7e45c4682aced824f3a4e9dd5feb68da4cb78a3430">CubicBezier</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>BootstrapVersion</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>aa7481dd6f7bd86d6675574dd6d5457b7</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceWt.html" anchor="aa7481dd6f7bd86d6675574dd6d5457b7a1b267619c4812cc46ee281747884ca50">v2</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="aa7481dd6f7bd86d6675574dd6d5457b7a43a03299a3c3fed3d8ce7b820f3aca81">v3</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>BorderWidth</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>a8025ef5ad895af2c38eac5218355c81c</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceWt.html" anchor="a8025ef5ad895af2c38eac5218355c81caaedfcbf06fc92bafadf4527a2fcccc69">Thin</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a8025ef5ad895af2c38eac5218355c81ca87f8a6ab85c9ced3702b4ea641ad4bb5">Medium</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a8025ef5ad895af2c38eac5218355c81ca0a908b7941c6bfd50ba866821e83cd2b">Thick</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a8025ef5ad895af2c38eac5218355c81ca9d71760e2dd451db2df354d0fd29cd7f">Explicit</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>BorderStyle</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>a7418c4ff7e51ebd0ae06e5cb6410f415</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceWt.html" anchor="a7418c4ff7e51ebd0ae06e5cb6410f415a6adf97f83acf6453d4a6a4b1070f3754">None</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a7418c4ff7e51ebd0ae06e5cb6410f415a7acdf85c69cc3c5305456a293524386e">Hidden</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a7418c4ff7e51ebd0ae06e5cb6410f415a90c09393a4c0970bc9a6703ad527781c">Dotted</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a7418c4ff7e51ebd0ae06e5cb6410f415aeb656e41b6da91494775ecf47a51da91">Dashed</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a7418c4ff7e51ebd0ae06e5cb6410f415ae41480b6bbfbf7407974a88d3d34f4fa">Solid</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a7418c4ff7e51ebd0ae06e5cb6410f415ad909d38d705ce75386dd86e611a82f5b">Double</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a7418c4ff7e51ebd0ae06e5cb6410f415aa5d7f2d1b78f9222563004a41a616334">Groove</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a7418c4ff7e51ebd0ae06e5cb6410f415ae9eeca48aa5cccacde08760c6ec9dd5a">Ridge</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a7418c4ff7e51ebd0ae06e5cb6410f415ab56d315e49178ba86341ff3b4e337c6b">Inset</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a7418c4ff7e51ebd0ae06e5cb6410f415a5e9fb94d2ec46e6f829196c229e2b194">Outset</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>LayoutPosition</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>a1d13c42097038b64de7c45060e2c4500</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceWt.html" anchor="a1d13c42097038b64de7c45060e2c4500a601560b94fbb188919dd1d36c8ab70a4">North</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a1d13c42097038b64de7c45060e2c4500aa99dc62d017d04cf67266593f9c3761e">East</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a1d13c42097038b64de7c45060e2c4500a263d7b2cf53802c9ed127b718c0bf9fd">South</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a1d13c42097038b64de7c45060e2c4500abf495fc048d8d44b7f32536df5cf3930">West</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a1d13c42097038b64de7c45060e2c4500a4f1f6016fc9f3f2353c0cc7c67b292bd">Center</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>CalendarHeaderFormat</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>a31f2e9ef5cb4c28b8f3554d00dd7367e</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceWt.html" anchor="a31f2e9ef5cb4c28b8f3554d00dd7367eac3658122ebceba714e82dd0cc02272be">SingleLetterDayNames</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a31f2e9ef5cb4c28b8f3554d00dd7367ea30b3b88856defe2f5f62a594c23643c2">ShortDayNames</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a31f2e9ef5cb4c28b8f3554d00dd7367ead64a5757df440aa443a68c894e5c64dc">LongDayNames</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Overflow</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>aadc6158874f32eb6e0a41b3a9f3f603e</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceWt.html" anchor="aadc6158874f32eb6e0a41b3a9f3f603eaec24d78ce33048dc73a2b6b1a0690192">Visible</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="aadc6158874f32eb6e0a41b3a9f3f603ea06b9281e396db002010bde1de57262eb">Auto</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="aadc6158874f32eb6e0a41b3a9f3f603ea7acdf85c69cc3c5305456a293524386e">Hidden</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="aadc6158874f32eb6e0a41b3a9f3f603ea105078d294d30c978ca2badf7f376934">Scroll</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>TextDecoration</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>a1709f88923d174d4a9d27271d3e30f28</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceWt.html" anchor="a1709f88923d174d4a9d27271d3e30f28a852721aa5fc738dfedff2945d71da439">Underline</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a1709f88923d174d4a9d27271d3e30f28aa7d7d34d28ecacfa945c78f1ae7ec675">Overline</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a1709f88923d174d4a9d27271d3e30f28a82af2588ca3d2f39f55f8dd449085372">LineThrough</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a1709f88923d174d4a9d27271d3e30f28acfad0a7419f44ea0c64db24197abbf70">Blink</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>DialogCode</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>a73f9972c2bf74bf66b455031f1603ee0</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceWt.html" anchor="a73f9972c2bf74bf66b455031f1603ee0ad37b1f6c0512e2118cee17fea015b699">Rejected</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a73f9972c2bf74bf66b455031f1603ee0a382ab522931673c11e398ead1b7b1678">Accepted</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>UserAgent</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>a0d79de497dbb0188e3420e53c776116f</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceWt.html" anchor="a0d79de497dbb0188e3420e53c776116fa88183b946cc5f0e8c96b2e66e1c74a7e">Unknown</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a0d79de497dbb0188e3420e53c776116fa760914a6135d10f19c657782bd99728c">IEMobile</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a0d79de497dbb0188e3420e53c776116faae4cfbe1d164a0f04b1e552e56ad388a">IE6</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a0d79de497dbb0188e3420e53c776116fada5ed897eea00620e3c75d158350524a">IE7</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a0d79de497dbb0188e3420e53c776116faa265226203a364ee9eae6f80edf156a1">IE8</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a0d79de497dbb0188e3420e53c776116faed4d25b5f4e351c17ed8a64492a4da3e">IE9</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a0d79de497dbb0188e3420e53c776116fa00f8491003c84ce5ffb7112a254b00d6">IE10</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a0d79de497dbb0188e3420e53c776116fab7e6e464b7ac0edf754e5579ae44e197">IE11</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a0d79de497dbb0188e3420e53c776116fae4a297a0f76119a442c2595ac040673e">Edge</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a0d79de497dbb0188e3420e53c776116faa956e985535b8d57732d14dfa0e4c71a">Opera</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a0d79de497dbb0188e3420e53c776116fa119b8b7ce4f85c72de4474823f51582e">Opera10</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a0d79de497dbb0188e3420e53c776116fac8a2a7ea1bdd4b64ba1bb76a04340d07">WebKit</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a0d79de497dbb0188e3420e53c776116fa50de9bc68c93dc32d8c7c90593471760">Safari</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a0d79de497dbb0188e3420e53c776116fad8fe7d0673e6de6dbb1da5787d9c5b27">Safari3</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a0d79de497dbb0188e3420e53c776116fa43478f6ec605295de8a074cef615dac1">Safari4</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a0d79de497dbb0188e3420e53c776116fa7fdf1ba22accafb868e371f28f100de9">Chrome0</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a0d79de497dbb0188e3420e53c776116fa5b07c54d488a0d1d38304e3b3472aa5f">Chrome1</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a0d79de497dbb0188e3420e53c776116fa6adcdeeb7d8fd2df81e6cbbbe89e3b19">Chrome2</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a0d79de497dbb0188e3420e53c776116fa46e66a71ce9725003e5d087691ea74ff">Chrome3</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a0d79de497dbb0188e3420e53c776116facc0c727392dbffea72077aa2bcab7e10">Chrome4</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a0d79de497dbb0188e3420e53c776116fa52f48f6a1d51f3b4e7c638852da7efd0">Chrome5</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a0d79de497dbb0188e3420e53c776116fa82a5a033308a9c1f7c15a0fa069b326d">Arora</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a0d79de497dbb0188e3420e53c776116fa5672935117daa2a87d14081967a827c6">MobileWebKit</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a0d79de497dbb0188e3420e53c776116fad10ed6ab9dce0645695139cd692d05aa">MobileWebKitiPhone</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a0d79de497dbb0188e3420e53c776116fa2b6a85aabc46b1a719c71c99f69c99cd">MobileWebKitAndroid</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a0d79de497dbb0188e3420e53c776116fa4a53577e8ff63af982f07cd53ca59cad">Konqueror</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a0d79de497dbb0188e3420e53c776116fad21fd702ca38e5b427eb3296236492c3">Gecko</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a0d79de497dbb0188e3420e53c776116fa763f7f1aec350cd1a46238d1d5c3c229">Firefox</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a0d79de497dbb0188e3420e53c776116faa83138865156ac91432d611fa3f42124">Firefox3_0</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a0d79de497dbb0188e3420e53c776116fa584d6d6c302b34728d3701c5ec3700b5">Firefox3_1</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a0d79de497dbb0188e3420e53c776116fabce4129fcaf398e7e93c755755447bb7">Firefox3_1b</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a0d79de497dbb0188e3420e53c776116fa7def343915db5a277dbe31e97571f530">Firefox3_5</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a0d79de497dbb0188e3420e53c776116fa42c79c145866c6355eeb52f9e15edc08">Firefox3_6</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a0d79de497dbb0188e3420e53c776116fa1335773214363ec5bb50b7e8b089fda7">Firefox4_0</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a0d79de497dbb0188e3420e53c776116fae296263c23cbc7407f7dfe35328b9f0f">Firefox5_0</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a0d79de497dbb0188e3420e53c776116fa944e3a104f7e99841c60d02f76a14f50">BotAgent</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>HtmlContentType</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>aa55cd390169cd62167722ad02eb00363</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceWt.html" anchor="aa55cd390169cd62167722ad02eb00363a266e7279f2bd034568cf3e24d8b6e36d">XHTML1</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="aa55cd390169cd62167722ad02eb00363a53471027b4667aab226f900d61c8a353">HTML4</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="aa55cd390169cd62167722ad02eb00363a6bff62b10d884fb77428cfe168cd783d">HTML5</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>MouseButton</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>ae45b935f7e95b40d5caa55a8732b4c73</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceWt.html" anchor="ae45b935f7e95b40d5caa55a8732b4c73a6adf97f83acf6453d4a6a4b1070f3754">None</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="ae45b935f7e95b40d5caa55a8732b4c73a945d5e233cf7d6240f6b783b36a374ff">Left</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="ae45b935f7e95b40d5caa55a8732b4c73ab1ca34f82e83c52b010f86955f264e05">Middle</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="ae45b935f7e95b40d5caa55a8732b4c73a92b09c7c48c520c3c55e497875da437c">Right</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>FontFamily</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>a1edc80a8577aea52f411b95c3b680b95</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceWt.html" anchor="a1edc80a8577aea52f411b95c3b680b95a7a1920d61156abc05a60135aefe8bc67">Default</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a1edc80a8577aea52f411b95c3b680b95a459d24b63e5a5fda317e0ae30e044e04">Serif</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a1edc80a8577aea52f411b95c3b680b95af6098cb051e30ed891694b2d9946f1e9">SansSerif</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a1edc80a8577aea52f411b95c3b680b95a5025df67fe7a4be741fba9a6ce8bdf55">Cursive</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a1edc80a8577aea52f411b95c3b680b95af8e19bfcbc718a84ee8ed8aae472f9e2">Fantasy</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a1edc80a8577aea52f411b95c3b680b95aa3fd27e2bbcda0c7be0037ee70829384">Monospace</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>FontStyle</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>a6ac8d1553cfe7ca5d43db515aa95aa4f</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceWt.html" anchor="a6ac8d1553cfe7ca5d43db515aa95aa4fa960b44c579bc2f6818d2daaf9e4c16f0">Normal</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a6ac8d1553cfe7ca5d43db515aa95aa4fa1d874710ccdcd46b95397049d2e7500c">Italic</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a6ac8d1553cfe7ca5d43db515aa95aa4fa12a8e47062ed3272e04dc0b991e38466">Oblique</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>FontVariant</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>a2aef5967a683cbf7ddca13d79e7c271e</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceWt.html" anchor="a2aef5967a683cbf7ddca13d79e7c271ea960b44c579bc2f6818d2daaf9e4c16f0">Normal</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a2aef5967a683cbf7ddca13d79e7c271ea9f6a53e00d6257adf6c4e8be47cbfdfa">SmallCaps</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>FontWeight</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>a8e6cdbdc3da48d9181b6acd9a3931127</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceWt.html" anchor="a8e6cdbdc3da48d9181b6acd9a3931127a960b44c579bc2f6818d2daaf9e4c16f0">Normal</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a8e6cdbdc3da48d9181b6acd9a3931127a114c3050111d8b8ddd830b99ccebd246">Bold</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a8e6cdbdc3da48d9181b6acd9a3931127a679206c2c078ed2d9be78d1a00c850ab">Bolder</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a8e6cdbdc3da48d9181b6acd9a3931127a59ec2623a8ed6db5357f9ab3eeec3dab">Lighter</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a8e6cdbdc3da48d9181b6acd9a3931127a689202409e48743b914713f96d93947c">Value</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>FontSize</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>a0291f1dfca06b2ecfdd568868f438a1c</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceWt.html" anchor="a0291f1dfca06b2ecfdd568868f438a1caf8d15fe26c8ef7e556210e071ca8f3a6">XXSmall</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a0291f1dfca06b2ecfdd568868f438a1cafc7f7986a6b409dc2e5121c70de6002b">XSmall</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a0291f1dfca06b2ecfdd568868f438a1ca2660064e68655415da2628c2ae2f7592">Small</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a0291f1dfca06b2ecfdd568868f438a1ca87f8a6ab85c9ced3702b4ea641ad4bb5">Medium</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a0291f1dfca06b2ecfdd568868f438a1ca3a69b34ce86dacb205936a8094f6c743">Large</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a0291f1dfca06b2ecfdd568868f438a1ca7e3974f53d1c28e788066dbaf5377797">XLarge</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a0291f1dfca06b2ecfdd568868f438a1ca8dad6299cc3dea7a76e75152e5ac9cc5">XXLarge</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a0291f1dfca06b2ecfdd568868f438a1caafc493b6574d5529ed0ffa6f18f05b20">Smaller</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a0291f1dfca06b2ecfdd568868f438a1caf36c7e211f1636f324981b1d020c1475">Larger</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a0291f1dfca06b2ecfdd568868f438a1ca8bc66ef376d634aaa714727085b9acfe">FixedSize</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Orientation</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>a2a8d45559e16a0185bf61bfad0a67912</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceWt.html" anchor="a2a8d45559e16a0185bf61bfad0a67912ac1b5fa03ecdb95d4a45dd1c40b02527f">Horizontal</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a2a8d45559e16a0185bf61bfad0a67912a06ce2a25e5d12c166a36f654dbea6012">Vertical</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>StandardButton</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>a270a5e1af09979a6559f0f39e3d93062</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceWt.html" anchor="a270a5e1af09979a6559f0f39e3d93062a6adf97f83acf6453d4a6a4b1070f3754">None</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a270a5e1af09979a6559f0f39e3d93062aa60852f204ed8028c1c58808b746d115">Ok</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a270a5e1af09979a6559f0f39e3d93062aea4788705e6873b424c65e91c2846b19">Cancel</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a270a5e1af09979a6559f0f39e3d93062a93cba07454f06a4a960172bbd6e2a435">Yes</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a270a5e1af09979a6559f0f39e3d93062abafd7322c6e97d25b6299b5d6fe8920b">No</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a270a5e1af09979a6559f0f39e3d93062a727b63583e01fa2b3952dab580c84dc2">Abort</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a270a5e1af09979a6559f0f39e3d93062a6327b4e59f58137083214a1fec358855">Retry</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a270a5e1af09979a6559f0f39e3d93062afd038fc7f319e48f3115d92bf5bdbef9">Ignore</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a270a5e1af09979a6559f0f39e3d93062ad544051a8e20658ab2358090d742625c">YesAll</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a270a5e1af09979a6559f0f39e3d93062ac28a365cfb52d891f4838e1e914a3518">NoAll</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Icon</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>aaa26ad9f143951595691fbd604567f5f</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceWt.html" anchor="aaa26ad9f143951595691fbd604567f5fa6adf97f83acf6453d4a6a4b1070f3754">None</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="aaa26ad9f143951595691fbd604567f5faa82be0f551b8708bc08eb33cd9ded0cf">Information</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="aaa26ad9f143951595691fbd604567f5fa0eaadb4fcb48a0a0ed7bc9868be9fbaa">Warning</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="aaa26ad9f143951595691fbd604567f5fa278d01e5af56273bae1bb99a98b370cd">Critical</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="aaa26ad9f143951595691fbd604567f5faa97ea56b0e00b2379736ae60869ff66a">Question</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SelectionMode</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>a74b3f7eb1689a3cbf0ea514ffd20bccc</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceWt.html" anchor="a74b3f7eb1689a3cbf0ea514ffd20bccca6adf97f83acf6453d4a6a4b1070f3754">None</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a74b3f7eb1689a3cbf0ea514ffd20bccca66ba162102bbf6ae31b522aec561735e">Single</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a74b3f7eb1689a3cbf0ea514ffd20bcccaf23578fcd2a868168854ab714e7de537">Extended</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SelectionBehavior</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>a04aecd34ae0810219e82208a9890de13</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceWt.html" anchor="a04aecd34ae0810219e82208a9890de13a9dea4016dbcc290b773ab2fae678aaa8">Items</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a04aecd34ae0810219e82208a9890de13a530f488f7a9800411efc6926ab189708">Rows</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SelectionFlag</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>a1ec974261fb0e2b80498473dcb6c91ed</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceWt.html" anchor="a1ec974261fb0e2b80498473dcb6c91edae0626222614bdee31951d84c64e5e9ff">Select</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a1ec974261fb0e2b80498473dcb6c91eda94186070ef6773ba0f1721c19980e487">Deselect</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a1ec974261fb0e2b80498473dcb6c91edaa635b63e3168d5f8bc3ed2460a87b226">ToggleSelect</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a1ec974261fb0e2b80498473dcb6c91edad25edb447cca7e12c7c34bfb1eaace0f">ClearAndSelect</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Side</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>a5a6f4636bcc6ab3c075165d249b3a5a3</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceWt.html" anchor="a5a6f4636bcc6ab3c075165d249b3a5a3aa4ffdcf0dc1f31b9acaf295d75b51d00">Top</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a5a6f4636bcc6ab3c075165d249b3a5a3a2ad9d63b69c4a10a5cc9cad923133bc4">Bottom</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a5a6f4636bcc6ab3c075165d249b3a5a3a945d5e233cf7d6240f6b783b36a374ff">Left</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a5a6f4636bcc6ab3c075165d249b3a5a3a92b09c7c48c520c3c55e497875da437c">Right</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a5a6f4636bcc6ab3c075165d249b3a5a3a333e001348423e89e3e9c231d2a5fea7">CenterX</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a5a6f4636bcc6ab3c075165d249b3a5a3a31f87237f34bd5891d1d911469552383">CenterY</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>AlignmentFlag</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>ab8f772c69bc8180c31f9e4f4593b143f</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceWt.html" anchor="ab8f772c69bc8180c31f9e4f4593b143fa945d5e233cf7d6240f6b783b36a374ff">Left</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="ab8f772c69bc8180c31f9e4f4593b143fa92b09c7c48c520c3c55e497875da437c">Right</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="ab8f772c69bc8180c31f9e4f4593b143fa4f1f6016fc9f3f2353c0cc7c67b292bd">Center</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="ab8f772c69bc8180c31f9e4f4593b143fa4b425d212a2e7b36c38703bfdcd57823">Justify</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="ab8f772c69bc8180c31f9e4f4593b143faa4a32c4764653e50488bff6ce2eb815b">Baseline</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="ab8f772c69bc8180c31f9e4f4593b143fae80155eceb940c89e2de63ad05868db2">Sub</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="ab8f772c69bc8180c31f9e4f4593b143fa0ce3266d4eb71ad50f7a90aee6d21dcd">Super</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="ab8f772c69bc8180c31f9e4f4593b143faa4ffdcf0dc1f31b9acaf295d75b51d00">Top</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="ab8f772c69bc8180c31f9e4f4593b143fac58bdb947b3da1fea9ef35061f724bc9">TextTop</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="ab8f772c69bc8180c31f9e4f4593b143fab1ca34f82e83c52b010f86955f264e05">Middle</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="ab8f772c69bc8180c31f9e4f4593b143fa2ad9d63b69c4a10a5cc9cad923133bc4">Bottom</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="ab8f772c69bc8180c31f9e4f4593b143fa6a877e24da1aafcf88d94930bac3e6d3">TextBottom</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>TextFlag</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>a3bf85f6b385349dadfa7e205a39ec419</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceWt.html" anchor="a3bf85f6b385349dadfa7e205a39ec419a3e5c1fb76b6543ac61af54b185f02af9">SingleLine</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a3bf85f6b385349dadfa7e205a39ec419a29c23ea4e21047dcdd361754325c07e9">WordWrap</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PositionScheme</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>a2551043da5512cfe7b857c5db6e5ae40</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceWt.html" anchor="a2551043da5512cfe7b857c5db6e5ae40a84a8921b25f505d0d2077aeb5db4bc16">Static</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a2551043da5512cfe7b857c5db6e5ae40a2ca9469819fb0fb61ff98e914a7ccca0">Relative</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a2551043da5512cfe7b857c5db6e5ae40ab51ca26c6c89cfc9bec338f7a0d3e0c8">Absolute</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a2551043da5512cfe7b857c5db6e5ae40a4457d440870ad6d42bab9082d9bf9b61">Fixed</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Cursor</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>a6dc0346a6ae888d6d4ab44f022e61eb6</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceWt.html" anchor="a6dc0346a6ae888d6d4ab44f022e61eb6a0f4e1aaabd074689b7d3ead824d1ee8e">Arrow</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a6dc0346a6ae888d6d4ab44f022e61eb6a06b9281e396db002010bde1de57262eb">Auto</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a6dc0346a6ae888d6d4ab44f022e61eb6ae76b449b9fc8536af7557ffa6321d269">Cross</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a6dc0346a6ae888d6d4ab44f022e61eb6a0dced855888015c82814dacbd3afdd87">PointingHand</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a6dc0346a6ae888d6d4ab44f022e61eb6aad39746cdba57cad436b509f2f991d22">OpenHand</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a6dc0346a6ae888d6d4ab44f022e61eb6a0f68101772bd5397ef8eb1b632798652">Wait</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a6dc0346a6ae888d6d4ab44f022e61eb6a4ca8b47601e7a843e23d0139a8a4ff61">IBeam</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a6dc0346a6ae888d6d4ab44f022e61eb6a28a1702678b8e665567b3d7f6af688f6">WhatsThis</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>CharEncoding</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>a55b820090cc9d15753301df90e35fd52</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PenStyle</name>
      <anchorfile>group__painting.html</anchorfile>
      <anchor>gadb05fe67866f63ffe3953e5987a0e5de</anchor>
      <arglist></arglist>
      <enumvalue file="group__painting.html" anchor="gadb05fe67866f63ffe3953e5987a0e5dea6adf97f83acf6453d4a6a4b1070f3754">None</enumvalue>
      <enumvalue file="group__painting.html" anchor="gadb05fe67866f63ffe3953e5987a0e5deac44eec07a96ef08be47cb01708ae5e0c">SolidLine</enumvalue>
      <enumvalue file="group__painting.html" anchor="gadb05fe67866f63ffe3953e5987a0e5dea35d61a332ecd5c4157f32d6dd86a29d3">DashLine</enumvalue>
      <enumvalue file="group__painting.html" anchor="gadb05fe67866f63ffe3953e5987a0e5dea504834618cdf0a8d482f95d1ae9862a7">DotLine</enumvalue>
      <enumvalue file="group__painting.html" anchor="gadb05fe67866f63ffe3953e5987a0e5dea8eeded9454d76559ba13a4e9982864d8">DashDotLine</enumvalue>
      <enumvalue file="group__painting.html" anchor="gadb05fe67866f63ffe3953e5987a0e5dea91d112e2141dac219ca032daf83a39ba">DashDotDotLine</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PenCapStyle</name>
      <anchorfile>group__painting.html</anchorfile>
      <anchor>ga6993ac2fd94f23297eb0c9f75fb5840a</anchor>
      <arglist></arglist>
      <enumvalue file="group__painting.html" anchor="ga6993ac2fd94f23297eb0c9f75fb5840aa745e3db6a7ffd50e1a72b39482f0882d">Flat</enumvalue>
      <enumvalue file="group__painting.html" anchor="ga6993ac2fd94f23297eb0c9f75fb5840aaceb46ca115d05c51aa5a16a8867c3304">Square</enumvalue>
      <enumvalue file="group__painting.html" anchor="ga6993ac2fd94f23297eb0c9f75fb5840aab7f41fc1412ad2ee75e9b2635d3b9d5c">Round</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PenJoinStyle</name>
      <anchorfile>group__painting.html</anchorfile>
      <anchor>gac6d096d1f4b6d38d8ee1ef166761500a</anchor>
      <arglist></arglist>
      <enumvalue file="group__painting.html" anchor="gac6d096d1f4b6d38d8ee1ef166761500aae4396f81cd926bb129ccf3c147c64514">Miter</enumvalue>
      <enumvalue file="group__painting.html" anchor="gac6d096d1f4b6d38d8ee1ef166761500aa1b9ae4ca6d43fc984af318046e1e7bb5">Bevel</enumvalue>
      <enumvalue file="group__painting.html" anchor="gac6d096d1f4b6d38d8ee1ef166761500aab7f41fc1412ad2ee75e9b2635d3b9d5c">Round</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>BrushStyle</name>
      <anchorfile>group__painting.html</anchorfile>
      <anchor>ga01b3b4f80f5756b64ef0aff2ef3ba28f</anchor>
      <arglist></arglist>
      <enumvalue file="group__painting.html" anchor="ga01b3b4f80f5756b64ef0aff2ef3ba28fa6adf97f83acf6453d4a6a4b1070f3754">None</enumvalue>
      <enumvalue file="group__painting.html" anchor="ga01b3b4f80f5756b64ef0aff2ef3ba28fae41480b6bbfbf7407974a88d3d34f4fa">Solid</enumvalue>
      <enumvalue file="group__painting.html" anchor="ga01b3b4f80f5756b64ef0aff2ef3ba28fa5e59525cb7d1d1cd93be0b9f36e9d09a">Gradient</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>GradientStyle</name>
      <anchorfile>group__painting.html</anchorfile>
      <anchor>gad22e2acb96a8d8ebde011ed399f21b73</anchor>
      <arglist></arglist>
      <enumvalue file="group__painting.html" anchor="gad22e2acb96a8d8ebde011ed399f21b73a32a843da6ea40ab3b17a3421ccdf671b">Linear</enumvalue>
      <enumvalue file="group__painting.html" anchor="gad22e2acb96a8d8ebde011ed399f21b73afdc32a55217f1ca054f1f2b51ef4f6ec">Radial</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>LinkTarget</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>ad74503dffd560faa3441cabaaedbe3ef</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceWt.html" anchor="ad74503dffd560faa3441cabaaedbe3efaad6e7652b1bdfb38783486c2c3d5e806">Self</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="ad74503dffd560faa3441cabaaedbe3efa198fd4d8c380e0d63843a8e9d4daa010">ThisWindow</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="ad74503dffd560faa3441cabaaedbe3efabdc9ec125e7a3ade37130f80c1c59893">NewWindow</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="ad74503dffd560faa3441cabaaedbe3efa801ab24683a4a8c433c6eb40c48bcd9d">Download</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>TextFormat</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>a140dea437d52d3d7c438ea3bd16a1480</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceWt.html" anchor="a140dea437d52d3d7c438ea3bd16a1480a24622bc5e4a40a1e02b2c5e44317e82e">XHTML</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a140dea437d52d3d7c438ea3bd16a1480a1fc8a1dc300ca2e90050e79210a5e36d">UnsafeXHTML</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a140dea437d52d3d7c438ea3bd16a1480a4cd8413207629a963225f4314b53adcd">Plain</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>StandardColor</name>
      <anchorfile>group__style.html</anchorfile>
      <anchor>gac21275b81878159572c793bd6999788b</anchor>
      <arglist></arglist>
      <enumvalue file="group__style.html" anchor="ggac21275b81878159572c793bd6999788ba25a81701fbfa4a1efdf660a950c1d006">White</enumvalue>
      <enumvalue file="group__style.html" anchor="ggac21275b81878159572c793bd6999788bae90dfb84e30edf611e326eeb04d680de">Black</enumvalue>
      <enumvalue file="group__style.html" anchor="ggac21275b81878159572c793bd6999788baee38e4d5dd68c4e440825018d549cb47">Red</enumvalue>
      <enumvalue file="group__style.html" anchor="ggac21275b81878159572c793bd6999788ba8746d21f8164452063398744f06307dd">DarkRed</enumvalue>
      <enumvalue file="group__style.html" anchor="ggac21275b81878159572c793bd6999788bad382816a3cbeed082c9e216e7392eed1">Green</enumvalue>
      <enumvalue file="group__style.html" anchor="ggac21275b81878159572c793bd6999788baf780aab6295a2f368ac69a514f8b4605">DarkGreen</enumvalue>
      <enumvalue file="group__style.html" anchor="ggac21275b81878159572c793bd6999788ba9594eec95be70e7b1710f730fdda33d9">Blue</enumvalue>
      <enumvalue file="group__style.html" anchor="ggac21275b81878159572c793bd6999788ba877716336e4eb22ac67faaa9c2b86635">DarkBlue</enumvalue>
      <enumvalue file="group__style.html" anchor="ggac21275b81878159572c793bd6999788ba023c239d2f2538f140a20e72c7b73f20">Cyan</enumvalue>
      <enumvalue file="group__style.html" anchor="ggac21275b81878159572c793bd6999788ba85b1ae66e65b490f35c5e8b725e7049f">DarkCyan</enumvalue>
      <enumvalue file="group__style.html" anchor="ggac21275b81878159572c793bd6999788bab91cc2c1416fcca942b61c7ac5b1a9ac">Magenta</enumvalue>
      <enumvalue file="group__style.html" anchor="ggac21275b81878159572c793bd6999788badf1b1322cf6703efd9885b0651ddb57a">DarkMagenta</enumvalue>
      <enumvalue file="group__style.html" anchor="ggac21275b81878159572c793bd6999788ba51e6cd92b6c45f9affdc158ecca2b8b8">Yellow</enumvalue>
      <enumvalue file="group__style.html" anchor="ggac21275b81878159572c793bd6999788ba42d873bb34e1055e40aad0ec45039e8b">DarkYellow</enumvalue>
      <enumvalue file="group__style.html" anchor="ggac21275b81878159572c793bd6999788ba994ae1d9731cebe455aff211bcb25b93">Gray</enumvalue>
      <enumvalue file="group__style.html" anchor="ggac21275b81878159572c793bd6999788ba91e93fc984985226ad4d319a4e4134ab">DarkGray</enumvalue>
      <enumvalue file="group__style.html" anchor="ggac21275b81878159572c793bd6999788bafb55202637692de4a494e9ade4cff2dd">LightGray</enumvalue>
      <enumvalue file="group__style.html" anchor="ggac21275b81878159572c793bd6999788ba3d971943089a3388c01fb297a32d9ba7">Transparent</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>KeyboardModifier</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>ga50f91169486bada5931f3adc3a623091</anchor>
      <arglist></arglist>
      <enumvalue file="group__signalslot.html" anchor="gga50f91169486bada5931f3adc3a623091a6adf97f83acf6453d4a6a4b1070f3754">None</enumvalue>
      <enumvalue file="group__signalslot.html" anchor="gga50f91169486bada5931f3adc3a623091a825a3d98017bab11815ad2817201324c">Shift</enumvalue>
      <enumvalue file="group__signalslot.html" anchor="gga50f91169486bada5931f3adc3a623091aa1595abbb4c3a326636dd178757cd6c1">Control</enumvalue>
      <enumvalue file="group__signalslot.html" anchor="gga50f91169486bada5931f3adc3a623091aa2e92861b757ab878312dd57993d60cf">Alt</enumvalue>
      <enumvalue file="group__signalslot.html" anchor="gga50f91169486bada5931f3adc3a623091ab6755d218d5f4e1cef9cce9cc39aeda9">Meta</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Key</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>ga34e65660d30e69c56aa636a8856aa52d</anchor>
      <arglist></arglist>
      <enumvalue file="group__signalslot.html" anchor="gga34e65660d30e69c56aa636a8856aa52da88183b946cc5f0e8c96b2e66e1c74a7e">Unknown</enumvalue>
      <enumvalue file="group__signalslot.html" anchor="gga34e65660d30e69c56aa636a8856aa52daf1851d5600eae616ee802a31ac74701b">Enter</enumvalue>
      <enumvalue file="group__signalslot.html" anchor="gga34e65660d30e69c56aa636a8856aa52da5c6ba25104401c9ee0650230fc6ba413">Tab</enumvalue>
      <enumvalue file="group__signalslot.html" anchor="gga34e65660d30e69c56aa636a8856aa52dacd7d13ceea728b08555f7c818cfb13ef">Backspace</enumvalue>
      <enumvalue file="group__signalslot.html" anchor="gga34e65660d30e69c56aa636a8856aa52da825a3d98017bab11815ad2817201324c">Shift</enumvalue>
      <enumvalue file="group__signalslot.html" anchor="gga34e65660d30e69c56aa636a8856aa52daa1595abbb4c3a326636dd178757cd6c1">Control</enumvalue>
      <enumvalue file="group__signalslot.html" anchor="gga34e65660d30e69c56aa636a8856aa52daa2e92861b757ab878312dd57993d60cf">Alt</enumvalue>
      <enumvalue file="group__signalslot.html" anchor="gga34e65660d30e69c56aa636a8856aa52da9b869c510c75c5827ac82e49d4340927">PageUp</enumvalue>
      <enumvalue file="group__signalslot.html" anchor="gga34e65660d30e69c56aa636a8856aa52daee3677bcca83ece9384b01e43952bf33">PageDown</enumvalue>
      <enumvalue file="group__signalslot.html" anchor="gga34e65660d30e69c56aa636a8856aa52da87557f11575c0ad78e4e28abedc13b6e">End</enumvalue>
      <enumvalue file="group__signalslot.html" anchor="gga34e65660d30e69c56aa636a8856aa52da8cf04a9734132302f96da8e113e80ce5">Home</enumvalue>
      <enumvalue file="group__signalslot.html" anchor="gga34e65660d30e69c56aa636a8856aa52da945d5e233cf7d6240f6b783b36a374ff">Left</enumvalue>
      <enumvalue file="group__signalslot.html" anchor="gga34e65660d30e69c56aa636a8856aa52da258f49887ef8d14ac268c92b02503aaa">Up</enumvalue>
      <enumvalue file="group__signalslot.html" anchor="gga34e65660d30e69c56aa636a8856aa52da92b09c7c48c520c3c55e497875da437c">Right</enumvalue>
      <enumvalue file="group__signalslot.html" anchor="gga34e65660d30e69c56aa636a8856aa52da08a38277b0309070706f6652eeae9a53">Down</enumvalue>
      <enumvalue file="group__signalslot.html" anchor="gga34e65660d30e69c56aa636a8856aa52daa458be0f08b7e4ff3c0f633c100176c0">Insert</enumvalue>
      <enumvalue file="group__signalslot.html" anchor="gga34e65660d30e69c56aa636a8856aa52daf2a6c498fb90ee345d997f888fce3b18">Delete</enumvalue>
      <enumvalue file="group__signalslot.html" anchor="gga34e65660d30e69c56aa636a8856aa52da013ec032d3460d4be4431c6ab1f8f224">Escape</enumvalue>
      <enumvalue file="group__signalslot.html" anchor="gga34e65660d30e69c56aa636a8856aa52dae1dffc8709f31a4987c8a88334107e89">F1</enumvalue>
      <enumvalue file="group__signalslot.html" anchor="gga34e65660d30e69c56aa636a8856aa52dafe5c3684dce76cdd9f7f42430868aa74">F2</enumvalue>
      <enumvalue file="group__signalslot.html" anchor="gga34e65660d30e69c56aa636a8856aa52da4b6bf4b531770872d4328ce69bef5627">F3</enumvalue>
      <enumvalue file="group__signalslot.html" anchor="gga34e65660d30e69c56aa636a8856aa52dae7e0e72401a9f2718ed0f39f2861d702">F4</enumvalue>
      <enumvalue file="group__signalslot.html" anchor="gga34e65660d30e69c56aa636a8856aa52da37f438df6a6d5ba4c17ef8ca58562f00">F5</enumvalue>
      <enumvalue file="group__signalslot.html" anchor="gga34e65660d30e69c56aa636a8856aa52da1faf42f2823f184eb2c9f0dffe5d73f2">F6</enumvalue>
      <enumvalue file="group__signalslot.html" anchor="gga34e65660d30e69c56aa636a8856aa52da47489eb597b7db34caa24b1fc78fc839">F7</enumvalue>
      <enumvalue file="group__signalslot.html" anchor="gga34e65660d30e69c56aa636a8856aa52da4787509ad9f9d747a81a30e9dde3d4a7">F8</enumvalue>
      <enumvalue file="group__signalslot.html" anchor="gga34e65660d30e69c56aa636a8856aa52da892a245e287c163080b23db737d3c4c9">F9</enumvalue>
      <enumvalue file="group__signalslot.html" anchor="gga34e65660d30e69c56aa636a8856aa52dab213ce22ca6ad4eda8db82966b9b6e5a">F10</enumvalue>
      <enumvalue file="group__signalslot.html" anchor="gga34e65660d30e69c56aa636a8856aa52da643b0662422d1d0dffa3fca2e2bf28a8">F11</enumvalue>
      <enumvalue file="group__signalslot.html" anchor="gga34e65660d30e69c56aa636a8856aa52dae902674982fc99aa343cdd94da7476c3">F12</enumvalue>
      <enumvalue file="group__signalslot.html" anchor="gga34e65660d30e69c56aa636a8856aa52dad511f8439ecde36647437fbba67a4394">Space</enumvalue>
      <enumvalue file="group__signalslot.html" anchor="gga34e65660d30e69c56aa636a8856aa52da7fc56270e7a70fa81a5935b72eacbe29">A</enumvalue>
      <enumvalue file="group__signalslot.html" anchor="gga34e65660d30e69c56aa636a8856aa52da9d5ed678fe57bcca610140957afab571">B</enumvalue>
      <enumvalue file="group__signalslot.html" anchor="gga34e65660d30e69c56aa636a8856aa52da0d61f8370cad1d412f80b84d143e1257">C</enumvalue>
      <enumvalue file="group__signalslot.html" anchor="gga34e65660d30e69c56aa636a8856aa52daf623e75af30e62bbd73d6df5b50bb7b5">D</enumvalue>
      <enumvalue file="group__signalslot.html" anchor="gga34e65660d30e69c56aa636a8856aa52da3a3ea00cfc35332cedf6e5e9a32e94da">E</enumvalue>
      <enumvalue file="group__signalslot.html" anchor="gga34e65660d30e69c56aa636a8856aa52da800618943025315f869e4e1f09471012">F</enumvalue>
      <enumvalue file="group__signalslot.html" anchor="gga34e65660d30e69c56aa636a8856aa52dadfcf28d0734569a6a693bc8194de62bf">G</enumvalue>
      <enumvalue file="group__signalslot.html" anchor="gga34e65660d30e69c56aa636a8856aa52dac1d9f50f86825a1a2302ec2449c17196">H</enumvalue>
      <enumvalue file="group__signalslot.html" anchor="gga34e65660d30e69c56aa636a8856aa52dadd7536794b63bf90eccfd37f9b147d7f">I</enumvalue>
      <enumvalue file="group__signalslot.html" anchor="gga34e65660d30e69c56aa636a8856aa52daff44570aca8241914870afbc310cdb85">J</enumvalue>
      <enumvalue file="group__signalslot.html" anchor="gga34e65660d30e69c56aa636a8856aa52daa5f3c6a11b03839d46af9fb43c97c188">K</enumvalue>
      <enumvalue file="group__signalslot.html" anchor="gga34e65660d30e69c56aa636a8856aa52dad20caec3b48a1eef164cb4ca81ba2587">L</enumvalue>
      <enumvalue file="group__signalslot.html" anchor="gga34e65660d30e69c56aa636a8856aa52da69691c7bdcc3ce6d5d8a1361f22d04ac">M</enumvalue>
      <enumvalue file="group__signalslot.html" anchor="gga34e65660d30e69c56aa636a8856aa52da8d9c307cb7f3c4a32822a51922d1ceaa">N</enumvalue>
      <enumvalue file="group__signalslot.html" anchor="gga34e65660d30e69c56aa636a8856aa52daf186217753c37b9b9f958d906208506e">O</enumvalue>
      <enumvalue file="group__signalslot.html" anchor="gga34e65660d30e69c56aa636a8856aa52da44c29edb103a2872f519ad0c9a0fdaaa">P</enumvalue>
      <enumvalue file="group__signalslot.html" anchor="gga34e65660d30e69c56aa636a8856aa52daf09564c9ca56850d4cd6b3319e541aee">Q</enumvalue>
      <enumvalue file="group__signalslot.html" anchor="gga34e65660d30e69c56aa636a8856aa52dae1e1d3d40573127e9ee0480caf1283d6">R</enumvalue>
      <enumvalue file="group__signalslot.html" anchor="gga34e65660d30e69c56aa636a8856aa52da5dbc98dcc983a70728bd082d1a47546e">S</enumvalue>
      <enumvalue file="group__signalslot.html" anchor="gga34e65660d30e69c56aa636a8856aa52dab9ece18c950afbfa6b0fdbfa4ff731d3">T</enumvalue>
      <enumvalue file="group__signalslot.html" anchor="gga34e65660d30e69c56aa636a8856aa52da4c614360da93c0a041b22e537de151eb">U</enumvalue>
      <enumvalue file="group__signalslot.html" anchor="gga34e65660d30e69c56aa636a8856aa52da5206560a306a2e085a437fd258eb57ce">V</enumvalue>
      <enumvalue file="group__signalslot.html" anchor="gga34e65660d30e69c56aa636a8856aa52da61e9c06ea9a85a5088a499df6458d276">W</enumvalue>
      <enumvalue file="group__signalslot.html" anchor="gga34e65660d30e69c56aa636a8856aa52da02129bb861061d1a052c592e2dc6b383">X</enumvalue>
      <enumvalue file="group__signalslot.html" anchor="gga34e65660d30e69c56aa636a8856aa52da57cec4137b614c87cb4e24a3d003a3e0">Y</enumvalue>
      <enumvalue file="group__signalslot.html" anchor="gga34e65660d30e69c56aa636a8856aa52da21c2e59531c8710156d34a3c30ac81d5">Z</enumvalue>
      <enumvalue file="group__signalslot.html" anchor="gga34e65660d30e69c56aa636a8856aa52da7008dae6e21bba9332daab92d829dbda">Key_1</enumvalue>
      <enumvalue file="group__signalslot.html" anchor="gga34e65660d30e69c56aa636a8856aa52da1dfb488fdab3fb75cc0a5e371580ccab">Key_2</enumvalue>
      <enumvalue file="group__signalslot.html" anchor="gga34e65660d30e69c56aa636a8856aa52da8bb9b4775309e87d73b444c5f88deb36">Key_3</enumvalue>
      <enumvalue file="group__signalslot.html" anchor="gga34e65660d30e69c56aa636a8856aa52da5352c75d225b1aff21b207d4b78b9948">Key_4</enumvalue>
      <enumvalue file="group__signalslot.html" anchor="gga34e65660d30e69c56aa636a8856aa52dad9148b6f011a15c4f0818ad1f4d6f8b3">Key_5</enumvalue>
      <enumvalue file="group__signalslot.html" anchor="gga34e65660d30e69c56aa636a8856aa52da301d1361703503a70567938b519070e1">Key_6</enumvalue>
      <enumvalue file="group__signalslot.html" anchor="gga34e65660d30e69c56aa636a8856aa52da179f94272580cbc69b0f5fddced1ce2f">Key_7</enumvalue>
      <enumvalue file="group__signalslot.html" anchor="gga34e65660d30e69c56aa636a8856aa52da732ca0da2d4f9db51ed9507f7b10bc1a">Key_8</enumvalue>
      <enumvalue file="group__signalslot.html" anchor="gga34e65660d30e69c56aa636a8856aa52daae4461c07901b9f7b3d8bbdbc3445baa">Key_9</enumvalue>
      <enumvalue file="group__signalslot.html" anchor="gga34e65660d30e69c56aa636a8856aa52da04d3273dce36fcab516ea1694b9583c0">Key_0</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>CheckState</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>a59dae4dad2967d1d0f9b765f468442fb</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceWt.html" anchor="a59dae4dad2967d1d0f9b765f468442fba881b3634f18ee4f2c2315bd19b75e0ae">Unchecked</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a59dae4dad2967d1d0f9b765f468442fba3dc51c91b0de8f06f4136aa4c6a0fb37">PartiallyChecked</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a59dae4dad2967d1d0f9b765f468442fba2627637e263ef687fa978b576580b8b1">Checked</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PaintFlag</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>a23a1002020ee93ed4679d351b7350de3</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceWt.html" anchor="a23a1002020ee93ed4679d351b7350de3a06933067aafd48425d67bcb01bba5cb6">Update</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>EntryPointType</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>af4b6ed5fd28b4f5fa141b153c1107349</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceWt.html" anchor="af4b6ed5fd28b4f5fa141b153c1107349ae498749f3c42246d50b15c81c101d988">Application</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="af4b6ed5fd28b4f5fa141b153c1107349accf2281a355c2c9cd4698ac30bea7820">WidgetSet</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="af4b6ed5fd28b4f5fa141b153c1107349a97e122423d0c609b6ce73c1f27c33e03">StaticResource</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>RenderFlag</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>a1097ddb5b58c20fe2f6c9d096e71575c</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceWt.html" anchor="a1097ddb5b58c20fe2f6c9d096e71575cabbd47109890259c0127154db1af26c75">Full</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a1097ddb5b58c20fe2f6c9d096e71575ca06933067aafd48425d67bcb01bba5cb6">Update</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>MatchFlag</name>
      <anchorfile>group__modelview.html</anchorfile>
      <anchor>gaad8dd5072a40c11a34ee548bfb20b2ba</anchor>
      <arglist></arglist>
      <enumvalue file="group__modelview.html" anchor="ggaad8dd5072a40c11a34ee548bfb20b2baa32f01c1611a4a80b752afe034a7210a5">Exactly</enumvalue>
      <enumvalue file="group__modelview.html" anchor="ggaad8dd5072a40c11a34ee548bfb20b2baad0ecff5cd025e541622d4e6e44526b85">StringExactly</enumvalue>
      <enumvalue file="group__modelview.html" anchor="ggaad8dd5072a40c11a34ee548bfb20b2baa9d1a2cba952f9245c54397bbbf3e8183">StartsWith</enumvalue>
      <enumvalue file="group__modelview.html" anchor="ggaad8dd5072a40c11a34ee548bfb20b2baa213068b7e25d045126e9b1702fae80db">EndsWith</enumvalue>
      <enumvalue file="group__modelview.html" anchor="ggaad8dd5072a40c11a34ee548bfb20b2baab87b7d0627a8afcc083f4e4b8280303d">RegExp</enumvalue>
      <enumvalue file="group__modelview.html" anchor="ggaad8dd5072a40c11a34ee548bfb20b2baa6cbd53d8f1cfcd6f888bd346941bf021">WildCard</enumvalue>
      <enumvalue file="group__modelview.html" anchor="ggaad8dd5072a40c11a34ee548bfb20b2baaaef186eb5e4f306317a661d4b96e397d">CaseSensitive</enumvalue>
      <enumvalue file="group__modelview.html" anchor="ggaad8dd5072a40c11a34ee548bfb20b2baaa212b19ef5f2fb30acf92e6cbccc1f2d">Wrap</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>HeaderFlag</name>
      <anchorfile>group__modelview.html</anchorfile>
      <anchor>gafb18b4339442f1327c2a65850f3d8a53</anchor>
      <arglist></arglist>
      <enumvalue file="group__modelview.html" anchor="ggafb18b4339442f1327c2a65850f3d8a53afb64af9fa20e84a2b6eedf61b449c26f">ColumnIsCollapsed</enumvalue>
      <enumvalue file="group__modelview.html" anchor="ggafb18b4339442f1327c2a65850f3d8a53a0c14cf328f658e1680fdd2b05ccf2619">ColumnIsExpandedLeft</enumvalue>
      <enumvalue file="group__modelview.html" anchor="ggafb18b4339442f1327c2a65850f3d8a53a23c4f661badabe6447fde2ac4a7583d6">ColumnIsExpandedRight</enumvalue>
      <enumvalue file="group__modelview.html" anchor="ggafb18b4339442f1327c2a65850f3d8a53a28647ff63d9d1642a2e58bd74b981407">UserCheckable</enumvalue>
      <enumvalue file="group__modelview.html" anchor="ggafb18b4339442f1327c2a65850f3d8a53a1e12ce0c312e7dd542b46ed8e35a8902">Tristate</enumvalue>
      <enumvalue file="group__modelview.html" anchor="ggafb18b4339442f1327c2a65850f3d8a53a3bc0ca65c47e38227ca94d349943f103">XHTMLText</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>MetaHeaderType</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>a9d76d7ac3eb4b1005a35fdc1500c0dcb</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceWt.html" anchor="a9d76d7ac3eb4b1005a35fdc1500c0dcbab6755d218d5f4e1cef9cce9cc39aeda9">Meta</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a9d76d7ac3eb4b1005a35fdc1500c0dcba5ad234cb2cde4266195252a23ca7d84e">Property</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a9d76d7ac3eb4b1005a35fdc1500c0dcba36b9f58747846949c4e7324ad0b6e2db">HttpHeader</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>EventType</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>a7b122452d0fd8ee51e1e4e88fe57e410</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceWt.html" anchor="a7b122452d0fd8ee51e1e4e88fe57e410a6311ae17c1ee52b36e68aaf4ad066387">Other</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a7b122452d0fd8ee51e1e4e88fe57e410a8f9bfe9d1345237cb3b2b205864da075">User</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a7b122452d0fd8ee51e1e4e88fe57e410aefb4777327e6f704fb1519c1882f93ec">Timer</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a7b122452d0fd8ee51e1e4e88fe57e410abe8545ae7ab0276e15898aae7acfbd7a">Resource</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>LayoutDirection</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>a23d3bcd7b697ff12d031b2d232f8704a</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceWt.html" anchor="a23d3bcd7b697ff12d031b2d232f8704aad1e80c506f4c89e3c4fb1c1b4867a03c">LeftToRight</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a23d3bcd7b697ff12d031b2d232f8704aab7b0ea3028791689ea070674776855e2">RightToLeft</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a23d3bcd7b697ff12d031b2d232f8704aaf2b1a19a8d0f523d042f9ede79a80804">TopToBottom</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a23d3bcd7b697ff12d031b2d232f8704aa63dc349be51108dcfd197c7ab02b486a">BottomToTop</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ContentLoading</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>af25a7f0bb1d50c5b8bc98c4db9080313</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceWt.html" anchor="a139a99911050a36e3267c11f6e513e91a46a9ebdb80117bfa1f0cdea65438290a">Lazy</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="af25a7f0bb1d50c5b8bc98c4db9080313a483c336d7d9fe614a8b5aae1e746e01f">Eager</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="af25a7f0bb1d50c5b8bc98c4db9080313a985a73b270b5b54a0bd764a7cd1a57e0">NextLevel</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>MediaReadyState</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>a3f37731be6bc89400cf939307f739025</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceWt.html" anchor="a3f37731be6bc89400cf939307f739025ad5f473f09d291ba32da41ac2dc5e0c0d">HaveNothing</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a3f37731be6bc89400cf939307f739025a48ba0a793920c6d582f001696b9d7520">HaveMetaData</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a3f37731be6bc89400cf939307f739025adcf5a182ecbb429fea1b33107c44b0d1">HaveCurrentData</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a3f37731be6bc89400cf939307f739025af7a5804bcb690deb50e7acd1ca9e005b">HaveFutureData</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a3f37731be6bc89400cf939307f739025ae130077947bf4bee28ad79c551280edb">HaveEnoughData</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>RegExpFlag</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>a6bde75e90de6c0a1611951ae632e2ca2</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceWt.html" anchor="a6bde75e90de6c0a1611951ae632e2ca2a777a41791bb1a4819c1260164e2611b7">MatchCaseInsensitive</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>GLRenderOption</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>a4629e21e7da64f5597fe3ba70e1729b5</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceWt.html" anchor="a4629e21e7da64f5597fe3ba70e1729b5a4e433c6a88a4e41c650c09c8936cf262">ClientSide</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a4629e21e7da64f5597fe3ba70e1729b5a8fb53cb4338611e251a9bb003961f984">ServerSide</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a4629e21e7da64f5597fe3ba70e1729b5a7ea1cca3d05e87787065472fa899125a">AntiAliasing</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>GLClientSideRenderer</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>a654c780ffca1088c837e689332e77288</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceWt.html" anchor="a654c780ffca1088c837e689332e77288a4bfd40b9f3021e03e640fcdd461a7918">PAINT_GL</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a654c780ffca1088c837e689332e77288ae3ce40525187fde92ba31d10cf94b0dc">RESIZE_GL</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a654c780ffca1088c837e689332e77288a239bf277b3aa2caf64b406f5824a1c7f">UPDATE_GL</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>GoogleMapsVersion</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>a6c8a89b3d0f3ecdd7cf4a02170e4a2ba</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceWt.html" anchor="a6c8a89b3d0f3ecdd7cf4a02170e4a2baa1b267619c4812cc46ee281747884ca50">v2</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a6c8a89b3d0f3ecdd7cf4a02170e4a2baa43a03299a3c3fed3d8ce7b820f3aca81">v3</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>MapTypeControl</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>a4e48eb453974ce71473cc97a536e4709</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceWt.html" anchor="a4e48eb453974ce71473cc97a536e4709a6adf97f83acf6453d4a6a4b1070f3754">None</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a4e48eb453974ce71473cc97a536e4709a7a1920d61156abc05a60135aefe8bc67">Default</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a4e48eb453974ce71473cc97a536e4709ab61541208db7fa7dba42c85224405911">Menu</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a4e48eb453974ce71473cc97a536e4709a55bb12cc60fba8f860517ac796c4fdda">Hierarchical</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a4e48eb453974ce71473cc97a536e4709a5eba6858b4f92560e30688d248ba3c07">HorizontalBar</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>LayoutImplementation</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>aeb0e4f49ce4a28d8ce9b0c6005027876</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceWt.html" anchor="aeb0e4f49ce4a28d8ce9b0c6005027876a09d2bd168181f1e64c2b1651a80a8aa8">Flex</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="aeb0e4f49ce4a28d8ce9b0c6005027876a686155af75a60a0f6e9d80c1f7edd3e9">JavaScript</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>LengthUnit</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>a736803866293d189d852d2c7adb7d94e</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceWt.html" anchor="a736803866293d189d852d2c7adb7d94eaa49be8bd2c0c5982c87dc4d28fdecf06">FontEm</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a736803866293d189d852d2c7adb7d94ea5845386c15ceafd47d96858a52fce034">FontEx</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a736803866293d189d852d2c7adb7d94ea08822b3ae4e2aede0afe08abe600e9c0">Pixel</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a736803866293d189d852d2c7adb7d94eabee12d309ba5730e1e121733b7b67956">Inch</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a736803866293d189d852d2c7adb7d94eaa2edad498840d7233b2f56697b02e623">Centimeter</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a736803866293d189d852d2c7adb7d94eaa1fc7eb146f7f3ea7934e4d247902de0">Millimeter</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a736803866293d189d852d2c7adb7d94ea2a3cd5946cfd317eb99c3d32e35e2d4c">Point</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a736803866293d189d852d2c7adb7d94ea0f24ba2ca2330e1333eadc175714640a">Pica</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a736803866293d189d852d2c7adb7d94ea37be07209f53a5d636d5c904ca9ae64c">Percentage</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a736803866293d189d852d2c7adb7d94ea67bbbcb8c3f0869b19682f3dd5f27893">ViewportWidth</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a736803866293d189d852d2c7adb7d94ea1cc83e088aae799b9acb909c10c3d8b2">ViewportHeight</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a736803866293d189d852d2c7adb7d94eae21d04628175a77110405adc9338b9c2">ViewportMin</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a736803866293d189d852d2c7adb7d94ea91b2f19f5c34f05a401200359e38e3c3">ViewportMax</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>EchoMode</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>a7eb1dc7b803c600db5e037a44f87662a</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceWt.html" anchor="a7eb1dc7b803c600db5e037a44f87662aa960b44c579bc2f6818d2daaf9e4c16f0">Normal</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a7eb1dc7b803c600db5e037a44f87662aadc647eb65e6711e155375218212b3964">Password</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>InputMaskFlag</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>a7b136d54f0ee118d08555a101fd95045</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceWt.html" anchor="a7b136d54f0ee118d08555a101fd95045af777f1f9c50c6732734acf5ae85bb8c1">KeepMaskWhileBlurred</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>LinkType</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>a6d1148fed40e45ba2bb41372229c372f</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceWt.html" anchor="a6d1148fed40e45ba2bb41372229c372fa02a3a357710cc2a5dfdfb74ed012fb59">Url</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a6d1148fed40e45ba2bb41372229c372fabe8545ae7ab0276e15898aae7acfbd7a">Resource</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a6d1148fed40e45ba2bb41372229c372fa2fdb8a5feb2bdffba4f35a5b601670e7">InternalPath</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>MediaEncoding</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>a486bbdb14981c4eeb1ea218ba6afdeff</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceWt.html" anchor="a486bbdb14981c4eeb1ea218ba6afdeffa63bac5edeb8962404f5cd823775b1adc">PosterImage</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a486bbdb14981c4eeb1ea218ba6afdeffa27bcd310c52f6445cf4b93b90f52f5ef">MP3</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a486bbdb14981c4eeb1ea218ba6afdeffaebae9a870a696afb2ecea6601d339318">M4A</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a486bbdb14981c4eeb1ea218ba6afdeffadd2a5da328f6e784c18457fdeb4bff6a">OGA</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a486bbdb14981c4eeb1ea218ba6afdeffa76bae86742a2ec93bb56ae064ce7bd54">WAV</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a486bbdb14981c4eeb1ea218ba6afdeffa3467304355c2840fb4bdb391385954af">WEBMA</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a486bbdb14981c4eeb1ea218ba6afdeffaf6b667b969eb52bc43a8e323af5a7c17">FLA</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a486bbdb14981c4eeb1ea218ba6afdeffa5fac98a46793ed492b5ea3806bb3eb2b">M4V</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a486bbdb14981c4eeb1ea218ba6afdeffa6488ed09cb747e3ae2f3b5243701f56a">OGV</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a486bbdb14981c4eeb1ea218ba6afdeffaa98be4c6f392d7c804a59613d63ba4aa">WEBMV</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a486bbdb14981c4eeb1ea218ba6afdeffabc12a8a4d3d78682bcb7fcc62cd2548a">FLV</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>MediaType</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>a53e2fa9532adc194a03c2e31308f9c01</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceWt.html" anchor="a53e2fa9532adc194a03c2e31308f9c01ab22f0418e8ac915eb66f829d262d14a2">Audio</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a53e2fa9532adc194a03c2e31308f9c01a34e2d1989a1dbf75cd631596133ee5ee">Video</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>MediaPlayerButtonId</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>a2b39ffefca85ae697f40e13f01c60544</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceWt.html" anchor="a2b39ffefca85ae697f40e13f01c60544a670ddbfffb09e86bbd4fe2d94fb6c6c9">VideoPlay</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a2b39ffefca85ae697f40e13f01c60544ade3c731be5633838089a07179d301d7b">Play</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a2b39ffefca85ae697f40e13f01c60544a105b296a83f9c105355403f3332af50f">Pause</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a2b39ffefca85ae697f40e13f01c60544a11a755d598c0c417f9a36758c3da7481">Stop</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a2b39ffefca85ae697f40e13f01c60544a98e0efccef4b465cb0edb78d2ddc4eed">VolumeMute</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a2b39ffefca85ae697f40e13f01c60544a107b716feda6e19df0579c983a366051">VolumeUnmute</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a2b39ffefca85ae697f40e13f01c60544a43812ab5d6c92e4d344e325edd9c22f7">VolumeMax</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a2b39ffefca85ae697f40e13f01c60544ae7ec409749889353b8f83a6b04159420">FullScreen</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a2b39ffefca85ae697f40e13f01c60544ae8e675966facb06ba0a3b93403d9883d">RestoreScreen</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a2b39ffefca85ae697f40e13f01c60544a1cb6c7df44d163e3c633366d34344bb4">RepeatOn</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a2b39ffefca85ae697f40e13f01c60544a7db139cc3f3fafb0a590f8a3bd395e07">RepeatOff</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>MediaPlayerProgressBarId</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>ac33e67c6a2f09f0ad6022d6a2303c081</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceWt.html" anchor="ac33e67c6a2f09f0ad6022d6a2303c081aa76d4ef5f3f6a672bbfab2865563e530">Time</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="ac33e67c6a2f09f0ad6022d6a2303c081abd7a9717d29c5ddcab1bc175eda1e298">Volume</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>MediaPlayerTextId</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>a1d5247f4435041cfaf3cf22dc4e56a3f</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceWt.html" anchor="a1d5247f4435041cfaf3cf22dc4e56a3fa28d966bf69234556641d197315891ba0">CurrentTime</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a1d5247f4435041cfaf3cf22dc4e56a3fae02d2ae03de9d493df2b6b2d2813d302">Duration</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a1d5247f4435041cfaf3cf22dc4e56a3fab78a3223503896721cca1303f776159b">Title</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ItemFlag</name>
      <anchorfile>group__modelview.html</anchorfile>
      <anchor>ga1d77c4de293aebfacbdde124de06b8b0</anchor>
      <arglist></arglist>
      <enumvalue file="group__modelview.html" anchor="gga1d77c4de293aebfacbdde124de06b8b0a8318ce1c96df6ce21eb2ed428c6d0f85">Selectable</enumvalue>
      <enumvalue file="group__modelview.html" anchor="gga1d77c4de293aebfacbdde124de06b8b0a2c09e798bf8c5a82d211331c82893a0f">Editable</enumvalue>
      <enumvalue file="group__modelview.html" anchor="gga1d77c4de293aebfacbdde124de06b8b0a28647ff63d9d1642a2e58bd74b981407">UserCheckable</enumvalue>
      <enumvalue file="group__modelview.html" anchor="gga1d77c4de293aebfacbdde124de06b8b0a08ab0b568328fb06a466be97d62f5649">DragEnabled</enumvalue>
      <enumvalue file="group__modelview.html" anchor="gga1d77c4de293aebfacbdde124de06b8b0a915a7e426b17cec6d169b8ce9733a6e3">DropEnabled</enumvalue>
      <enumvalue file="group__modelview.html" anchor="gga1d77c4de293aebfacbdde124de06b8b0a1e12ce0c312e7dd542b46ed8e35a8902">Tristate</enumvalue>
      <enumvalue file="group__modelview.html" anchor="gga1d77c4de293aebfacbdde124de06b8b0a3bc0ca65c47e38227ca94d349943f103">XHTMLText</enumvalue>
      <enumvalue file="group__modelview.html" anchor="gga1d77c4de293aebfacbdde124de06b8b0a99feffc57dae9a01652065178fae5b19">Dirty</enumvalue>
      <enumvalue file="group__modelview.html" anchor="gga1d77c4de293aebfacbdde124de06b8b0afca59884c1b09b37301a866c10c1263c">DeferredToolTip</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SortOrder</name>
      <anchorfile>group__modelview.html</anchorfile>
      <anchor>ga4173856040cf108a9c7360927a43ebac</anchor>
      <arglist></arglist>
      <enumvalue file="group__modelview.html" anchor="gga4173856040cf108a9c7360927a43ebacacf3fb1ff52ea1eed3347ac5401ee7f0c">Ascending</enumvalue>
      <enumvalue file="group__modelview.html" anchor="gga4173856040cf108a9c7360927a43ebacae3cf5ac19407b1a62c6fccaff675a53b">Descending</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>DropAction</name>
      <anchorfile>group__modelview.html</anchorfile>
      <anchor>gaca801bdfb957c360c5f8709cc46949aa</anchor>
      <arglist></arglist>
      <enumvalue file="group__modelview.html" anchor="ggaca801bdfb957c360c5f8709cc46949aaa5fb63579fc981698f97d55bfecb213ea">Copy</enumvalue>
      <enumvalue file="group__modelview.html" anchor="ggaca801bdfb957c360c5f8709cc46949aaa6bc362dbf494c61ea117fe3c71ca48a5">Move</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PainterChangeFlag</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>a5afa3162ba5b228f8074e0fda89f9a50</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceWt.html" anchor="a5afa3162ba5b228f8074e0fda89f9a50aef829858697fad3a25da0692aaaeca0b">Pen</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a5afa3162ba5b228f8074e0fda89f9a50aa25744428546172386b93dd44900a81a">Brush</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a5afa3162ba5b228f8074e0fda89f9a50a194f5394ae2e9c74dc3c441b92862d1d">Font</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a5afa3162ba5b228f8074e0fda89f9a50afee2c7fda249d6dd01b8d9d2020b6ea2">Hints</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a5afa3162ba5b228f8074e0fda89f9a50a2ff4148554480a37f85efd299df04850">Transform</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a5afa3162ba5b228f8074e0fda89f9a50a182cdffb4101f794ff7cd219bafd0f7b">Clipping</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a5afa3162ba5b228f8074e0fda89f9a50a3f39588bb19e28051d9aedfbb170025c">Shadow</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PaintDeviceFeatureFlag</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>ac5d03da7eec8b3a3f25e1ca054c88afa</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceWt.html" anchor="ac5d03da7eec8b3a3f25e1ca054c88afaa29c23ea4e21047dcdd361754325c07e9">WordWrap</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="ac5d03da7eec8b3a3f25e1ca054c88afaab4c09dc0219753f2a51fb895b8ccc480">FontMetrics</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>RenderMethod</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>a4dc7ede22254adefe0115e2ce4100f49</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceWt.html" anchor="a4dc7ede22254adefe0115e2ce4100f49a4cc402b5ec3ce4cc6daf606f78508bec">InlineSvgVml</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a4dc7ede22254adefe0115e2ce4100f49ab1e16a0dc25e2d24caaca41334d94f64">HtmlCanvas</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a4dc7ede22254adefe0115e2ce4100f49a020e1d92c28f4478ff1f3477b6a6cdea">PngImage</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>RenderHint</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>a38b6fd8709ca4629750f4f641819eac9</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceWt.html" anchor="a38b6fd8709ca4629750f4f641819eac9abe2e7b79019158c00e374a658ef4ebf8">Antialiasing</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a38b6fd8709ca4629750f4f641819eac9a1cc90c94f1883867927b1ed50d197117">LowQualityShadows</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SegmentType</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>abec8a9bb6a16208e884909d307d83fac</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MoveTo</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>abec8a9bb6a16208e884909d307d83facac923b5a098c01a8a83f02780d0c729a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LineTo</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>abec8a9bb6a16208e884909d307d83faca3be5ebeec3e5b2dbcad77cc06968b277</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CubicC1</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>abec8a9bb6a16208e884909d307d83faca038eb7175aa4b7f2ff8cdd2a1051396e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CubicC2</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>abec8a9bb6a16208e884909d307d83faca35e554347918c409850b92d31c4f42b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CubicEnd</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>abec8a9bb6a16208e884909d307d83faca98c4645a1b8a6387539d0f570be9461f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>QuadC</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>abec8a9bb6a16208e884909d307d83facae9e1a5b38aca5f501c09b2cbb0e766b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>QuadEnd</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>abec8a9bb6a16208e884909d307d83faca353e64f0904d0b7a358ff4e806aed72c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ArcC</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>abec8a9bb6a16208e884909d307d83faca490c5ac7810aad5013f8c2dba5e017ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ArcR</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>abec8a9bb6a16208e884909d307d83faca9a2dd8e212ac9e953bfccb8ade3eb71b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ArcAngleSweep</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>abec8a9bb6a16208e884909d307d83faca7f361f04e50c5490c264fa97619716e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ContentDisposition</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>a1c6a585445907b7e6e1f98bbd1501418</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceWt.html" anchor="a1c6a585445907b7e6e1f98bbd1501418a6adf97f83acf6453d4a6a4b1070f3754">None</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a1c6a585445907b7e6e1f98bbd1501418ae9cb217697088a98b1937d111d936281">Attachment</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a1c6a585445907b7e6e1f98bbd1501418a0125cf5f3ca38b312ca5d3b511c45a13">Inline</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PopupTrigger</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>a96fbe5a99e9cedcd4e70f190eb7a1cdf</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceWt.html" anchor="a96fbe5a99e9cedcd4e70f190eb7a1cdfab1caf7f21c1b8899e11165a6aed71af9">Editing</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a96fbe5a99e9cedcd4e70f190eb7a1cdfae4a077f4c0ebb22505c81e30cbf0f1a7">DropDownIcon</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>TemplateWidgetIdMode</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>a323dcef5293055d85c57d23ec1936a26</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceWt.html" anchor="a323dcef5293055d85c57d23ec1936a26a6adf97f83acf6453d4a6a4b1070f3754">None</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a323dcef5293055d85c57d23ec1936a26a4b8d9d7ee6b5088c86b17c4df1b12fde">SetObjectName</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a323dcef5293055d85c57d23ec1936a26aacf51340a8e3d9c543cb3e77d8845636">SetId</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>WidgetThemeRole</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>af4dad44a64087fe32280b4044b92d226</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>UtilityCssClassRole</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>a9fa6376505624805b457488167a543a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ElementThemeRole</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>ade8910296fbe9aeae64338def34f7687</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ValidationStyleFlag</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>a3da96fc8830c0022e6b3ba6b2069d2cb</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceWt.html" anchor="a3da96fc8830c0022e6b3ba6b2069d2cba13e4f39f02ba8ca326a0e5f59d34b217">InvalidStyle</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a3da96fc8830c0022e6b3ba6b2069d2cba91bb2c66062f3d537b0e84026fce011a">ValidStyle</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ChildCountPolicy</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>a139a99911050a36e3267c11f6e513e91</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Disabled</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>a139a99911050a36e3267c11f6e513e91a274cbaea6385eb8d44e6edf063acb712</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Enabled</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>a139a99911050a36e3267c11f6e513e91ac8e3cfd4f362451d37844e9929f0d64d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Lazy</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>a139a99911050a36e3267c11f6e513e91a690ecca6b7abc9a92b5d122a2c47c0a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Lazy</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>a139a99911050a36e3267c11f6e513e91a46a9ebdb80117bfa1f0cdea65438290a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ValidationState</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>a06744b1cf5fdeae2a8a6c0d0084fdf25</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceWt.html" anchor="a06744b1cf5fdeae2a8a6c0d0084fdf25a4bbb8f967da6d1a610596d7257179c2b">Invalid</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a06744b1cf5fdeae2a8a6c0d0084fdf25aed2efe1e019cd1e7beefb4cf36f76621">InvalidEmpty</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a06744b1cf5fdeae2a8a6c0d0084fdf25a3ac705f2acd51a4613f9188c05c91d0d">Valid</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>DomElementType</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>a3225f485902921fedb33dc534326a782</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceWt.html" anchor="a3225f485902921fedb33dc534326a782a7fc56270e7a70fa81a5935b72eacbe29">A</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a3225f485902921fedb33dc534326a782a19d3326f3137cbadd21ce901a9bed4a7">BR</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a3225f485902921fedb33dc534326a782a57b35198356d373bcd2a6e08abcb3795">BUTTON</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a3225f485902921fedb33dc534326a782aa44a065875f5d66d41474bb9bfb0ce05">COL</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a3225f485902921fedb33dc534326a782ad3b911c772b64841c89e56263fc3b563">COLGROUP</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a3225f485902921fedb33dc534326a782a29bbf66f7f8529ec47e394fb5a36c646">DIV</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a3225f485902921fedb33dc534326a782aadad5d6784bb002ac2c64c6cea83db26">FIELDSET</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a3225f485902921fedb33dc534326a782a03c37111e264eee423ada395dd6474aa">FORM</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a3225f485902921fedb33dc534326a782a106530dc42baa21c67f8a3af4d7fd9e1">H1</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a3225f485902921fedb33dc534326a782aca2bf3f6b7e18a508253e9521510a4b5">H2</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a3225f485902921fedb33dc534326a782ab14763210c3ab7284e9cbe731d7dc2a5">H3</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a3225f485902921fedb33dc534326a782a6b57370ba89bd88a2d6d819d65f6007a">H4</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a3225f485902921fedb33dc534326a782a830652084dda69b6b957e2c3a7bd9b18">H5</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a3225f485902921fedb33dc534326a782a2ac6cc2e6434c3db7291b230f3c36b39">H6</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a3225f485902921fedb33dc534326a782a31e5ffbe4c0d489a392f12ebeb163c77">IFRAME</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a3225f485902921fedb33dc534326a782ab03d9d40b1fb78805d1552b3d29c9ef3">IMG</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a3225f485902921fedb33dc534326a782aa84cc046d48610b05c21fd3670d0c829">INPUT</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a3225f485902921fedb33dc534326a782a6f434c508ad901b8667ed22f713e52bb">LABEL</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a3225f485902921fedb33dc534326a782ae986ff2a70aff886e574f489aa8d55ee">LEGEND</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a3225f485902921fedb33dc534326a782a14efbb26a99dc4820b9928957704cb8f">LI</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a3225f485902921fedb33dc534326a782ab406571b7334cfe40767dc13498c1896">OL</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a3225f485902921fedb33dc534326a782ae1c4a02aed2e485ae96bc5a5b1d01ee5">OPTION</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a3225f485902921fedb33dc534326a782a5b26faf932d04f134a2cf70e96c4c548">UL</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a3225f485902921fedb33dc534326a782abc283a640f11da0ce7f95dd103c0b38f">SCRIPT</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a3225f485902921fedb33dc534326a782a63225f19fccb18e7c709f1fa11bc738e">SELECT</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a3225f485902921fedb33dc534326a782ae0e69056c3efd361a1f5af219082c053">SPAN</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a3225f485902921fedb33dc534326a782a34bbae0aee41ddd6a73697584a20afc6">TABLE</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a3225f485902921fedb33dc534326a782a146dad2f9e9363d92279416872b441d9">TBODY</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a3225f485902921fedb33dc534326a782aa50ef0830f32f94f6373c2a8c3d08f97">THEAD</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a3225f485902921fedb33dc534326a782a14a387ba5bc63c2c7bd0c71e6c2048eb">TFOOT</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a3225f485902921fedb33dc534326a782a5b79c40fa7c2bd12dd2df53c4a2b6836">TH</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a3225f485902921fedb33dc534326a782afc089489555aee7519548ff7f589f384">TD</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a3225f485902921fedb33dc534326a782a4553d79469c8feaeed5295bc89c179f7">TEXTAREA</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a3225f485902921fedb33dc534326a782af406a321eb1e1466cb33f5112f6ddcc0">OPTGROUP</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a3225f485902921fedb33dc534326a782aebe021079e5a3c4f42ca6119eab92633">TR</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a3225f485902921fedb33dc534326a782a44c29edb103a2872f519ad0c9a0fdaaa">P</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a3225f485902921fedb33dc534326a782a0f4bf5b6d48fde226da8f85aa6b29b91">CANVAS</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a3225f485902921fedb33dc534326a782a5af1a3a285c2bdee4192223e31e1f833">MAP</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a3225f485902921fedb33dc534326a782a639aaa22a784d5e5cb03a522267e79c4">AREA</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a3225f485902921fedb33dc534326a782a264709ebce8699b21d39a308b1f9d32c">STYLE</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a3225f485902921fedb33dc534326a782a8eee8e217391199668cbac89472ace53">OBJECT</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a3225f485902921fedb33dc534326a782a171596b93b0174fc4f8736bf67dbebd0">PARAM</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a3225f485902921fedb33dc534326a782ae423b8bde9bfbfd7e9409b23b23aed91">AUDIO</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a3225f485902921fedb33dc534326a782ae60ae31f67ab883c746bb71c7a145c18">VIDEO</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a3225f485902921fedb33dc534326a782ae60b4854b44ccfb2d92aa6f035171bb4">SOURCE</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a3225f485902921fedb33dc534326a782a9d5ed678fe57bcca610140957afab571">B</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a3225f485902921fedb33dc534326a782a3dfb3ae3cdaa322f0388f1a531c39520">STRONG</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a3225f485902921fedb33dc534326a782ab95c3d50fa47443166f7d356eaed8006">EM</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a3225f485902921fedb33dc534326a782add7536794b63bf90eccfd37f9b147d7f">I</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a3225f485902921fedb33dc534326a782afd4c638da5f85d025963f99fe90b1b1a">HR</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a3225f485902921fedb33dc534326a782a696b031073e74bf2cb98e5ef201d4aa3">UNKNOWN</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="a3225f485902921fedb33dc534326a782a03570470bad94692ce93e32700d2e1cb">OTHER</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Property</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>aeb01f25d7c9d4a4498fb3dadc8d168c5</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceWt.html" anchor="aeb01f25d7c9d4a4498fb3dadc8d168c5a78709fe28a58b76cd94160e9908dc2e1">InnerHTML</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="aeb01f25d7c9d4a4498fb3dadc8d168c5a76c723fb0d3b5a16be1a579f05faa720">AddedInnerHTML</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="aeb01f25d7c9d4a4498fb3dadc8d168c5a689202409e48743b914713f96d93947c">Value</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="aeb01f25d7c9d4a4498fb3dadc8d168c5ab9f5c797ebbf55adccdd8539a65a0241">Disabled</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="aeb01f25d7c9d4a4498fb3dadc8d168c5a2627637e263ef687fa978b576580b8b1">Checked</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="aeb01f25d7c9d4a4498fb3dadc8d168c5a91b442d385b54e1418d81adc34871053">Selected</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="aeb01f25d7c9d4a4498fb3dadc8d168c5ae28ca4c452274470e173e0a9adaa4b64">SelectedIndex</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="aeb01f25d7c9d4a4498fb3dadc8d168c5aa0bf169f2539e893e00d7b1296bc4d8e">Multiple</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="aeb01f25d7c9d4a4498fb3dadc8d168c5ac41a31890959544c6523af684561abe5">Target</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="aeb01f25d7c9d4a4498fb3dadc8d168c5a801ab24683a4a8c433c6eb40c48bcd9d">Download</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="aeb01f25d7c9d4a4498fb3dadc8d168c5aa2d00c353d1f9a5f07852650030dbd53">Indeterminate</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="aeb01f25d7c9d4a4498fb3dadc8d168c5a276e79316561733d64abdf00f8e8ae48">Src</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="aeb01f25d7c9d4a4498fb3dadc8d168c5a8ab36d3d5fe71a7f14edea4b0c90c88f">ColSpan</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="aeb01f25d7c9d4a4498fb3dadc8d168c5a0810107fcec81a79e1b30d4a8e667a5f">RowSpan</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="aeb01f25d7c9d4a4498fb3dadc8d168c5a131fb182a881796e7606ed6da27f1197">ReadOnly</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="aeb01f25d7c9d4a4498fb3dadc8d168c5ae8a4907ab3bd4dc4470f6cadb777b164">TabIndex</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="aeb01f25d7c9d4a4498fb3dadc8d168c5ab021df6aac4654c454f46c77646e745f">Label</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="aeb01f25d7c9d4a4498fb3dadc8d168c5a9bd81329febf6efe22788e03ddeaf0af">Class</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="aeb01f25d7c9d4a4498fb3dadc8d168c5a68753d36ec0c4d7768b20993268d68d1">Placeholder</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="aeb01f25d7c9d4a4498fb3dadc8d168c5aae284f900f9d6e21ba69144cfc91e41b">Style</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="aeb01f25d7c9d4a4498fb3dadc8d168c5a9a6d2983cf52b0bc126b72e819025266">StyleWidthExpression</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="aeb01f25d7c9d4a4498fb3dadc8d168c5ac89d9e1991e48f708218a77eea32c9a7">StylePosition</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="aeb01f25d7c9d4a4498fb3dadc8d168c5a5a034dd0f4b8d2e40978d1ea8a860fef">StyleZIndex</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="aeb01f25d7c9d4a4498fb3dadc8d168c5a27fbb6def971b148770bd347b7b4da62">StyleFloat</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="aeb01f25d7c9d4a4498fb3dadc8d168c5a1e435f182505e886a0be9db1c99b35e0">StyleClear</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="aeb01f25d7c9d4a4498fb3dadc8d168c5a3e65b1ddb453ac33d399141efde29d49">StyleWidth</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="aeb01f25d7c9d4a4498fb3dadc8d168c5a87d37dc273f9d828344586c92acf41cf">StyleHeight</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="aeb01f25d7c9d4a4498fb3dadc8d168c5a74b1e72270ef71ba51c3eb3e7b3c60aa">StyleLineHeight</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="aeb01f25d7c9d4a4498fb3dadc8d168c5a3bbab5294d5ef6b6260be153d8e116f4">StyleMinWidth</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="aeb01f25d7c9d4a4498fb3dadc8d168c5afe4c15f7bd39d072991a1dbf7269d54d">StyleMinHeight</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="aeb01f25d7c9d4a4498fb3dadc8d168c5a54849e2bdf1214e76f534704a1574608">StyleMaxWidth</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="aeb01f25d7c9d4a4498fb3dadc8d168c5a79771ebe35cc23cc6ce928aab2917259">StyleMaxHeight</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="aeb01f25d7c9d4a4498fb3dadc8d168c5abe2ef6064b4e15eb75ace4c4affd8954">StyleLeft</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="aeb01f25d7c9d4a4498fb3dadc8d168c5aeed22af96a4ff6afcb7ac67a93a4f843">StyleRight</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="aeb01f25d7c9d4a4498fb3dadc8d168c5a3b2c582dd51aa41aa4f6f437047438a9">StyleTop</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="aeb01f25d7c9d4a4498fb3dadc8d168c5af7590d77f25134a7a54dbf4e077b24fe">StyleBottom</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="aeb01f25d7c9d4a4498fb3dadc8d168c5a137ccb5e663588f75ddde1be8a3cbd34">StyleVerticalAlign</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="aeb01f25d7c9d4a4498fb3dadc8d168c5a0bc80cad305e80322c7e30499bd433b0">StyleTextAlign</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="aeb01f25d7c9d4a4498fb3dadc8d168c5a3031731a3e7683775d6578415570c79e">StylePadding</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="aeb01f25d7c9d4a4498fb3dadc8d168c5a4e68c07e9aa5672383448cb68a94d50b">StylePaddingTop</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="aeb01f25d7c9d4a4498fb3dadc8d168c5abd3595d5024d0374ffa217900460bb1f">StylePaddingRight</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="aeb01f25d7c9d4a4498fb3dadc8d168c5a186f6fba62f6cb39a2a2d4f1232a23a9">StylePaddingBottom</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="aeb01f25d7c9d4a4498fb3dadc8d168c5a21a137c910932bf5329f45bdce7eff4f">StylePaddingLeft</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="aeb01f25d7c9d4a4498fb3dadc8d168c5a3eb8bda005b89c531f860b41a96cd21f">StyleMargin</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="aeb01f25d7c9d4a4498fb3dadc8d168c5ab622a03f9b1154f3f2c0043659a1f464">StyleMarginTop</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="aeb01f25d7c9d4a4498fb3dadc8d168c5ace39b30cac8208378bea56739551465c">StyleMarginRight</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="aeb01f25d7c9d4a4498fb3dadc8d168c5a3410c07cbaf9dabecf98d3bf7e3d9893">StyleMarginBottom</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="aeb01f25d7c9d4a4498fb3dadc8d168c5a667da9fb0b5f31093ce78a7392cb5841">StyleMarginLeft</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="aeb01f25d7c9d4a4498fb3dadc8d168c5a5f2e6f12345f6f6ec38ecf21d99ad262">StyleCursor</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="aeb01f25d7c9d4a4498fb3dadc8d168c5a79da135c2eba572c91d45d5eb40a95dc">StyleBorderTop</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="aeb01f25d7c9d4a4498fb3dadc8d168c5a56e0beb895b6f3b0da4f068028f5fb72">StyleBorderRight</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="aeb01f25d7c9d4a4498fb3dadc8d168c5a566336e45e0e8dc68c721128686fc295">StyleBorderBottom</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="aeb01f25d7c9d4a4498fb3dadc8d168c5a96cd29cb9cb6707e89e57b92e5c78bf2">StyleBorderLeft</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="aeb01f25d7c9d4a4498fb3dadc8d168c5a3b0552d1db8180713ef7c79f881f12e6">StyleBorderColorTop</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="aeb01f25d7c9d4a4498fb3dadc8d168c5a4aedfdf9d73489ea31f6d574bfa415c9">StyleBorderColorRight</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="aeb01f25d7c9d4a4498fb3dadc8d168c5ae6a1de20a403b2836e598a13e730b695">StyleBorderColorBottom</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="aeb01f25d7c9d4a4498fb3dadc8d168c5aa23e2bd8fe23897428e23ece3b603a83">StyleBorderColorLeft</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="aeb01f25d7c9d4a4498fb3dadc8d168c5a2be3bcc198702a722bfc924357390f5f">StyleBorderWidthTop</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="aeb01f25d7c9d4a4498fb3dadc8d168c5aa598c734d5a07fca0b15ec0c8637c323">StyleBorderWidthRight</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="aeb01f25d7c9d4a4498fb3dadc8d168c5ab66f2d3a60e534dcb3bd12b3ded0ac6f">StyleBorderWidthBottom</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="aeb01f25d7c9d4a4498fb3dadc8d168c5a4dcbbc30315797ee168ac77b5a2c63b4">StyleBorderWidthLeft</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="aeb01f25d7c9d4a4498fb3dadc8d168c5a71031f41a6512726b3ed726b5215a29b">StyleColor</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="aeb01f25d7c9d4a4498fb3dadc8d168c5ac61b27964b91062cc639e8b002d262a5">StyleOverflowX</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="aeb01f25d7c9d4a4498fb3dadc8d168c5ad51e573696d16ee0b39746993b6a3a0d">StyleOverflowY</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="aeb01f25d7c9d4a4498fb3dadc8d168c5af636dfa41ec7450d87491a58b51c8999">StyleOpacity</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="aeb01f25d7c9d4a4498fb3dadc8d168c5a047df2f0037dc25a7fa9456a0960dcdb">StyleFontFamily</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="aeb01f25d7c9d4a4498fb3dadc8d168c5a850247450ecda41f6e1585a29f68d20f">StyleFontStyle</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="aeb01f25d7c9d4a4498fb3dadc8d168c5a90410abe44ec444e4e8a314d5b6ed4c1">StyleFontVariant</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="aeb01f25d7c9d4a4498fb3dadc8d168c5a460baf93210f581167e83feb26c271e1">StyleFontWeight</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="aeb01f25d7c9d4a4498fb3dadc8d168c5a6e868961a911c6e1699988ec9da5d85e">StyleFontSize</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="aeb01f25d7c9d4a4498fb3dadc8d168c5afc1c52af895de03bd5004e0f0697da23">StyleBackgroundColor</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="aeb01f25d7c9d4a4498fb3dadc8d168c5a0e788608fb221a73e5fbe8a0dc4b7a04">StyleBackgroundImage</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="aeb01f25d7c9d4a4498fb3dadc8d168c5aeecf129745a6d9fe026e9264d4ec31ae">StyleBackgroundRepeat</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="aeb01f25d7c9d4a4498fb3dadc8d168c5a77668f64857f2924ceb428d103972009">StyleBackgroundAttachment</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="aeb01f25d7c9d4a4498fb3dadc8d168c5a4ecc58825e432946d3a21cdc32d1fb05">StyleBackgroundPosition</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="aeb01f25d7c9d4a4498fb3dadc8d168c5ae29aa92c197ce7c35feb47de49aedd92">StyleTextDecoration</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="aeb01f25d7c9d4a4498fb3dadc8d168c5a3c22060d32ec442761ee80fcdfd18191">StyleWhiteSpace</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="aeb01f25d7c9d4a4498fb3dadc8d168c5a818c4deada66a781c3e5a3527a1d779d">StyleTableLayout</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="aeb01f25d7c9d4a4498fb3dadc8d168c5a3cc78df6aa797693ffe11dcb330a7c06">StyleBorderSpacing</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="aeb01f25d7c9d4a4498fb3dadc8d168c5a23fad8622e70f37becf554949c0eba2c">StyleBorderCollapse</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="aeb01f25d7c9d4a4498fb3dadc8d168c5a7a6c1445cbde1bc840a1298044e471dd">StylePageBreakBefore</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="aeb01f25d7c9d4a4498fb3dadc8d168c5acc34afbe6287713d3706dabcd5bd44f3">StylePageBreakAfter</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="aeb01f25d7c9d4a4498fb3dadc8d168c5a569ab3c1c138be0a712477bdb90d45e6">StyleZoom</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="aeb01f25d7c9d4a4498fb3dadc8d168c5a19ada592779ed357543bee1539be67c5">StyleVisibility</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="aeb01f25d7c9d4a4498fb3dadc8d168c5abf0a43f236295e326931c8cc2818ffa7">StyleDisplay</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="aeb01f25d7c9d4a4498fb3dadc8d168c5aa4d163defdface80d6a1c572c340636c">StyleBoxSizing</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="aeb01f25d7c9d4a4498fb3dadc8d168c5a883e8cd86df92b8478152cdd7d0b8fb6">StyleFlex</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="aeb01f25d7c9d4a4498fb3dadc8d168c5abb53e6666dc5970487d60f8558736d95">StyleFlexFlow</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="aeb01f25d7c9d4a4498fb3dadc8d168c5ad26f28708602a57dccff84a09c3c8c80">StyleAlignSelf</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="aeb01f25d7c9d4a4498fb3dadc8d168c5a79ff7663f0f61255053d74cab367a00e">StyleJustifyContent</enumvalue>
      <enumvalue file="namespaceWt.html" anchor="aeb01f25d7c9d4a4498fb3dadc8d168c5a40c3d464c85d585a643305faa4b4bcff">LastPlusOne</enumvalue>
    </member>
    <member kind="function">
      <type>WString</type>
      <name>asString</name>
      <anchorfile>group__modelview.html</anchorfile>
      <anchor>gaac976f394f370d3d62c29791b13a0049</anchor>
      <arglist>(const cpp17::any &amp;v, const WString &amp;formatString=WString())</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>asNumber</name>
      <anchorfile>group__modelview.html</anchorfile>
      <anchor>gae28d64fd1a8ea0a7d2583795026bb91a</anchor>
      <arglist>(const cpp17::any &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>registerType</name>
      <anchorfile>group__modelview.html</anchorfile>
      <anchor>gaeb2f9c583490833afd55d65402b4fea9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>WGenericMatrix&lt; T, A, C &gt;</type>
      <name>operator*</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>aeb8869eba4417a008ff4e53236a8ee02</anchor>
      <arglist>(const WGenericMatrix&lt; T, A, B &gt; &amp;l, const WGenericMatrix&lt; T, B, C &gt; &amp;r)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>a8118c182b62a6d29b02d500aaa77d460</anchor>
      <arglist>(std::ostream &amp;os, const WGenericMatrix&lt; T, Rows, Cols &gt; &amp;m)</arglist>
    </member>
    <member kind="function">
      <type>WGenericMatrix&lt; T, Rows, Cols &gt;</type>
      <name>operator*</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>aa624a82ce2f218ac739614e09f9c18e2</anchor>
      <arglist>(const T &amp;factor, const WGenericMatrix&lt; T, Rows, Cols &gt; &amp;m)</arglist>
    </member>
    <member kind="function">
      <type>WGenericMatrix&lt; T, Rows, Cols &gt;</type>
      <name>operator*</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>a3474b9c9b741cdc9919f0ee3b33d7baa</anchor>
      <arglist>(const WGenericMatrix&lt; T, Rows, Cols &gt; &amp;m, const T &amp;factor)</arglist>
    </member>
    <member kind="function">
      <type>WGenericMatrix&lt; T, Rows, Cols &gt;</type>
      <name>operator/</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>af6adf84340689560d8216e1a65ca5147</anchor>
      <arglist>(const WGenericMatrix&lt; T, Rows, Cols &gt; &amp;m, const T &amp;factor)</arglist>
    </member>
    <member kind="function">
      <type>WGenericMatrix&lt; T, Rows, Cols &gt;</type>
      <name>operator+</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>a2f95fa2249a3c0e0a32e353f10b8303e</anchor>
      <arglist>(const WGenericMatrix&lt; T, Rows, Cols &gt; &amp;l, const WGenericMatrix&lt; T, Rows, Cols &gt; &amp;r)</arglist>
    </member>
    <member kind="function">
      <type>WGenericMatrix&lt; T, Rows, Cols &gt;</type>
      <name>operator-</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>a4fb0ea8c1fe6cb33b6b81269729e8bf5</anchor>
      <arglist>(const WGenericMatrix&lt; T, Rows, Cols &gt; &amp;l, const WGenericMatrix&lt; T, Rows, Cols &gt; &amp;r)</arglist>
    </member>
    <member kind="function">
      <type>WGenericMatrix&lt; T, Rows, Cols &gt;</type>
      <name>operator-</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>a20f219000b9a2253b4b9a5dfcd6394f4</anchor>
      <arglist>(const WGenericMatrix&lt; T, Rows, Cols &gt; &amp;m)</arglist>
    </member>
    <member kind="function">
      <type>std::u16string</type>
      <name>toUTF16</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>a6b9bdc7db1dfe8a1fe8cdcf66970f5fb</anchor>
      <arglist>(const std::u32string &amp;s)</arglist>
    </member>
    <member kind="function">
      <type>std::u32string</type>
      <name>toUTF32</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>acdfda93f2a432f5f36dbd4f1a2576a39</anchor>
      <arglist>(const std::u16string &amp;s)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const WFlags&lt; AlignmentFlag &gt;</type>
      <name>AlignHorizontalMask</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>acf15143d8188dfb0bced5e5032400b16</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const WFlags&lt; AlignmentFlag &gt;</type>
      <name>AlignVerticalMask</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>ab1b563b1c886c2928690f55b821be9f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const WFlags&lt; MatchFlag &gt;</type>
      <name>MatchTypeMask</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>ac1a13c4f81c39de4d4e39ba0eb1ecae6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const WFlags&lt; ValidationStyleFlag &gt;</type>
      <name>ValidationAllStyles</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>a44b175ce64c9b70555d17292cf2ae9cb</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Wt::Auth</name>
    <filename>namespaceWt_1_1Auth.html</filename>
    <class kind="class">Wt::Auth::AbstractPasswordService</class>
    <class kind="class">Wt::Auth::AbstractUserDatabase</class>
    <class kind="class">Wt::Auth::AuthModel</class>
    <class kind="class">Wt::Auth::AuthService</class>
    <class kind="class">Wt::Auth::AuthTokenResult</class>
    <class kind="class">Wt::Auth::AuthWidget</class>
    <class kind="class">Wt::Auth::BCryptHashFunction</class>
    <class kind="class">Wt::Auth::EmailTokenResult</class>
    <class kind="class">Wt::Auth::FacebookService</class>
    <class kind="class">Wt::Auth::FormBaseModel</class>
    <class kind="class">Wt::Auth::GoogleService</class>
    <class kind="class">Wt::Auth::HashFunction</class>
    <class kind="class">Wt::Auth::Identity</class>
    <class kind="class">Wt::Auth::IssuedToken</class>
    <class kind="class">Wt::Auth::Login</class>
    <class kind="class">Wt::Auth::LostPasswordWidget</class>
    <class kind="class">Wt::Auth::MD5HashFunction</class>
    <class kind="class">Wt::Auth::OAuthAccessToken</class>
    <class kind="class">Wt::Auth::OAuthAuthorizationEndpointProcess</class>
    <class kind="class">Wt::Auth::OAuthClient</class>
    <class kind="class">Wt::Auth::OAuthProcess</class>
    <class kind="class">Wt::Auth::OAuthService</class>
    <class kind="class">Wt::Auth::OAuthTokenEndpoint</class>
    <class kind="class">Wt::Auth::OidcProcess</class>
    <class kind="class">Wt::Auth::OidcService</class>
    <class kind="class">Wt::Auth::OidcUserInfoEndpoint</class>
    <class kind="class">Wt::Auth::PasswordHash</class>
    <class kind="class">Wt::Auth::PasswordPromptDialog</class>
    <class kind="class">Wt::Auth::PasswordService</class>
    <class kind="class">Wt::Auth::PasswordStrengthValidator</class>
    <class kind="class">Wt::Auth::PasswordVerifier</class>
    <class kind="class">Wt::Auth::RegistrationModel</class>
    <class kind="class">Wt::Auth::RegistrationWidget</class>
    <class kind="class">Wt::Auth::SHA1HashFunction</class>
    <class kind="class">Wt::Auth::Token</class>
    <class kind="class">Wt::Auth::UpdatePasswordWidget</class>
    <class kind="class">Wt::Auth::User</class>
    <member kind="enumeration">
      <type></type>
      <name>PasswordResult</name>
      <anchorfile>group__auth.html</anchorfile>
      <anchor>ga001a66930b52328e78649572d6922bcc</anchor>
      <arglist></arglist>
      <enumvalue file="group__auth.html" anchor="gga001a66930b52328e78649572d6922bccacf864008b2498f5579a674b5134a734d">PasswordInvalid</enumvalue>
      <enumvalue file="group__auth.html" anchor="gga001a66930b52328e78649572d6922bccaa3ad495c21cb8a19956d58b3bc2875e5">LoginThrottling</enumvalue>
      <enumvalue file="group__auth.html" anchor="gga001a66930b52328e78649572d6922bcca6f1fac82d80eceeff08437fdfad22ab0">PasswordValid</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>IdentityPolicy</name>
      <anchorfile>group__auth.html</anchorfile>
      <anchor>ga8ce12bbc04d68d5687f08abf2a209436</anchor>
      <arglist></arglist>
      <enumvalue file="group__auth.html" anchor="gga8ce12bbc04d68d5687f08abf2a209436a449f02c225b7a68a49d31537fc0710eb">LoginName</enumvalue>
      <enumvalue file="group__auth.html" anchor="gga8ce12bbc04d68d5687f08abf2a209436a1e674f0dd1434f2bb3fe5d645b0f9cc3">EmailAddress</enumvalue>
      <enumvalue file="group__auth.html" anchor="gga8ce12bbc04d68d5687f08abf2a209436aebb061953c0454b2c8ee7b0ac615ebcd">Optional</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>EmailTokenState</name>
      <anchorfile>namespaceWt_1_1Auth.html</anchorfile>
      <anchor>a1f693bf075f6b95a12af48a8896ee949</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceWt_1_1Auth.html" anchor="a1f693bf075f6b95a12af48a8896ee949a4bbb8f967da6d1a610596d7257179c2b">Invalid</enumvalue>
      <enumvalue file="namespaceWt_1_1Auth.html" anchor="a1f693bf075f6b95a12af48a8896ee949a24fe48030f7d3097d5882535b04c3fa8">Expired</enumvalue>
      <enumvalue file="namespaceWt_1_1Auth.html" anchor="a1f693bf075f6b95a12af48a8896ee949adc4acdfcdf7610ed96c0ae9107f5b6ac">UpdatePassword</enumvalue>
      <enumvalue file="namespaceWt_1_1Auth.html" anchor="a1f693bf075f6b95a12af48a8896ee949a8e3780e7013a5ae9a7a9a42f8a7cec32">EmailConfirmed</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>AuthTokenState</name>
      <anchorfile>namespaceWt_1_1Auth.html</anchorfile>
      <anchor>a8cb64e5713633b2b34a260dcd3c98507</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceWt_1_1Auth.html" anchor="a8cb64e5713633b2b34a260dcd3c98507a4bbb8f967da6d1a610596d7257179c2b">Invalid</enumvalue>
      <enumvalue file="namespaceWt_1_1Auth.html" anchor="a8cb64e5713633b2b34a260dcd3c98507a3ac705f2acd51a4613f9188c05c91d0d">Valid</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>LoginState</name>
      <anchorfile>group__auth.html</anchorfile>
      <anchor>ga0ce4a4a08ad982d03a99a5405394b796</anchor>
      <arglist></arglist>
      <enumvalue file="group__auth.html" anchor="gga0ce4a4a08ad982d03a99a5405394b796ae27816978dfe5f0f3acd72cee314955f">LoggedOut</enumvalue>
      <enumvalue file="group__auth.html" anchor="gga0ce4a4a08ad982d03a99a5405394b796ab9f5c797ebbf55adccdd8539a65a0241">Disabled</enumvalue>
      <enumvalue file="group__auth.html" anchor="gga0ce4a4a08ad982d03a99a5405394b796a7324e3727807d95037eb19d304fd91ec">Weak</enumvalue>
      <enumvalue file="group__auth.html" anchor="gga0ce4a4a08ad982d03a99a5405394b796ac43e0fd449c758dab8f891d8e19eb1a9">Strong</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PasswordStrengthType</name>
      <anchorfile>namespaceWt_1_1Auth.html</anchorfile>
      <anchor>a43f41ab9ea99d11623d16968bab01889</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OneCharClass</name>
      <anchorfile>namespaceWt_1_1Auth.html</anchorfile>
      <anchor>a43f41ab9ea99d11623d16968bab01889ace885b0f4be28583b65575067f91d9c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TwoCharClass</name>
      <anchorfile>namespaceWt_1_1Auth.html</anchorfile>
      <anchor>a43f41ab9ea99d11623d16968bab01889a996641f0ae77c83c04b8f183dabc1943</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PassPhrase</name>
      <anchorfile>namespaceWt_1_1Auth.html</anchorfile>
      <anchor>a43f41ab9ea99d11623d16968bab01889aa2f58b6ec70f85526ed7e8133deccc21</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ThreeCharClass</name>
      <anchorfile>namespaceWt_1_1Auth.html</anchorfile>
      <anchor>a43f41ab9ea99d11623d16968bab01889a905f2a972145e6698be20e19e0d2c105</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FourCharClass</name>
      <anchorfile>namespaceWt_1_1Auth.html</anchorfile>
      <anchor>a43f41ab9ea99d11623d16968bab01889a011cedce58ca4585dd6e13fd34b3fea0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>EmailPolicy</name>
      <anchorfile>namespaceWt_1_1Auth.html</anchorfile>
      <anchor>a0874d6434c0be04eb91be3574320585b</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceWt_1_1Auth.html" anchor="a0874d6434c0be04eb91be3574320585bab9f5c797ebbf55adccdd8539a65a0241">Disabled</enumvalue>
      <enumvalue file="namespaceWt_1_1Auth.html" anchor="a0874d6434c0be04eb91be3574320585baebb061953c0454b2c8ee7b0ac615ebcd">Optional</enumvalue>
      <enumvalue file="namespaceWt_1_1Auth.html" anchor="a0874d6434c0be04eb91be3574320585bae89ab59baea830bd940c300886c50efe">Mandatory</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>IdentityConfirmationMethod</name>
      <anchorfile>namespaceWt_1_1Auth.html</anchorfile>
      <anchor>a3e8db9f7b1ee55b3af10e8205c4dbf7d</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceWt_1_1Auth.html" anchor="a3e8db9f7b1ee55b3af10e8205c4dbf7da569f871bb28945b7f14560ed7ca98454">ConfirmWithPassword</enumvalue>
      <enumvalue file="namespaceWt_1_1Auth.html" anchor="a3e8db9f7b1ee55b3af10e8205c4dbf7da565b9495760e3fc86b318ed75e3007c7">ConfirmWithEmail</enumvalue>
      <enumvalue file="namespaceWt_1_1Auth.html" anchor="a3e8db9f7b1ee55b3af10e8205c4dbf7daf2e39b0c858d62e1d980ef8afb0e8593">ConfirmationNotPossible</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>AccountStatus</name>
      <anchorfile>namespaceWt_1_1Auth.html</anchorfile>
      <anchor>a70a1c0094c0dbc4731b3fd0dae143034</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceWt_1_1Auth.html" anchor="a70a1c0094c0dbc4731b3fd0dae143034ab9f5c797ebbf55adccdd8539a65a0241">Disabled</enumvalue>
      <enumvalue file="namespaceWt_1_1Auth.html" anchor="a70a1c0094c0dbc4731b3fd0dae143034a960b44c579bc2f6818d2daaf9e4c16f0">Normal</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>EmailTokenRole</name>
      <anchorfile>namespaceWt_1_1Auth.html</anchorfile>
      <anchor>abfeea7e2d9573be8c3e081cc6cd70b5d</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceWt_1_1Auth.html" anchor="abfeea7e2d9573be8c3e081cc6cd70b5dad82965ea13e793414854a9739c18ffd3">VerifyEmail</enumvalue>
      <enumvalue file="namespaceWt_1_1Auth.html" anchor="abfeea7e2d9573be8c3e081cc6cd70b5dad8cf16f16ab64adc115dac6bad6ab008">LostPassword</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ClientSecretMethod</name>
      <anchorfile>group__auth.html</anchorfile>
      <anchor>ga4e55a92c5ff4dd9bbd74439868b8400d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>HttpAuthorizationBasic</name>
      <anchorfile>group__auth.html</anchorfile>
      <anchor>gga4e55a92c5ff4dd9bbd74439868b8400da7abbd4cb30ddb5f4894fd5b1fa11f85e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PlainUrlParameter</name>
      <anchorfile>group__auth.html</anchorfile>
      <anchor>gga4e55a92c5ff4dd9bbd74439868b8400da6f32fdeb991dd909cbff2b9baca867bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RequestBodyParameter</name>
      <anchorfile>group__auth.html</anchorfile>
      <anchor>gga4e55a92c5ff4dd9bbd74439868b8400daa26946d893ee311f39ee3ae0e67137c9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Wt::Chart</name>
    <filename>namespaceWt_1_1Chart.html</filename>
    <class kind="struct">Wt::Chart::AxisConfig</class>
    <class kind="class">Wt::Chart::CurveLabel</class>
    <class kind="class">Wt::Chart::SeriesIterator</class>
    <class kind="class">Wt::Chart::WAbstractChart</class>
    <class kind="class">Wt::Chart::WAbstractChartModel</class>
    <class kind="class">Wt::Chart::WAbstractColorMap</class>
    <class kind="class">Wt::Chart::WAbstractDataSeries3D</class>
    <class kind="class">Wt::Chart::WAbstractGridData</class>
    <class kind="class">Wt::Chart::WAxis</class>
    <class kind="class">Wt::Chart::WAxisSliderWidget</class>
    <class kind="class">Wt::Chart::WBarSelection</class>
    <class kind="class">Wt::Chart::WCartesian3DChart</class>
    <class kind="class">Wt::Chart::WCartesianChart</class>
    <class kind="class">Wt::Chart::WChartPalette</class>
    <class kind="class">Wt::Chart::WDataSeries</class>
    <class kind="class">Wt::Chart::WEquidistantGridData</class>
    <class kind="class">Wt::Chart::WGridData</class>
    <class kind="class">Wt::Chart::WPieChart</class>
    <class kind="class">Wt::Chart::WPointSelection</class>
    <class kind="class">Wt::Chart::WScatterData</class>
    <class kind="class">Wt::Chart::WSelection</class>
    <class kind="class">Wt::Chart::WStandardChartProxyModel</class>
    <class kind="class">Wt::Chart::WStandardColorMap</class>
    <class kind="class">Wt::Chart::WStandardPalette</class>
    <class kind="class">Wt::Chart::WSurfaceSelection</class>
    <member kind="typedef">
      <type>std::map&lt; WFlags&lt; KeyboardModifier &gt;, InteractiveAction &gt;</type>
      <name>WheelActions</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>ga4faa1a57df4a4df163b9daf719b454bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Series3DType</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>gacca4e123c9e4b212050bcfac488fceee</anchor>
      <arglist></arglist>
      <enumvalue file="group__charts.html" anchor="ggacca4e123c9e4b212050bcfac488fceeea2a3cd5946cfd317eb99c3d32e35e2d4c">Point</enumvalue>
      <enumvalue file="group__charts.html" anchor="ggacca4e123c9e4b212050bcfac488fceeeaaa0d528ba11ea1485d466dfe1ea40819">Surface</enumvalue>
      <enumvalue file="group__charts.html" anchor="ggacca4e123c9e4b212050bcfac488fceeeaddc35f88fa71b6ef142ae61f35364653">Bar</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Axis</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>gaddb678f67fbd9f374fcee0922f158c9f</anchor>
      <arglist></arglist>
      <enumvalue file="group__charts.html" anchor="ggaddb678f67fbd9f374fcee0922f158c9fa02129bb861061d1a052c592e2dc6b383">X</enumvalue>
      <enumvalue file="group__charts.html" anchor="ggaddb678f67fbd9f374fcee0922f158c9fa57cec4137b614c87cb4e24a3d003a3e0">Y</enumvalue>
      <enumvalue file="group__charts.html" anchor="ggaddb678f67fbd9f374fcee0922f158c9fa5aefcaaf9790cc8ece124e274779ae94">Y1</enumvalue>
      <enumvalue file="group__charts.html" anchor="ggaddb678f67fbd9f374fcee0922f158c9fa2aa016bd54aa28710a128dff5a42e456">Y2</enumvalue>
      <enumvalue file="group__charts.html" anchor="ggaddb678f67fbd9f374fcee0922f158c9fa5d32a72e2819aaf62362fcc862b37c5e">Ordinate</enumvalue>
      <enumvalue file="group__charts.html" anchor="ggaddb678f67fbd9f374fcee0922f158c9fa11a797408c8edb4b9a2e44ca3b11a292">X3D</enumvalue>
      <enumvalue file="group__charts.html" anchor="ggaddb678f67fbd9f374fcee0922f158c9fa730488f53d4282788994ff91554c9d29">Y3D</enumvalue>
      <enumvalue file="group__charts.html" anchor="ggaddb678f67fbd9f374fcee0922f158c9fa4cfc1afb67e964963920f1c68ea1d31a">Z3D</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>AxisValue</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>ga77eb6d0cefa4a012950ea972b471b849</anchor>
      <arglist></arglist>
      <enumvalue file="group__charts.html" anchor="gga77eb6d0cefa4a012950ea972b471b849aa1d0ec6d56f8833a078b5a7ac4caf2d4">Minimum</enumvalue>
      <enumvalue file="group__charts.html" anchor="gga77eb6d0cefa4a012950ea972b471b849a8321e79c278ec510f63675c040594892">Maximum</enumvalue>
      <enumvalue file="group__charts.html" anchor="gga77eb6d0cefa4a012950ea972b471b849ad7ed4ee1df437474d005188535f74875">Zero</enumvalue>
      <enumvalue file="group__charts.html" anchor="gga77eb6d0cefa4a012950ea972b471b849a130c5b3473c57faa76e2a1c54e26f88e">Both</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>TickDirection</name>
      <anchorfile>namespaceWt_1_1Chart.html</anchorfile>
      <anchor>a2cdbbf3dff0fe5b35fcdbce84792463f</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceWt_1_1Chart.html" anchor="a2cdbbf3dff0fe5b35fcdbce84792463faeda0dcaadaa93d19d3e8be1a27e4a854">Outwards</enumvalue>
      <enumvalue file="namespaceWt_1_1Chart.html" anchor="a2cdbbf3dff0fe5b35fcdbce84792463fa2094b2fa3082c55abb44ea0522883f8b">Inwards</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>AxisScale</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>gadfcaed8cd6ff52f5747f7df48f2eeab6</anchor>
      <arglist></arglist>
      <enumvalue file="group__charts.html" anchor="ggadfcaed8cd6ff52f5747f7df48f2eeab6a4984667940802dedc139aa7a430a6553">Discrete</enumvalue>
      <enumvalue file="group__charts.html" anchor="ggadfcaed8cd6ff52f5747f7df48f2eeab6a32a843da6ea40ab3b17a3421ccdf671b">Linear</enumvalue>
      <enumvalue file="group__charts.html" anchor="ggadfcaed8cd6ff52f5747f7df48f2eeab6ace0be71e33226e4c1db2bcea5959f16b">Log</enumvalue>
      <enumvalue file="group__charts.html" anchor="ggadfcaed8cd6ff52f5747f7df48f2eeab6a44749712dbec183e983dcd78a7736c41">Date</enumvalue>
      <enumvalue file="group__charts.html" anchor="ggadfcaed8cd6ff52f5747f7df48f2eeab6a8cf10d2341ed01492506085688270c1e">DateTime</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>DateTimeUnit</name>
      <anchorfile>namespaceWt_1_1Chart.html</anchorfile>
      <anchor>a321da77821baec60d65cd72736768e04</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceWt_1_1Chart.html" anchor="a321da77821baec60d65cd72736768e04a8f19a8c7566af54ea8981029730e5465">Seconds</enumvalue>
      <enumvalue file="namespaceWt_1_1Chart.html" anchor="a321da77821baec60d65cd72736768e04af670ea66cfb0e90bd6090472ad692694">Minutes</enumvalue>
      <enumvalue file="namespaceWt_1_1Chart.html" anchor="a321da77821baec60d65cd72736768e04a6a7e73161603d87b26a8eac49dab0a9c">Hours</enumvalue>
      <enumvalue file="namespaceWt_1_1Chart.html" anchor="a321da77821baec60d65cd72736768e04ae807d3ccf8d24c8c1a3d86db5da78da8">Days</enumvalue>
      <enumvalue file="namespaceWt_1_1Chart.html" anchor="a321da77821baec60d65cd72736768e04aef831a7b020689074c3df21c36dfc3c0">Months</enumvalue>
      <enumvalue file="namespaceWt_1_1Chart.html" anchor="a321da77821baec60d65cd72736768e04ae4a00407f4e14849a66f076123f38494">Years</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>TickLength</name>
      <anchorfile>namespaceWt_1_1Chart.html</anchorfile>
      <anchor>aa40cdedac8c408d0cd50f6dc5e981939</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceWt_1_1Chart.html" anchor="aa40cdedac8c408d0cd50f6dc5e981939ad7ed4ee1df437474d005188535f74875">Zero</enumvalue>
      <enumvalue file="namespaceWt_1_1Chart.html" anchor="aa40cdedac8c408d0cd50f6dc5e981939a30bb747c98bccdd11b3f89e644c4d0ad">Short</enumvalue>
      <enumvalue file="namespaceWt_1_1Chart.html" anchor="aa40cdedac8c408d0cd50f6dc5e981939a8394f0347c184cf156ac5924dccb773b">Long</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Plane</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>ga6b93af055b0852d9a04e50a057a657ba</anchor>
      <arglist></arglist>
      <enumvalue file="group__charts.html" anchor="ga6b93af055b0852d9a04e50a057a657baa74c53bcd3dcb2bb79993b2fec37d362a">XY</enumvalue>
      <enumvalue file="group__charts.html" anchor="ga6b93af055b0852d9a04e50a057a657baa27db3b98d01e664c17a6620b222c6469">XZ</enumvalue>
      <enumvalue file="group__charts.html" anchor="ga6b93af055b0852d9a04e50a057a657baaffa4ba973372c3650fd0881abeca6512">YZ</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ChartUpdates</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>ga8e8aff145d7a6e03e84bab096a2254b3</anchor>
      <arglist></arglist>
      <enumvalue file="group__charts.html" anchor="ga8e8aff145d7a6e03e84bab096a2254b3a4744c8238d0c4642a50182fab97d66c5">CameraMatrix</enumvalue>
      <enumvalue file="group__charts.html" anchor="ga8e8aff145d7a6e03e84bab096a2254b3af221866805bf3d75f2e15ae9157c7cc3">GLContext</enumvalue>
      <enumvalue file="group__charts.html" anchor="ga8e8aff145d7a6e03e84bab096a2254b3ae5cf24f32112e34d91a03dec70224818">GLTextures</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>InteractiveAction</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>gada979ae7a2d2652d0b48f9d8004ea7d1</anchor>
      <arglist></arglist>
      <enumvalue file="group__charts.html" anchor="ggada979ae7a2d2652d0b48f9d8004ea7d1a5517fc80cd3145020faa411d8f545874">ZoomX</enumvalue>
      <enumvalue file="group__charts.html" anchor="ggada979ae7a2d2652d0b48f9d8004ea7d1ac31b1ae596f0225f36e91ecca55c71c6">ZoomY</enumvalue>
      <enumvalue file="group__charts.html" anchor="ggada979ae7a2d2652d0b48f9d8004ea7d1af8c18924dd06615bfb118db733702ecf">ZoomXY</enumvalue>
      <enumvalue file="group__charts.html" anchor="ggada979ae7a2d2652d0b48f9d8004ea7d1a6c5838d43ad155d5915b018d6e9b873e">ZoomMatching</enumvalue>
      <enumvalue file="group__charts.html" anchor="ggada979ae7a2d2652d0b48f9d8004ea7d1a0f00bc6b37f7083f90edaa5fe6c022d6">PanX</enumvalue>
      <enumvalue file="group__charts.html" anchor="ggada979ae7a2d2652d0b48f9d8004ea7d1a70f667d5421b6ec607fb2437eeed51b9">PanY</enumvalue>
      <enumvalue file="group__charts.html" anchor="ggada979ae7a2d2652d0b48f9d8004ea7d1ade42640a6ef6a592db1222b0c939210b">PanMatching</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SeriesType</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>ga44d64e4a9d08c7ef69648f4a9c3e4053</anchor>
      <arglist></arglist>
      <enumvalue file="group__charts.html" anchor="gga44d64e4a9d08c7ef69648f4a9c3e4053a2a3cd5946cfd317eb99c3d32e35e2d4c">Point</enumvalue>
      <enumvalue file="group__charts.html" anchor="gga44d64e4a9d08c7ef69648f4a9c3e4053a4803e6b9e63dabf04de980788d6a13c4">Line</enumvalue>
      <enumvalue file="group__charts.html" anchor="gga44d64e4a9d08c7ef69648f4a9c3e4053a2cb4d4a3f8dacd623fa045a44febd476">Curve</enumvalue>
      <enumvalue file="group__charts.html" anchor="gga44d64e4a9d08c7ef69648f4a9c3e4053addc35f88fa71b6ef142ae61f35364653">Bar</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>MarkerType</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>ga9f38f3460fb2575d5f4f1a1ac51a7db6</anchor>
      <arglist></arglist>
      <enumvalue file="group__charts.html" anchor="gga9f38f3460fb2575d5f4f1a1ac51a7db6a6adf97f83acf6453d4a6a4b1070f3754">None</enumvalue>
      <enumvalue file="group__charts.html" anchor="gga9f38f3460fb2575d5f4f1a1ac51a7db6aceb46ca115d05c51aa5a16a8867c3304">Square</enumvalue>
      <enumvalue file="group__charts.html" anchor="gga9f38f3460fb2575d5f4f1a1ac51a7db6a30954d90085f6eaaf5817917fc5fecb3">Circle</enumvalue>
      <enumvalue file="group__charts.html" anchor="gga9f38f3460fb2575d5f4f1a1ac51a7db6ae76b449b9fc8536af7557ffa6321d269">Cross</enumvalue>
      <enumvalue file="group__charts.html" anchor="gga9f38f3460fb2575d5f4f1a1ac51a7db6a727d820d1768aaa0b26040a70fc1028f">XCross</enumvalue>
      <enumvalue file="group__charts.html" anchor="gga9f38f3460fb2575d5f4f1a1ac51a7db6a5e5500cb2b82eb72d550de644bd1b64b">Triangle</enumvalue>
      <enumvalue file="group__charts.html" anchor="gga9f38f3460fb2575d5f4f1a1ac51a7db6a90589c47f06eb971d548591f23c285af">Custom</enumvalue>
      <enumvalue file="group__charts.html" anchor="gga9f38f3460fb2575d5f4f1a1ac51a7db6a26f93e6e68e28a698377e941cb59f29a">Star</enumvalue>
      <enumvalue file="group__charts.html" anchor="gga9f38f3460fb2575d5f4f1a1ac51a7db6a16c50716e1215556854a27f071a50fb4">InvertedTriangle</enumvalue>
      <enumvalue file="group__charts.html" anchor="gga9f38f3460fb2575d5f4f1a1ac51a7db6a9c8ae0945940e5baec5a93c4c8ec869e">Asterisk</enumvalue>
      <enumvalue file="group__charts.html" anchor="gga9f38f3460fb2575d5f4f1a1ac51a7db6a8f7671185d590914ac21c7511767b699">Diamond</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>FillRangeType</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>ga7236e5b04bdb6f393162842982b4d1a0</anchor>
      <arglist></arglist>
      <enumvalue file="group__charts.html" anchor="gga7236e5b04bdb6f393162842982b4d1a0a6adf97f83acf6453d4a6a4b1070f3754">None</enumvalue>
      <enumvalue file="group__charts.html" anchor="gga7236e5b04bdb6f393162842982b4d1a0acae48b5275b95ab3ae03e365b32f86b2">MinimumValue</enumvalue>
      <enumvalue file="group__charts.html" anchor="gga7236e5b04bdb6f393162842982b4d1a0a55a7238410862f8958a8f57b6daab822">MaximumValue</enumvalue>
      <enumvalue file="group__charts.html" anchor="gga7236e5b04bdb6f393162842982b4d1a0a0600d7757a21d96591e24471b6d14335">ZeroValue</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ChartType</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>ga8d63464f873580c77508e1c0c26cbfea</anchor>
      <arglist></arglist>
      <enumvalue file="group__charts.html" anchor="gga8d63464f873580c77508e1c0c26cbfeaa3adbdb3ac060038aa0e6e6c138ef9873">Category</enumvalue>
      <enumvalue file="group__charts.html" anchor="gga8d63464f873580c77508e1c0c26cbfeaa09870720ca8134284e4e305ac6ce5f19">Scatter</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>AxisProperty</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>ga814d38dbe18cc597674f3833c1da84a5</anchor>
      <arglist></arglist>
      <enumvalue file="group__charts.html" anchor="gga814d38dbe18cc597674f3833c1da84a5a3ad6cb6100190c8f81e99fd52debf7ef">Labels</enumvalue>
      <enumvalue file="group__charts.html" anchor="gga814d38dbe18cc597674f3833c1da84a5a4803e6b9e63dabf04de980788d6a13c4">Line</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>LegendLocation</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>ga950e490e52f40d945b7301bf3831f2af</anchor>
      <arglist></arglist>
      <enumvalue file="group__charts.html" anchor="gga950e490e52f40d945b7301bf3831f2afa9b6d3000134648fc9f1e71094ae0847d">Inside</enumvalue>
      <enumvalue file="group__charts.html" anchor="gga950e490e52f40d945b7301bf3831f2afa76fbf0ccd7fcd64879c2ff2119dc15a4">Outside</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>CustomFlag</name>
      <anchorfile>namespaceWt_1_1Chart.html</anchorfile>
      <anchor>ae6c6a961de2fa5693cabc55d0b6cffbf</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceWt_1_1Chart.html" anchor="ae6c6a961de2fa5693cabc55d0b6cffbfaef829858697fad3a25da0692aaaeca0b">Pen</enumvalue>
      <enumvalue file="namespaceWt_1_1Chart.html" anchor="ae6c6a961de2fa5693cabc55d0b6cffbfaa25744428546172386b93dd44900a81a">Brush</enumvalue>
      <enumvalue file="namespaceWt_1_1Chart.html" anchor="ae6c6a961de2fa5693cabc55d0b6cffbfae6aea05ed3d9748f12467878e2649d6e">MarkerPen</enumvalue>
      <enumvalue file="namespaceWt_1_1Chart.html" anchor="ae6c6a961de2fa5693cabc55d0b6cffbfaaed7d39cab8b11bde0aeb5b026f504eb">MarkerBrush</enumvalue>
      <enumvalue file="namespaceWt_1_1Chart.html" anchor="ae6c6a961de2fa5693cabc55d0b6cffbfac6b7c4a8e185092f89b3338f52190d72">LabelColor</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>LabelOption</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>ga9345394a8eeda6800d8a24c5df44d983</anchor>
      <arglist></arglist>
      <enumvalue file="group__charts.html" anchor="gga9345394a8eeda6800d8a24c5df44d983a6adf97f83acf6453d4a6a4b1070f3754">None</enumvalue>
      <enumvalue file="group__charts.html" anchor="gga9345394a8eeda6800d8a24c5df44d983a9b6d3000134648fc9f1e71094ae0847d">Inside</enumvalue>
      <enumvalue file="group__charts.html" anchor="gga9345394a8eeda6800d8a24c5df44d983a76fbf0ccd7fcd64879c2ff2119dc15a4">Outside</enumvalue>
      <enumvalue file="group__charts.html" anchor="gga9345394a8eeda6800d8a24c5df44d983aa40c79f506c247b54376e25bdf769d4e">TextLabel</enumvalue>
      <enumvalue file="group__charts.html" anchor="gga9345394a8eeda6800d8a24c5df44d983a653c63c792f72bbdf78fb0ed08f22b6a">TextPercentage</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PaletteFlavour</name>
      <anchorfile>namespaceWt_1_1Chart.html</anchorfile>
      <anchor>a6ff71535c97a8648b2344ae6b5ec3b12</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceWt_1_1Chart.html" anchor="a6ff71535c97a8648b2344ae6b5ec3b12ae9bb5320b3890b6747c91b5a71ae5a01">Neutral</enumvalue>
      <enumvalue file="namespaceWt_1_1Chart.html" anchor="a6ff71535c97a8648b2344ae6b5ec3b12a114c3050111d8b8ddd830b99ccebd246">Bold</enumvalue>
      <enumvalue file="namespaceWt_1_1Chart.html" anchor="a6ff71535c97a8648b2344ae6b5ec3b12a70a51c85067ce6cd7fa1630b5a2d4951">Muted</enumvalue>
      <enumvalue file="namespaceWt_1_1Chart.html" anchor="a6ff71535c97a8648b2344ae6b5ec3b12a4f90b9cafa6fec5c0bd8cb1df7281693">GrayScale</enumvalue>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Wt::Core</name>
    <filename>namespaceWt_1_1Core.html</filename>
    <class kind="class">Wt::Core::observable</class>
    <class kind="class">Wt::Core::observing_ptr</class>
  </compound>
  <compound kind="namespace">
    <name>Wt::Dbo</name>
    <filename>namespaceWt_1_1Dbo.html</filename>
    <class kind="class">Wt::Dbo::AbstractQuery</class>
    <class kind="class">Wt::Dbo::Call</class>
    <class kind="class">Wt::Dbo::collection</class>
    <class kind="class">Wt::Dbo::Dbo</class>
    <class kind="class">Wt::Dbo::dbo_default_traits</class>
    <class kind="class">Wt::Dbo::dbo_traits</class>
    <class kind="class">Wt::Dbo::DirectBinding</class>
    <class kind="class">Wt::Dbo::DynamicBinding</class>
    <class kind="class">Wt::Dbo::Exception</class>
    <class kind="class">Wt::Dbo::FieldInfo</class>
    <class kind="class">Wt::Dbo::FixedSqlConnectionPool</class>
    <class kind="class">Wt::Dbo::ForeignKeyConstraint</class>
    <class kind="class">Wt::Dbo::JsonSerializer</class>
    <class kind="class">Wt::Dbo::NoUniqueResultException</class>
    <class kind="class">Wt::Dbo::ObjectNotFoundException</class>
    <class kind="class">Wt::Dbo::ptr</class>
    <class kind="class">Wt::Dbo::Query</class>
    <class kind="class">Wt::Dbo::query_result_traits</class>
    <class kind="class">Wt::Dbo::QueryModel</class>
    <class kind="class">Wt::Dbo::Session</class>
    <class kind="class">Wt::Dbo::sql_value_traits</class>
    <class kind="class">Wt::Dbo::SqlConnection</class>
    <class kind="class">Wt::Dbo::SqlConnectionPool</class>
    <class kind="class">Wt::Dbo::SqlStatement</class>
    <class kind="class">Wt::Dbo::StaleObjectException</class>
    <class kind="class">Wt::Dbo::Transaction</class>
    <class kind="class">Wt::Dbo::weak_ptr</class>
    <member kind="enumeration">
      <type></type>
      <name>RelationType</name>
      <anchorfile>group__dbo.html</anchorfile>
      <anchor>ga1d0ec6819b1bf5b7a88ad030b91ca564</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ManyToOne</name>
      <anchorfile>group__dbo.html</anchorfile>
      <anchor>gga1d0ec6819b1bf5b7a88ad030b91ca564a32d7393c325724244671b18be53058fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ManyToMany</name>
      <anchorfile>group__dbo.html</anchorfile>
      <anchor>gga1d0ec6819b1bf5b7a88ad030b91ca564ad0bd477ec215a878e0758cce8494af24</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>FlushMode</name>
      <anchorfile>namespaceWt_1_1Dbo.html</anchorfile>
      <anchor>a4c7a7297140823d0c45131edc4d7c616</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceWt_1_1Dbo.html" anchor="a4c7a7297140823d0c45131edc4d7c616a06b9281e396db002010bde1de57262eb">Auto</enumvalue>
      <enumvalue file="namespaceWt_1_1Dbo.html" anchor="a4c7a7297140823d0c45131edc4d7c616ae1ba155a9f2e8c3be94020eef32a0301">Manual</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SqlDateTimeType</name>
      <anchorfile>namespaceWt_1_1Dbo.html</anchorfile>
      <anchor>af213c090c1ccddc36d70d56e0804047f</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceWt_1_1Dbo.html" anchor="af213c090c1ccddc36d70d56e0804047fa44749712dbec183e983dcd78a7736c41">Date</enumvalue>
      <enumvalue file="namespaceWt_1_1Dbo.html" anchor="af213c090c1ccddc36d70d56e0804047fa8cf10d2341ed01492506085688270c1e">DateTime</enumvalue>
      <enumvalue file="namespaceWt_1_1Dbo.html" anchor="af213c090c1ccddc36d70d56e0804047faa76d4ef5f3f6a672bbfab2865563e530">Time</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>LimitQuery</name>
      <anchorfile>namespaceWt_1_1Dbo.html</anchorfile>
      <anchor>a5319c15910a9f9fd7744bb3061b9c643</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceWt_1_1Dbo.html" anchor="a5319c15910a9f9fd7744bb3061b9c643a80d2677cf518f4d04320042f4ea6c146">Limit</enumvalue>
      <enumvalue file="namespaceWt_1_1Dbo.html" anchor="a5319c15910a9f9fd7744bb3061b9c643ad87f9a4e40c391f9a425ab9b5ce33eb7">RowsFromTo</enumvalue>
      <enumvalue file="namespaceWt_1_1Dbo.html" anchor="a5319c15910a9f9fd7744bb3061b9c643a13c30ed92b9395146e5fd3d109a9aaef">Rownum</enumvalue>
      <enumvalue file="namespaceWt_1_1Dbo.html" anchor="a5319c15910a9f9fd7744bb3061b9c643a5d6b8dd0a1150b8303e4f191a67f2b1d">OffsetFetch</enumvalue>
      <enumvalue file="namespaceWt_1_1Dbo.html" anchor="a5319c15910a9f9fd7744bb3061b9c643a9ed2d871602556951e39f3cebd08d6cb">NotSupported</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>FieldFlags</name>
      <anchorfile>namespaceWt_1_1Dbo.html</anchorfile>
      <anchor>a7fd1619c66b2ecb3ac43403dbf20ae4f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SurrogateId</name>
      <anchorfile>namespaceWt_1_1Dbo.html</anchorfile>
      <anchor>a7fd1619c66b2ecb3ac43403dbf20ae4fa3b32daba47235e32e9914e5c0747bb29</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NaturalId</name>
      <anchorfile>namespaceWt_1_1Dbo.html</anchorfile>
      <anchor>a7fd1619c66b2ecb3ac43403dbf20ae4fa46941db8a8a345dae4a6fe4c47c9c81b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Version</name>
      <anchorfile>namespaceWt_1_1Dbo.html</anchorfile>
      <anchor>a7fd1619c66b2ecb3ac43403dbf20ae4fabd6f771c1454fd79dd5a90f110f690ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Mutable</name>
      <anchorfile>namespaceWt_1_1Dbo.html</anchorfile>
      <anchor>a7fd1619c66b2ecb3ac43403dbf20ae4fa2cf1ef5602ebcffa56f4a5fcab89cb7e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NeedsQuotes</name>
      <anchorfile>namespaceWt_1_1Dbo.html</anchorfile>
      <anchor>a7fd1619c66b2ecb3ac43403dbf20ae4faafd47e8a4f0ece5f298cc3a674082703</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ForeignKey</name>
      <anchorfile>namespaceWt_1_1Dbo.html</anchorfile>
      <anchor>a7fd1619c66b2ecb3ac43403dbf20ae4fa23df9d12dd2c2e324629d2b1dca7783f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>ForeignKeyConstraint</type>
      <name>operator|</name>
      <anchorfile>group__dbo.html</anchorfile>
      <anchor>ga3815c99266412f8ff53cf4c73546d918</anchor>
      <arglist>(ForeignKeyConstraint lhs, ForeignKeyConstraint rhs)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>id</name>
      <anchorfile>group__dbo.html</anchorfile>
      <anchor>ga42c50bd3bfc38ad8c810b30b279b0ba6</anchor>
      <arglist>(Action &amp;action, V &amp;value, const std::string &amp;name=&quot;id&quot;, int size=-1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>id</name>
      <anchorfile>group__dbo.html</anchorfile>
      <anchor>gaf6e683b7a7124e562134caf155ef0080</anchor>
      <arglist>(Action &amp;action, ptr&lt; C &gt; &amp;value, const std::string &amp;name, ForeignKeyConstraint constraints, int size=-1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>field</name>
      <anchorfile>group__dbo.html</anchorfile>
      <anchor>ga864a2e134149e7f614f45967777992c7</anchor>
      <arglist>(Action &amp;action, V &amp;value, const std::string &amp;name, int size=-1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>belongsTo</name>
      <anchorfile>group__dbo.html</anchorfile>
      <anchor>gac089020eff000d9e2c4ef72cf715bd21</anchor>
      <arglist>(Action &amp;action, ptr&lt; C &gt; &amp;value, const std::string &amp;name=std::string())</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>belongsTo</name>
      <anchorfile>group__dbo.html</anchorfile>
      <anchor>ga31a1292b863cb47ee1eb37c7ddd51fad</anchor>
      <arglist>(Action &amp;action, ptr&lt; C &gt; &amp;value, const std::string &amp;name, ForeignKeyConstraint constraints)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>belongsTo</name>
      <anchorfile>group__dbo.html</anchorfile>
      <anchor>gaa3a5224090f8bb4b423485328b5b3030</anchor>
      <arglist>(Action &amp;action, ptr&lt; C &gt; &amp;value, ForeignKeyConstraint constraints)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>hasOne</name>
      <anchorfile>group__dbo.html</anchorfile>
      <anchor>ga00a060d5f4764f673948989f21837548</anchor>
      <arglist>(Action &amp;action, weak_ptr&lt; C &gt; &amp;value, const std::string &amp;name=std::string())</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>hasMany</name>
      <anchorfile>group__dbo.html</anchorfile>
      <anchor>ga570b71f937c991b000b9db01b327a363</anchor>
      <arglist>(Action &amp;action, collection&lt; ptr&lt; C &gt; &gt; &amp;value, RelationType type, const std::string &amp;name=std::string())</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>hasMany</name>
      <anchorfile>group__dbo.html</anchorfile>
      <anchor>ga544e9fb1aa6202fa4e3b66be64aff098</anchor>
      <arglist>(Action &amp;action, collection&lt; ptr&lt; C &gt; &gt; &amp;value, RelationType type, const std::string &amp;name, const std::string &amp;joinId, ForeignKeyConstraint constraints=(NotNull|OnDeleteCascade))</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>jsonSerialize</name>
      <anchorfile>namespaceWt_1_1Dbo.html</anchorfile>
      <anchor>aa8abb2f60067220d566121a2e50bac2b</anchor>
      <arglist>(const C &amp;c, std::ostream &amp;out)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>jsonSerialize</name>
      <anchorfile>namespaceWt_1_1Dbo.html</anchorfile>
      <anchor>aa943300cf4dafdbd7c260e9350fc7d90</anchor>
      <arglist>(const ptr&lt; C &gt; &amp;c, std::ostream &amp;out)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>jsonSerialize</name>
      <anchorfile>namespaceWt_1_1Dbo.html</anchorfile>
      <anchor>af2ac587fc4ccd6667b10e7d7da6d43e8</anchor>
      <arglist>(const std::vector&lt; ptr&lt; C &gt; &gt; &amp;v, std::ostream &amp;out)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>jsonSerialize</name>
      <anchorfile>namespaceWt_1_1Dbo.html</anchorfile>
      <anchor>a08d24a5dbf79d78fe5c5d1d9522927ac</anchor>
      <arglist>(const collection&lt; C &gt; &amp;c, std::ostream &amp;out)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCustomLogger</name>
      <anchorfile>namespaceWt_1_1Dbo.html</anchorfile>
      <anchor>a9a326a13084b93cbb33bf1c470879b0d</anchor>
      <arglist>(const WLogSink &amp;customLogger)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>logToWt</name>
      <anchorfile>namespaceWt_1_1Dbo.html</anchorfile>
      <anchor>ac1c13200d17c21ab7a8dfe4cbf3aed05</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ptr&lt; T &gt;</type>
      <name>make_ptr</name>
      <anchorfile>namespaceWt_1_1Dbo.html</anchorfile>
      <anchor>a4b2cf43723fe059fb4c97362d01522ed</anchor>
      <arglist>(Args &amp;&amp;...args)</arglist>
    </member>
    <member kind="variable">
      <type>const ForeignKeyConstraint</type>
      <name>NotNull</name>
      <anchorfile>group__dbo.html</anchorfile>
      <anchor>ga538d2126ffe7787d14e72bfcdb266ff0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const ForeignKeyConstraint</type>
      <name>OnUpdateCascade</name>
      <anchorfile>group__dbo.html</anchorfile>
      <anchor>ga766c0992c040bee5b9b1f4dcfa18d11f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const ForeignKeyConstraint</type>
      <name>OnUpdateSetNull</name>
      <anchorfile>group__dbo.html</anchorfile>
      <anchor>ga5d603e49ff5ce63182c5e5d07f08fb21</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const ForeignKeyConstraint</type>
      <name>OnUpdateRestrict</name>
      <anchorfile>group__dbo.html</anchorfile>
      <anchor>ga4987bb75aacce8ada8662cc86a6fc3b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const ForeignKeyConstraint</type>
      <name>OnDeleteCascade</name>
      <anchorfile>group__dbo.html</anchorfile>
      <anchor>gaf873ff817052bf26092f89ab7cf9866f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const ForeignKeyConstraint</type>
      <name>OnDeleteSetNull</name>
      <anchorfile>group__dbo.html</anchorfile>
      <anchor>gaed6ad23f771e2c07db12249e1f6af390</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const ForeignKeyConstraint</type>
      <name>OnDeleteRestrict</name>
      <anchorfile>group__dbo.html</anchorfile>
      <anchor>gaae0942000fa56b27ca4185f76395c388</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const ForeignKeyConstraint</type>
      <name>OnShardId</name>
      <anchorfile>group__dbo.html</anchorfile>
      <anchor>ga8b4cc7710374c7bc9abda33a04f15533</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Wt::Http</name>
    <filename>namespaceWt_1_1Http.html</filename>
    <class kind="class">Wt::Http::Client</class>
    <class kind="class">Wt::Http::Message</class>
    <class kind="class">Wt::Http::Request</class>
    <class kind="class">Wt::Http::Response</class>
    <class kind="class">Wt::Http::ResponseContinuation</class>
    <class kind="class">Wt::Http::UploadedFile</class>
    <class kind="class">Wt::Http::WtClient</class>
    <member kind="typedef">
      <type>std::vector&lt; std::string &gt;</type>
      <name>ParameterValues</name>
      <anchorfile>namespaceWt_1_1Http.html</anchorfile>
      <anchor>ae1470e15e15eab123a19e4204f624598</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::map&lt; std::string, ParameterValues &gt;</type>
      <name>ParameterMap</name>
      <anchorfile>namespaceWt_1_1Http.html</anchorfile>
      <anchor>a3420f95c8bfecf3d46e65920c765345a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::multimap&lt; std::string, UploadedFile &gt;</type>
      <name>UploadedFileMap</name>
      <anchorfile>namespaceWt_1_1Http.html</anchorfile>
      <anchor>a90602329029048d738daae9ba63e059a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Method</name>
      <anchorfile>namespaceWt_1_1Http.html</anchorfile>
      <anchor>a4a1e30eb403b05b4e5afc5c6286dd6b9</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceWt_1_1Http.html" anchor="a4a1e30eb403b05b4e5afc5c6286dd6b9ac55582518cba2c464f29f5bae1c68def">Get</enumvalue>
      <enumvalue file="namespaceWt_1_1Http.html" anchor="a4a1e30eb403b05b4e5afc5c6286dd6b9a03d947a2158373c3b9d74325850cb8b9">Post</enumvalue>
      <enumvalue file="namespaceWt_1_1Http.html" anchor="a4a1e30eb403b05b4e5afc5c6286dd6b9ad0bf1810982e9728fcf3ac444a015373">Put</enumvalue>
      <enumvalue file="namespaceWt_1_1Http.html" anchor="a4a1e30eb403b05b4e5afc5c6286dd6b9af2a6c498fb90ee345d997f888fce3b18">Delete</enumvalue>
      <enumvalue file="namespaceWt_1_1Http.html" anchor="a4a1e30eb403b05b4e5afc5c6286dd6b9a156e10596fdc76ee5300bab931d89c0f">Patch</enumvalue>
      <enumvalue file="namespaceWt_1_1Http.html" anchor="a4a1e30eb403b05b4e5afc5c6286dd6b9a98921133d10fbdb0fb6dbb7b2648befe">Head</enumvalue>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Wt::Json</name>
    <filename>namespaceWt_1_1Json.html</filename>
    <class kind="class">Wt::Json::Array</class>
    <class kind="class">Wt::Json::Object</class>
    <class kind="class">Wt::Json::ParseError</class>
    <class kind="class">Wt::Json::TypeException</class>
    <class kind="class">Wt::Json::Value</class>
    <member kind="enumeration">
      <type></type>
      <name>Type</name>
      <anchorfile>group__json.html</anchorfile>
      <anchor>ga9952f308537fd1bea762f1bd114fd5c0</anchor>
      <arglist></arglist>
      <enumvalue file="group__json.html" anchor="gga9952f308537fd1bea762f1bd114fd5c0abbb93ef26e3c101ff11cdd21cab08a94">Null</enumvalue>
      <enumvalue file="group__json.html" anchor="gga9952f308537fd1bea762f1bd114fd5c0a27118326006d3829667a400ad23d5d98">String</enumvalue>
      <enumvalue file="group__json.html" anchor="gga9952f308537fd1bea762f1bd114fd5c0ac26f15e86e3de4c398a8273272aba034">Bool</enumvalue>
      <enumvalue file="group__json.html" anchor="gga9952f308537fd1bea762f1bd114fd5c0ab2ee912b91d69b435159c7c3f6df7f5f">Number</enumvalue>
      <enumvalue file="group__json.html" anchor="gga9952f308537fd1bea762f1bd114fd5c0a497031794414a552435f90151ac3b54b">Object</enumvalue>
      <enumvalue file="group__json.html" anchor="gga9952f308537fd1bea762f1bd114fd5c0a4410ec34d9e6c1a68100ca0ce033fb17">Array</enumvalue>
    </member>
    <member kind="function">
      <type>void</type>
      <name>parse</name>
      <anchorfile>group__json.html</anchorfile>
      <anchor>ga439195eac280701c9a1e5f0317149866</anchor>
      <arglist>(const std::string &amp;input, Value &amp;result, bool validateUTF8=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>parse</name>
      <anchorfile>group__json.html</anchorfile>
      <anchor>ga6bffd9987a94701113c2a0b36dbae11f</anchor>
      <arglist>(const std::string &amp;input, Value &amp;result, ParseError &amp;error, bool validateUTF8=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>parse</name>
      <anchorfile>group__json.html</anchorfile>
      <anchor>gae5a8ee7f690b0ce740eaec97c4e904d3</anchor>
      <arglist>(const std::string &amp;input, Object &amp;result, bool validateUTF8=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>parse</name>
      <anchorfile>group__json.html</anchorfile>
      <anchor>gad82449d21253601a5fefd66c47a34a8d</anchor>
      <arglist>(const std::string &amp;input, Object &amp;result, ParseError &amp;error, bool validateUTF8=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>parse</name>
      <anchorfile>group__json.html</anchorfile>
      <anchor>ga2a16c1036244bafd1b0da019889f4a51</anchor>
      <arglist>(const std::string &amp;input, Array &amp;result, bool validateUTF8=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>parse</name>
      <anchorfile>group__json.html</anchorfile>
      <anchor>gabbbe310f0e3efa9165d4adb20496082e</anchor>
      <arglist>(const std::string &amp;input, Array &amp;result, ParseError &amp;error, bool validateUTF8=true)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>serialize</name>
      <anchorfile>group__json.html</anchorfile>
      <anchor>gaf2f3c43075a71e68f0775538c052796a</anchor>
      <arglist>(const Object &amp;obj, int indentation=1)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>serialize</name>
      <anchorfile>group__json.html</anchorfile>
      <anchor>ga7f2355bbd9424e433433d42fd1a869b6</anchor>
      <arglist>(const Array &amp;arr, int indentation=1)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Wt::Mail</name>
    <filename>namespaceWt_1_1Mail.html</filename>
    <class kind="class">Wt::Mail::Client</class>
    <class kind="class">Wt::Mail::Mailbox</class>
    <class kind="class">Wt::Mail::Message</class>
    <member kind="enumeration">
      <type></type>
      <name>AuthenticationMethod</name>
      <anchorfile>namespaceWt_1_1Mail.html</anchorfile>
      <anchor>a2e673920327e6df099fe3ec0191fdc93</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceWt_1_1Mail.html" anchor="a2e673920327e6df099fe3ec0191fdc93a6adf97f83acf6453d4a6a4b1070f3754">None</enumvalue>
      <enumvalue file="namespaceWt_1_1Mail.html" anchor="a2e673920327e6df099fe3ec0191fdc93a4cd8413207629a963225f4314b53adcd">Plain</enumvalue>
      <enumvalue file="namespaceWt_1_1Mail.html" anchor="a2e673920327e6df099fe3ec0191fdc93a99dea78007133396a7b8ed70578ac6ae">Login</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>TransportEncryption</name>
      <anchorfile>namespaceWt_1_1Mail.html</anchorfile>
      <anchor>a55d819f240a3553f33e6416ecd05b91f</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceWt_1_1Mail.html" anchor="a55d819f240a3553f33e6416ecd05b91fa6adf97f83acf6453d4a6a4b1070f3754">None</enumvalue>
      <enumvalue file="namespaceWt_1_1Mail.html" anchor="a55d819f240a3553f33e6416ecd05b91fafa91df952500d196f6a10117d98843fe">StartTLS</enumvalue>
      <enumvalue file="namespaceWt_1_1Mail.html" anchor="a55d819f240a3553f33e6416ecd05b91fa099d7d04319e5191b7473e016c55e320">TLS</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>RecipientType</name>
      <anchorfile>namespaceWt_1_1Mail.html</anchorfile>
      <anchor>a787e77713f5f302a3bbba194ee2a1c3b</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceWt_1_1Mail.html" anchor="a787e77713f5f302a3bbba194ee2a1c3bae12167aa0a7698e6ebc92b4ce3909b53">To</enumvalue>
      <enumvalue file="namespaceWt_1_1Mail.html" anchor="a787e77713f5f302a3bbba194ee2a1c3bae4c8f1de1c0855c7c2be33196d3c3537">Cc</enumvalue>
      <enumvalue file="namespaceWt_1_1Mail.html" anchor="a787e77713f5f302a3bbba194ee2a1c3ba165e7ce57962f7d8e6831ee7a7eed5bb">Bcc</enumvalue>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Wt::Payment</name>
    <filename>namespaceWt_1_1Payment.html</filename>
    <class kind="class">Wt::Payment::Address</class>
    <class kind="class">Wt::Payment::Approval</class>
    <class kind="class">Wt::Payment::Customer</class>
    <class kind="class">Wt::Payment::Money</class>
    <class kind="class">Wt::Payment::Order</class>
    <class kind="class">Wt::Payment::OrderItem</class>
    <class kind="class">Wt::Payment::PayPalExpressCheckout</class>
    <class kind="class">Wt::Payment::PayPalService</class>
    <class kind="class">Wt::Payment::Result</class>
    <member kind="enumeration">
      <type></type>
      <name>PaymentAction</name>
      <anchorfile>namespaceWt_1_1Payment.html</anchorfile>
      <anchor>a64159a650673a19aa6f0314520a6a132</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceWt_1_1Payment.html" anchor="a64159a650673a19aa6f0314520a6a132af2cd171bd42220283b7a595c3ff2aaaf">Sale</enumvalue>
      <enumvalue file="namespaceWt_1_1Payment.html" anchor="a64159a650673a19aa6f0314520a6a132a9cd8a2455b1839ff98ef70c05b9b5983">Authorization</enumvalue>
      <enumvalue file="namespaceWt_1_1Payment.html" anchor="a64159a650673a19aa6f0314520a6a132aa240fa27925a635b08dc28c9e4f9216d">Order</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ApprovalOutcome</name>
      <anchorfile>namespaceWt_1_1Payment.html</anchorfile>
      <anchor>a9b9eed98ddab9fe1438912a49208680a</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceWt_1_1Payment.html" anchor="a9b9eed98ddab9fe1438912a49208680aa58d036b9b7f0e7eb38cfb90f1cc70a73">Denied</enumvalue>
      <enumvalue file="namespaceWt_1_1Payment.html" anchor="a9b9eed98ddab9fe1438912a49208680aa12c37c4278b8c0db6c2f65052569cd80">Interrupted</enumvalue>
      <enumvalue file="namespaceWt_1_1Payment.html" anchor="a9b9eed98ddab9fe1438912a49208680aa382ab522931673c11e398ead1b7b1678">Accepted</enumvalue>
    </member>
    <member kind="function">
      <type>Money</type>
      <name>operator+</name>
      <anchorfile>group__payment.html</anchorfile>
      <anchor>ga4baa8a860de871eac6c6eb28460b3513</anchor>
      <arglist>(const Money &amp;v1, const Money &amp;v2)</arglist>
    </member>
    <member kind="function">
      <type>Money</type>
      <name>operator-</name>
      <anchorfile>group__payment.html</anchorfile>
      <anchor>gad30769b03f1b83fc9927ceecc83de004</anchor>
      <arglist>(const Money &amp;v1, const Money &amp;v2)</arglist>
    </member>
    <member kind="function">
      <type>Money</type>
      <name>operator*</name>
      <anchorfile>group__payment.html</anchorfile>
      <anchor>gad617d33ce9aa8dce67b95b5d59ebbeed</anchor>
      <arglist>(const Money &amp;v1, double v2)</arglist>
    </member>
    <member kind="function">
      <type>Money</type>
      <name>operator*</name>
      <anchorfile>group__payment.html</anchorfile>
      <anchor>ga2243bbef2d69bdd0ae9cc64e087a1e09</anchor>
      <arglist>(double v1, const Money &amp;v2)</arglist>
    </member>
    <member kind="function">
      <type>Money</type>
      <name>operator/</name>
      <anchorfile>group__payment.html</anchorfile>
      <anchor>ga84918f6553520ecfd17a40d78a2f6d8b</anchor>
      <arglist>(const Money &amp;v1, double v2)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Wt::Render</name>
    <filename>namespaceWt_1_1Render.html</filename>
    <class kind="class">Wt::Render::WPdfRenderer</class>
    <class kind="class">Wt::Render::WTextRenderer</class>
  </compound>
  <compound kind="namespace">
    <name>Wt::Utils</name>
    <filename>namespaceWt_1_1Utils.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>HtmlEncodingFlag</name>
      <anchorfile>namespaceWt_1_1Utils.html</anchorfile>
      <anchor>a7b778fbf129e065e259109ec01f8e100</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceWt_1_1Utils.html" anchor="a7b778fbf129e065e259109ec01f8e100a7cfb75dd24ce273112ca496b53396f98">EncodeNewLines</enumvalue>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>md5</name>
      <anchorfile>namespaceWt_1_1Utils.html</anchorfile>
      <anchor>ac0ce5029b27296dc11b61be40dabcca7</anchor>
      <arglist>(const std::string &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>sha1</name>
      <anchorfile>namespaceWt_1_1Utils.html</anchorfile>
      <anchor>a56e71874fa583797af798a03878c4756</anchor>
      <arglist>(const std::string &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>base64Encode</name>
      <anchorfile>namespaceWt_1_1Utils.html</anchorfile>
      <anchor>a0e9d314387218c2df306a5b6a8cd9b5d</anchor>
      <arglist>(const std::string &amp;data, bool crlf=true)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>base64Decode</name>
      <anchorfile>namespaceWt_1_1Utils.html</anchorfile>
      <anchor>a4b3d6f5570e6430e3cfb0fd35e7e546b</anchor>
      <arglist>(const std::string &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>hexEncode</name>
      <anchorfile>namespaceWt_1_1Utils.html</anchorfile>
      <anchor>ab851218e751fd453cffd814e24461c59</anchor>
      <arglist>(const std::string &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>hexDecode</name>
      <anchorfile>namespaceWt_1_1Utils.html</anchorfile>
      <anchor>ade7c1c72e34e299a124242d954e794bb</anchor>
      <arglist>(const std::string &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>htmlEncode</name>
      <anchorfile>namespaceWt_1_1Utils.html</anchorfile>
      <anchor>aaabcb5e179e61d031c94f8f069949c0b</anchor>
      <arglist>(const std::string &amp;text, WFlags&lt; HtmlEncodingFlag &gt; flags=None)</arglist>
    </member>
    <member kind="function">
      <type>WString</type>
      <name>htmlEncode</name>
      <anchorfile>namespaceWt_1_1Utils.html</anchorfile>
      <anchor>a96db142b91fc1bbe2ee20cf4e82f0376</anchor>
      <arglist>(const WString &amp;text, WFlags&lt; HtmlEncodingFlag &gt; flags=None)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>urlEncode</name>
      <anchorfile>namespaceWt_1_1Utils.html</anchorfile>
      <anchor>a1b4b24d924ef0162777045451f2fc09b</anchor>
      <arglist>(const std::string &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>urlDecode</name>
      <anchorfile>namespaceWt_1_1Utils.html</anchorfile>
      <anchor>a578b89050767856c533d95a48df23ff5</anchor>
      <arglist>(const std::string &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>removeScript</name>
      <anchorfile>namespaceWt_1_1Utils.html</anchorfile>
      <anchor>aebf3d909380f91b39b7237744a75db07</anchor>
      <arglist>(WString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>guessImageMimeTypeData</name>
      <anchorfile>namespaceWt_1_1Utils.html</anchorfile>
      <anchor>abd0ad0fefc1ae5b0dac425d7603c5ca0</anchor>
      <arglist>(const std::vector&lt; unsigned char &gt; &amp;header)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>guessImageMimeType</name>
      <anchorfile>namespaceWt_1_1Utils.html</anchorfile>
      <anchor>a42344be607d003e3304236006ec5e1c5</anchor>
      <arglist>(const std::string &amp;file)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>hmac</name>
      <anchorfile>namespaceWt_1_1Utils.html</anchorfile>
      <anchor>adefcf2374a062901a7ba4ac64dce9a1c</anchor>
      <arglist>(const std::string &amp;text, const std::string &amp;key, std::string(*hashfunction)(const std::string &amp;), size_t blocksize, size_t keysize)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>hmac_md5</name>
      <anchorfile>namespaceWt_1_1Utils.html</anchorfile>
      <anchor>a9ae6a3e762a47e92f945ff12603e9fc5</anchor>
      <arglist>(const std::string &amp;text, const std::string &amp;key)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>hmac_sha1</name>
      <anchorfile>namespaceWt_1_1Utils.html</anchorfile>
      <anchor>af698151b2eba046bbfc2963b2dff560c</anchor>
      <arglist>(const std::string &amp;text, const std::string &amp;key)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>auth</name>
    <title>Authentication module (Wt::Auth)</title>
    <filename>group__auth.html</filename>
    <class kind="class">Wt::Auth::FacebookService</class>
    <class kind="class">Wt::Auth::GoogleService</class>
    <class kind="class">Wt::Auth::PasswordStrengthValidator</class>
    <class kind="class">Wt::Auth::AbstractPasswordService</class>
    <class kind="class">Wt::Auth::AbstractUserDatabase</class>
    <class kind="class">Wt::Auth::AuthModel</class>
    <class kind="class">Wt::Auth::EmailTokenResult</class>
    <class kind="class">Wt::Auth::AuthTokenResult</class>
    <class kind="class">Wt::Auth::AuthService</class>
    <class kind="class">Wt::Auth::AuthWidget</class>
    <class kind="class">Wt::Auth::Dbo::AuthInfo</class>
    <class kind="class">Wt::Auth::Dbo::AuthToken</class>
    <class kind="class">Wt::Auth::Dbo::AuthIdentity</class>
    <class kind="class">Wt::Auth::Dbo::UserDatabase</class>
    <class kind="class">Wt::Auth::FormBaseModel</class>
    <class kind="class">Wt::Auth::HashFunction</class>
    <class kind="class">Wt::Auth::MD5HashFunction</class>
    <class kind="class">Wt::Auth::SHA1HashFunction</class>
    <class kind="class">Wt::Auth::BCryptHashFunction</class>
    <class kind="class">Wt::Auth::Identity</class>
    <class kind="class">Wt::Auth::Login</class>
    <class kind="class">Wt::Auth::LostPasswordWidget</class>
    <class kind="class">Wt::Auth::OAuthAccessToken</class>
    <class kind="class">Wt::Auth::OAuthProcess</class>
    <class kind="class">Wt::Auth::OAuthService</class>
    <class kind="class">Wt::Auth::OidcProcess</class>
    <class kind="class">Wt::Auth::OidcService</class>
    <class kind="class">Wt::Auth::PasswordHash</class>
    <class kind="class">Wt::Auth::PasswordPromptDialog</class>
    <class kind="class">Wt::Auth::PasswordService</class>
    <class kind="class">Wt::Auth::PasswordVerifier</class>
    <class kind="class">Wt::Auth::RegistrationModel</class>
    <class kind="class">Wt::Auth::RegistrationWidget</class>
    <class kind="class">Wt::Auth::Token</class>
    <class kind="class">Wt::Auth::UpdatePasswordWidget</class>
    <class kind="class">Wt::Auth::User</class>
    <member kind="enumeration">
      <type></type>
      <name>PasswordResult</name>
      <anchorfile>group__auth.html</anchorfile>
      <anchor>ga001a66930b52328e78649572d6922bcc</anchor>
      <arglist></arglist>
      <enumvalue file="group__auth.html" anchor="gga001a66930b52328e78649572d6922bccacf864008b2498f5579a674b5134a734d">PasswordInvalid</enumvalue>
      <enumvalue file="group__auth.html" anchor="gga001a66930b52328e78649572d6922bccaa3ad495c21cb8a19956d58b3bc2875e5">LoginThrottling</enumvalue>
      <enumvalue file="group__auth.html" anchor="gga001a66930b52328e78649572d6922bcca6f1fac82d80eceeff08437fdfad22ab0">PasswordValid</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>IdentityPolicy</name>
      <anchorfile>group__auth.html</anchorfile>
      <anchor>ga8ce12bbc04d68d5687f08abf2a209436</anchor>
      <arglist></arglist>
      <enumvalue file="group__auth.html" anchor="gga8ce12bbc04d68d5687f08abf2a209436a449f02c225b7a68a49d31537fc0710eb">LoginName</enumvalue>
      <enumvalue file="group__auth.html" anchor="gga8ce12bbc04d68d5687f08abf2a209436a1e674f0dd1434f2bb3fe5d645b0f9cc3">EmailAddress</enumvalue>
      <enumvalue file="group__auth.html" anchor="gga8ce12bbc04d68d5687f08abf2a209436aebb061953c0454b2c8ee7b0ac615ebcd">Optional</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>LoginState</name>
      <anchorfile>group__auth.html</anchorfile>
      <anchor>ga0ce4a4a08ad982d03a99a5405394b796</anchor>
      <arglist></arglist>
      <enumvalue file="group__auth.html" anchor="gga0ce4a4a08ad982d03a99a5405394b796ae27816978dfe5f0f3acd72cee314955f">LoggedOut</enumvalue>
      <enumvalue file="group__auth.html" anchor="gga0ce4a4a08ad982d03a99a5405394b796ab9f5c797ebbf55adccdd8539a65a0241">Disabled</enumvalue>
      <enumvalue file="group__auth.html" anchor="gga0ce4a4a08ad982d03a99a5405394b796a7324e3727807d95037eb19d304fd91ec">Weak</enumvalue>
      <enumvalue file="group__auth.html" anchor="gga0ce4a4a08ad982d03a99a5405394b796ac43e0fd449c758dab8f891d8e19eb1a9">Strong</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ClientSecretMethod</name>
      <anchorfile>group__auth.html</anchorfile>
      <anchor>ga4e55a92c5ff4dd9bbd74439868b8400d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>HttpAuthorizationBasic</name>
      <anchorfile>group__auth.html</anchorfile>
      <anchor>gga4e55a92c5ff4dd9bbd74439868b8400da7abbd4cb30ddb5f4894fd5b1fa11f85e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PlainUrlParameter</name>
      <anchorfile>group__auth.html</anchorfile>
      <anchor>gga4e55a92c5ff4dd9bbd74439868b8400da6f32fdeb991dd909cbff2b9baca867bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RequestBodyParameter</name>
      <anchorfile>group__auth.html</anchorfile>
      <anchor>gga4e55a92c5ff4dd9bbd74439868b8400daa26946d893ee311f39ee3ae0e67137c9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>charts</name>
    <title>Charts (Wt::Chart)</title>
    <filename>group__charts.html</filename>
    <class kind="class">Wt::Chart::WAbstractChart</class>
    <class kind="class">Wt::Chart::WAbstractChartModel</class>
    <class kind="class">Wt::Chart::WAbstractColorMap</class>
    <class kind="class">Wt::Chart::WAbstractDataSeries3D</class>
    <class kind="class">Wt::Chart::WAbstractGridData</class>
    <class kind="class">Wt::Chart::WAxis</class>
    <class kind="class">Wt::Chart::WAxisSliderWidget</class>
    <class kind="class">Wt::Chart::WCartesian3DChart</class>
    <class kind="class">Wt::Chart::SeriesIterator</class>
    <class kind="class">Wt::Chart::WCartesianChart</class>
    <class kind="class">Wt::Chart::WChartPalette</class>
    <class kind="class">Wt::Chart::WDataSeries</class>
    <class kind="class">Wt::Chart::WEquidistantGridData</class>
    <class kind="class">Wt::Chart::WGridData</class>
    <class kind="class">Wt::Chart::WPieChart</class>
    <class kind="class">Wt::Chart::WScatterData</class>
    <class kind="class">Wt::Chart::WSelection</class>
    <class kind="class">Wt::Chart::WStandardChartProxyModel</class>
    <class kind="class">Wt::Chart::WStandardPalette</class>
    <member kind="typedef">
      <type>std::map&lt; WFlags&lt; KeyboardModifier &gt;, InteractiveAction &gt;</type>
      <name>WheelActions</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>ga4faa1a57df4a4df163b9daf719b454bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Series3DType</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>gacca4e123c9e4b212050bcfac488fceee</anchor>
      <arglist></arglist>
      <enumvalue file="group__charts.html" anchor="ggacca4e123c9e4b212050bcfac488fceeea2a3cd5946cfd317eb99c3d32e35e2d4c">Point</enumvalue>
      <enumvalue file="group__charts.html" anchor="ggacca4e123c9e4b212050bcfac488fceeeaaa0d528ba11ea1485d466dfe1ea40819">Surface</enumvalue>
      <enumvalue file="group__charts.html" anchor="ggacca4e123c9e4b212050bcfac488fceeeaddc35f88fa71b6ef142ae61f35364653">Bar</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Axis</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>gaddb678f67fbd9f374fcee0922f158c9f</anchor>
      <arglist></arglist>
      <enumvalue file="group__charts.html" anchor="ggaddb678f67fbd9f374fcee0922f158c9fa02129bb861061d1a052c592e2dc6b383">X</enumvalue>
      <enumvalue file="group__charts.html" anchor="ggaddb678f67fbd9f374fcee0922f158c9fa57cec4137b614c87cb4e24a3d003a3e0">Y</enumvalue>
      <enumvalue file="group__charts.html" anchor="ggaddb678f67fbd9f374fcee0922f158c9fa5aefcaaf9790cc8ece124e274779ae94">Y1</enumvalue>
      <enumvalue file="group__charts.html" anchor="ggaddb678f67fbd9f374fcee0922f158c9fa2aa016bd54aa28710a128dff5a42e456">Y2</enumvalue>
      <enumvalue file="group__charts.html" anchor="ggaddb678f67fbd9f374fcee0922f158c9fa5d32a72e2819aaf62362fcc862b37c5e">Ordinate</enumvalue>
      <enumvalue file="group__charts.html" anchor="ggaddb678f67fbd9f374fcee0922f158c9fa11a797408c8edb4b9a2e44ca3b11a292">X3D</enumvalue>
      <enumvalue file="group__charts.html" anchor="ggaddb678f67fbd9f374fcee0922f158c9fa730488f53d4282788994ff91554c9d29">Y3D</enumvalue>
      <enumvalue file="group__charts.html" anchor="ggaddb678f67fbd9f374fcee0922f158c9fa4cfc1afb67e964963920f1c68ea1d31a">Z3D</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>AxisValue</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>ga77eb6d0cefa4a012950ea972b471b849</anchor>
      <arglist></arglist>
      <enumvalue file="group__charts.html" anchor="gga77eb6d0cefa4a012950ea972b471b849aa1d0ec6d56f8833a078b5a7ac4caf2d4">Minimum</enumvalue>
      <enumvalue file="group__charts.html" anchor="gga77eb6d0cefa4a012950ea972b471b849a8321e79c278ec510f63675c040594892">Maximum</enumvalue>
      <enumvalue file="group__charts.html" anchor="gga77eb6d0cefa4a012950ea972b471b849ad7ed4ee1df437474d005188535f74875">Zero</enumvalue>
      <enumvalue file="group__charts.html" anchor="gga77eb6d0cefa4a012950ea972b471b849a130c5b3473c57faa76e2a1c54e26f88e">Both</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>AxisScale</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>gadfcaed8cd6ff52f5747f7df48f2eeab6</anchor>
      <arglist></arglist>
      <enumvalue file="group__charts.html" anchor="ggadfcaed8cd6ff52f5747f7df48f2eeab6a4984667940802dedc139aa7a430a6553">Discrete</enumvalue>
      <enumvalue file="group__charts.html" anchor="ggadfcaed8cd6ff52f5747f7df48f2eeab6a32a843da6ea40ab3b17a3421ccdf671b">Linear</enumvalue>
      <enumvalue file="group__charts.html" anchor="ggadfcaed8cd6ff52f5747f7df48f2eeab6ace0be71e33226e4c1db2bcea5959f16b">Log</enumvalue>
      <enumvalue file="group__charts.html" anchor="ggadfcaed8cd6ff52f5747f7df48f2eeab6a44749712dbec183e983dcd78a7736c41">Date</enumvalue>
      <enumvalue file="group__charts.html" anchor="ggadfcaed8cd6ff52f5747f7df48f2eeab6a8cf10d2341ed01492506085688270c1e">DateTime</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>InteractiveAction</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>gada979ae7a2d2652d0b48f9d8004ea7d1</anchor>
      <arglist></arglist>
      <enumvalue file="group__charts.html" anchor="ggada979ae7a2d2652d0b48f9d8004ea7d1a5517fc80cd3145020faa411d8f545874">ZoomX</enumvalue>
      <enumvalue file="group__charts.html" anchor="ggada979ae7a2d2652d0b48f9d8004ea7d1ac31b1ae596f0225f36e91ecca55c71c6">ZoomY</enumvalue>
      <enumvalue file="group__charts.html" anchor="ggada979ae7a2d2652d0b48f9d8004ea7d1af8c18924dd06615bfb118db733702ecf">ZoomXY</enumvalue>
      <enumvalue file="group__charts.html" anchor="ggada979ae7a2d2652d0b48f9d8004ea7d1a6c5838d43ad155d5915b018d6e9b873e">ZoomMatching</enumvalue>
      <enumvalue file="group__charts.html" anchor="ggada979ae7a2d2652d0b48f9d8004ea7d1a0f00bc6b37f7083f90edaa5fe6c022d6">PanX</enumvalue>
      <enumvalue file="group__charts.html" anchor="ggada979ae7a2d2652d0b48f9d8004ea7d1a70f667d5421b6ec607fb2437eeed51b9">PanY</enumvalue>
      <enumvalue file="group__charts.html" anchor="ggada979ae7a2d2652d0b48f9d8004ea7d1ade42640a6ef6a592db1222b0c939210b">PanMatching</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SeriesType</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>ga44d64e4a9d08c7ef69648f4a9c3e4053</anchor>
      <arglist></arglist>
      <enumvalue file="group__charts.html" anchor="gga44d64e4a9d08c7ef69648f4a9c3e4053a2a3cd5946cfd317eb99c3d32e35e2d4c">Point</enumvalue>
      <enumvalue file="group__charts.html" anchor="gga44d64e4a9d08c7ef69648f4a9c3e4053a4803e6b9e63dabf04de980788d6a13c4">Line</enumvalue>
      <enumvalue file="group__charts.html" anchor="gga44d64e4a9d08c7ef69648f4a9c3e4053a2cb4d4a3f8dacd623fa045a44febd476">Curve</enumvalue>
      <enumvalue file="group__charts.html" anchor="gga44d64e4a9d08c7ef69648f4a9c3e4053addc35f88fa71b6ef142ae61f35364653">Bar</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>MarkerType</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>ga9f38f3460fb2575d5f4f1a1ac51a7db6</anchor>
      <arglist></arglist>
      <enumvalue file="group__charts.html" anchor="gga9f38f3460fb2575d5f4f1a1ac51a7db6a6adf97f83acf6453d4a6a4b1070f3754">None</enumvalue>
      <enumvalue file="group__charts.html" anchor="gga9f38f3460fb2575d5f4f1a1ac51a7db6aceb46ca115d05c51aa5a16a8867c3304">Square</enumvalue>
      <enumvalue file="group__charts.html" anchor="gga9f38f3460fb2575d5f4f1a1ac51a7db6a30954d90085f6eaaf5817917fc5fecb3">Circle</enumvalue>
      <enumvalue file="group__charts.html" anchor="gga9f38f3460fb2575d5f4f1a1ac51a7db6ae76b449b9fc8536af7557ffa6321d269">Cross</enumvalue>
      <enumvalue file="group__charts.html" anchor="gga9f38f3460fb2575d5f4f1a1ac51a7db6a727d820d1768aaa0b26040a70fc1028f">XCross</enumvalue>
      <enumvalue file="group__charts.html" anchor="gga9f38f3460fb2575d5f4f1a1ac51a7db6a5e5500cb2b82eb72d550de644bd1b64b">Triangle</enumvalue>
      <enumvalue file="group__charts.html" anchor="gga9f38f3460fb2575d5f4f1a1ac51a7db6a90589c47f06eb971d548591f23c285af">Custom</enumvalue>
      <enumvalue file="group__charts.html" anchor="gga9f38f3460fb2575d5f4f1a1ac51a7db6a26f93e6e68e28a698377e941cb59f29a">Star</enumvalue>
      <enumvalue file="group__charts.html" anchor="gga9f38f3460fb2575d5f4f1a1ac51a7db6a16c50716e1215556854a27f071a50fb4">InvertedTriangle</enumvalue>
      <enumvalue file="group__charts.html" anchor="gga9f38f3460fb2575d5f4f1a1ac51a7db6a9c8ae0945940e5baec5a93c4c8ec869e">Asterisk</enumvalue>
      <enumvalue file="group__charts.html" anchor="gga9f38f3460fb2575d5f4f1a1ac51a7db6a8f7671185d590914ac21c7511767b699">Diamond</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>FillRangeType</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>ga7236e5b04bdb6f393162842982b4d1a0</anchor>
      <arglist></arglist>
      <enumvalue file="group__charts.html" anchor="gga7236e5b04bdb6f393162842982b4d1a0a6adf97f83acf6453d4a6a4b1070f3754">None</enumvalue>
      <enumvalue file="group__charts.html" anchor="gga7236e5b04bdb6f393162842982b4d1a0acae48b5275b95ab3ae03e365b32f86b2">MinimumValue</enumvalue>
      <enumvalue file="group__charts.html" anchor="gga7236e5b04bdb6f393162842982b4d1a0a55a7238410862f8958a8f57b6daab822">MaximumValue</enumvalue>
      <enumvalue file="group__charts.html" anchor="gga7236e5b04bdb6f393162842982b4d1a0a0600d7757a21d96591e24471b6d14335">ZeroValue</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ChartType</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>ga8d63464f873580c77508e1c0c26cbfea</anchor>
      <arglist></arglist>
      <enumvalue file="group__charts.html" anchor="gga8d63464f873580c77508e1c0c26cbfeaa3adbdb3ac060038aa0e6e6c138ef9873">Category</enumvalue>
      <enumvalue file="group__charts.html" anchor="gga8d63464f873580c77508e1c0c26cbfeaa09870720ca8134284e4e305ac6ce5f19">Scatter</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>AxisProperty</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>ga814d38dbe18cc597674f3833c1da84a5</anchor>
      <arglist></arglist>
      <enumvalue file="group__charts.html" anchor="gga814d38dbe18cc597674f3833c1da84a5a3ad6cb6100190c8f81e99fd52debf7ef">Labels</enumvalue>
      <enumvalue file="group__charts.html" anchor="gga814d38dbe18cc597674f3833c1da84a5a4803e6b9e63dabf04de980788d6a13c4">Line</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>LegendLocation</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>ga950e490e52f40d945b7301bf3831f2af</anchor>
      <arglist></arglist>
      <enumvalue file="group__charts.html" anchor="gga950e490e52f40d945b7301bf3831f2afa9b6d3000134648fc9f1e71094ae0847d">Inside</enumvalue>
      <enumvalue file="group__charts.html" anchor="gga950e490e52f40d945b7301bf3831f2afa76fbf0ccd7fcd64879c2ff2119dc15a4">Outside</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>LabelOption</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>ga9345394a8eeda6800d8a24c5df44d983</anchor>
      <arglist></arglist>
      <enumvalue file="group__charts.html" anchor="gga9345394a8eeda6800d8a24c5df44d983a6adf97f83acf6453d4a6a4b1070f3754">None</enumvalue>
      <enumvalue file="group__charts.html" anchor="gga9345394a8eeda6800d8a24c5df44d983a9b6d3000134648fc9f1e71094ae0847d">Inside</enumvalue>
      <enumvalue file="group__charts.html" anchor="gga9345394a8eeda6800d8a24c5df44d983a76fbf0ccd7fcd64879c2ff2119dc15a4">Outside</enumvalue>
      <enumvalue file="group__charts.html" anchor="gga9345394a8eeda6800d8a24c5df44d983aa40c79f506c247b54376e25bdf769d4e">TextLabel</enumvalue>
      <enumvalue file="group__charts.html" anchor="gga9345394a8eeda6800d8a24c5df44d983a653c63c792f72bbdf78fb0ed08f22b6a">TextPercentage</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Plane</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>ga6b93af055b0852d9a04e50a057a657ba</anchor>
      <arglist></arglist>
      <enumvalue file="group__charts.html" anchor="ga6b93af055b0852d9a04e50a057a657baa74c53bcd3dcb2bb79993b2fec37d362a">XY</enumvalue>
      <enumvalue file="group__charts.html" anchor="ga6b93af055b0852d9a04e50a057a657baa27db3b98d01e664c17a6620b222c6469">XZ</enumvalue>
      <enumvalue file="group__charts.html" anchor="ga6b93af055b0852d9a04e50a057a657baaffa4ba973372c3650fd0881abeca6512">YZ</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ChartUpdates</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>ga8e8aff145d7a6e03e84bab096a2254b3</anchor>
      <arglist></arglist>
      <enumvalue file="group__charts.html" anchor="ga8e8aff145d7a6e03e84bab096a2254b3a4744c8238d0c4642a50182fab97d66c5">CameraMatrix</enumvalue>
      <enumvalue file="group__charts.html" anchor="ga8e8aff145d7a6e03e84bab096a2254b3af221866805bf3d75f2e15ae9157c7cc3">GLContext</enumvalue>
      <enumvalue file="group__charts.html" anchor="ga8e8aff145d7a6e03e84bab096a2254b3ae5cf24f32112e34d91a03dec70224818">GLTextures</enumvalue>
    </member>
  </compound>
  <compound kind="group">
    <name>dbo</name>
    <title>Database Objects (Wt::Dbo)</title>
    <filename>group__dbo.html</filename>
    <class kind="class">Wt::Dbo::ForeignKeyConstraint</class>
    <class kind="class">Wt::Dbo::SqlStatement</class>
    <class kind="class">Wt::Dbo::backend::Firebird</class>
    <class kind="class">Wt::Dbo::backend::MSSQLServer</class>
    <class kind="class">Wt::Dbo::backend::MySQL</class>
    <class kind="class">Wt::Dbo::backend::Postgres</class>
    <class kind="class">Wt::Dbo::backend::Sqlite3</class>
    <class kind="class">Wt::Dbo::collection</class>
    <class kind="class">Wt::Dbo::Exception</class>
    <class kind="class">Wt::Dbo::StaleObjectException</class>
    <class kind="class">Wt::Dbo::ObjectNotFoundException</class>
    <class kind="class">Wt::Dbo::NoUniqueResultException</class>
    <class kind="class">Wt::Dbo::FixedSqlConnectionPool</class>
    <class kind="class">Wt::Dbo::JsonSerializer</class>
    <class kind="class">Wt::Dbo::dbo_default_traits</class>
    <class kind="class">Wt::Dbo::dbo_traits</class>
    <class kind="class">Wt::Dbo::Dbo</class>
    <class kind="class">Wt::Dbo::ptr</class>
    <class kind="class">Wt::Dbo::AbstractQuery</class>
    <class kind="class">Wt::Dbo::Query</class>
    <class kind="class">Wt::Dbo::QueryModel</class>
    <class kind="class">Wt::Dbo::Session</class>
    <class kind="class">Wt::Dbo::SqlConnection</class>
    <class kind="class">Wt::Dbo::SqlConnectionPool</class>
    <class kind="class">Wt::Dbo::sql_value_traits</class>
    <class kind="class">Wt::Dbo::FieldInfo</class>
    <class kind="class">Wt::Dbo::query_result_traits</class>
    <class kind="class">Wt::Dbo::Transaction</class>
    <class kind="class">Wt::Dbo::weak_ptr</class>
    <member kind="enumeration">
      <type></type>
      <name>RelationType</name>
      <anchorfile>group__dbo.html</anchorfile>
      <anchor>ga1d0ec6819b1bf5b7a88ad030b91ca564</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ManyToOne</name>
      <anchorfile>group__dbo.html</anchorfile>
      <anchor>gga1d0ec6819b1bf5b7a88ad030b91ca564a32d7393c325724244671b18be53058fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ManyToMany</name>
      <anchorfile>group__dbo.html</anchorfile>
      <anchor>gga1d0ec6819b1bf5b7a88ad030b91ca564ad0bd477ec215a878e0758cce8494af24</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>ForeignKeyConstraint</type>
      <name>operator|</name>
      <anchorfile>group__dbo.html</anchorfile>
      <anchor>ga3815c99266412f8ff53cf4c73546d918</anchor>
      <arglist>(ForeignKeyConstraint lhs, ForeignKeyConstraint rhs)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>id</name>
      <anchorfile>group__dbo.html</anchorfile>
      <anchor>ga42c50bd3bfc38ad8c810b30b279b0ba6</anchor>
      <arglist>(Action &amp;action, V &amp;value, const std::string &amp;name=&quot;id&quot;, int size=-1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>id</name>
      <anchorfile>group__dbo.html</anchorfile>
      <anchor>gaf6e683b7a7124e562134caf155ef0080</anchor>
      <arglist>(Action &amp;action, ptr&lt; C &gt; &amp;value, const std::string &amp;name, ForeignKeyConstraint constraints, int size=-1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>field</name>
      <anchorfile>group__dbo.html</anchorfile>
      <anchor>ga864a2e134149e7f614f45967777992c7</anchor>
      <arglist>(Action &amp;action, V &amp;value, const std::string &amp;name, int size=-1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>belongsTo</name>
      <anchorfile>group__dbo.html</anchorfile>
      <anchor>gac089020eff000d9e2c4ef72cf715bd21</anchor>
      <arglist>(Action &amp;action, ptr&lt; C &gt; &amp;value, const std::string &amp;name=std::string())</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>belongsTo</name>
      <anchorfile>group__dbo.html</anchorfile>
      <anchor>ga31a1292b863cb47ee1eb37c7ddd51fad</anchor>
      <arglist>(Action &amp;action, ptr&lt; C &gt; &amp;value, const std::string &amp;name, ForeignKeyConstraint constraints)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>belongsTo</name>
      <anchorfile>group__dbo.html</anchorfile>
      <anchor>gaa3a5224090f8bb4b423485328b5b3030</anchor>
      <arglist>(Action &amp;action, ptr&lt; C &gt; &amp;value, ForeignKeyConstraint constraints)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>hasOne</name>
      <anchorfile>group__dbo.html</anchorfile>
      <anchor>ga00a060d5f4764f673948989f21837548</anchor>
      <arglist>(Action &amp;action, weak_ptr&lt; C &gt; &amp;value, const std::string &amp;name=std::string())</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>hasMany</name>
      <anchorfile>group__dbo.html</anchorfile>
      <anchor>ga570b71f937c991b000b9db01b327a363</anchor>
      <arglist>(Action &amp;action, collection&lt; ptr&lt; C &gt; &gt; &amp;value, RelationType type, const std::string &amp;name=std::string())</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>hasMany</name>
      <anchorfile>group__dbo.html</anchorfile>
      <anchor>ga544e9fb1aa6202fa4e3b66be64aff098</anchor>
      <arglist>(Action &amp;action, collection&lt; ptr&lt; C &gt; &gt; &amp;value, RelationType type, const std::string &amp;name, const std::string &amp;joinId, ForeignKeyConstraint constraints=(NotNull|OnDeleteCascade))</arglist>
    </member>
    <member kind="variable">
      <type>const ForeignKeyConstraint</type>
      <name>NotNull</name>
      <anchorfile>group__dbo.html</anchorfile>
      <anchor>ga538d2126ffe7787d14e72bfcdb266ff0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const ForeignKeyConstraint</type>
      <name>OnUpdateCascade</name>
      <anchorfile>group__dbo.html</anchorfile>
      <anchor>ga766c0992c040bee5b9b1f4dcfa18d11f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const ForeignKeyConstraint</type>
      <name>OnUpdateSetNull</name>
      <anchorfile>group__dbo.html</anchorfile>
      <anchor>ga5d603e49ff5ce63182c5e5d07f08fb21</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const ForeignKeyConstraint</type>
      <name>OnUpdateRestrict</name>
      <anchorfile>group__dbo.html</anchorfile>
      <anchor>ga4987bb75aacce8ada8662cc86a6fc3b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const ForeignKeyConstraint</type>
      <name>OnDeleteCascade</name>
      <anchorfile>group__dbo.html</anchorfile>
      <anchor>gaf873ff817052bf26092f89ab7cf9866f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const ForeignKeyConstraint</type>
      <name>OnDeleteSetNull</name>
      <anchorfile>group__dbo.html</anchorfile>
      <anchor>gaed6ad23f771e2c07db12249e1f6af390</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const ForeignKeyConstraint</type>
      <name>OnDeleteRestrict</name>
      <anchorfile>group__dbo.html</anchorfile>
      <anchor>gaae0942000fa56b27ca4185f76395c388</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const ForeignKeyConstraint</type>
      <name>OnShardId</name>
      <anchorfile>group__dbo.html</anchorfile>
      <anchor>ga8b4cc7710374c7bc9abda33a04f15533</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>http</name>
    <title>HTTP protocol (Wt::Http)</title>
    <filename>group__http.html</filename>
    <class kind="class">Wt::Http::Client</class>
    <class kind="class">Wt::Http::Message</class>
    <class kind="class">Wt::Http::UploadedFile</class>
    <class kind="class">Wt::Http::Request</class>
    <class kind="class">Wt::Http::Response</class>
    <class kind="class">Wt::Http::ResponseContinuation</class>
    <class kind="class">Wt::Http::WtClient</class>
  </compound>
  <compound kind="group">
    <name>json</name>
    <title>JSON Library (Wt::Json)</title>
    <filename>group__json.html</filename>
    <class kind="class">Wt::Json::Array</class>
    <class kind="class">Wt::Json::Object</class>
    <class kind="class">Wt::Json::ParseError</class>
    <class kind="class">Wt::Json::Value</class>
    <class kind="class">Wt::Json::TypeException</class>
    <member kind="enumeration">
      <type></type>
      <name>Type</name>
      <anchorfile>group__json.html</anchorfile>
      <anchor>ga9952f308537fd1bea762f1bd114fd5c0</anchor>
      <arglist></arglist>
      <enumvalue file="group__json.html" anchor="gga9952f308537fd1bea762f1bd114fd5c0abbb93ef26e3c101ff11cdd21cab08a94">Null</enumvalue>
      <enumvalue file="group__json.html" anchor="gga9952f308537fd1bea762f1bd114fd5c0a27118326006d3829667a400ad23d5d98">String</enumvalue>
      <enumvalue file="group__json.html" anchor="gga9952f308537fd1bea762f1bd114fd5c0ac26f15e86e3de4c398a8273272aba034">Bool</enumvalue>
      <enumvalue file="group__json.html" anchor="gga9952f308537fd1bea762f1bd114fd5c0ab2ee912b91d69b435159c7c3f6df7f5f">Number</enumvalue>
      <enumvalue file="group__json.html" anchor="gga9952f308537fd1bea762f1bd114fd5c0a497031794414a552435f90151ac3b54b">Object</enumvalue>
      <enumvalue file="group__json.html" anchor="gga9952f308537fd1bea762f1bd114fd5c0a4410ec34d9e6c1a68100ca0ce033fb17">Array</enumvalue>
    </member>
    <member kind="function">
      <type>void</type>
      <name>parse</name>
      <anchorfile>group__json.html</anchorfile>
      <anchor>ga439195eac280701c9a1e5f0317149866</anchor>
      <arglist>(const std::string &amp;input, Value &amp;result, bool validateUTF8=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>parse</name>
      <anchorfile>group__json.html</anchorfile>
      <anchor>ga6bffd9987a94701113c2a0b36dbae11f</anchor>
      <arglist>(const std::string &amp;input, Value &amp;result, ParseError &amp;error, bool validateUTF8=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>parse</name>
      <anchorfile>group__json.html</anchorfile>
      <anchor>gae5a8ee7f690b0ce740eaec97c4e904d3</anchor>
      <arglist>(const std::string &amp;input, Object &amp;result, bool validateUTF8=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>parse</name>
      <anchorfile>group__json.html</anchorfile>
      <anchor>gad82449d21253601a5fefd66c47a34a8d</anchor>
      <arglist>(const std::string &amp;input, Object &amp;result, ParseError &amp;error, bool validateUTF8=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>parse</name>
      <anchorfile>group__json.html</anchorfile>
      <anchor>ga2a16c1036244bafd1b0da019889f4a51</anchor>
      <arglist>(const std::string &amp;input, Array &amp;result, bool validateUTF8=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>parse</name>
      <anchorfile>group__json.html</anchorfile>
      <anchor>gabbbe310f0e3efa9165d4adb20496082e</anchor>
      <arglist>(const std::string &amp;input, Array &amp;result, ParseError &amp;error, bool validateUTF8=true)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>serialize</name>
      <anchorfile>group__json.html</anchorfile>
      <anchor>gaf2f3c43075a71e68f0775538c052796a</anchor>
      <arglist>(const Object &amp;obj, int indentation=1)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>serialize</name>
      <anchorfile>group__json.html</anchorfile>
      <anchor>ga7f2355bbd9424e433433d42fd1a869b6</anchor>
      <arglist>(const Array &amp;arr, int indentation=1)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>mail</name>
    <title>SMTP client library (Wt::Mail)</title>
    <filename>group__mail.html</filename>
    <class kind="class">Wt::Mail::Client</class>
    <class kind="class">Wt::Mail::Mailbox</class>
    <class kind="class">Wt::Mail::Message</class>
  </compound>
  <compound kind="group">
    <name>payment</name>
    <title>Payment module (Wt::Payment)</title>
    <filename>group__payment.html</filename>
    <class kind="class">Wt::Payment::Address</class>
    <class kind="class">Wt::Payment::Customer</class>
    <class kind="class">Wt::Payment::Money</class>
    <class kind="class">Wt::Payment::Order</class>
    <class kind="class">Wt::Payment::OrderItem</class>
    <class kind="class">Wt::Payment::PayPalExpressCheckout</class>
    <class kind="class">Wt::Payment::PayPalService</class>
    <class kind="class">Wt::Payment::Result</class>
    <class kind="class">Wt::Payment::Approval</class>
    <member kind="function">
      <type>Money</type>
      <name>operator+</name>
      <anchorfile>group__payment.html</anchorfile>
      <anchor>ga4baa8a860de871eac6c6eb28460b3513</anchor>
      <arglist>(const Money &amp;v1, const Money &amp;v2)</arglist>
    </member>
    <member kind="function">
      <type>Money</type>
      <name>operator-</name>
      <anchorfile>group__payment.html</anchorfile>
      <anchor>gad30769b03f1b83fc9927ceecc83de004</anchor>
      <arglist>(const Money &amp;v1, const Money &amp;v2)</arglist>
    </member>
    <member kind="function">
      <type>Money</type>
      <name>operator*</name>
      <anchorfile>group__payment.html</anchorfile>
      <anchor>gad617d33ce9aa8dce67b95b5d59ebbeed</anchor>
      <arglist>(const Money &amp;v1, double v2)</arglist>
    </member>
    <member kind="function">
      <type>Money</type>
      <name>operator*</name>
      <anchorfile>group__payment.html</anchorfile>
      <anchor>ga2243bbef2d69bdd0ae9cc64e087a1e09</anchor>
      <arglist>(double v1, const Money &amp;v2)</arglist>
    </member>
    <member kind="function">
      <type>Money</type>
      <name>operator/</name>
      <anchorfile>group__payment.html</anchorfile>
      <anchor>ga84918f6553520ecfd17a40d78a2f6d8b</anchor>
      <arglist>(const Money &amp;v1, double v2)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>render</name>
    <title>XHTML Rendering (Wt::Render)</title>
    <filename>group__render.html</filename>
    <class kind="class">Wt::Render::WPdfRenderer</class>
    <class kind="class">Wt::Render::WTextRenderer</class>
  </compound>
  <compound kind="group">
    <name>style</name>
    <title>Style classes</title>
    <filename>group__style.html</filename>
    <class kind="class">Wt::WBorder</class>
    <class kind="class">Wt::WColor</class>
    <class kind="class">Wt::WCssDecorationStyle</class>
    <class kind="class">Wt::WCssRule</class>
    <class kind="class">Wt::WCssTemplateRule</class>
    <class kind="class">Wt::WCssTextRule</class>
    <class kind="class">Wt::WCssStyleSheet</class>
    <class kind="class">Wt::WFont</class>
    <class kind="class">Wt::WLinkedCssStyleSheet</class>
    <member kind="enumeration">
      <type></type>
      <name>StandardColor</name>
      <anchorfile>group__style.html</anchorfile>
      <anchor>gac21275b81878159572c793bd6999788b</anchor>
      <arglist></arglist>
      <enumvalue file="group__style.html" anchor="ggac21275b81878159572c793bd6999788ba25a81701fbfa4a1efdf660a950c1d006">White</enumvalue>
      <enumvalue file="group__style.html" anchor="ggac21275b81878159572c793bd6999788bae90dfb84e30edf611e326eeb04d680de">Black</enumvalue>
      <enumvalue file="group__style.html" anchor="ggac21275b81878159572c793bd6999788baee38e4d5dd68c4e440825018d549cb47">Red</enumvalue>
      <enumvalue file="group__style.html" anchor="ggac21275b81878159572c793bd6999788ba8746d21f8164452063398744f06307dd">DarkRed</enumvalue>
      <enumvalue file="group__style.html" anchor="ggac21275b81878159572c793bd6999788bad382816a3cbeed082c9e216e7392eed1">Green</enumvalue>
      <enumvalue file="group__style.html" anchor="ggac21275b81878159572c793bd6999788baf780aab6295a2f368ac69a514f8b4605">DarkGreen</enumvalue>
      <enumvalue file="group__style.html" anchor="ggac21275b81878159572c793bd6999788ba9594eec95be70e7b1710f730fdda33d9">Blue</enumvalue>
      <enumvalue file="group__style.html" anchor="ggac21275b81878159572c793bd6999788ba877716336e4eb22ac67faaa9c2b86635">DarkBlue</enumvalue>
      <enumvalue file="group__style.html" anchor="ggac21275b81878159572c793bd6999788ba023c239d2f2538f140a20e72c7b73f20">Cyan</enumvalue>
      <enumvalue file="group__style.html" anchor="ggac21275b81878159572c793bd6999788ba85b1ae66e65b490f35c5e8b725e7049f">DarkCyan</enumvalue>
      <enumvalue file="group__style.html" anchor="ggac21275b81878159572c793bd6999788bab91cc2c1416fcca942b61c7ac5b1a9ac">Magenta</enumvalue>
      <enumvalue file="group__style.html" anchor="ggac21275b81878159572c793bd6999788badf1b1322cf6703efd9885b0651ddb57a">DarkMagenta</enumvalue>
      <enumvalue file="group__style.html" anchor="ggac21275b81878159572c793bd6999788ba51e6cd92b6c45f9affdc158ecca2b8b8">Yellow</enumvalue>
      <enumvalue file="group__style.html" anchor="ggac21275b81878159572c793bd6999788ba42d873bb34e1055e40aad0ec45039e8b">DarkYellow</enumvalue>
      <enumvalue file="group__style.html" anchor="ggac21275b81878159572c793bd6999788ba994ae1d9731cebe455aff211bcb25b93">Gray</enumvalue>
      <enumvalue file="group__style.html" anchor="ggac21275b81878159572c793bd6999788ba91e93fc984985226ad4d319a4e4134ab">DarkGray</enumvalue>
      <enumvalue file="group__style.html" anchor="ggac21275b81878159572c793bd6999788bafb55202637692de4a494e9ade4cff2dd">LightGray</enumvalue>
      <enumvalue file="group__style.html" anchor="ggac21275b81878159572c793bd6999788ba3d971943089a3388c01fb297a32d9ba7">Transparent</enumvalue>
    </member>
  </compound>
  <compound kind="group">
    <name>modelview</name>
    <title>Model/view system</title>
    <filename>group__modelview.html</filename>
    <class kind="struct">Wt::any_traits</class>
    <class kind="class">Wt::ItemDataRole</class>
    <class kind="class">Wt::Chart::WAbstractChart</class>
    <class kind="class">Wt::Chart::WCartesianChart</class>
    <class kind="class">Wt::Chart::WPieChart</class>
    <class kind="class">Wt::Dbo::QueryModel</class>
    <class kind="class">Wt::WAbstractItemDelegate</class>
    <class kind="class">Wt::WAbstractItemModel</class>
    <class kind="class">Wt::WAbstractItemView</class>
    <class kind="class">Wt::WAbstractListModel</class>
    <class kind="class">Wt::WAbstractProxyModel</class>
    <class kind="class">Wt::WAbstractTableModel</class>
    <class kind="class">Wt::WAggregateProxyModel</class>
    <class kind="class">Wt::WBatchEditProxyModel</class>
    <class kind="class">Wt::WComboBox</class>
    <class kind="class">Wt::WItemDelegate</class>
    <class kind="class">Wt::WItemSelectionModel</class>
    <class kind="class">Wt::WModelIndex</class>
    <class kind="class">Wt::WReadOnlyProxyModel</class>
    <class kind="class">Wt::WSelectionBox</class>
    <class kind="class">Wt::WSortFilterProxyModel</class>
    <class kind="class">Wt::WStandardItem</class>
    <class kind="class">Wt::WStandardItemModel</class>
    <class kind="class">Wt::WStringListModel</class>
    <class kind="class">Wt::WSuggestionPopup</class>
    <class kind="class">Wt::WTableView</class>
    <class kind="class">Wt::WTreeView</class>
    <member kind="enumeration">
      <type></type>
      <name>MatchFlag</name>
      <anchorfile>group__modelview.html</anchorfile>
      <anchor>gaad8dd5072a40c11a34ee548bfb20b2ba</anchor>
      <arglist></arglist>
      <enumvalue file="group__modelview.html" anchor="ggaad8dd5072a40c11a34ee548bfb20b2baa32f01c1611a4a80b752afe034a7210a5">Exactly</enumvalue>
      <enumvalue file="group__modelview.html" anchor="ggaad8dd5072a40c11a34ee548bfb20b2baad0ecff5cd025e541622d4e6e44526b85">StringExactly</enumvalue>
      <enumvalue file="group__modelview.html" anchor="ggaad8dd5072a40c11a34ee548bfb20b2baa9d1a2cba952f9245c54397bbbf3e8183">StartsWith</enumvalue>
      <enumvalue file="group__modelview.html" anchor="ggaad8dd5072a40c11a34ee548bfb20b2baa213068b7e25d045126e9b1702fae80db">EndsWith</enumvalue>
      <enumvalue file="group__modelview.html" anchor="ggaad8dd5072a40c11a34ee548bfb20b2baab87b7d0627a8afcc083f4e4b8280303d">RegExp</enumvalue>
      <enumvalue file="group__modelview.html" anchor="ggaad8dd5072a40c11a34ee548bfb20b2baa6cbd53d8f1cfcd6f888bd346941bf021">WildCard</enumvalue>
      <enumvalue file="group__modelview.html" anchor="ggaad8dd5072a40c11a34ee548bfb20b2baaaef186eb5e4f306317a661d4b96e397d">CaseSensitive</enumvalue>
      <enumvalue file="group__modelview.html" anchor="ggaad8dd5072a40c11a34ee548bfb20b2baaa212b19ef5f2fb30acf92e6cbccc1f2d">Wrap</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>HeaderFlag</name>
      <anchorfile>group__modelview.html</anchorfile>
      <anchor>gafb18b4339442f1327c2a65850f3d8a53</anchor>
      <arglist></arglist>
      <enumvalue file="group__modelview.html" anchor="ggafb18b4339442f1327c2a65850f3d8a53afb64af9fa20e84a2b6eedf61b449c26f">ColumnIsCollapsed</enumvalue>
      <enumvalue file="group__modelview.html" anchor="ggafb18b4339442f1327c2a65850f3d8a53a0c14cf328f658e1680fdd2b05ccf2619">ColumnIsExpandedLeft</enumvalue>
      <enumvalue file="group__modelview.html" anchor="ggafb18b4339442f1327c2a65850f3d8a53a23c4f661badabe6447fde2ac4a7583d6">ColumnIsExpandedRight</enumvalue>
      <enumvalue file="group__modelview.html" anchor="ggafb18b4339442f1327c2a65850f3d8a53a28647ff63d9d1642a2e58bd74b981407">UserCheckable</enumvalue>
      <enumvalue file="group__modelview.html" anchor="ggafb18b4339442f1327c2a65850f3d8a53a1e12ce0c312e7dd542b46ed8e35a8902">Tristate</enumvalue>
      <enumvalue file="group__modelview.html" anchor="ggafb18b4339442f1327c2a65850f3d8a53a3bc0ca65c47e38227ca94d349943f103">XHTMLText</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ItemFlag</name>
      <anchorfile>group__modelview.html</anchorfile>
      <anchor>ga1d77c4de293aebfacbdde124de06b8b0</anchor>
      <arglist></arglist>
      <enumvalue file="group__modelview.html" anchor="gga1d77c4de293aebfacbdde124de06b8b0a8318ce1c96df6ce21eb2ed428c6d0f85">Selectable</enumvalue>
      <enumvalue file="group__modelview.html" anchor="gga1d77c4de293aebfacbdde124de06b8b0a2c09e798bf8c5a82d211331c82893a0f">Editable</enumvalue>
      <enumvalue file="group__modelview.html" anchor="gga1d77c4de293aebfacbdde124de06b8b0a28647ff63d9d1642a2e58bd74b981407">UserCheckable</enumvalue>
      <enumvalue file="group__modelview.html" anchor="gga1d77c4de293aebfacbdde124de06b8b0a08ab0b568328fb06a466be97d62f5649">DragEnabled</enumvalue>
      <enumvalue file="group__modelview.html" anchor="gga1d77c4de293aebfacbdde124de06b8b0a915a7e426b17cec6d169b8ce9733a6e3">DropEnabled</enumvalue>
      <enumvalue file="group__modelview.html" anchor="gga1d77c4de293aebfacbdde124de06b8b0a1e12ce0c312e7dd542b46ed8e35a8902">Tristate</enumvalue>
      <enumvalue file="group__modelview.html" anchor="gga1d77c4de293aebfacbdde124de06b8b0a3bc0ca65c47e38227ca94d349943f103">XHTMLText</enumvalue>
      <enumvalue file="group__modelview.html" anchor="gga1d77c4de293aebfacbdde124de06b8b0a99feffc57dae9a01652065178fae5b19">Dirty</enumvalue>
      <enumvalue file="group__modelview.html" anchor="gga1d77c4de293aebfacbdde124de06b8b0afca59884c1b09b37301a866c10c1263c">DeferredToolTip</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SortOrder</name>
      <anchorfile>group__modelview.html</anchorfile>
      <anchor>ga4173856040cf108a9c7360927a43ebac</anchor>
      <arglist></arglist>
      <enumvalue file="group__modelview.html" anchor="gga4173856040cf108a9c7360927a43ebacacf3fb1ff52ea1eed3347ac5401ee7f0c">Ascending</enumvalue>
      <enumvalue file="group__modelview.html" anchor="gga4173856040cf108a9c7360927a43ebacae3cf5ac19407b1a62c6fccaff675a53b">Descending</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>DropAction</name>
      <anchorfile>group__modelview.html</anchorfile>
      <anchor>gaca801bdfb957c360c5f8709cc46949aa</anchor>
      <arglist></arglist>
      <enumvalue file="group__modelview.html" anchor="ggaca801bdfb957c360c5f8709cc46949aaa5fb63579fc981698f97d55bfecb213ea">Copy</enumvalue>
      <enumvalue file="group__modelview.html" anchor="ggaca801bdfb957c360c5f8709cc46949aaa6bc362dbf494c61ea117fe3c71ca48a5">Move</enumvalue>
    </member>
    <member kind="function">
      <type>WString</type>
      <name>asString</name>
      <anchorfile>group__modelview.html</anchorfile>
      <anchor>gaac976f394f370d3d62c29791b13a0049</anchor>
      <arglist>(const cpp17::any &amp;v, const WString &amp;formatString=WString())</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>asNumber</name>
      <anchorfile>group__modelview.html</anchorfile>
      <anchor>gae28d64fd1a8ea0a7d2583795026bb91a</anchor>
      <arglist>(const cpp17::any &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>registerType</name>
      <anchorfile>group__modelview.html</anchorfile>
      <anchor>gaeb2f9c583490833afd55d65402b4fea9</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>painting</name>
    <title>Painting system</title>
    <filename>group__painting.html</filename>
    <class kind="class">Wt::WBrush</class>
    <class kind="class">Wt::WCanvasPaintDevice</class>
    <class kind="class">Wt::WColor</class>
    <class kind="class">Wt::WFont</class>
    <class kind="class">Wt::WGradient</class>
    <class kind="class">Wt::WLineF</class>
    <class kind="class">Wt::WPaintDevice</class>
    <class kind="class">Wt::WPaintedWidget</class>
    <class kind="class">Wt::WPainter</class>
    <class kind="class">Wt::WPainterPath</class>
    <class kind="class">Wt::WPdfImage</class>
    <class kind="class">Wt::WPen</class>
    <class kind="class">Wt::WPointF</class>
    <class kind="class">Wt::WRasterImage</class>
    <class kind="class">Wt::WRectF</class>
    <class kind="class">Wt::WShadow</class>
    <class kind="class">Wt::WSvgImage</class>
    <class kind="class">Wt::WTransform</class>
    <class kind="class">Wt::WVectorImage</class>
    <class kind="class">Wt::WVmlImage</class>
    <member kind="enumeration">
      <type></type>
      <name>PenStyle</name>
      <anchorfile>group__painting.html</anchorfile>
      <anchor>gadb05fe67866f63ffe3953e5987a0e5de</anchor>
      <arglist></arglist>
      <enumvalue file="group__painting.html" anchor="gadb05fe67866f63ffe3953e5987a0e5dea6adf97f83acf6453d4a6a4b1070f3754">None</enumvalue>
      <enumvalue file="group__painting.html" anchor="gadb05fe67866f63ffe3953e5987a0e5deac44eec07a96ef08be47cb01708ae5e0c">SolidLine</enumvalue>
      <enumvalue file="group__painting.html" anchor="gadb05fe67866f63ffe3953e5987a0e5dea35d61a332ecd5c4157f32d6dd86a29d3">DashLine</enumvalue>
      <enumvalue file="group__painting.html" anchor="gadb05fe67866f63ffe3953e5987a0e5dea504834618cdf0a8d482f95d1ae9862a7">DotLine</enumvalue>
      <enumvalue file="group__painting.html" anchor="gadb05fe67866f63ffe3953e5987a0e5dea8eeded9454d76559ba13a4e9982864d8">DashDotLine</enumvalue>
      <enumvalue file="group__painting.html" anchor="gadb05fe67866f63ffe3953e5987a0e5dea91d112e2141dac219ca032daf83a39ba">DashDotDotLine</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PenCapStyle</name>
      <anchorfile>group__painting.html</anchorfile>
      <anchor>ga6993ac2fd94f23297eb0c9f75fb5840a</anchor>
      <arglist></arglist>
      <enumvalue file="group__painting.html" anchor="ga6993ac2fd94f23297eb0c9f75fb5840aa745e3db6a7ffd50e1a72b39482f0882d">Flat</enumvalue>
      <enumvalue file="group__painting.html" anchor="ga6993ac2fd94f23297eb0c9f75fb5840aaceb46ca115d05c51aa5a16a8867c3304">Square</enumvalue>
      <enumvalue file="group__painting.html" anchor="ga6993ac2fd94f23297eb0c9f75fb5840aab7f41fc1412ad2ee75e9b2635d3b9d5c">Round</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PenJoinStyle</name>
      <anchorfile>group__painting.html</anchorfile>
      <anchor>gac6d096d1f4b6d38d8ee1ef166761500a</anchor>
      <arglist></arglist>
      <enumvalue file="group__painting.html" anchor="gac6d096d1f4b6d38d8ee1ef166761500aae4396f81cd926bb129ccf3c147c64514">Miter</enumvalue>
      <enumvalue file="group__painting.html" anchor="gac6d096d1f4b6d38d8ee1ef166761500aa1b9ae4ca6d43fc984af318046e1e7bb5">Bevel</enumvalue>
      <enumvalue file="group__painting.html" anchor="gac6d096d1f4b6d38d8ee1ef166761500aab7f41fc1412ad2ee75e9b2635d3b9d5c">Round</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>BrushStyle</name>
      <anchorfile>group__painting.html</anchorfile>
      <anchor>ga01b3b4f80f5756b64ef0aff2ef3ba28f</anchor>
      <arglist></arglist>
      <enumvalue file="group__painting.html" anchor="ga01b3b4f80f5756b64ef0aff2ef3ba28fa6adf97f83acf6453d4a6a4b1070f3754">None</enumvalue>
      <enumvalue file="group__painting.html" anchor="ga01b3b4f80f5756b64ef0aff2ef3ba28fae41480b6bbfbf7407974a88d3d34f4fa">Solid</enumvalue>
      <enumvalue file="group__painting.html" anchor="ga01b3b4f80f5756b64ef0aff2ef3ba28fa5e59525cb7d1d1cd93be0b9f36e9d09a">Gradient</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>GradientStyle</name>
      <anchorfile>group__painting.html</anchorfile>
      <anchor>gad22e2acb96a8d8ebde011ed399f21b73</anchor>
      <arglist></arglist>
      <enumvalue file="group__painting.html" anchor="gad22e2acb96a8d8ebde011ed399f21b73a32a843da6ea40ab3b17a3421ccdf671b">Linear</enumvalue>
      <enumvalue file="group__painting.html" anchor="gad22e2acb96a8d8ebde011ed399f21b73afdc32a55217f1ca054f1f2b51ef4f6ec">Radial</enumvalue>
    </member>
  </compound>
  <compound kind="group">
    <name>signalslot</name>
    <title>Signal/slot system</title>
    <filename>group__signalslot.html</filename>
    <class kind="class">Wt::SignalBase</class>
    <class kind="class">Wt::EventSignalBase</class>
    <class kind="class">Wt::WMouseEvent</class>
    <class kind="class">Wt::WKeyEvent</class>
    <class kind="class">Wt::WDropEvent</class>
    <class kind="class">Wt::WScrollEvent</class>
    <class kind="class">Wt::WTouchEvent</class>
    <class kind="class">Wt::WGestureEvent</class>
    <class kind="class">Wt::JSignal</class>
    <class kind="class">Wt::JSlot</class>
    <class kind="class">Wt::WObject</class>
    <class kind="class">Wt::Signal</class>
    <class kind="class">Wt::EventSignal</class>
    <member kind="enumeration">
      <type></type>
      <name>KeyboardModifier</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>ga50f91169486bada5931f3adc3a623091</anchor>
      <arglist></arglist>
      <enumvalue file="group__signalslot.html" anchor="gga50f91169486bada5931f3adc3a623091a6adf97f83acf6453d4a6a4b1070f3754">None</enumvalue>
      <enumvalue file="group__signalslot.html" anchor="gga50f91169486bada5931f3adc3a623091a825a3d98017bab11815ad2817201324c">Shift</enumvalue>
      <enumvalue file="group__signalslot.html" anchor="gga50f91169486bada5931f3adc3a623091aa1595abbb4c3a326636dd178757cd6c1">Control</enumvalue>
      <enumvalue file="group__signalslot.html" anchor="gga50f91169486bada5931f3adc3a623091aa2e92861b757ab878312dd57993d60cf">Alt</enumvalue>
      <enumvalue file="group__signalslot.html" anchor="gga50f91169486bada5931f3adc3a623091ab6755d218d5f4e1cef9cce9cc39aeda9">Meta</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Key</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>ga34e65660d30e69c56aa636a8856aa52d</anchor>
      <arglist></arglist>
      <enumvalue file="group__signalslot.html" anchor="gga34e65660d30e69c56aa636a8856aa52da88183b946cc5f0e8c96b2e66e1c74a7e">Unknown</enumvalue>
      <enumvalue file="group__signalslot.html" anchor="gga34e65660d30e69c56aa636a8856aa52daf1851d5600eae616ee802a31ac74701b">Enter</enumvalue>
      <enumvalue file="group__signalslot.html" anchor="gga34e65660d30e69c56aa636a8856aa52da5c6ba25104401c9ee0650230fc6ba413">Tab</enumvalue>
      <enumvalue file="group__signalslot.html" anchor="gga34e65660d30e69c56aa636a8856aa52dacd7d13ceea728b08555f7c818cfb13ef">Backspace</enumvalue>
      <enumvalue file="group__signalslot.html" anchor="gga34e65660d30e69c56aa636a8856aa52da825a3d98017bab11815ad2817201324c">Shift</enumvalue>
      <enumvalue file="group__signalslot.html" anchor="gga34e65660d30e69c56aa636a8856aa52daa1595abbb4c3a326636dd178757cd6c1">Control</enumvalue>
      <enumvalue file="group__signalslot.html" anchor="gga34e65660d30e69c56aa636a8856aa52daa2e92861b757ab878312dd57993d60cf">Alt</enumvalue>
      <enumvalue file="group__signalslot.html" anchor="gga34e65660d30e69c56aa636a8856aa52da9b869c510c75c5827ac82e49d4340927">PageUp</enumvalue>
      <enumvalue file="group__signalslot.html" anchor="gga34e65660d30e69c56aa636a8856aa52daee3677bcca83ece9384b01e43952bf33">PageDown</enumvalue>
      <enumvalue file="group__signalslot.html" anchor="gga34e65660d30e69c56aa636a8856aa52da87557f11575c0ad78e4e28abedc13b6e">End</enumvalue>
      <enumvalue file="group__signalslot.html" anchor="gga34e65660d30e69c56aa636a8856aa52da8cf04a9734132302f96da8e113e80ce5">Home</enumvalue>
      <enumvalue file="group__signalslot.html" anchor="gga34e65660d30e69c56aa636a8856aa52da945d5e233cf7d6240f6b783b36a374ff">Left</enumvalue>
      <enumvalue file="group__signalslot.html" anchor="gga34e65660d30e69c56aa636a8856aa52da258f49887ef8d14ac268c92b02503aaa">Up</enumvalue>
      <enumvalue file="group__signalslot.html" anchor="gga34e65660d30e69c56aa636a8856aa52da92b09c7c48c520c3c55e497875da437c">Right</enumvalue>
      <enumvalue file="group__signalslot.html" anchor="gga34e65660d30e69c56aa636a8856aa52da08a38277b0309070706f6652eeae9a53">Down</enumvalue>
      <enumvalue file="group__signalslot.html" anchor="gga34e65660d30e69c56aa636a8856aa52daa458be0f08b7e4ff3c0f633c100176c0">Insert</enumvalue>
      <enumvalue file="group__signalslot.html" anchor="gga34e65660d30e69c56aa636a8856aa52daf2a6c498fb90ee345d997f888fce3b18">Delete</enumvalue>
      <enumvalue file="group__signalslot.html" anchor="gga34e65660d30e69c56aa636a8856aa52da013ec032d3460d4be4431c6ab1f8f224">Escape</enumvalue>
      <enumvalue file="group__signalslot.html" anchor="gga34e65660d30e69c56aa636a8856aa52dae1dffc8709f31a4987c8a88334107e89">F1</enumvalue>
      <enumvalue file="group__signalslot.html" anchor="gga34e65660d30e69c56aa636a8856aa52dafe5c3684dce76cdd9f7f42430868aa74">F2</enumvalue>
      <enumvalue file="group__signalslot.html" anchor="gga34e65660d30e69c56aa636a8856aa52da4b6bf4b531770872d4328ce69bef5627">F3</enumvalue>
      <enumvalue file="group__signalslot.html" anchor="gga34e65660d30e69c56aa636a8856aa52dae7e0e72401a9f2718ed0f39f2861d702">F4</enumvalue>
      <enumvalue file="group__signalslot.html" anchor="gga34e65660d30e69c56aa636a8856aa52da37f438df6a6d5ba4c17ef8ca58562f00">F5</enumvalue>
      <enumvalue file="group__signalslot.html" anchor="gga34e65660d30e69c56aa636a8856aa52da1faf42f2823f184eb2c9f0dffe5d73f2">F6</enumvalue>
      <enumvalue file="group__signalslot.html" anchor="gga34e65660d30e69c56aa636a8856aa52da47489eb597b7db34caa24b1fc78fc839">F7</enumvalue>
      <enumvalue file="group__signalslot.html" anchor="gga34e65660d30e69c56aa636a8856aa52da4787509ad9f9d747a81a30e9dde3d4a7">F8</enumvalue>
      <enumvalue file="group__signalslot.html" anchor="gga34e65660d30e69c56aa636a8856aa52da892a245e287c163080b23db737d3c4c9">F9</enumvalue>
      <enumvalue file="group__signalslot.html" anchor="gga34e65660d30e69c56aa636a8856aa52dab213ce22ca6ad4eda8db82966b9b6e5a">F10</enumvalue>
      <enumvalue file="group__signalslot.html" anchor="gga34e65660d30e69c56aa636a8856aa52da643b0662422d1d0dffa3fca2e2bf28a8">F11</enumvalue>
      <enumvalue file="group__signalslot.html" anchor="gga34e65660d30e69c56aa636a8856aa52dae902674982fc99aa343cdd94da7476c3">F12</enumvalue>
      <enumvalue file="group__signalslot.html" anchor="gga34e65660d30e69c56aa636a8856aa52dad511f8439ecde36647437fbba67a4394">Space</enumvalue>
      <enumvalue file="group__signalslot.html" anchor="gga34e65660d30e69c56aa636a8856aa52da7fc56270e7a70fa81a5935b72eacbe29">A</enumvalue>
      <enumvalue file="group__signalslot.html" anchor="gga34e65660d30e69c56aa636a8856aa52da9d5ed678fe57bcca610140957afab571">B</enumvalue>
      <enumvalue file="group__signalslot.html" anchor="gga34e65660d30e69c56aa636a8856aa52da0d61f8370cad1d412f80b84d143e1257">C</enumvalue>
      <enumvalue file="group__signalslot.html" anchor="gga34e65660d30e69c56aa636a8856aa52daf623e75af30e62bbd73d6df5b50bb7b5">D</enumvalue>
      <enumvalue file="group__signalslot.html" anchor="gga34e65660d30e69c56aa636a8856aa52da3a3ea00cfc35332cedf6e5e9a32e94da">E</enumvalue>
      <enumvalue file="group__signalslot.html" anchor="gga34e65660d30e69c56aa636a8856aa52da800618943025315f869e4e1f09471012">F</enumvalue>
      <enumvalue file="group__signalslot.html" anchor="gga34e65660d30e69c56aa636a8856aa52dadfcf28d0734569a6a693bc8194de62bf">G</enumvalue>
      <enumvalue file="group__signalslot.html" anchor="gga34e65660d30e69c56aa636a8856aa52dac1d9f50f86825a1a2302ec2449c17196">H</enumvalue>
      <enumvalue file="group__signalslot.html" anchor="gga34e65660d30e69c56aa636a8856aa52dadd7536794b63bf90eccfd37f9b147d7f">I</enumvalue>
      <enumvalue file="group__signalslot.html" anchor="gga34e65660d30e69c56aa636a8856aa52daff44570aca8241914870afbc310cdb85">J</enumvalue>
      <enumvalue file="group__signalslot.html" anchor="gga34e65660d30e69c56aa636a8856aa52daa5f3c6a11b03839d46af9fb43c97c188">K</enumvalue>
      <enumvalue file="group__signalslot.html" anchor="gga34e65660d30e69c56aa636a8856aa52dad20caec3b48a1eef164cb4ca81ba2587">L</enumvalue>
      <enumvalue file="group__signalslot.html" anchor="gga34e65660d30e69c56aa636a8856aa52da69691c7bdcc3ce6d5d8a1361f22d04ac">M</enumvalue>
      <enumvalue file="group__signalslot.html" anchor="gga34e65660d30e69c56aa636a8856aa52da8d9c307cb7f3c4a32822a51922d1ceaa">N</enumvalue>
      <enumvalue file="group__signalslot.html" anchor="gga34e65660d30e69c56aa636a8856aa52daf186217753c37b9b9f958d906208506e">O</enumvalue>
      <enumvalue file="group__signalslot.html" anchor="gga34e65660d30e69c56aa636a8856aa52da44c29edb103a2872f519ad0c9a0fdaaa">P</enumvalue>
      <enumvalue file="group__signalslot.html" anchor="gga34e65660d30e69c56aa636a8856aa52daf09564c9ca56850d4cd6b3319e541aee">Q</enumvalue>
      <enumvalue file="group__signalslot.html" anchor="gga34e65660d30e69c56aa636a8856aa52dae1e1d3d40573127e9ee0480caf1283d6">R</enumvalue>
      <enumvalue file="group__signalslot.html" anchor="gga34e65660d30e69c56aa636a8856aa52da5dbc98dcc983a70728bd082d1a47546e">S</enumvalue>
      <enumvalue file="group__signalslot.html" anchor="gga34e65660d30e69c56aa636a8856aa52dab9ece18c950afbfa6b0fdbfa4ff731d3">T</enumvalue>
      <enumvalue file="group__signalslot.html" anchor="gga34e65660d30e69c56aa636a8856aa52da4c614360da93c0a041b22e537de151eb">U</enumvalue>
      <enumvalue file="group__signalslot.html" anchor="gga34e65660d30e69c56aa636a8856aa52da5206560a306a2e085a437fd258eb57ce">V</enumvalue>
      <enumvalue file="group__signalslot.html" anchor="gga34e65660d30e69c56aa636a8856aa52da61e9c06ea9a85a5088a499df6458d276">W</enumvalue>
      <enumvalue file="group__signalslot.html" anchor="gga34e65660d30e69c56aa636a8856aa52da02129bb861061d1a052c592e2dc6b383">X</enumvalue>
      <enumvalue file="group__signalslot.html" anchor="gga34e65660d30e69c56aa636a8856aa52da57cec4137b614c87cb4e24a3d003a3e0">Y</enumvalue>
      <enumvalue file="group__signalslot.html" anchor="gga34e65660d30e69c56aa636a8856aa52da21c2e59531c8710156d34a3c30ac81d5">Z</enumvalue>
      <enumvalue file="group__signalslot.html" anchor="gga34e65660d30e69c56aa636a8856aa52da7008dae6e21bba9332daab92d829dbda">Key_1</enumvalue>
      <enumvalue file="group__signalslot.html" anchor="gga34e65660d30e69c56aa636a8856aa52da1dfb488fdab3fb75cc0a5e371580ccab">Key_2</enumvalue>
      <enumvalue file="group__signalslot.html" anchor="gga34e65660d30e69c56aa636a8856aa52da8bb9b4775309e87d73b444c5f88deb36">Key_3</enumvalue>
      <enumvalue file="group__signalslot.html" anchor="gga34e65660d30e69c56aa636a8856aa52da5352c75d225b1aff21b207d4b78b9948">Key_4</enumvalue>
      <enumvalue file="group__signalslot.html" anchor="gga34e65660d30e69c56aa636a8856aa52dad9148b6f011a15c4f0818ad1f4d6f8b3">Key_5</enumvalue>
      <enumvalue file="group__signalslot.html" anchor="gga34e65660d30e69c56aa636a8856aa52da301d1361703503a70567938b519070e1">Key_6</enumvalue>
      <enumvalue file="group__signalslot.html" anchor="gga34e65660d30e69c56aa636a8856aa52da179f94272580cbc69b0f5fddced1ce2f">Key_7</enumvalue>
      <enumvalue file="group__signalslot.html" anchor="gga34e65660d30e69c56aa636a8856aa52da732ca0da2d4f9db51ed9507f7b10bc1a">Key_8</enumvalue>
      <enumvalue file="group__signalslot.html" anchor="gga34e65660d30e69c56aa636a8856aa52daae4461c07901b9f7b3d8bbdbc3445baa">Key_9</enumvalue>
      <enumvalue file="group__signalslot.html" anchor="gga34e65660d30e69c56aa636a8856aa52da04d3273dce36fcab516ea1694b9583c0">Key_0</enumvalue>
    </member>
  </compound>
  <compound kind="page">
    <name>md_src_Wt_cpp17_any_README</name>
    <title>Any</title>
    <filename>md_src_Wt_cpp17_any_README</filename>
  </compound>
  <compound kind="page">
    <name>md_src_Wt_Date_README</name>
    <title>Date</title>
    <filename>md_src_Wt_Date_README</filename>
  </compound>
  <compound kind="page">
    <name>overview</name>
    <title>Library overview</title>
    <filename>overview</filename>
    <docanchor file="overview.html" title="Contents">contents</docanchor>
    <docanchor file="overview.html" title="&amp;nbsp;1. Widgets">wwidget_sec</docanchor>
    <docanchor file="overview.html" title="1.1 Layout">layout</docanchor>
    <docanchor file="overview.html" title="1.2 Style">style</docanchor>
    <docanchor file="overview.html" title="1.3 Widget containers">containers</docanchor>
    <docanchor file="overview.html" title="&amp;nbsp;2. Application URL(s)">urls_sec</docanchor>
    <docanchor file="overview.html" title="&amp;nbsp;3. Startup and session management">application_sec</docanchor>
    <docanchor file="overview.html" title="&amp;nbsp;4. Signal/slot event handling">signal_slot</docanchor>
    <docanchor file="overview.html" title="&amp;nbsp;5. Optimizing client-side event handling">eventhandling</docanchor>
    <docanchor file="overview.html" title="&amp;nbsp;6. Application bootstrap">bootstrap</docanchor>
    <docanchor file="overview.html" title="6.1 Default bootstrap">default_bootstrap</docanchor>
    <docanchor file="overview.html" title="6.1 Progressive bootstrap">progressive_bootstrap</docanchor>
    <docanchor file="overview.html" title="&amp;nbsp;7. Painting">sec_painting</docanchor>
    <docanchor file="overview.html" title="&amp;nbsp;8. Internationalization">internationalization_sec</docanchor>
    <docanchor file="overview.html" title="&amp;nbsp;9. Deployment">deployment</docanchor>
    <docanchor file="overview.html" title="9.1 Built-in httpd">wthttpd</docanchor>
    <docanchor file="overview.html" title="9.2 FastCGI">fastcgi</docanchor>
    <docanchor file="overview.html" title="9.3 ISAPI">wtisapi</docanchor>
    <docanchor file="overview.html" title="&amp;nbsp;10. Configuration">configuration_sec</docanchor>
    <docanchor file="overview.html" title="10.1 Session management (wt_config.xml)">config_session</docanchor>
    <docanchor file="overview.html" title="10.2 General application settings (wt_config.xml)">config_general</docanchor>
    <docanchor file="overview.html" title="10.3 Wt httpd (command-line or configuration file) options">config_wthttpd</docanchor>
    <docanchor file="overview.html" title="10.4 FastCGI options (wt_config.xml)">config_fastcgi</docanchor>
    <docanchor file="overview.html" title="10.5 ISAPI options (wt_config.xml)">config_isapi</docanchor>
    <docanchor file="overview.html" title="&amp;nbsp;11. Error handling and logging">error_sec</docanchor>
  </compound>
  <compound kind="page">
    <name>example</name>
    <title>Treelist example</title>
    <filename>example</filename>
    <docanchor file="example.html" title="IconPair: a pair of icons that reflects state.">stateicon_sec</docanchor>
    <docanchor file="example.html" title="TreeNode: an expandable tree node.">treenode_sec</docanchor>
  </compound>
  <compound kind="page">
    <name>InstallationUnix</name>
    <title>Installation: Unix-like platforms (Linux, macOS, BSD,...)</title>
    <filename>InstallationUnix</filename>
  </compound>
  <compound kind="page">
    <name>InstallationWindows</name>
    <title>Installation: Windows</title>
    <filename>InstallationWindows</filename>
  </compound>
  <compound kind="page">
    <name>Releasenotes</name>
    <title>Release notes</title>
    <filename>Releasenotes</filename>
  </compound>
  <compound kind="page">
    <name>index</name>
    <title>%Wt documentation.</title>
    <filename>index</filename>
  </compound>
</tagfile>
